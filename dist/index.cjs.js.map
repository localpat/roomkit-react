{
  "version": 3,
  "sources": ["<define:process.env>", "../src/Theme/base.config.ts", "../src/Prebuilt/common/constants.ts", "../src/Theme/stitches.config.ts", "../src/Theme/useSSR.tsx", "../src/Theme/ThemeProvider.tsx", "../src/Theme/index.tsx", "../src/Layout/Flex.tsx", "../src/Layout/Box.tsx", "../src/Layout/index.tsx", "../src/Loading/Loading.tsx", "../src/Loading/index.ts", "../src/utils/styles.ts", "../src/Button/Button.tsx", "../src/Button/index.tsx", "../src/Text/Text.tsx", "../src/Text/index.tsx", "../src/IconButton/IconButton.tsx", "../src/IconButton/index.tsx", "../src/Avatar/getAvatarBg.ts", "../src/Avatar/Avatar.tsx", "../src/Avatar/index.ts", "../src/Divider/Divider.tsx", "../src/Divider/index.ts", "../src/Switch/Switch.tsx", "../src/Switch/index.ts", "../src/utils/animations.ts", "../src/utils/index.ts", "../src/Tooltip/Tooltip.tsx", "../src/Tooltip/index.ts", "../src/Select/Select.tsx", "../src/Select/index.ts", "../src/Slider/Slider.tsx", "../src/Slider/index.ts", "../src/Modal/DialogContent.tsx", "../src/context/DialogContext.tsx", "../src/hooks/useDialogContainerSelector.tsx", "../src/Modal/Dialog.tsx", "../src/Modal/index.ts", "../src/Input/Input.tsx", "../src/Input/index.tsx", "../src/VideoTile/StyledVideoTile.tsx", "../src/VideoTile/index.tsx", "../src/VideoList/videoListUtils.tsx", "../src/VideoList/StyledVideoList.tsx", "../src/VideoList/index.tsx", "../src/Pagination/StyledPagination.tsx", "../src/Pagination/index.tsx", "../src/Dropdown/Dropdown.tsx", "../src/Dropdown/index.tsx", "../src/Video/Video.tsx", "../src/Video/index.tsx", "../src/TileMenu/StyledMenuTile.tsx", "../src/TileMenu/index.tsx", "../src/AudioLevel/useBorderAudioLevel.tsx", "../src/AudioLevel/AudioLevel.tsx", "../src/AudioLevel/index.ts", "../src/Popover/index.tsx", "../src/Stats/formatBytes.ts", "../src/Stats/StyledStats.tsx", "../src/Stats/useQoE.ts", "../src/Stats/Stats.tsx", "../src/Stats/index.tsx", "../src/Checkbox/Checkbox.tsx", "../src/Checkbox/index.tsx", "../src/Label/Label.tsx", "../src/Label/index.ts", "../src/RadioGroup/RadioGroup.tsx", "../src/RadioGroup/index.tsx", "../src/Toast/Toast.tsx", "../src/Toast/index.tsx", "../src/Accordion/Accordion.tsx", "../src/Accordion/index.ts", "../src/Fieldset/Fieldset.tsx", "../src/Fieldset/index.tsx", "../src/Footer/Footer.tsx", "../src/Footer/index.tsx", "../src/ReactSelect/ReactSelect.tsx", "../src/ReactSelect/index.ts", "../src/Tabs/Tabs.tsx", "../src/Tabs/index.tsx", "../src/QRCode/QRCode.tsx", "../src/QRCode/index.tsx", "../src/Link/Link.tsx", "../src/Link/index.tsx", "../src/Collapsible/Collapsible.tsx", "../src/Collapsible/index.tsx", "../src/Prebuilt/components/Settings/SwitchWithLabel.tsx", "../src/Prebuilt/components/hooks/useUserPreferences.jsx", "../src/Prebuilt/components/AppData/useUISettings.js", "../src/Prebuilt/components/Settings/common.ts", "../src/Prebuilt/components/Settings/LayoutSettings.tsx", "../src/Prebuilt/provider/roomLayoutProvider/constants/index.ts", "../src/Prebuilt/provider/roomLayoutProvider/hooks/useFetchRoomLayout.ts", "../src/Prebuilt/provider/roomLayoutProvider/index.tsx", "../src/Prebuilt/common/utils.js", "../src/Prebuilt/provider/roomLayoutProvider/hooks/useRoomLayoutScreen.ts", "../src/Prebuilt/components/AppData/useSidepane.js", "../src/Prebuilt/components/MoreSettings/constants.ts", "../src/Prebuilt/components/AppData/AppData.tsx", "../src/Prebuilt/AppContext.tsx", "../src/Prebuilt/components/VirtualBackground/VBHandler.tsx", "../src/Prebuilt/components/PIP/pipUtils.js", "../src/Prebuilt/components/PIP/PIPManager.ts", "../src/Prebuilt/components/Toast/ToastManager.js", "../src/Prebuilt/components/hooks/useRedirectToLeave.tsx", "../src/Prebuilt/AppStateContext.tsx", "../src/Prebuilt/components/AuthToken.tsx", "../src/Prebuilt/IconButton.tsx", "../src/Prebuilt/components/IconButtonWithOptions/IconButtonWithOptions.tsx", "../src/Prebuilt/components/MoreSettings/ActionTile.jsx", "../src/Sheet/Sheet.tsx", "../src/Sheet/index.ts", "../src/Prebuilt/primitives/DropdownTrigger.jsx", "../src/Prebuilt/components/hooks/useAudioOutputTest.tsx", "../src/Prebuilt/components/hooks/useDropdownSelection.jsx", "../src/Prebuilt/components/Settings/DeviceSettings.jsx", "../src/Prebuilt/components/Settings/NotificationSettings.tsx", "../src/Prebuilt/components/Settings/SettingsModal.jsx", "../src/Prebuilt/components/AudioVideoToggle.tsx", "../src/Prebuilt/components/CaptionIcon.tsx", "../src/Prebuilt/components/Footer/EmojiCard.jsx", "../src/Prebuilt/components/hooks/useDropdownList.ts", "../src/Prebuilt/common/hooks.ts", "../src/Prebuilt/components/EmojiReaction.jsx", "../src/Prebuilt/components/Interpreting/Int2En.tsx", "../src/Prebuilt/components/Interpreting/Int2Fr.tsx", "../src/Prebuilt/components/Leave/EndSessionContent.tsx", "../src/Prebuilt/components/Leave/LeaveAtoms.tsx", "../src/Prebuilt/components/Leave/LeaveCard.tsx", "../src/Prebuilt/components/Leave/LeaveSessionContent.tsx", "../src/Prebuilt/components/Leave/DesktopLeaveRoom.tsx", "../src/Prebuilt/components/Leave/MwebLeaveRoom.tsx", "../src/Prebuilt/components/Leave/LeaveRoom.tsx", "../src/Prebuilt/components/PIP/SetupMediaSession.js", "../src/Prebuilt/components/PIP/PIPComponent.tsx", "../src/Prebuilt/components/PIP/index.jsx", "../src/TextArea/TextArea.tsx", "../src/TextArea/index.tsx", "../src/Prebuilt/components/Chat/MwebChatOption.tsx", "../src/Prebuilt/components/hooks/useChatBlacklist.ts", "../src/Prebuilt/components/hooks/usePinnedMessages.ts", "../src/Prebuilt/components/Chat/ChatActions.tsx", "../src/Prebuilt/components/Chat/EmptyChat.tsx", "../src/Prebuilt/components/hooks/usePinnedBy.tsx", "../src/Prebuilt/components/Chat/utils.ts", "../src/Prebuilt/components/Chat/ChatBody.tsx", "../src/Prebuilt/components/PIP/PIPChat.tsx", "../src/Prebuilt/components/PIP/PIPChatOption.tsx", "../src/Prebuilt/components/PIP/PIPWindow.tsx", "../src/Prebuilt/components/RoleChangeModal.tsx", "../src/Prebuilt/primitives/DialogContent.jsx", "../src/Prebuilt/components/Streaming/ResolutionInput.jsx", "../src/Prebuilt/components/Settings/StartRecording.jsx", "../src/Prebuilt/components/StatsForNerds.jsx", "../src/Prebuilt/components/MoreSettings/BulkRoleChangeModal.jsx", "../src/Prebuilt/components/MoreSettings/CaptionContent.tsx", "../src/Prebuilt/components/MoreSettings/CaptionModal.tsx", "../src/Prebuilt/components/hooks/useFullscreen.ts", "../src/Prebuilt/components/MoreSettings/FullScreenItem.tsx", "../src/Prebuilt/components/MoreSettings/MuteAllContent.tsx", "../src/Prebuilt/components/MoreSettings/MuteAllModal.tsx", "../src/Prebuilt/components/hooks/useMetadata.tsx", "../src/Prebuilt/components/PIP/context.ts", "../src/Prebuilt/components/PIP/usePIPWindow.tsx", "../src/Prebuilt/components/PIP/usePIPChat.tsx", "../src/Prebuilt/components/MoreSettings/SplitComponents/DesktopOptions.tsx", "../src/Prebuilt/components/Header/StreamActions.tsx", "../src/Prebuilt/components/MoreSettings/ChangeNameContent.tsx", "../src/Prebuilt/components/MoreSettings/ChangeNameModal.tsx", "../src/Prebuilt/components/AppData/useSheet.ts", "../src/Prebuilt/components/hooks/useUnreadPollQuizPresent.tsx", "../src/Prebuilt/components/MoreSettings/SplitComponents/MwebOptions.tsx", "../src/Prebuilt/components/MoreSettings/MoreSettings.tsx", "../src/Prebuilt/components/RaiseHand.tsx", "../src/Prebuilt/components/ShareMenuIcon.jsx", "../src/Prebuilt/components/pdfAnnotator/pdfHeader.jsx", "../src/Prebuilt/components/pdfAnnotator/submitPdf.jsx", "../src/Prebuilt/components/pdfAnnotator/pdfInfo.jsx", "../src/Prebuilt/components/pdfAnnotator/uploadedFile.jsx", "../src/Prebuilt/components/pdfAnnotator/pdfFileOptions.jsx", "../src/Prebuilt/components/pdfAnnotator/shareScreenOptions.jsx", "../src/Prebuilt/components/ScreenShareToggle.jsx", "../src/Prebuilt/components/VirtualBackground/VBToggle.tsx", "../src/Prebuilt/components/Footer/ChatToggle.tsx", "../src/Prebuilt/components/Connection/connectionQualityUtils.js", "../src/Prebuilt/components/Connection/ConnectionIndicator.tsx", "../src/Prebuilt/components/RemoveParticipant.tsx", "../src/Prebuilt/components/Footer/RoleOptions.tsx", "../src/Prebuilt/components/hooks/useGroupOnStageActions.tsx", "../src/Prebuilt/components/Footer/RoleAccordion.tsx", "../src/Prebuilt/components/AppData/useSidepaneResetOnLayoutUpdate.tsx", "../src/Prebuilt/components/hooks/usePeerOnStageActions.tsx", "../src/Prebuilt/components/Footer/ParticipantList.tsx", "../src/Prebuilt/components/Footer/PollsToggle.tsx", "../src/Prebuilt/components/Footer/WhiteboardToggle.tsx", "../src/Prebuilt/components/Footer/Footer.tsx", "../src/Prebuilt/components/Notifications/HLSFailureModal.tsx", "../src/Prebuilt/components/Streaming/Common.jsx", "../src/Prebuilt/components/Polls/common/StatusIndicator.tsx", "../src/Prebuilt/components/Polls/CreatePollQuiz/PollsQuizMenu.tsx", "../src/Prebuilt/components/Polls/CreateQuestions/DeleteQuestionModal.tsx", "../src/Prebuilt/components/Polls/common/Line.tsx", "../src/Prebuilt/components/Polls/common/OptionInputWithDelete.tsx", "../src/Prebuilt/components/Polls/common/VoteCount.tsx", "../src/Prebuilt/components/Polls/common/VoteProgress.tsx", "../src/Prebuilt/components/Polls/common/MultipleChoiceOptions.jsx", "../src/Prebuilt/components/Polls/common/SingleChoiceOptions.jsx", "../src/Prebuilt/components/Polls/CreateQuestions/QuestionForm.tsx", "../src/Prebuilt/components/Polls/CreateQuestions/SavedQuestion.tsx", "../src/Prebuilt/components/Polls/CreateQuestions/CreateQuestions.jsx", "../src/Prebuilt/components/Polls/common/utils.ts", "../src/Prebuilt/components/Polls/Voting/LeaderboardEntry.tsx", "../src/Prebuilt/components/Polls/Voting/StatisticBox.tsx", "../src/Prebuilt/components/Polls/Voting/useQuizSummary.tsx", "../src/Prebuilt/components/Polls/Voting/PeerParticipationSummary.tsx", "../src/Prebuilt/components/Polls/Voting/LeaderboardSummary.tsx", "../src/Prebuilt/components/Polls/Voting/QuestionCard.jsx", "../src/Prebuilt/components/Polls/Voting/StandardVoting.tsx", "../src/Prebuilt/components/Polls/Voting/TimedVoting.tsx", "../src/Prebuilt/components/Polls/Voting/Voting.tsx", "../src/Prebuilt/components/Polls/Polls.tsx", "../src/Prebuilt/components/Header/HeaderComponents.jsx", "../src/Prebuilt/components/RoomDetails/Duration.tsx", "../src/Prebuilt/components/RoomDetails/RoomDetailsRow.tsx", "../src/Prebuilt/components/RoomDetails/RoomDetailsPane.tsx", "../src/Prebuilt/components/Chat/ChatSelector.tsx", "../src/Prebuilt/components/Chat/ChatSelectorContainer.tsx", "../src/Prebuilt/components/AppData/useChatState.js", "../src/Prebuilt/components/Chat/useEmojiPickerStyles.js", "../src/Prebuilt/components/Chat/ChatFooter.tsx", "../src/Prebuilt/components/Chat/ChatStates.tsx", "../src/Prebuilt/components/Chat/ArrowNavigation.tsx", "../src/Prebuilt/components/Chat/StickIndicator.tsx", "../src/Prebuilt/components/Chat/PinnedMessage.tsx", "../src/Prebuilt/components/Chat/Chat.tsx", "../src/Prebuilt/components/Footer/PaginatedParticipants.tsx", "../src/Prebuilt/components/ChatSettings.tsx", "../src/Prebuilt/components/SidePaneTabs.tsx", "../src/Prebuilt/components/Connection/TileConnection.tsx", "../src/Prebuilt/components/TileMenu/utils.ts", "../src/Prebuilt/components/TileMenu/TileMenuContent.tsx", "../src/Prebuilt/components/TileMenu/TileMenu.tsx", "../src/Prebuilt/components/peerTileUtils.jsx", "../src/Prebuilt/components/VideoTile.tsx", "../src/Prebuilt/components/VirtualBackground/VBOption.tsx", "../src/Prebuilt/components/VirtualBackground/VBCollection.tsx", "../src/Prebuilt/components/VirtualBackground/VBPicker.tsx", "../src/Prebuilt/layouts/SidePane.tsx", "../src/Prebuilt/components/Chip.tsx", "../src/Prebuilt/components/FullPageProgress.tsx", "../src/Prebuilt/components/Preview/PreviewForm.tsx", "../src/Prebuilt/components/Preview/PreviewJoin.tsx", "../src/Prebuilt/components/RoleChangeRequest/RequestPrompt.tsx", "../src/Prebuilt/components/RoleChangeRequest/RoleChangeRequestModal.tsx", "../src/Prebuilt/layouts/WaitingView.tsx", "../src/Prebuilt/components/hooks/useVideoTileLayout.ts", "../src/Prebuilt/components/InsetTile.tsx", "../src/Prebuilt/components/Pagination.tsx", "../src/Prebuilt/components/VideoLayouts/Grid.tsx", "../src/Prebuilt/components/hooks/useTileLayout.tsx", "../src/Prebuilt/components/VideoLayouts/EqualProminence.tsx", "../src/Prebuilt/components/VideoLayouts/ProminenceLayout.tsx", "../src/Prebuilt/components/SecondaryTiles.tsx", "../src/Prebuilt/components/hooks/useRoleProminencePeers.tsx", "../src/Prebuilt/components/VideoLayouts/RoleProminence.tsx", "../src/Prebuilt/components/LayoutModeSelector.tsx", "../src/Prebuilt/components/ScreenshareDisplay.tsx", "../src/Prebuilt/components/ScreenshareTile.tsx", "../src/Prebuilt/components/VideoLayouts/ScreenshareLayout.tsx", "postcss-text:/var/folders/rf/1yp8_k550vxfpcv_k8b5hk440000gn/T/tmp-10238-qj5RrmuzRJPz/1923a2acd630/index.css", "../src/Prebuilt/components/VideoLayouts/WhiteboardLayout.tsx", "../src/Prebuilt/common/PeersSorter.ts", "../src/Prebuilt/components/VideoLayouts/GridLayout.tsx", "../src/Prebuilt/layouts/EmbedView.jsx", "../src/Prebuilt/layouts/PDFView.jsx", "../src/Prebuilt/plugins/CaptionsViewer.tsx", "../src/Prebuilt/components/hooks/useCloseScreenshareWhiteboard.tsx", "../src/Prebuilt/components/HlsStatsOverlay.jsx", "../src/Prebuilt/components/HMSVideo/Controls.jsx", "../src/Prebuilt/components/HMSVideo/HMSVideo.jsx", "../src/Prebuilt/components/HMSVideo/PlayerContext.tsx", "../src/Prebuilt/components/HMSVideo/PlayPauseButton.tsx", "../src/Prebuilt/components/HMSVideo/SeekControl.tsx", "../src/Prebuilt/components/HMSVideo/PlayPauseSeekControls.tsx", "../src/Prebuilt/components/HMSVideo/utils.ts", "../src/Prebuilt/components/HMSVideo/VideoProgress.tsx", "../src/Prebuilt/components/HMSVideo/VideoTime.tsx", "../src/Prebuilt/components/HMSVideo/VolumeControl.tsx", "../src/Prebuilt/components/HMSVideo/index.ts", "../src/Prebuilt/components/HMSVideo/FullscreenButton.tsx", "../src/Prebuilt/components/HMSVideo/HLSAutoplayBlockedPrompt.tsx", "../src/Prebuilt/components/HMSVideo/HLSCaptionSelector.tsx", "../src/Prebuilt/components/HMSVideo/HLSQualitySelector.tsx", "../src/Prebuilt/components/HMSVideo/MwebHLSViewTitle.tsx", "../src/Prebuilt/layouts/HLSView.jsx", "../src/Prebuilt/layouts/VideoStreamingSection.tsx", "../src/Prebuilt/components/Header/RoomDetailsHeader.tsx", "../src/Prebuilt/components/Header/common.jsx", "../src/Prebuilt/components/Header/Header.tsx", "../src/Prebuilt/components/Header/index.tsx", "../src/Prebuilt/components/PreviousRoleInMetadata.tsx", "../src/Prebuilt/components/ConferenceScreen.tsx", "../src/Prebuilt/components/ErrorBoundary.jsx", "../src/Prebuilt/services/FeatureFlags.jsx", "../src/Prebuilt/components/init/Init.jsx", "../src/Prebuilt/components/Input/KeyboardInputManager.js", "../src/Prebuilt/components/EndCallFeedback/FeedbackForm.tsx", "../src/Prebuilt/components/EndCallFeedback/ThankyouView.tsx", "../src/Prebuilt/components/EndCallFeedback/Feedback.tsx", "../src/Prebuilt/components/LeaveScreen.tsx", "../src/Prebuilt/components/MwebLandscapePrompt.tsx", "../src/Prebuilt/components/Notifications/AutoplayBlockedModal.tsx", "../src/Prebuilt/components/Notifications/ChatNotifications.tsx", "../src/Prebuilt/components/Toast/ToastConfig.jsx", "../src/Prebuilt/components/Toast/ToastBatcher.js", "../src/Prebuilt/components/Notifications/HandRaisedNotifications.tsx", "../src/Prebuilt/components/Notifications/InitErrorModal.tsx", "../src/Prebuilt/components/Notifications/PeerNotifications.tsx", "../src/Prebuilt/components/Notifications/PermissionErrorModal.tsx", "../src/Prebuilt/components/Notifications/ReconnectNotifications.tsx", "../src/Prebuilt/components/Notifications/TrackBulkUnmuteModal.tsx", "../src/Prebuilt/components/Notifications/TrackNotifications.tsx", "../src/Prebuilt/components/Notifications/TrackUnmuteModal.tsx", "../src/Prebuilt/components/Notifications/TranscriptionNotifications.tsx", "../src/Prebuilt/components/Notifications/Notifications.tsx", "../src/Prebuilt/components/Notifications/index.tsx", "../src/Prebuilt/components/PIP/PIPProvider.tsx", "../src/Prebuilt/components/Preview/PreviewScreen.tsx", "../src/Prebuilt/components/Toast/Toast.jsx", "../src/Prebuilt/components/Toast/ToastContainer.jsx", "../src/Prebuilt/components/RoomDetails/RoomDetailsSheet.tsx", "../src/Prebuilt/layouts/Sheet.tsx", "../src/Prebuilt/plugins/FlyingEmoji.jsx", "../src/Prebuilt/plugins/RemoteStopScreenshare.jsx", "../src/Prebuilt/components/hooks/useAutoStartStreaming.tsx", "../src/Prebuilt/App.tsx", "../src/Prebuilt/index.ts", "../src/Progress/index.tsx", "../src/Diagnostics/DiagnosticsContext.ts", "../src/Diagnostics/components.tsx", "../src/Diagnostics/DeviceSelector.jsx", "../src/Diagnostics/AudioTest.tsx", "../src/Diagnostics/BrowserTest.tsx", "../src/Diagnostics/ConnectivityTest.tsx", "../src/Diagnostics/VideoTest.tsx", "../src/Diagnostics/Diagnostics.tsx", "../src/Diagnostics/index.ts", "../src/index.ts"],
  "sourcesContent": ["", "import type * as Stitches from \"@stitches/react\";\nimport { defaultThemeMap as defaultStitchesThemeMap } from \"@stitches/react\";\n\nexport const baseConfig = {\n  theme: {\n    colors: {\n      primary_default: \"#2572ED\",\n      primary_bright: \"#538DFF\",\n      primary_dim: \"#002D6D\",\n      primary_disabled: \"#004299\",\n      on_primary_high: \"rgba(245, 249, 255, 0.95)\",\n      on_primary_medium: \"rgba(224, 236, 255, 0.8)\",\n      on_primary_low: \"rgba(194, 208, 229, 0.5)\",\n      secondary_default: \"#444954\",\n      secondary_bright: \"#70778B\",\n      secondary_dim: \"#293042\",\n      secondary_disabled: \"#404759\",\n      on_secondary_high: \"#FFFFFF\",\n      on_secondary_medium: \"#D3D9F0\",\n      on_secondary_low: \"#A4ABC0\",\n      background_default: \"#0B0E15\",\n      background_dim: \"#000000\",\n      surface_default: \"#191B23\",\n      surface_bright: \"#272A31\",\n      surface_brighter: \"#2E3038\",\n      surface_dim: \"#11131A\",\n      on_surface_high: \"#EFF0FA\",\n      on_surface_medium: \"#C5C6D0\",\n      on_surface_low: \"#8F9099\",\n      border_default: \"#1D1F27\",\n      border_bright: \"#272A31\",\n      alert_success: \"#36B37E\",\n      alert_warning: \"#FFAB00\",\n      alert_error_default: \"#C74E5B\",\n      alert_error_bright: \"#FFB2B6\",\n      alert_error_brighter: \"#FFEDEC\",\n      alert_error_dim: \"#270005\",\n    },\n    shadows: {\n      sm: \"0 0 4px 0 #0000004D\",\n      md: \"0 0 8px 0 #0000004D\",\n    },\n    fonts: {\n      sans: \"Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif\",\n    },\n    fontSizes: {\n      h1: \"6rem\",\n      h2: \"3.75rem\",\n      h3: \"3rem\",\n      h4: \"2.125rem\",\n      h5: \"1.5rem\",\n      h6: \"1.25rem\",\n      tiny: \"0.625rem\",\n      xs: \"0.75rem\",\n      sm: \"0.875rem\",\n      md: \"1rem\",\n      lg: \"1.125rem\",\n    },\n    fontWeights: {\n      semiBold: 600,\n      medium: 500,\n      regular: 400,\n    },\n    lineHeights: {\n      h1: \"5.75rem\",\n      h2: \"3.5rem\",\n      h3: \"3.25rem\",\n      h4: \"2.5rem\",\n      h5: \"2rem\",\n      h6: \"1.5rem\",\n      tiny: \"1rem\",\n      xs: \"1rem\",\n      sm: \"1.25rem\",\n      md: \"1.5rem\",\n    },\n    radii: {\n      \"0\": \"0.25rem\",\n      \"1\": \"0.5rem\",\n      \"2\": \"0.75rem\",\n      \"3\": \"1rem\",\n      \"4\": \"1.5rem\",\n      round: \"100rem\",\n    },\n    space: {\n      0: \"0rem\",\n      xs: \"0.5rem\",\n      sm: \"0.75rem\",\n      md: \"1rem\",\n      lg: \"1.25rem\",\n      xl: \"2.25rem\",\n      px: \"1px\",\n      1: \"0.125rem\",\n      2: \"0.25rem\",\n      3: \"0.375rem\",\n      4: \"0.5rem\",\n      5: \"0.625rem\",\n      6: \"0.75rem\",\n      7: \"0.875rem\",\n      8: \"1rem\",\n      9: \"1.25rem\",\n      10: \"1.5rem\",\n      11: \"1.75rem\",\n      12: \"2rem\",\n      13: \"2.25rem\",\n      14: \"2.5rem\",\n      15: \"2.75rem\",\n      16: \"3rem\",\n      17: \"3.5rem\",\n      18: \"4rem\",\n      19: \"4.25rem\",\n      20: \"5rem\",\n      24: \"6rem\",\n      28: \"7rem\",\n      32: \"8rem\",\n      36: \"9rem\",\n      40: \"10rem\",\n      44: \"11rem\",\n      48: \"12rem\",\n      52: \"13rem\",\n      56: \"14rem\",\n      60: \"15rem\",\n      64: \"16rem\",\n      72: \"18rem\",\n      80: \"20rem\",\n      96: \"24rem\",\n      100: \"25rem\",\n    },\n    borderWidths: {\n      light: \"1px\",\n      normal: \"2px\",\n      bold: \"3px\",\n      extrabold: \"4px\",\n      black: \"5px\",\n    },\n  },\n};\n\nexport const defaultUtils = {\n  bg: (value: Stitches.PropertyValue<\"backgroundColor\">) => ({\n    backgroundColor: value,\n  }),\n  c: (value: Stitches.PropertyValue<\"color\">) => ({\n    color: value,\n  }),\n  r: (value: Stitches.ScaleValue<\"radii\">) => ({\n    borderRadius: value,\n  }),\n  fs: (value: Stitches.PropertyValue<\"fontSize\"> | number | string) => ({\n    fontSize: value,\n  }),\n  size: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    height: value,\n    width: value,\n  }),\n  w: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    width: value,\n  }),\n  h: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    height: value,\n  }),\n  p: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    padding: value,\n  }),\n  pt: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingTop: value,\n  }),\n  pr: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingRight: value,\n  }),\n  pb: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingBottom: value,\n  }),\n  pl: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingLeft: value,\n  }),\n  px: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingLeft: value,\n    paddingRight: value,\n  }),\n  py: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingTop: value,\n    paddingBottom: value,\n  }),\n  m: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    margin: value,\n  }),\n  mt: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginTop: value,\n  }),\n  mr: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginRight: value,\n  }),\n  mb: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginBottom: value,\n  }),\n  ml: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginLeft: value,\n  }),\n  mx: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginLeft: value,\n    marginRight: value,\n  }),\n  my: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginTop: value,\n    marginBottom: value,\n  }),\n};\n\nexport const defaultMedia = {\n  allowMotion: \"(prefers-reduced-motion: no-preference)\",\n  sm: \"(max-width: 640px)\",\n  md: \"(max-width: 768px)\",\n  lg: \"(max-width: 1024px)\",\n  xl: \"(max-width: 1280px)\",\n  \"2xl\": \"(max-width: 1536px)\",\n  ls: \"(max-width: 1024px) and (orientation: landscape)\",\n};\n\nexport const defaultThemeMap = {\n  ...defaultStitchesThemeMap,\n  width: \"space\",\n  height: \"space\",\n  minWidth: \"space\",\n  maxWidth: \"space\",\n  minHeight: \"space\",\n  maxHeight: \"space\",\n  flexBasis: \"space\",\n  gridTemplateColumns: \"space\",\n  gridTemplateRows: \"space\",\n  blockSize: \"space\",\n  minBlockSize: \"space\",\n  maxBlockSize: \"space\",\n  inlineSize: \"space\",\n  minInlineSize: \"space\",\n  maxInlineSize: \"space\",\n};\n", "import { parsedUserAgent } from \"@100mslive/react-sdk\";\n\nexport const QUERY_PARAM_SKIP_PREVIEW = \"skip_preview\";\nexport const QUERY_PARAM_SKIP_PREVIEW_HEADFUL = \"skip_preview_headful\";\nexport const QUERY_PARAM_NAME = \"name\";\nexport const QUERY_PARAM_VIEW_MODE = \"ui_mode\";\nexport const QUERY_PARAM_PREVIEW_AS_ROLE = \"preview_as_role\";\nexport const UI_MODE_GRID = \"grid\";\nexport const MAX_TOASTS = 5;\nexport const RTMP_RECORD_RESOLUTION_MIN = 480;\nexport const RTMP_RECORD_RESOLUTION_MAX = 1280;\nexport const RTMP_RECORD_DEFAULT_RESOLUTION = {\n  width: 1280,\n  height: 720,\n};\nexport const EMOJI_REACTION_TYPE = \"EMOJI_REACTION\";\n\nexport const CHAT_SELECTOR = {\n  PEER: \"peer\",\n  ROLE: \"role\",\n  EVERYONE: \"Everyone\",\n};\n\nexport const APP_DATA = {\n  uiSettings: \"uiSettings\",\n  chatOpen: \"chatOpen\",\n  chatSelector: \"chatSelector\",\n  chatDraft: \"chatDraft\",\n  appConfig: \"appConfig\",\n  sidePane: \"sidePane\",\n  hlsStats: \"hlsStats\",\n  subscribedNotifications: \"subscribedNotifications\",\n  logo: \"logo\",\n  hlsStarted: \"hlsStarted\",\n  rtmpStarted: \"rtmpStarted\",\n  recordingStarted: \"recordingStarted\",\n  embedConfig: \"embedConfig\",\n  pinnedTrackId: \"pinnedTrackId\",\n  dropdownList: \"dropdownList\",\n  authToken: \"authToken\",\n  pdfConfig: \"pdfConfig\",\n  minimiseInset: \"minimiseInset\",\n  activeScreensharePeerId: \"activeScreensharePeerId\",\n  disableNotifications: \"disableNotifications\",\n  pollState: \"pollState\",\n  background: \"background\",\n  sheet: \"sheet\",\n  caption: \"caption\",\n  loadingEffects: \"loadingEffects\",\n  noiseCancellation: \"noiseCancellation\",\n};\n\nexport const UI_SETTINGS = {\n  isAudioOnly: \"isAudioOnly\",\n  maxTileCount: \"maxTileCount\",\n  uiViewMode: \"uiViewMode\",\n  layoutMode: \"layoutMode\",\n  showStatsOnTiles: \"showStatsOnTiles\",\n  enableAmbientMusic: \"enableAmbientMusic\",\n  mirrorLocalVideo: \"mirrorLocalVideo\",\n};\n\nexport const SIDE_PANE_OPTIONS = {\n  PARTICIPANTS: \"Participants\",\n  CHAT: \"Chat\",\n  STREAMING: \"STREAMING\",\n  POLLS: \"POLLS\",\n  VB: \"VB\",\n  ROOM_DETAILS: \"ROOM_DETAILS\",\n};\n\nexport type SidePaneOption =\n  (typeof SIDE_PANE_OPTIONS)[keyof typeof SIDE_PANE_OPTIONS];\n\nexport const SHEET_OPTIONS = {\n  ROOM_DETAILS: \"ROOM_DETAILS\",\n};\n\nexport const POLL_STATE = {\n  pollInView: \"pollInView\",\n  view: \"view\",\n};\n\nexport const POLL_VIEWS = {\n  CREATE_POLL_QUIZ: \"CREATE_POLL_QUIZ\",\n  CREATE_QUESTIONS: \"CREATE_QUESTIONS\",\n  VOTE: \"VOTE\",\n  RESULTS: \"RESULTS\",\n};\n\nexport const CAPTION_TOAST = {\n  captionToast: \"captionToast\",\n};\nexport const SUBSCRIBED_NOTIFICATIONS = {\n  PEER_JOINED: \"PEER_JOINED\",\n  PEER_LEFT: \"PEER_LEFT\",\n  METADATA_UPDATED: \"METADATA_UPDATED\",\n  NEW_MESSAGE: \"NEW_MESSAGE\",\n  ERROR: \"ERROR\",\n};\n\nexport const CREATE_ROOM_DOC_URL =\n  \"https://github.com/100mslive/100ms-web/wiki/Creating-and-joining-a-room\";\nexport const HLS_TIMED_METADATA_DOC_URL =\n  \"https://www.100ms.live/docs/javascript/v2/how--to-guides/record-and-live-stream/hls/hls-timed-metadata\";\n\nexport const REMOTE_STOP_SCREENSHARE_TYPE = \"REMOTE_STOP_SCREENSHARE\";\n\nexport const isChrome =\n  parsedUserAgent.getBrowser()?.name?.toLowerCase() === \"chrome\";\nexport const isFirefox =\n  parsedUserAgent.getBrowser()?.name?.toLowerCase() === \"firefox\";\nexport const isSafari =\n  parsedUserAgent.getBrowser()?.name?.toLowerCase() === \"safari\";\nexport const isIOS = parsedUserAgent.getOS()?.name?.toLowerCase() === \"ios\";\nexport const isMacOS =\n  parsedUserAgent.getOS()?.name?.toLowerCase() === \"mac os\";\nexport const isAndroid =\n  parsedUserAgent.getOS()?.name?.toLowerCase() === \"android\";\nexport const isIPadOS = false;\n// typeof navigator !== \"undefined\" &&\n// navigator?.maxTouchPoints &&\n// navigator?.maxTouchPoints > 2 &&\n// navigator?.userAgent?.match(/Mac/);\n\nexport enum SESSION_STORE_KEY {\n  TRANSCRIPTION_STATE = \"transcriptionState\",\n  PINNED_MESSAGES = \"pinnedMessages\",\n  SPOTLIGHT = \"spotlight\",\n  CHAT_PEER_BLACKLIST = \"chatPeerBlacklist\",\n  CHAT_MESSAGE_BLACKLIST = \"chatMessageBlacklist\",\n  CHAT_STATE = \"chatState\",\n}\n\nexport enum INTERACTION_TYPE {\n  POLL = \"Poll\",\n  QUIZ = \"Quiz\",\n}\n\nexport enum QUESTION_TYPE_TITLE {\n  \"single-choice\" = \"Single Choice\",\n  \"multiple-choice\" = \"Multiple Choice\",\n  // 'short-answer' = 'Short Answer',\n  // 'long-answer' = 'Long Answer',\n}\n\nexport enum QUESTION_TYPE {\n  SINGLE_CHOICE = \"single-choice\",\n  MULTIPLE_CHOICE = \"multiple-choice\",\n  // SHORT_ANSWER = 'short-answer',\n  // LONG_ANSWER = 'long-answer',\n}\n\nexport const ROLE_CHANGE_DECLINED = \"role_change_declined\";\n\nexport const DEFAULT_PORTAL_CONTAINER = \".prebuilt-container\";\n\nexport const TEST_AUDIO_URL = \"https://100ms.live/test-audio.wav\";\n", "import type * as Stitches from \"@stitches/react\";\nimport { createStitches } from \"@stitches/react\";\nimport merge from \"lodash.merge\";\nimport {\n  baseConfig,\n  defaultMedia,\n  defaultThemeMap,\n  defaultUtils,\n} from \"./base.config\";\nimport { DEFAULT_PORTAL_CONTAINER } from \"../Prebuilt/common/constants\";\n\nconst HmsStitches = createStitches({\n  prefix: \"hms-ui\",\n  theme: {\n    ...baseConfig.theme,\n    colors: {\n      ...baseConfig.theme.colors,\n    },\n  },\n  media: defaultMedia,\n  utils: defaultUtils,\n  themeMap: defaultThemeMap,\n});\n\nexport const {\n  theme,\n  createTheme: createThemeBase,\n  styled,\n  globalCss,\n  keyframes,\n  css,\n  getCssText,\n  config,\n} = HmsStitches;\n\nexport const globalStyles = globalCss({\n  [`${DEFAULT_PORTAL_CONTAINER} *`]: {\n    fontFamily: \"$sans\",\n    boxSizing: \"border-box\",\n  },\n  \"::-webkit-scrollbar-track\": {\n    WebkitBoxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n    backgroundColor: \"transparent\",\n  },\n  \"::-webkit-scrollbar\": {\n    width: \"6px\",\n    height: \"6px\",\n    backgroundColor: \"transparent\",\n  },\n  \"::-webkit-scrollbar-thumb\": {\n    backgroundColor: \"#657080\",\n    borderRadius: \"5px\",\n  },\n  /**\n   * needed for safari. Safari\n   * adds background color on its own\n   * on hls-viewer on fullscreen\n   */\n  \"#hls-viewer-dark:fullscreen\": {\n    backgroundColor: \"black !important\",\n  },\n\n  \"#hls-viewer-light:fullscreen\": {\n    backgroundColor: \"white !important\",\n  },\n});\n\nexport type ThemeType = \"default\";\nexport type Theme = typeof HmsStitches.theme;\n\n/**\n * This method will be used to create custom themes or update any theme values\n * @param { type: ThemeType; className: string; theme: Theme }\n * @returns\n */\nexport const createTheme = ({\n  themeType,\n  theme,\n  className,\n}: {\n  themeType: string;\n  className?: string;\n  theme?: Partial<Theme>;\n}) => {\n  if (!themeType) {\n    throw new Error(\"Theme type is required\");\n  }\n  const mergedTheme = merge(baseConfig.theme, theme || {});\n  return createThemeBase(className || `${themeType}-theme`, mergedTheme);\n};\n\nexport type CSS = Stitches.CSS<typeof HmsStitches>;\n", "import { useEffect, useState } from \"react\";\n\nconst isBrowser = (): boolean => {\n  return Boolean(\n    typeof window !== \"undefined\" &&\n      window.document &&\n      window.document.createElement\n  );\n};\n\nexport type SSRState = {\n  isBrowser: boolean;\n  isServer: boolean;\n};\n\nconst useSSR = (): SSRState => {\n  const [browser, setBrowser] = useState<boolean>(false);\n  useEffect(() => {\n    setBrowser(isBrowser());\n  }, []);\n\n  return {\n    isBrowser: browser,\n    isServer: !browser,\n  };\n};\n\nexport default useSSR;\n", "import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport type { Theme } from \"./stitches.config\";\nimport { createTheme, theme } from \"./stitches.config\";\nimport useSSR from \"./useSSR\";\n\nconst defaultAspectRatio = {\n  width: 1,\n  height: 1,\n};\n\nexport enum ThemeTypes {\n  // eslint-disable-next-line no-unused-vars\n  default = \"default\",\n}\n\nexport type ThemeContextValue = {\n  themeType: string;\n  theme: Theme;\n  aspectRatio: { width: number; height: number };\n  /**\n   * @param {ThemeTypes} themeToUpdateTo - optional\n   * Use this to toggle or update the currentTheme.\n   * if a param is passed, it will set the theme to passed value, otherwise will toggle between light and dark\n   * depending on current applied theme\n   */\n  toggleTheme: (themeToUpdateTo?: ThemeTypes) => void;\n};\n\nexport type ThemeProviderProps = {\n  themeType?: string;\n  theme?: Theme;\n  aspectRatio?: { width: number; height: number };\n};\n\nconst defaultContext = {\n  themeType: ThemeTypes.default,\n  theme,\n  aspectRatio: { width: 1, height: 1 },\n  toggleTheme: (_themeToUpdateTo?: ThemeTypes) => {\n    return;\n  },\n};\nexport const ThemeContext =\n  React.createContext<ThemeContextValue>(defaultContext);\n\n/**\n * Wrap this around your root component to get access to theme\n * eg:\n * <ThemeProvider type=\"dark\" appBuilder={{ aspectRatio: { width:1, height: 1} }}>\n *  <App />\n * </ThemeProvider>\n */\nexport const HMSThemeProvider: React.FC<\n  React.PropsWithChildren<ThemeProviderProps>\n> = ({\n  themeType,\n  theme: userTheme,\n  aspectRatio = defaultAspectRatio,\n  children,\n}) => {\n  const systemTheme = ThemeTypes.default;\n  const [currentTheme, setCurrentTheme] = useState(themeType || systemTheme);\n  const previousClassName = useRef(\"\");\n  const { isBrowser } = useSSR();\n  const updatedTheme = useMemo(() => {\n    const updatedTheme = createTheme({\n      themeType: currentTheme,\n      theme: userTheme || {},\n    });\n    if (!isBrowser) {\n      return updatedTheme;\n    }\n    if (previousClassName.current) {\n      document.documentElement.classList.remove(previousClassName.current);\n    }\n    previousClassName.current = updatedTheme.className;\n    document.documentElement.classList.add(updatedTheme);\n    return updatedTheme;\n  }, [userTheme, currentTheme, isBrowser]);\n\n  const toggleTheme = useCallback((themeToUpdateTo?: ThemeTypes) => {\n    if (themeToUpdateTo) {\n      setCurrentTheme(themeToUpdateTo);\n      return;\n    }\n    setCurrentTheme(ThemeTypes.default);\n  }, []);\n\n  useEffect(() => {\n    if (themeType) {\n      setCurrentTheme(themeType);\n    }\n  }, [themeType]);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        themeType: currentTheme,\n        theme: updatedTheme as unknown as Theme,\n        aspectRatio,\n        toggleTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => React.useContext(ThemeContext);\n", "export * from \"./stitches.config\";\nexport * from \"./ThemeProvider\";\n", "import { styled } from \"../Theme\";\n\n/**\n * @see https://tailwindcss.com/docs/space\n */\nconst gapStyles = (value: number) => {\n  return {\n    \"& > * + *\": {\n      marginRight: \"0\",\n      marginLeft: `${0.25 * value}rem`,\n    },\n  };\n};\n\nexport const Flex = styled(\"div\", {\n  display: \"flex\",\n  variants: {\n    justify: {\n      start: {\n        justifyContent: \"flex-start\",\n      },\n      end: {\n        justifyContent: \"flex-end\",\n      },\n      center: {\n        justifyContent: \"center\",\n      },\n      between: {\n        justifyContent: \"space-between\",\n      },\n      around: {\n        justifyContent: \"space-around\",\n      },\n      evenly: {\n        justifyContent: \"space-evenly\",\n      },\n    },\n    align: {\n      start: {\n        alignItems: \"flex-start\",\n      },\n      end: {\n        alignItems: \"flex-end\",\n      },\n      center: {\n        alignItems: \"center\",\n      },\n      baseline: {\n        alignItems: \"baseline\",\n      },\n      strech: {\n        alignItems: \"stretch\",\n      },\n    },\n    direction: {\n      row: {\n        flexDirection: \"row\",\n      },\n      column: {\n        flexDirection: \"column\",\n      },\n      rowReverse: {\n        flexDirection: \"row-reverse\",\n      },\n      columnReverse: {\n        flexDirection: \"column-reverse\",\n      },\n    },\n    gap: {\n      1: gapStyles(1),\n      2: gapStyles(2),\n      3: gapStyles(3),\n      4: gapStyles(4),\n    },\n  },\n});\n", "import { styled } from \"../Theme\";\n\nexport const Box = styled(\"div\", {});\n", "export { Flex } from \"./Flex\";\nexport { Box } from \"./Box\";\n", "import React from \"react\";\n\ntype Props = {\n  /**\n   * Adjusts width and height\n   */\n  size?: number | string;\n  /**\n   * Color of Loader\n   */\n  color?: string;\n};\n\ntype LoadingProps = Props & React.SVGProps<SVGSVGElement>;\n\nexport const Loading = ({\n  size = 24,\n  color = \"white\",\n  ...props\n}: LoadingProps) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 50 50\"\n    fill={color}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <circle\n      cx=\"25\"\n      cy=\"25\"\n      r=\"20\"\n      stroke={color}\n      strokeWidth=\"4\"\n      strokeDasharray=\"70 30\"\n      fill=\"none\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"0 25 25\"\n        to=\"360 25 25\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  </svg>\n);\n", "export { Loading } from \"./Loading\";\n", "/**\n * Flex based centering helper styles\n */\nexport const flexCenter = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\n/**\n * Gives styles for text ellipsis, with given width as maxWidth.\n * A number in pixels or css width string value can be passed\n * @param {number|string} width\n * @returns\n */\nexport const textEllipsis = (width: number | string) => ({\n  maxWidth: width,\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n  minWidth: 0,\n});\n", "import React, { ComponentPropsWithRef, PropsWithChildren } from \"react\";\nimport { Flex } from \"../Layout\";\nimport { Loading } from \"../Loading\";\nimport { styled } from \"../Theme\";\nimport { flexCenter } from \"../utils/styles\";\n\n/**\n * @param base bg color\n * @param hover hover state bg color\n * @param active active state bg color\n * @returns CSS object based on the state\n */\n\nconst getOutlinedVariants = (\n  base: string,\n  hover: string,\n  active: string,\n  disabled: string,\n  text: string,\n  textDisabled: string\n) => {\n  return {\n    bg: \"transparent\",\n    border: `solid $space$px $colors${base}`,\n    c: text,\n    \"&[disabled]\": {\n      c: textDisabled,\n      bg: \"transparent\",\n      border: `solid $space$px $colors${disabled}`,\n      cursor: \"not-allowed\",\n    },\n    \"&:not([disabled]):hover\": {\n      border: `solid $space$px $colors${hover}`,\n      bg: \"transparent\",\n    },\n    \"&:not([disabled]):active\": {\n      border: `solid $space$px $colors${active}`,\n      bg: \"transparent\",\n    },\n    \"&:not([disabled]):focus-visible\": {\n      boxShadow: `0 0 0 3px $colors${base}`,\n    },\n  };\n};\n\nconst getButtonVariants = (\n  base: string,\n  hover: string,\n  active: string,\n  disabled: string,\n  text: string,\n  textDisabled: string\n) => {\n  return {\n    bg: base,\n    border: `1px solid ${base}`,\n    c: text,\n    \"&[disabled]\": {\n      c: textDisabled,\n      cursor: \"not-allowed\",\n      bg: disabled,\n      border: `1px solid ${disabled}`,\n    },\n    \"&:not([disabled]):hover\": {\n      bg: hover,\n      border: `1px solid ${hover}`,\n    },\n    \"&:not([disabled]):active\": {\n      bg: active,\n      border: `1px solid ${active}`,\n    },\n    \"&:not([disabled]):focus-visible\": {\n      boxShadow: `0 0 0 3px ${base}`,\n    },\n  };\n};\n\nconst StyledButton = styled(\"button\", {\n  ...flexCenter,\n  cursor: \"pointer\",\n  fontFamily: \"$sans\",\n  lineHeight: \"inherit\",\n  textTransform: \"none\",\n  position: \"relative\",\n  outline: \"none\",\n  border: \"none\",\n  fs: \"$md\",\n  r: \"$1\",\n  backgroundColor: \"$primary_default\",\n  fontWeight: \"500\",\n  whiteSpace: \"nowrap\",\n  p: \"$4 $8\",\n  \"-webkit-appearance\": \"button\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&:not([disabled]):focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n  transition: \"all 0.2s  ease\",\n  compoundVariants: [\n    {\n      variant: \"standard\",\n      outlined: true,\n      css: getOutlinedVariants(\n        \"$secondary_default\",\n        \"$secondary_bright\",\n        \"$secondary_dim\",\n        \"$secondary_disabled\",\n        \"$on_surface_high\",\n        \"$on_surface_low\"\n      ),\n    },\n    {\n      variant: \"danger\",\n      outlined: true,\n      css: getOutlinedVariants(\n        \"$alert_error_default\",\n        \"$alert_error_bright\",\n        \"$alert_error_dim\",\n        \"$alert_error_brighter\",\n        \"$on_surface_high\",\n        \"$on_surface_low\"\n      ),\n    },\n    {\n      variant: \"primary\",\n      outlined: true,\n      css: getOutlinedVariants(\n        \"$primary_default\",\n        \"$primary_bright\",\n        \"$primary_dim\",\n        \"$primary_disabled\",\n        \"$on_surface_high\",\n        \"$on_surface_low\"\n      ),\n    },\n  ],\n  variants: {\n    variant: {\n      standard: getButtonVariants(\n        \"$secondary_default\",\n        \"$secondary_bright\",\n        \"$secondary_dim\",\n        \"$secondary_disabled\",\n        \"$on_secondary_high\",\n        \"$on_secondary_low\"\n      ),\n      danger: getButtonVariants(\n        \"$alert_error_default\",\n        \"$alert_error_bright\",\n        \"$alert_error_dim\",\n        \"$alert_error_dim\",\n        \"$alert_error_brighter\",\n        \"$on_primary_low\"\n      ),\n      primary: getButtonVariants(\n        \"$primary_default\",\n        \"$primary_bright\",\n        \"$primary_dim\",\n        \"$primary_disabled\",\n        \"$on_primary_high\",\n        \"$on_primary_low\"\n      ),\n    },\n    outlined: {\n      true: {},\n    },\n    icon: {\n      true: {},\n    },\n  },\n  defaultVariants: {\n    variant: \"primary\",\n  },\n});\n\nexport const Button = React.forwardRef<\n  HTMLButtonElement,\n  PropsWithChildren<\n    { loading?: boolean } & ComponentPropsWithRef<typeof StyledButton>\n  >\n>(({ children, loading = false, icon, ...buttonProps }, ref) => {\n  return (\n    <StyledButton {...buttonProps} ref={ref}>\n      <>\n        {loading && (\n          <Flex\n            align=\"center\"\n            justify=\"center\"\n            css={{\n              w: \"100%\",\n              position: \"absolute\",\n              left: \"0\",\n              color: \"$on_primary_low\",\n            }}\n          >\n            <Loading color=\"currentColor\" />\n          </Flex>\n        )}\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            visibility: loading ? \"hidden\" : \"visible\",\n            gap: icon ? \"$4\" : \"0\",\n          }}\n        >\n          {children}\n        </Flex>\n      </>\n    </StyledButton>\n  );\n});\n", "export { Button } from \"./Button\";\n", "import { styled } from \"../Theme\";\n\nexport const textVariants = {\n  h1: {\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"-1.5px\",\n    fontSize: \"$h1\",\n    lineHeight: \"$h1\",\n    \"@md\": {\n      fontSize: \"4.5rem\",\n      lineHeight: \"4.75rem\",\n    },\n  },\n  h2: {\n    fontSize: \"$h2\",\n    lineHeight: \"$h2\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"-0.5px\",\n    \"@md\": {\n      fontSize: \"3rem\",\n      lineHeight: \"3.25rem\",\n    },\n  },\n  h3: {\n    fontSize: \"$h3\",\n    lineHeight: \"$h3\",\n    fontWeight: \"$semiBold\",\n    \"@md\": {\n      fontSize: \"2.5rem\",\n      lineHeight: \"2.75rem\",\n    },\n  },\n  h4: {\n    fontSize: \"$h4\",\n    lineHeight: \"$h4\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.25px\",\n    \"@md\": {\n      fontSize: \"1.75rem\",\n      lineHeight: \"2rem\",\n    },\n  },\n  h5: {\n    fontSize: \"$h5\",\n    lineHeight: \"$h5\",\n    fontWeight: \"$semiBold\",\n    \"@md\": {\n      fontSize: \"1.5rem\",\n      lineHeight: \"1.75rem\",\n    },\n  },\n  h6: {\n    fontSize: \"$h6\",\n    lineHeight: \"$h6\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.15px\",\n    \"@md\": {\n      fontSize: \"1.25rem\",\n      lineHeight: \"1.5rem\",\n    },\n  },\n  sub1: {\n    fontSize: \"$md\",\n    lineHeight: \"$h5\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.15px\",\n  },\n  sub2: {\n    fontSize: \"$sm\",\n    lineHeight: \"$sm\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.1px\",\n  },\n  body1: {\n    fontSize: \"$md\",\n    lineHeight: \"$h6\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.1px\",\n  },\n  body2: {\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.25rem\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.25px\",\n  },\n  button: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.5rem\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.5px\",\n  },\n  caption: {\n    fontSize: \"0.75rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"0.4px\",\n    fontWeight: \"$regular\",\n  },\n  overline: {\n    fontSize: \"0.625rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"1.5px\",\n    fontWeight: \"$medium\",\n  },\n  tiny: {\n    fontSize: \"$tiny\",\n    lineHeight: \"$tiny\",\n  },\n  xs: {\n    fontSize: \"$xs\",\n    lineHeight: \"$xs\",\n  },\n  sm: {\n    fontSize: \"$sm\",\n    lineHeight: \"$sm\",\n  },\n  md: {\n    fontSize: \"$md\",\n    lineHeight: \"$md\",\n  },\n  lg: {\n    fontSize: \"$lg\",\n    lineHeight: \"$md\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.15px\",\n  },\n};\n\nexport const Text = styled(\"p\", {\n  fontFamily: \"$sans\",\n  fontWeight: \"$regular\",\n  margin: 0,\n  color: \"$on_surface_high\",\n  variants: {\n    variant: textVariants,\n    color: {\n      white: {\n        color: \"$on_surface_high\",\n      },\n    },\n    inline: {\n      true: {\n        display: \"inline\",\n      },\n    },\n  },\n  defaultVariants: {\n    variant: \"md\",\n  },\n});\n", "export { Text } from \"./Text\";\n", "import { styled } from \"../Theme\";\nimport { flexCenter } from \"../utils/styles\";\n\nexport const IconButton = styled(\"button\", {\n  ...flexCenter,\n  alignItems: \"center\",\n  outline: \"none\",\n  border: \"none\",\n  padding: \"$2\",\n  r: \"$0\",\n  cursor: \"pointer\",\n  backgroundColor: \"transparent\",\n  color: \"$on_surface_high\",\n  \"&:not([disabled]):focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n  \"&:not([disabled]):focus\": {\n    outline: \"none\",\n  },\n  \"@media (hover: hover)\": {\n    \"&:not([disabled]):hover\": {\n      backgroundColor: \"$on_surface_low\",\n    },\n  },\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n    backgroundColor: \"$secondary_dim\",\n    color: \"$on_primary_high\",\n  },\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  variants: {\n    active: {\n      true: {\n        \"&:not([disabled]):hover\": {\n          backgroundColor: \"$on_surface_low\",\n        },\n      },\n    },\n  },\n});\n", "export { IconButton } from \"./IconButton\";\n", "const getInitials = (name: string | undefined) => {\n  if (!name) {\n    return undefined;\n  } else {\n    return (\n      name\n        .trim()\n        // remove non chars/digits\n        .replace(/[^a-zA-Z0-9]/g, \"\")\n        .match(/(^\\S\\S?|\\b\\S)?/g)\n        ?.join(\"\")\n        ?.match(/(^\\S|\\S$)?/g)\n        ?.join(\"\")\n        .toUpperCase()\n    );\n  }\n};\n\n/**\n  calculates the initials of the name and choose a background color based on the first later of the initials\n */\nexport const getAvatarBg = (\n  name: string\n): { initials: string; color: string } => {\n  const initials = getInitials(name);\n  const indexFactor = 20;\n  const colorIndex = ((initials?.codePointAt(0) || 0) % indexFactor) + 1;\n  return { initials: initials || \"\", color: colorsList[colorIndex - 1] };\n};\n\nconst colorsList = [\n  \"#616161\",\n  \"#F44336\",\n  \"#3F51B5\",\n  \"#4CAF50\",\n  \"#FFA000\",\n  \"#795548\",\n  \"#E91E63\",\n  \"#2F80FF\",\n  \"#8BC34A\",\n  \"#F57C00\",\n  \"#4E342E\",\n  \"#9C27B0\",\n  \"#00BCD4\",\n  \"#C0CA33\",\n  \"#F4511E\",\n  \"#673AB7\",\n  \"#009688\",\n  \"#FBC02D\",\n  \"#BF360C\",\n  \"#455A64\",\n];\n", "import React from \"react\";\nimport { VariantProps } from \"@stitches/react\";\nimport { PersonIcon } from \"@100mslive/react-icons\";\nimport { styled } from \"../Theme\";\nimport { getAvatarBg } from \"./getAvatarBg\";\nimport { flexCenter } from \"../utils/styles\";\n\nconst getAvatarShape = (radii: string) => ({\n  borderRadius: radii,\n});\n\nexport const StyledAvatar = styled(\"div\", {\n  ...flexCenter,\n  color: \"$colors$on_primary_high\",\n  fontFamily: \"$sans\",\n  aspectRatio: 1,\n  fontWeight: 600,\n  fontSize: \"$space$9\",\n  variants: {\n    shape: {\n      circle: getAvatarShape(\"$round\"),\n      square: getAvatarShape(\"$1\"),\n    },\n    size: {\n      small: {\n        height: \"$16 !important\",\n        fontSize: \"$space$6\",\n      },\n      medium: {\n        height: \"$18 !important\",\n        fontSize: \"$space$10\",\n      },\n      large: {\n        height: \"$20 !important\",\n        fontSize: \"$space$12\",\n      },\n    },\n  },\n  defaultVariants: {\n    shape: \"circle\",\n  },\n});\n\ntype Props = VariantProps<typeof StyledAvatar> &\n  React.ComponentProps<typeof StyledAvatar> & {\n    name: string;\n  };\n\nexport const Avatar: React.FC<Props> = ({ name, css, ...props }) => {\n  const info = getAvatarBg(name);\n  let { color } = info;\n  if (!name) {\n    color = \"#7E47EB\";\n  }\n  return (\n    <StyledAvatar css={{ bg: color, ...css }} {...props}>\n      {info.initials || <PersonIcon height={40} width={40} />}\n    </StyledAvatar>\n  );\n};\n", "export { Avatar, StyledAvatar } from \"./Avatar\";\n", "import { styled } from \"../Theme\";\n\nconst getVerticalSpace = (space: string) => ({\n  marginLeft: space,\n  marginRight: space,\n});\nconst getHorizontalSpace = (space: string) => ({\n  marginTop: space,\n  marginBottom: space,\n});\n\nexport const VerticalDivider = styled(\"span\", {\n  height: \"25px\",\n  width: \"1px\",\n  backgroundColor: \"$border_bright\",\n  variants: {\n    space: {\n      1: getVerticalSpace(\"$1\"),\n      2: getVerticalSpace(\"$2\"),\n      3: getVerticalSpace(\"$3\"),\n      4: getVerticalSpace(\"$4\"),\n    },\n  },\n  defaultVariants: {\n    space: 1,\n  },\n});\n\nexport const HorizontalDivider = styled(\"span\", {\n  height: \"1px\",\n  width: \"100%\",\n  display: \"block\",\n  backgroundColor: \"$border_bright\",\n  variants: {\n    space: {\n      1: getHorizontalSpace(\"$1\"),\n      2: getHorizontalSpace(\"$2\"),\n      3: getHorizontalSpace(\"$3\"),\n      4: getHorizontalSpace(\"$4\"),\n    },\n  },\n  defaultVariants: {\n    space: 1,\n  },\n});\n", "export { HorizontalDivider, VerticalDivider } from \"./Divider\";\n", "import React from \"react\";\nimport * as BaseSwitch from \"@radix-ui/react-switch\";\nimport { styled } from \"../Theme\";\n\nconst SwitchRoot = styled(BaseSwitch.Root, {\n  all: \"unset\",\n  width: \"30px\",\n  height: \"14px\",\n  border: \"solid $space$px $secondary_default\",\n  borderRadius: \"$3\",\n  p: \"$2\",\n  position: \"relative\",\n  cursor: \"pointer\",\n  '&[data-state=\"checked\"]': {\n    backgroundColor: \"$primary_default\",\n    border: \"solid $space$px $primary_default\",\n  },\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n  },\n});\n\nconst SwitchThumb = styled(BaseSwitch.Thumb, {\n  display: \"block\",\n  top: \"3px\",\n  position: \"absolute\",\n  width: \"$md\",\n  height: \"$md\",\n  backgroundColor: \"$secondary_default\",\n  borderRadius: \"$round\",\n  transition: \"right 500ms ease-in\",\n  left: \"$2\",\n  '&[data-state=\"checked\"]': {\n    left: \"unset\",\n    right: \"$2\",\n    backgroundColor: \"$on_primary_high\",\n  },\n});\n\ntype SwitchProps = React.ComponentProps<typeof SwitchRoot>;\n\nexport const Switch: React.FC<SwitchProps> = (props) => (\n  <SwitchRoot {...props}>\n    <SwitchThumb />\n  </SwitchRoot>\n);\n\nSwitch.displayName = \"Switch\";\n", "export { Switch } from \"./Switch\";\n", "import { keyframes } from \"../Theme\";\n\nexport const slideDown = (controller: string) =>\n  keyframes({\n    from: { height: 0 },\n    to: { height: `var(${controller})` },\n  });\n\nexport const slideUp = (controller: string) =>\n  keyframes({\n    from: { height: `var(${controller})` },\n    to: { height: 0 },\n  });\n\nexport const translateAcross = ({\n  xFrom = \"0\",\n  yFrom = \"0\",\n  zFrom = \"0\",\n  xTo = \"0\",\n  yTo = \"0\",\n  zTo = \"0\",\n}) =>\n  keyframes({\n    from: { transform: `translate3d(${xFrom}, ${yFrom}, ${zFrom})` },\n    to: { transform: `translate3d(${xTo}, ${yTo}, ${zTo}` },\n  });\n\nexport const dialogOpen = keyframes({\n  \"0%\": { opacity: 0, transform: \"translate(-50%, -48%) scale(.90)\" },\n  \"100%\": { opacity: 1, transform: \"translate(-50%, -50%) scale(1)\" },\n});\n\nexport const dialogClose = keyframes({\n  \"0%\": { opacity: 1, transform: \"translate(-50%, -50%) scale(1)\" },\n  \"100%\": { opacity: 0, transform: \"translate(-50%, -48%) scale(.90)\" },\n});\n\nexport const slideUpAndFade = (start = \"2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateY(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateY(0)\" },\n  });\n\nexport const slideRightAndFade = (start = \"-2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateX(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateX(0)\" },\n  });\n\nexport const sheetSlideIn = keyframes({\n  from: { transform: \"$$transformValue\" },\n  to: { transform: \"translate3d(0,0,0)\" },\n});\n\nexport const sheetSlideOut = keyframes({\n  from: { transform: \"translate3d(0,0,0)\" },\n  to: { transform: \"$$transformValue\" },\n});\nexport const sheetFadeIn = keyframes({\n  from: { opacity: \"0\" },\n  to: { opacity: \"1\" },\n});\n\nexport const sheetFadeOut = keyframes({\n  from: { opacity: \"1\" },\n  to: { opacity: \"0\" },\n});\nexport const slideDownAndFade = (start = \"-2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateY(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateY(0)\" },\n  });\n\nexport const slideLeftAndFade = (start = \"2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateX(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateX(0)\" },\n  });\n\nconst slideLeftAndFadeOut = (end = \"-100%\") =>\n  keyframes({\n    \"0%\": { opacity: 1, transform: `translateX(0)` },\n    \"100%\": { opacity: 0, transform: `translateX(${end})` },\n  });\n\nexport const popoverAnimation = {\n  \"@media (prefers-reduced-motion: no-preference)\": {\n    animationDuration: \"400ms\",\n    animationTimingFunction: \"cubic-bezier(0.16, 1, 0.3, 1)\",\n    willChange: \"transform, opacity\",\n    '&[data-state=\"open\"]': {\n      '&[data-side=\"top\"]': { animationName: slideDownAndFade() },\n      '&[data-side=\"right\"]': { animationName: slideLeftAndFade() },\n      '&[data-side=\"bottom\"]': { animationName: slideUpAndFade() },\n      '&[data-side=\"left\"]': { animationName: slideRightAndFade() },\n    },\n  },\n};\n\nexport const toastAnimation = {\n  \"@media (prefers-reduced-motion: no-preference)\": {\n    animationDuration: \"500ms\",\n    animationTimingFunction: \"cubic-bezier(0.16, 1, 0.3, 1)\",\n    willChange: \"transform, opacity\",\n    animationName: slideLeftAndFadeOut(),\n\n    '&[data-state=\"open\"]': {\n      animationName: slideRightAndFade(\"-100%\"),\n    },\n    '&[data-swipe=\"move\"]': {\n      transform: \"translateX(var(--radix-toast-swipe-move-x))\",\n    },\n    '&[data-swipe=\"cancel\"]': {\n      transform: \"translateX(0)\",\n      transition: \"transform 200ms ease-out\",\n    },\n    '&[data-swipe=\"end\"]': {\n      animation: `${slideLeftAndFadeOut()} 100ms ease-out forwards`,\n    },\n  },\n};\n", "export * from \"./animations\";\nexport * from \"./styles\";\n", "import React, { PropsWithChildren, useState } from \"react\";\nimport * as BaseTooltip from \"@radix-ui/react-tooltip\";\nimport { CSS, styled } from \"../Theme\";\nimport {\n  slideDownAndFade,\n  slideLeftAndFade,\n  slideRightAndFade,\n  slideUpAndFade,\n} from \"../utils\";\n\nconst TooltipBox = styled(BaseTooltip.Content, {\n  fontFamily: \"$sans\",\n  borderRadius: \"$2\",\n  padding: \"$2 $4\",\n  fontSize: \"$xs\",\n  zIndex: 11,\n  color: \"$on_surface_high\",\n  backgroundColor: \"$surface_bright\",\n  \"@media (prefers-reduced-motion: no-preference)\": {\n    animationDuration: \"400ms\",\n    animationTimingFunction: \"cubic-bezier(0.16, 1, 0.3, 1)\",\n    willChange: \"transform, opacity\",\n    '&[data-state=\"delayed-open\"]': {\n      '&[data-side=\"top\"]': { animationName: slideDownAndFade() },\n      '&[data-side=\"right\"]': { animationName: slideLeftAndFade() },\n      '&[data-side=\"bottom\"]': { animationName: slideUpAndFade() },\n      '&[data-side=\"left\"]': { animationName: slideRightAndFade() },\n    },\n  },\n  variants: {\n    outlined: {\n      true: {\n        backgroundColor: \"$background_dim\",\n        border: \"solid $space$px $border_bright\",\n      },\n    },\n  },\n});\n\nconst TooltipTrigger = styled(BaseTooltip.Trigger, {\n  fontFamily: \"$sans\",\n});\n\nconst TooltipRoot = BaseTooltip.Root;\nexport type alignTooltip = \"end\" | \"center\" | \"start\" | undefined;\nexport type sideTooltip = \"bottom\" | \"left\" | \"right\" | \"top\" | undefined;\n\nexport const Tooltip: React.FC<\n  PropsWithChildren<{\n    title: React.ReactNode | string;\n    outlined?: boolean;\n    side?: sideTooltip;\n    align?: alignTooltip;\n    disabled?: boolean;\n    triggerCss?: CSS;\n    boxCss?: CSS;\n    delayDuration?: number;\n  }>\n> = ({\n  children,\n  title,\n  triggerCss,\n  boxCss,\n  outlined = true,\n  side = \"bottom\",\n  align = \"center\",\n  disabled = false,\n  delayDuration = 200,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <BaseTooltip.Provider>\n      <TooltipRoot\n        delayDuration={delayDuration}\n        open={open && !disabled}\n        onOpenChange={setOpen}\n      >\n        <TooltipTrigger css={{ ...triggerCss }} asChild>\n          {children}\n        </TooltipTrigger>\n        <TooltipBox\n          sideOffset={10}\n          side={side}\n          align={align}\n          outlined={outlined}\n          css={{ ...boxCss }}\n        >\n          {title}\n        </TooltipBox>\n      </TooltipRoot>\n    </BaseTooltip.Provider>\n  );\n};\n", "export { Tooltip } from \"./Tooltip\";\n", "import React from \"react\";\nimport { ChevronDownIcon } from \"@100mslive/react-icons\";\nimport { styled } from \"../Theme\";\n\nconst Root = styled(\"div\", {\n  color: \"$on_primary_high\",\n  display: \"inline-flex\",\n  position: \"relative\",\n  outline: \"none\",\n  overflow: \"hidden\",\n  borderRadius: \"$1\",\n  backgroundColor: \"$surface_default\",\n  maxWidth: \"100%\",\n});\n\n// TODO: replace these with tokens\nconst SelectRoot = styled(\"select\", {\n  h: \"$16\",\n  fontSize: \"$md\",\n  fontWeight: \"500\",\n  lineHeight: \"inherit\",\n  textTransform: \"none\",\n  appearance: \"none\",\n  color: \"$on_secondary_high\",\n  padding: \"5px\",\n  paddingLeft: \"12px\",\n  paddingRight: \"30px\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  backgroundColor: \"$secondary_default\",\n  \"&:not([disabled]):focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n  },\n});\n\nconst Arrow = styled(\"span\", {\n  color: \"$on_secondary_high\",\n  width: \"30px\",\n  height: \"100%\",\n  position: \"absolute\",\n  right: 0,\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  transition: \"border .2s ease 0s\",\n});\n\nconst DefaultDownIcon = ({ ...props }) => (\n  <Arrow {...props}>\n    <ChevronDownIcon />\n  </Arrow>\n);\n\nexport const Select = {\n  Root,\n  DownIcon: Arrow,\n  DefaultDownIcon,\n  Select: SelectRoot,\n};\n", "export { Select } from \"./Select\";\n", "import React from \"react\";\nimport * as BaseSlider from \"@radix-ui/react-slider\";\nimport { CSS } from \"@stitches/react\";\nimport { styled } from \"../Theme\";\nimport { Tooltip } from \"../Tooltip\";\n\nconst Root = styled(BaseSlider.Root, {\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  userSelect: \"none\",\n  touchAction: \"none\",\n  width: \"100%\",\n  '&[data-orientation=\"horizontal\"]': {\n    height: 20,\n  },\n});\n\nconst Track = styled(BaseSlider.Track, {\n  backgroundColor: \"$surface_bright\",\n  position: \"relative\",\n  flexGrow: 1,\n  borderRadius: \"$round\",\n  cursor: \"pointer\",\n  '&[data-orientation=\"horizontal\"]': { height: 3 },\n});\n\nconst Range = styled(BaseSlider.Range, {\n  position: \"absolute\",\n  backgroundColor: \"$primary_default\",\n  borderRadius: \"$round\",\n  height: \"100%\",\n});\n\nconst Thumb = styled(BaseSlider.Thumb, {\n  all: \"unset\",\n  display: \"block\",\n  width: \"$8\",\n  height: \"$8\",\n  backgroundColor: \"$primary_default\",\n  cursor: \"pointer\",\n  boxShadow: `0 2px 10px $colors$surface_default`,\n  borderRadius: 10,\n  \"&:hover\": { backgroundColor: \"$primary_default\" },\n  \"&:focus\": { boxShadow: \"none\" },\n});\n\ntype SliderProps = React.ComponentProps<typeof Root> & {\n  thumbStyles?: CSS;\n  showTooltip?: boolean;\n};\n\nexport const Slider: React.FC<SliderProps & { showTooltip?: boolean }> = ({\n  showTooltip = true,\n  thumbStyles,\n  ...props\n}) => (\n  <Root {...props}>\n    <Track>\n      <Range />\n    </Track>\n    {showTooltip ? (\n      <Tooltip title={String(props.value?.[0])}>\n        <Thumb css={thumbStyles} />\n      </Tooltip>\n    ) : (\n      <Thumb css={thumbStyles} />\n    )}\n  </Root>\n);\n", "export { Slider } from \"./Slider\";\n", "import React, { ComponentProps } from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../IconButton\";\nimport { styled } from \"../Theme\";\nimport { dialogClose, dialogOpen } from \"../utils/animations\";\n\nexport const DialogClose = styled(DialogPrimitive.Close, {\n  backgroundColor: \"transparent\",\n  padding: \"0\",\n  margin: \"0\",\n  border: \"none\",\n  backgroundImage: \"none\",\n});\n\nexport const StyledDialogTrigger = styled(DialogPrimitive.Trigger, {\n  appearance: \"none !important\", // Needed for safari it shows white overlay\n});\n\nexport const CustomDialogOverlay = styled(DialogPrimitive.Overlay, {\n  backgroundColor: \"rgba(0, 0, 0, 0.5);\",\n  position: \"absolute\",\n  inset: 0,\n});\n\nexport const StyledDialogPortal = styled(DialogPrimitive.Portal, {});\n\nexport const CustomDialogContent = styled(DialogPrimitive.Content, {\n  color: \"$on_surface_medium\",\n  backgroundColor: \"$surface_dim\",\n  borderRadius: \"8px\",\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  maxHeight: \"95%\",\n  overflowY: \"auto\",\n  border: \"$space$px solid $border_bright\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  transform: \"translate(-50%, -50%)\",\n  zIndex: 999,\n  padding: \"$12\",\n  \"@allowMotion\": {\n    '&[data-state=\"open\"]': {\n      animation: `${dialogOpen} 150ms cubic-bezier(0.16, 1, 0.3, 1)`,\n    },\n    '&[data-state=\"closed\"]': {\n      animation: `${dialogClose} 150ms cubic-bezier(0.16, 1, 0.3, 1)`,\n    },\n  },\n  \"&:focus\": { outline: \"none\" },\n});\n\nexport const DialogTitle = styled(DialogPrimitive.Title, {\n  margin: 0,\n});\n\nexport const DialogDescription = styled(DialogPrimitive.Description, {});\n\nexport const DialogDefaultCloseIcon = (\n  props: ComponentProps<typeof IconButton>\n) => (\n  <DialogClose asChild>\n    <IconButton {...props}>\n      <CrossIcon />\n    </IconButton>\n  </DialogClose>\n);\n", "import React, { createContext, ReactNode } from \"react\";\n\nexport const DialogContainerContext = createContext(\"\");\n\nexport function DialogContainerProvider({\n  children,\n  dialogContainerSelector,\n}: {\n  children: ReactNode;\n  dialogContainerSelector: string;\n}) {\n  return (\n    <DialogContainerContext.Provider value={dialogContainerSelector}>\n      {children}\n    </DialogContainerContext.Provider>\n  );\n}\n", "import { useContext } from \"react\";\nimport { DialogContainerContext } from \"../context/DialogContext\";\n\nexport function useDialogContainerSelector() {\n  const dialogContainerSelector = useContext(DialogContainerContext);\n  return dialogContainerSelector;\n}\n", "import React, { ReactNode, useEffect, useRef } from \"react\";\nimport { Root } from \"@radix-ui/react-dialog\";\nimport { styled } from \"@stitches/react\";\nimport {\n  CustomDialogContent,\n  CustomDialogOverlay,\n  DialogClose,\n  DialogDefaultCloseIcon,\n  DialogDescription,\n  DialogTitle,\n  StyledDialogPortal,\n  StyledDialogTrigger,\n} from \"./DialogContent\";\nimport { useDialogContainerSelector } from \"../hooks/useDialogContainerSelector\";\n\nconst StyledDialog = styled(Root, {});\n\n// Handles race conditions when multiple elements with dismissable layer are present\n// https://github.com/radix-ui/primitives/issues/2122\nconst DialogRoot = <T extends React.ComponentProps<typeof StyledDialog>>(\n  props: T\n) => {\n  useEffect(() => {\n    return () => {\n      if (document)\n        setTimeout(() => (document.body.style.pointerEvents = \"auto\"), 0);\n    };\n  }, []);\n  return <StyledDialog {...(props as object)} />;\n};\n\nconst CustomDialogPortal = ({\n  children,\n  container,\n}: {\n  children: ReactNode;\n  container?: HTMLElement | null;\n}) => {\n  const dialogContainerSelector = useDialogContainerSelector();\n  const containerRef = useRef<HTMLElement | null>(null);\n\n  if (container) {\n    containerRef.current = container;\n  } else if (dialogContainerSelector && !containerRef.current) {\n    containerRef.current = document.querySelector(\n      dialogContainerSelector\n    ) as HTMLElement;\n  } else if (!containerRef.current) {\n    containerRef.current = document.body;\n  }\n  return (\n    <StyledDialogPortal container={containerRef.current}>\n      <>{children}</>\n    </StyledDialogPortal>\n  );\n};\n\nexport const Dialog = {\n  Root: DialogRoot,\n  Trigger: StyledDialogTrigger,\n  Overlay: CustomDialogOverlay,\n  Content: CustomDialogContent,\n  Title: DialogTitle,\n  Description: DialogDescription,\n  Close: DialogClose,\n  DefaultClose: DialogDefaultCloseIcon,\n  Portal: CustomDialogPortal,\n};\n", "export { Dialog } from \"./Dialog\";\n", "import React, { ComponentProps, PropsWithChildren, PropsWithRef } from \"react\";\nimport { CSS } from \"@stitches/react\";\nimport { CopyIcon, EyeCloseIcon, EyeOpenIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../Layout\";\nimport { styled } from \"../Theme\";\n\nexport const Input = styled(\"input\", {\n  fontFamily: \"$sans\",\n  lineHeight: \"inherit\",\n  backgroundColor: \"$surface_default\",\n  borderRadius: \"8px\",\n  outline: \"none\",\n  border: \"1px solid $border_default\",\n  padding: \"0.5rem 0.75rem\",\n  minHeight: \"30px\",\n  color: \"$on_surface_high\",\n  fontSize: \"$md\",\n  \"&:focus\": {\n    boxShadow: \"0 0 0 1px $colors$primary_default\",\n    border: \"1px solid transparent\",\n  },\n  \"&::placeholder\": {\n    color: \"$on_surface_medium\",\n  },\n  variants: {\n    error: {\n      true: {\n        \"&:focus\": {\n          boxShadow: \"0 0 0 3px $colors$alert_error_default\",\n        },\n      },\n    },\n  },\n});\n\nconst PasswordRoot = styled(\"div\", {\n  w: \"100%\",\n  position: \"relative\",\n  display: \"flex\",\n});\n\nconst PasswordShowIcon: React.FC<\n  ComponentProps<typeof Flex> & { showPassword?: boolean; css?: CSS }\n> = ({ showPassword, css, ...props }) => {\n  return (\n    <Flex css={{ ...css }} {...props}>\n      {showPassword ? <EyeOpenIcon /> : <EyeCloseIcon />}\n    </Flex>\n  );\n};\n\nconst PasswordCopyIcon: React.FC<\n  ComponentProps<typeof Flex & { css?: CSS }>\n> = ({ css, ...props }) => {\n  return (\n    <Flex css={{ ...css }} {...props}>\n      <CopyIcon />\n    </Flex>\n  );\n};\n\nconst PasswordIcons = React.forwardRef<\n  HTMLDivElement,\n  PropsWithChildren<ComponentProps<typeof Flex & { css?: CSS }>>\n>(({ css, ...props }, ref) => {\n  return (\n    <Flex\n      css={{\n        position: \"absolute\",\n        top: 0,\n        height: \"100%\",\n        zIndex: 10,\n        right: \"$4\",\n        bg: \"$surface_bright\",\n        alignItems: \"center\",\n        ...css,\n      }}\n      ref={ref}\n      {...props}\n    >\n      {props.children}\n    </Flex>\n  );\n});\n\nconst ReactInput: React.FC<\n  PropsWithRef<\n    ComponentProps<typeof Input> & { showPassword?: boolean; css?: CSS }\n  >\n> = React.forwardRef<\n  HTMLInputElement,\n  PropsWithRef<\n    ComponentProps<typeof Input> & { showPassword?: boolean; css?: CSS }\n  >\n>(({ showPassword = false, css, ...props }, ref) => {\n  return (\n    <Input\n      css={{ flexGrow: 1, width: \"100%\", ...css }}\n      type={showPassword ? \"text\" : \"password\"}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nexport const PasswordInput = {\n  Root: PasswordRoot,\n  Icons: PasswordIcons,\n  Input: ReactInput,\n  ShowIcon: PasswordShowIcon,\n  CopyIcon: PasswordCopyIcon,\n};\n", "export * from \"./Input\";\n", "import { Box } from \"../Layout\";\nimport { styled } from \"../Theme\";\nimport { flexCenter } from \"../utils\";\n\nexport const Root = styled(\"div\", {\n  padding: \"0.75rem\",\n  // show videotile context menu on hover\n  // [`&:hover .tile-menu`]: {\n  //   display: 'inline-block',\n  // },\n});\n\nconst Container = styled(\"div\", {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"relative\",\n  overflow: \"hidden\",\n  borderRadius: \"$2\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  background: \"$background_default\",\n  variants: {\n    transparentBg: {\n      true: {\n        background: \"transparent\",\n      },\n    },\n    noRadius: {\n      true: {\n        borderRadius: 0,\n      },\n    },\n  },\n});\n\nconst Overlay = styled(\"div\", {\n  position: \"absolute\",\n  width: \"100%\",\n  height: \"100%\",\n});\n\nconst Info = styled(\"div\", {\n  color: \"$on_primary_high\",\n  position: \"absolute\",\n  bottom: \"5px\",\n  left: \"50%\",\n  fontSize: \"$sm\",\n  transform: \"translateX(-50%)\",\n  textAlign: \"center\",\n  width: \"80%\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  textOverflow: \"ellipsis\",\n  fontFamily: \"$sans\",\n});\n\nconst AttributeBox = styled(\"div\", {\n  position: \"absolute\",\n  top: \"$4\",\n  color: \"$on_secondary_high\",\n  bg: \"$secondary_dim\",\n  borderRadius: \"$round\",\n  width: \"$14\",\n  height: \"$14\",\n  mb: \"5px\",\n  ...flexCenter,\n  variants: {\n    size: {\n      small: {\n        width: \"$10\",\n        height: \"$10\",\n        \"& > svg\": {\n          width: \"$8\",\n          height: \"$8\",\n        },\n      },\n      medium: {\n        width: \"$13\",\n        height: \"$13\",\n      },\n    },\n    position: {\n      left: { left: \"$4\" },\n      right: { right: \"$4\" },\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    position: \"left\",\n  },\n});\n\nconst AudioIndicator = styled(AttributeBox, {\n  defaultVariants: { position: \"right\" },\n});\n\nconst FullScreenButton = styled(\"button\", {\n  height: \"$14\",\n  p: \"$2 $4\",\n  color: \"$on_surface_high\",\n  borderRadius: \"$1\",\n  border: \"none\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  position: \"absolute\",\n  top: \"$2\",\n  right: \"$2\",\n  zIndex: 5,\n  \"&:not([disabled]):focus\": {\n    outline: \"none\",\n    boxShadow: \"0 0 0 3px $colors$primary_bright\",\n  },\n});\n\nconst AvatarContainer = styled(Box, {\n  ...flexCenter,\n  flexDirection: \"column\",\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"50%\",\n  transform: \"translateX(-50%) translateY(-50%)\",\n  width: \"40%\",\n  height: \"40%\",\n  \"& > div\": {\n    maxHeight: \"$20\",\n    height: \"100%\",\n  },\n});\n\ninterface VideoTileType {\n  Root: typeof Root;\n  Container: typeof Container;\n  Overlay: typeof Overlay;\n  Info: typeof Info;\n  AvatarContainer: typeof AvatarContainer;\n  AttributeBox: typeof AttributeBox;\n  AudioIndicator: typeof AudioIndicator;\n  FullScreenButton: typeof FullScreenButton;\n}\n\nexport const StyledVideoTile: VideoTileType = {\n  Root,\n  Container,\n  Overlay,\n  Info,\n  AvatarContainer,\n  AttributeBox,\n  AudioIndicator,\n  FullScreenButton,\n};\n", "export { StyledVideoTile } from \"./StyledVideoTile\";\n", "export const getLeft = (index: number, currentPageIndex: number) => {\n  //active slide\n  if (index === currentPageIndex) {\n    return 0;\n  }\n  //prev slide\n  if (index + 1 === currentPageIndex) {\n    return \"-100%\";\n  }\n  //next slide\n  if (index - 1 === currentPageIndex) {\n    return \"100%\";\n  }\n  //all slides before prev\n  if (index < currentPageIndex) {\n    return \"-200%\";\n  }\n  //all slides after next\n  return \"200%\";\n};\n", "import { styled } from \"../Theme\";\n\nconst Root = styled(\"div\", {\n  height: \"100%\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst Container = styled(\"div\", {\n  height: \"100%\",\n  width: \"100%\",\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  overflow: \"hidden\",\n});\n\nconst View = styled(\"div\", {\n  height: \"100%\",\n  width: \"100%\",\n  position: \"absolute\",\n  display: \"flex\",\n  placeContent: \"center\",\n  flexWrap: \"wrap\",\n  alignItems: \"center\",\n});\n\ninterface VideoListType {\n  Root: typeof Root;\n  Container: typeof Container;\n  View: typeof View;\n}\n\nexport const StyledVideoList: VideoListType = {\n  Root,\n  Container,\n  View,\n};\n", "export { getLeft } from \"./videoListUtils\";\nexport { StyledVideoList } from \"./StyledVideoList\";\n", "import { styled } from \"../Theme\";\n\nconst Root = styled(\"div\", {\n  height: \"2rem\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"0.5rem\",\n  },\n});\n\nconst Chevron = styled(\"button\", {\n  color: \"$on_surface_high\",\n  border: \"none\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&[disabled]\": {\n    color: \"$on_surface_low\",\n    cursor: \"not-allowed\",\n  },\n  backgroundColor: \"transparent\",\n  display: \"flex\",\n});\n\nconst Dots = styled(\"div\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"0.5rem\",\n  },\n});\n\nconst Dot = styled(\"button\", {\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  borderRadius: \"9999px\",\n  width: \"0.5rem\",\n  height: \"0.5rem\",\n  backgroundColor: \"$on_surface_low\",\n  padding: \"0px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  variants: {\n    active: {\n      true: {\n        backgroundColor: \"$on_surface_high\",\n      },\n    },\n  },\n});\n\ninterface PaginationType {\n  Root: typeof Root;\n  Chevron: typeof Chevron;\n  Dots: typeof Dots;\n  Dot: typeof Dot;\n}\n\nexport const StyledPagination: PaginationType = {\n  Root,\n  Chevron,\n  Dots,\n  Dot,\n};\n", "export { StyledPagination } from \"./StyledPagination\";\n", "import {\n  CheckboxItem,\n  Content,\n  Group,\n  Item,\n  ItemIndicator,\n  Label,\n  Portal,\n  Root,\n  Separator,\n  Sub,\n  SubContent,\n  SubTrigger,\n  Trigger,\n} from \"@radix-ui/react-dropdown-menu\";\nimport { styled } from \"../Theme\";\n\nconst DropdownRoot = styled(Root, {});\n\nconst DropdownTrigger = styled(Trigger, {\n  cursor: \"pointer\",\n  appearance: \"none !important\",\n  '&[data-state=\"open\"]': {\n    backgroundColor: \"$surface_bright\",\n  },\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n});\n\nconst DropdownTriggerItem = styled(SubTrigger, {\n  w: \"100%\",\n  color: \"$on_surface_high\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n    bg: \"$surface_brighter\",\n  },\n  \"&:focus-visible\": {\n    bg: \"$surface_brighter\",\n    outline: \"none\",\n  },\n});\n\nconst DropdownItem = styled(Item, {\n  color: \"$on_surface_high\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  outline: \"none\",\n  backgroundColor: \"$surface_dim\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n    bg: \"$surface_bright\",\n  },\n  \"&:focus-visible\": {\n    bg: \"$surface_bright\",\n  },\n});\n\nconst DropdownItemSeparator = styled(Separator, {\n  h: 1,\n  backgroundColor: \"$border_bright\",\n  m: \"$4 $8\",\n});\n\nconst DropdownContent = styled(Content, {\n  w: \"$80\",\n  maxHeight: \"$64\",\n  r: \"$1\",\n  py: \"$4\",\n  backgroundColor: \"$surface_dim\",\n  overflowY: \"auto\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  zIndex: 20,\n  fontFamily: \"$sans\",\n});\n\nconst DropdownLabel = styled(Label, {\n  display: \"flex\",\n  alignItems: \"center\",\n  h: \"$12\",\n  w: \"100%\",\n  p: \"$8 $4\",\n});\n\nconst DropdownGroup = styled(Group, {});\n\nconst DropdownSubMenu = styled(Sub, {});\n\nconst DropdownSubMenuContent = styled(SubContent, {\n  w: \"$80\",\n  maxHeight: \"$64\",\n  r: \"$1\",\n  py: \"$4\",\n  backgroundColor: \"$surface_bright\",\n  overflowY: \"auto\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  zIndex: 20,\n});\n\nconst DropdownCheckboxItem = styled(CheckboxItem, {\n  color: \"$on_surface_high\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  outline: \"none\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n    bg: \"$surface_brighter\",\n  },\n  \"&:focus-visible\": {\n    bg: \"$surface_brighter\",\n  },\n  gap: \"$2\",\n});\n\nconst DropdownItemIndicator = styled(ItemIndicator, {\n  w: \"$10\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nexport const Dropdown = {\n  Root: DropdownRoot,\n  Trigger: DropdownTrigger,\n  TriggerItem: DropdownTriggerItem,\n  Content: DropdownContent,\n  Portal: Portal,\n  SubMenu: DropdownSubMenu,\n  SubMenuContent: DropdownSubMenuContent,\n  Item: DropdownItem,\n  Label: DropdownLabel,\n  Group: DropdownGroup,\n  ItemSeparator: DropdownItemSeparator,\n  CheckboxItem: DropdownCheckboxItem,\n  ItemIndicator: DropdownItemIndicator,\n};\n", "export * from \"./Dropdown\";\n", "import React from \"react\";\nimport type { VariantProps } from \"@stitches/react\";\nimport { HMSPeer, useVideo } from \"@100mslive/react-sdk\";\nimport { styled } from \"../Theme\";\n\nexport const StyledVideo = styled(\"video\", {\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  borderRadius: \"$2\",\n  objectFit: \"cover\",\n  background: \"$background_default\",\n  variants: {\n    mirror: {\n      true: {\n        transform: \"scaleX(-1)\",\n      },\n    },\n    screenShare: {\n      true: {\n        objectFit: \"contain\",\n      },\n    },\n    degraded: {\n      // send the video behind when it's degraded so avatar can show on top of it. Video will be stuck frame in this case.\n      // not hiding by using display none, because it will lead it to be detached as it will no longer be in view.\n      true: {\n        zIndex: -100,\n      },\n    },\n    noRadius: {\n      true: {\n        borderRadius: 0,\n      },\n    },\n  },\n  defaultVariants: {\n    mirror: false,\n  },\n});\n\ntype StyledProps = VariantProps<typeof StyledVideo> &\n  React.ComponentProps<typeof StyledVideo>;\n\ninterface Props {\n  /**\n   * trackID for peer (videoTrack)\n   */\n  trackId: HMSPeer[\"videoTrack\"];\n  /**\n   * Boolean stating whether to override the internal behaviour.\n   * when attach is false, even if tile is inView or enabled, it won't be rendered\n   */\n  attach?: boolean;\n}\n\nexport const Video: React.FC<Props & StyledProps> = ({\n  trackId,\n  attach,\n  ...props\n}) => {\n  const { videoRef } = useVideo({ trackId, attach });\n  return <StyledVideo ref={videoRef} {...props} />;\n};\n", "export { StyledVideo, Video } from \"./Video\";\n", "import * as Popover from \"@radix-ui/react-popover\";\nimport { styled } from \"../Theme\";\nimport { popoverAnimation } from \"../utils/animations\";\nimport { flexCenter } from \"../utils/styles\";\n\nconst Root = Popover.Root;\n\nconst StyledTrigger = styled(Popover.Trigger, {\n  position: \"absolute\",\n  bottom: \"$2\",\n  right: \"$2\",\n  zIndex: 10,\n  width: \"$13\",\n  height: \"$13\",\n  color: \"$on_surface_high\",\n  borderRadius: \"$2\",\n  backgroundColor: \"$surface_bright\",\n  cursor: \"pointer\",\n  border: \"none\",\n  ...flexCenter,\n  \"&:not([disabled]):focus\": {\n    outline: \"none\",\n    boxShadow: \"0 0 0 3px $colors$primary_bright\",\n  },\n});\n\nconst StyledContent = styled(Popover.Content, {\n  fontFamily: \"$sans\",\n  backgroundColor: \"$surface_dim\",\n  padding: \"$5 0\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  borderRadius: \"$space$6\",\n  zIndex: 11,\n  width: \"$60\",\n  ...popoverAnimation,\n});\n\nconst styledItem = {\n  fontSize: \"$sm\",\n  color: \"$on_surface_high\",\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: \"$4 $6\",\n  width: \"100%\",\n  backgroundColor: \"$menuBg\",\n};\n\nconst StyledItemButton = styled(\"button\", {\n  ...styledItem,\n  height: \"$14\",\n  border: \"none\",\n  \"&:hover\": {\n    backgroundColor: \"$surface_brighter\",\n  },\n  cursor: \"pointer\",\n  // TODO: default focus applied cause issues with this style\n  \"&:focus\": {\n    outline: \"none\",\n    // backgroundColor: '$grey3',\n  },\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"$4\",\n  },\n});\n\nconst StyledVolumeItem = styled(\"div\", {\n  // TODO: maybe keep this as base comp and extend button variant\n  ...styledItem,\n  alignItems: \"start\",\n  flexDirection: \"column\",\n  marginBottom: \"0\",\n});\n\nexport const Flex = styled(\"div\", {\n  display: \"flex\",\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"$4\",\n  },\n});\n\nconst RemoveMenuItem = styled(StyledItemButton, {\n  color: \"$alert_error_default\",\n  borderTop: \"1px solid $border_bright\",\n});\n\ninterface MenuTileType {\n  Root: typeof Root;\n  Trigger: typeof StyledTrigger;\n  Content: typeof StyledContent;\n  ItemButton: typeof StyledItemButton;\n  VolumeItem: typeof StyledVolumeItem;\n  RemoveItem: typeof RemoveMenuItem;\n}\n\nexport const StyledMenuTile: MenuTileType = {\n  Root,\n  Trigger: StyledTrigger,\n  Content: StyledContent,\n  ItemButton: StyledItemButton,\n  VolumeItem: StyledVolumeItem,\n  RemoveItem: RemoveMenuItem,\n};\n", "export { StyledMenuTile } from \"./StyledMenuTile\";\n", "import { useCallback, useRef } from \"react\";\nimport { HMSTrackID } from \"@100mslive/hms-video-store\";\nimport { useAudioLevelStyles } from \"@100mslive/react-sdk\";\nimport { useTheme } from \"../Theme\";\n\n/**\n * pass in a track id and get a ref. That ref can be attached to an element which will have border\n * as per audio level post that.\n */\nexport function useBorderAudioLevel(audioTrackId?: HMSTrackID) {\n  const { theme } = useTheme();\n  const color = theme.colors.primary_default.value;\n  const getStyle = useCallback(\n    (level: number) => {\n      const style: Record<string, string> = {\n        transition: \"outline 0.4s ease-in-out\",\n      };\n      style[\"outline\"] = level\n        ? `${sigmoid(level) * 4}px solid ${color}`\n        : \"0px solid transparent\";\n      return style;\n    },\n    [color]\n  );\n  const ref = useRef(null);\n  useAudioLevelStyles({\n    trackId: audioTrackId,\n    getStyle,\n    ref,\n  });\n  return ref;\n}\n\nexport const sigmoid = (z: number) => {\n  return 1 / (1 + Math.exp(-z));\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport { selectTrackAudioByID, useHMSVanillaStore } from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../Layout\";\nimport { keyframes } from \"../Theme\";\n//@ts-ignore\nimport bg from \"./audio-level.png\";\n\n// keep the calculated values before hand to avoid recalcuation everytime\nconst positionValues = new Array(101).fill(0).reduce((acc, _, index) => {\n  acc[index] = Math.round((index / 100) * 4) / 4; // convert to 0.25 multiples\n  return acc;\n}, {});\n\nconst barAnimation = keyframes({\n  from: {\n    maskSize: \"4em .8em\",\n    \"-webkit-mask-position-y\": \".1em\",\n    maskPosition: \"initial .1em\",\n  },\n\n  \"50%\": {\n    maskSize: \"4em 1em\",\n    \"-webkit-mask-position-y\": 0,\n    maskPosition: \"initial 0\",\n  },\n\n  to: {\n    maskSize: \"4em .8em\",\n    \"-webkit-mask-position-y\": \".1em\",\n    maskPosition: \"initial 0.1em\",\n  },\n});\n\nconst AudioBar = () => {\n  return (\n    <Box\n      css={{\n        width: \".25em\",\n        height: \"1em\",\n        maskImage: `url(${bg})`,\n        \"-webkit-mask-repeat\": \"no-repeat\",\n        backgroundColor: \"$on_primary_high\",\n        maskSize: \"4em 1em\",\n      }}\n    />\n  );\n};\n\nexport const AudioLevel = ({\n  trackId,\n  size,\n}: {\n  trackId?: string;\n  size?: \"small\" | \"medium\";\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const vanillaStore = useHMSVanillaStore();\n\n  useEffect(() => {\n    const unsubscribe = vanillaStore.subscribe((audioLevel) => {\n      if (ref.current) {\n        let index = 0;\n        //@ts-ignore\n        for (const child of ref.current.children) {\n          const positionX = `-${\n            positionValues[audioLevel] * (index === 1 ? 2.5 : 1.25)\n          }em`;\n          child.style[\"-webkit-mask-position-x\"] = positionX;\n          child.style[\"mask-position\"] = `${positionX} 0`;\n          child.style[\"animation\"] =\n            positionValues[audioLevel] > 0\n              ? `${barAnimation} 0.6s steps(3,jump-none) 0s infinite`\n              : \"none\";\n          index++;\n        }\n      }\n    }, selectTrackAudioByID(trackId));\n    return unsubscribe;\n  }, [vanillaStore, trackId]);\n  return (\n    <Flex\n      ref={ref}\n      css={{\n        fontSize: size === \"small\" ? \"0.75rem\" : \"1rem\",\n        gap: size === \"small\" ? \"$1\" : \"$2\",\n      }}\n    >\n      <AudioBar />\n      <AudioBar />\n      <AudioBar />\n    </Flex>\n  );\n};\n", "export { useBorderAudioLevel } from \"./useBorderAudioLevel\";\nexport { AudioLevel } from \"./AudioLevel\";\n", "import {\n  Arrow,\n  Close,\n  Content,\n  Popover as Root,\n  Portal,\n  Trigger,\n} from \"@radix-ui/react-popover\";\nimport { styled } from \"../Theme\";\nimport { popoverAnimation } from \"../utils/animations\";\n\nconst StyledContent = styled(Content, {\n  padding: \"$6\",\n  borderRadius: \"$2\",\n  backgroundColor: \"$background_default\",\n  boxShadow: \"$sm\",\n  zIndex: 12,\n  ...popoverAnimation,\n});\n\nconst StyledArrow = styled(Arrow, {\n  ...popoverAnimation,\n});\n\nconst StyledTrigger = styled(Trigger, {\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n});\n\nexport const Popover = {\n  Root,\n  Content: StyledContent,\n  Trigger: StyledTrigger,\n  Portal: Portal,\n  Arrow: StyledArrow,\n  Close: Close,\n};\n", "export const formatBytes = (bytes?: number, unit = \"B\", decimals = 2) => {\n  if (bytes === 0) {\n    return `0 ${unit}`;\n  }\n  if (!bytes) {\n    return \"-\";\n  }\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(\n    (size) => size + unit\n  );\n\n  let i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  // B to KB\n  i === 0 && i++;\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n", "import { styled } from \"../Theme\";\n\nexport const Root = styled(\"div\", {\n  backgroundColor: \"rgba(0,0,0,0.75)\",\n  position: \"absolute\",\n  top: \"$3\",\n  left: \"$3\",\n  zIndex: 7,\n  borderRadius: \"$2\",\n  padding: \"$2\",\n  fontSize: \"$xs\",\n  overflowY: \"auto\",\n  maxHeight: \"75%\",\n  maxWidth: \"85%\",\n});\n\nexport const Table = styled(\"table\", {});\n\nexport const Row = styled(\"tr\", {\n  width: \"100%\",\n  \"& > * + *\": {\n    px: \"$4\",\n  },\n  whiteSpace: \"nowrap\",\n  textAlign: \"left\",\n});\n\nexport const Label = styled(\"td\", {\n  color: \"$on_primary_high\",\n  fontWeight: \"$regular\",\n});\n\nexport const Value = styled(\"td\", {\n  color: \"$on_primary_high\",\n});\n\nexport const Gap = styled(\"tr\", {\n  height: \"$4\",\n});\n\ninterface StatsType {\n  Root: typeof Root;\n  Row: typeof Row;\n  Label: typeof Label;\n  Value: typeof Value;\n  Table: typeof Table;\n  Gap: typeof Gap;\n}\n\nexport const Stats: StatsType = {\n  Root,\n  Row,\n  Label,\n  Value,\n  Table,\n  Gap,\n};\n", "import { useRef } from \"react\";\nimport { usePrevious } from \"react-use\";\nimport {\n  HMSTrackID,\n  selectHMSStats,\n  useHMSStatsStore,\n} from \"@100mslive/react-sdk\";\n\ninterface UseQoEProps {\n  videoTrackID?: HMSTrackID;\n  audioTrackID?: HMSTrackID;\n  isLocal?: boolean;\n}\n\nconst EXPECTED_RESOLUTION = 1280 * 720;\n\nconst clip = (value: number, min_value: number, max_value: number) => {\n  return Math.max(Math.min(value, max_value), min_value);\n};\n\n/**\n * calculate QoE using 5 params:\n * p1:freeze_duration_norm\n * p2:resolution_norm\n * p3:fps_norm\n * p4:delay_norm\n * p5:audio_concealed_norm\n * the formula is 5*(p1)^3 * (p2)^0.3 * (p3)^0.5 * (p4)^1 * (p5)*2\n *\n * https://github.com/100mslive/webrtc-benchmark/blob/daily/sssd.py#L112\n */\nexport const useQoE = ({\n  videoTrackID,\n  audioTrackID,\n  isLocal = false,\n}: UseQoEProps) => {\n  const audioTrackStats = useHMSStatsStore(\n    selectHMSStats.trackStatsByID(audioTrackID)\n  );\n  const videoTrackStats = useHMSStatsStore(\n    selectHMSStats.trackStatsByID(videoTrackID)\n  );\n  const prevVideoTrackStats = usePrevious(videoTrackStats);\n  const prevAudioTrackStats = usePrevious(audioTrackStats);\n\n  const prevJitterBufferDelayMs = useRef<number>(0);\n\n  if (\n    isLocal ||\n    (videoTrackID && !videoTrackStats) ||\n    (audioTrackID && !audioTrackStats)\n  ) {\n    return;\n  }\n\n  const resolutionNorm =\n    ((videoTrackStats?.frameWidth || 0) * (videoTrackStats?.frameHeight || 0)) /\n    EXPECTED_RESOLUTION;\n\n  const framesDecodedInLastSec =\n    videoTrackStats?.framesDecoded && prevVideoTrackStats?.framesDecoded\n      ? videoTrackStats.framesDecoded - prevVideoTrackStats.framesDecoded\n      : 0;\n  let freezeDurationNorm =\n    1 -\n    ((videoTrackStats?.totalFreezesDuration || 0) -\n      (prevVideoTrackStats?.totalFreezesDuration || 0));\n  freezeDurationNorm = freezeDurationNorm < 0 ? 0.5 : freezeDurationNorm;\n  freezeDurationNorm = framesDecodedInLastSec === 0 ? 0 : freezeDurationNorm;\n\n  const fpsNorm = framesDecodedInLastSec / 30;\n\n  const prevJBDelay = prevVideoTrackStats?.jitterBufferDelay || 0;\n  const prevJBEmittedCount = prevVideoTrackStats?.jitterBufferEmittedCount || 0;\n  const currentJBDelay =\n    (videoTrackStats?.jitterBufferDelay || 0) - prevJBDelay;\n  const currentJBEmittedCount =\n    (videoTrackStats?.jitterBufferEmittedCount || 0) - prevJBEmittedCount;\n\n  const jitterBufferDelayMs =\n    currentJBEmittedCount > 0\n      ? (currentJBDelay * 1000) / currentJBEmittedCount\n      : prevJitterBufferDelayMs.current;\n  prevJitterBufferDelayMs.current = jitterBufferDelayMs;\n  const delayNorm = 1 - Math.min(1, jitterBufferDelayMs / 2000);\n\n  const prevConcealedSamples =\n    (prevAudioTrackStats?.concealedSamples || 0) -\n    (prevAudioTrackStats?.silentConcealedSamples || 0);\n  const currentConcealedSamples =\n    (audioTrackStats?.concealedSamples || 0) -\n    (audioTrackStats?.silentConcealedSamples || 0) -\n    prevConcealedSamples;\n\n  const audioConcealedNorm = 1 - currentConcealedSamples / 48000;\n\n  return (\n    5 *\n    clip(freezeDurationNorm, 0, 1) ** 3 *\n    clip(resolutionNorm, 0, 1) ** 0.3 *\n    clip(fpsNorm, 0, 1) ** 0.2 *\n    clip(delayNorm, 0, 1) ** 0.5 *\n    clip(audioConcealedNorm, 0, 1) ** 2\n  ).toFixed(2);\n};\n", "import React, { Fragment } from \"react\";\nimport {\n  HMSPeerID,\n  HMSTrackID,\n  HMSTrackStats,\n  RID,\n  selectConnectionQualityByPeerID,\n  selectHMSStats,\n  simulcastMapping,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"../Tooltip\";\nimport { formatBytes } from \"./formatBytes\";\nimport { Stats } from \"./StyledStats\";\nimport { useQoE } from \"./useQoE\";\n\nexport interface VideoTileStatsProps {\n  videoTrackID?: HMSTrackID;\n  audioTrackID?: HMSTrackID;\n  peerID?: HMSPeerID;\n  isLocal: boolean;\n}\n\n/**\n * This component can be used to overlay webrtc stats over the Video Tile. For the local tracks it also includes\n * remote inbound stats as sent by the SFU in receiver report.\n */\nexport function VideoTileStats({\n  videoTrackID,\n  audioTrackID,\n  peerID,\n  isLocal = false,\n}: VideoTileStatsProps) {\n  const audioSelector = isLocal\n    ? selectHMSStats.localAudioTrackStatsByID\n    : selectHMSStats.trackStatsByID;\n  const audioTrackStats = useHMSStatsStore(audioSelector(audioTrackID));\n  const localVideoTrackStats = useHMSStatsStore(\n    selectHMSStats.localVideoTrackStatsByID(videoTrackID)\n  );\n  const remoteVideoTrackStats = useHMSStatsStore(\n    selectHMSStats.trackStatsByID(videoTrackID)\n  );\n  const videoTrackStats = isLocal\n    ? localVideoTrackStats?.[0]\n    : remoteVideoTrackStats;\n  const downlinkScore = useHMSStore(\n    selectConnectionQualityByPeerID(peerID)\n  )?.downlinkQuality;\n  const availableOutgoingBitrate = useHMSStatsStore(\n    selectHMSStats.availablePublishBitrate\n  );\n  const qoe = useQoE({ videoTrackID, audioTrackID, isLocal });\n\n  // Viewer role - no stats to show\n  if (!(audioTrackStats || videoTrackStats)) {\n    return null;\n  }\n  return (\n    <Stats.Root>\n      <table>\n        <tbody>\n          {isLocal ? (\n            <Fragment>\n              <StatsRow\n                show={isNotNullishAndNot0(availableOutgoingBitrate)}\n                label=\"AOBR\"\n                tooltip=\"Available Outgoing Bitrate\"\n                value={formatBytes(availableOutgoingBitrate, \"b/s\")}\n              />\n              {localVideoTrackStats?.map((stat) => {\n                if (!stat) {\n                  return null;\n                }\n                const layer = stat.rid ? simulcastMapping[stat.rid as RID] : \"\";\n                return (\n                  <Fragment key={`${stat.id}${stat.rid}`}>\n                    {layer && <StatsRow label={layer.toUpperCase()} value=\"\" />}\n                    <StatsRow\n                      show={isNotNullishAndNot0(stat.frameWidth)}\n                      label=\"Width\"\n                      value={stat.frameWidth?.toString()}\n                    />\n                    <StatsRow\n                      show={isNotNullishAndNot0(stat.frameHeight)}\n                      label=\"Height\"\n                      value={stat.frameHeight?.toString()}\n                    />\n                    <StatsRow\n                      show={isNotNullishAndNot0(stat.framesPerSecond)}\n                      label=\"FPS\"\n                      value={`${stat.framesPerSecond} ${\n                        isNotNullishAndNot0(stat.framesDropped)\n                          ? `(${stat.framesDropped} dropped)`\n                          : \"\"\n                      }`}\n                    />\n                    <StatsRow\n                      show={isNotNullish(stat.bitrate)}\n                      label=\"Bitrate(V)\"\n                      value={formatBytes(stat.bitrate, \"b/s\")}\n                    />\n                    <Stats.Gap />\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <StatsRow show={isNotNullish(qoe)} label=\"QoE\" value={qoe} />\n              <StatsRow\n                show={isNotNullishAndNot0(videoTrackStats?.frameWidth)}\n                label=\"Width\"\n                value={videoTrackStats?.frameWidth?.toString()}\n              />\n              <StatsRow\n                show={isNotNullishAndNot0(videoTrackStats?.frameHeight)}\n                label=\"Height\"\n                value={videoTrackStats?.frameHeight?.toString()}\n              />\n              <StatsRow\n                show={isNotNullishAndNot0(videoTrackStats?.framesPerSecond)}\n                label=\"FPS\"\n                value={`${videoTrackStats?.framesPerSecond} ${\n                  isNotNullishAndNot0(videoTrackStats?.framesDropped)\n                    ? `(${videoTrackStats?.framesDropped} dropped)`\n                    : \"\"\n                }`}\n              />\n              <StatsRow\n                show={isNotNullish(videoTrackStats?.totalPausesDuration)}\n                label=\"Pauses Duration\"\n                value={videoTrackStats?.totalPausesDuration}\n              />\n              <StatsRow\n                show={isNotNullish(videoTrackStats?.totalFreezesDuration)}\n                label=\"Freezes Duration\"\n                value={videoTrackStats?.totalFreezesDuration}\n              />\n              <StatsRow\n                show={isNotNullish(videoTrackStats?.bitrate)}\n                label=\"Bitrate(V)\"\n                value={formatBytes(videoTrackStats?.bitrate, \"b/s\")}\n              />\n            </Fragment>\n          )}\n\n          <StatsRow\n            show={isNotNullish(audioTrackStats?.bitrate)}\n            label=\"Bitrate(A)\"\n            value={formatBytes(audioTrackStats?.bitrate, \"b/s\")}\n          />\n\n          <StatsRow\n            show={isNotNullish(downlinkScore)}\n            label=\"CQS\"\n            value={downlinkScore}\n          />\n\n          <StatsRow\n            show={isNotNullish(videoTrackStats?.codec)}\n            label=\"Codec(V)\"\n            value={videoTrackStats?.codec}\n          />\n\n          <StatsRow\n            show={isNotNullish(audioTrackStats?.codec)}\n            label=\"Codec(A)\"\n            value={audioTrackStats?.codec}\n          />\n\n          <PacketLostAndJitter\n            audioTrackStats={audioTrackStats}\n            videoTrackStats={videoTrackStats}\n          />\n        </tbody>\n      </table>\n    </Stats.Root>\n  );\n}\n\nconst PacketLostAndJitter = ({\n  audioTrackStats,\n  videoTrackStats,\n}: {\n  audioTrackStats?: HMSTrackStats;\n  videoTrackStats?: HMSTrackStats;\n}) => {\n  // for local peer, we'll use the remote inbound stats to get packet loss and jitter, to know whether the track is\n  // local we check if the stats type has outbound in it as it's being published from local. Both audio and video\n  // tracks are checked in case the user has permission to publish only one of them.\n  const isLocalPeer =\n    audioTrackStats?.type.includes(\"outbound\") ||\n    videoTrackStats?.type.includes(\"outbound\");\n  const audioStats = isLocalPeer ? audioTrackStats?.remote : audioTrackStats;\n  const videoStats = isLocalPeer ? videoTrackStats?.remote : videoTrackStats;\n  return (\n    <>\n      <TrackPacketsLostRow label=\"Packet Loss(V)\" stats={videoStats} />\n      <TrackPacketsLostRow label=\"Packet Loss(A)\" stats={audioStats} />\n      <StatsRow\n        show={isNotNullish(videoStats?.jitter)}\n        label=\"Jitter(V)\"\n        value={videoStats?.jitter?.toFixed(4)}\n      />\n      <StatsRow\n        show={isNotNullish(audioStats?.jitter)}\n        label=\"Jitter(A)\"\n        value={audioStats?.jitter?.toFixed(4)}\n      />\n    </>\n  );\n};\n\nconst TrackPacketsLostRow = ({\n  stats,\n  label,\n}: {\n  stats?: Pick<HMSTrackStats, \"packetsLost\" | \"packetsLostRate\">;\n  label: string;\n}) => {\n  const packetsLostRate = `${\n    stats?.packetsLostRate ? stats.packetsLostRate.toFixed(2) : 0\n  }/s`;\n\n  return (\n    <StatsRow\n      show={isNotNullishAndNot0(stats?.packetsLost)}\n      label={label}\n      value={`${stats?.packetsLost}(${packetsLostRate})`}\n    />\n  );\n};\n\nconst RawStatsRow = ({\n  label = \"\",\n  value = \"\",\n  tooltip = \"\",\n  show = true,\n}: {\n  label: string;\n  value?: string | number;\n  show?: boolean;\n  tooltip?: string;\n}) => {\n  const statsLabel = <Stats.Label>{label}</Stats.Label>;\n\n  return (\n    <>\n      {show ? (\n        <Stats.Row>\n          {tooltip ? (\n            <Tooltip side=\"top\" title={tooltip}>\n              {statsLabel}\n            </Tooltip>\n          ) : (\n            statsLabel\n          )}\n          {value === \"\" ? <Stats.Value /> : <Stats.Value>{value}</Stats.Value>}\n        </Stats.Row>\n      ) : null}\n    </>\n  );\n};\n\n// memoize so only the rows which change rerender\nconst StatsRow = React.memo(RawStatsRow);\n\nexport function isNotNullishAndNot0(value: number | undefined | null) {\n  return isNotNullish(value) && value !== 0;\n}\n\n/**\n * Check only for presence(not truthy) of a value.\n * Use in places where 0, false need to be considered valid.\n */\nexport function isNotNullish(value: number | string | undefined | null) {\n  return value !== undefined && value !== null;\n}\n", "export { VideoTileStats } from \"./Stats\";\nexport { formatBytes } from \"./formatBytes\";\n", "import * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { styled } from \"../Theme\";\n\nconst CheckboxRoot = styled(CheckboxPrimitive.Root, {\n  all: \"unset\",\n  border: \"1px solid $primary_default\",\n  backgroundColor: \"$on_primary_high\",\n  width: \"$8\",\n  height: \"$8\",\n  borderRadius: \"$0\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  boxShadow: \"none\",\n  outline: \"none\",\n  cursor: \"pointer\",\n  \"&:focus\": {\n    boxShadow: \"none\",\n    outline: \"none\",\n  },\n  '&[data-state=\"checked\"]': {\n    backgroundColor: \"$primary_default\",\n  },\n});\n\nconst CheckboxIndicator = styled(CheckboxPrimitive.Indicator, {\n  color: \"$on_primary_high\",\n});\n\nexport const Checkbox = {\n  Root: CheckboxRoot,\n  Indicator: CheckboxIndicator,\n};\n", "export * from \"./Checkbox\";\n", "import * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { styled } from \"../Theme\";\n\nexport const Label = styled(LabelPrimitive.Root, {\n  fontFamily: \"$sans\",\n  fontSize: \"$md\",\n  color: \"$on_primary_high\",\n});\n", "export * from \"./Label\";\n", "import * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { styled } from \"../Theme\";\n\nconst RadioGroupRoot = styled(RadioGroupPrimitive.Root, {\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst RadioGroupItem = styled(RadioGroupPrimitive.Item, {\n  bg: \"$on_primary_high\",\n  width: \"$8\",\n  height: \"$8\",\n  border: \"1px solid $primary_default\",\n  cursor: \"pointer\",\n  borderRadius: \"$round\",\n  \"&:focus\": {\n    boxShadow: \"none\",\n    outline: \"none\",\n  },\n  '&[data-state=\"checked\"]': {\n    borderWidth: \"$space$2\",\n    p: \"$1\",\n  },\n});\nconst RadioGroupIndicator = styled(RadioGroupPrimitive.Indicator, {\n  bg: \"$primary_default\",\n});\n\nexport const RadioGroup = {\n  Root: RadioGroupRoot,\n  Item: RadioGroupItem,\n  Indicator: RadioGroupIndicator,\n};\n", "export * from \"./RadioGroup\";\n", "import React, { ComponentProps } from \"react\";\nimport type { ToastProps } from \"@radix-ui/react-toast\";\nimport * as ToastPrimitives from \"@radix-ui/react-toast\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../IconButton\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { styled } from \"../Theme\";\nimport { toastAnimation } from \"../utils\";\n\nconst getToastVariant = (base: string) => {\n  return {\n    borderLeftColor: base,\n    borderLeft: 0,\n    \"&:before\": {\n      position: \"absolute\",\n      top: \"-1px\",\n      left: \"-$4\",\n      width: \"$8\",\n      borderLeft: `solid $space$px ${base}`,\n      borderTop: `solid $space$px ${base}`,\n      borderBottom: `solid $space$px ${base}`,\n      borderTopLeftRadius: \"$3\",\n      borderBottomLeftRadius: \"$3\",\n      bg: base,\n      content: \" \",\n      height: \"100%\",\n      zIndex: 10,\n    },\n    \"@sm\": {\n      \"&:before\": {\n        content: \"none\",\n      },\n      border: `solid $space$px ${base}`,\n    },\n  };\n};\n\nconst ToastRoot = styled(ToastPrimitives.Root, {\n  r: \"$3\",\n  bg: \"$surface_default\",\n  p: \"$10\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"relative\",\n  fontFamily: \"$sans\",\n  border: \"solid $space$px $border_bright\",\n  overflow: \"hidden\",\n  ...toastAnimation,\n  \"@sm\": {\n    p: \"$8 $11\",\n  },\n  variants: {\n    variant: {\n      standard: getToastVariant(\"$secondary_default\"),\n      warning: getToastVariant(\"$alert_warning\"),\n      error: getToastVariant(\"$alert_error_default\"),\n      success: getToastVariant(\"$alert_success\"),\n    },\n  },\n  defaultVariants: {\n    variant: \"standard\",\n  },\n});\n\nconst ToastTitle = styled(ToastPrimitives.Title, {\n  fontSize: \"$md\",\n  color: \"$on_surface_high\",\n  fontWeight: \"$semiBold\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n});\nconst ToastDescription = styled(ToastPrimitives.Description, {\n  color: \"$on_surface_medium\",\n});\nconst ToastClose = styled(ToastPrimitives.Close, {});\nconst ToastAction = styled(ToastPrimitives.Action, {\n  cursor: \"pointer\",\n  background: \"none\",\n  border: \"none\",\n});\nconst ToastViewport = styled(ToastPrimitives.Viewport, {\n  position: \"fixed\",\n  bottom: 0,\n  left: 0,\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"$8\",\n  gap: 10,\n  width: 390,\n  \"@sm\": {\n    width: \"100%\",\n    padding: \"$6\",\n  },\n  maxWidth: \"100vw\",\n  margin: 0,\n  listStyle: \"none\",\n  zIndex: 1000,\n});\n\nconst DefaultClose = ({\n  css,\n}: Pick<ComponentProps<typeof ToastClose>, \"css\">) => {\n  return (\n    <ToastClose css={css} asChild>\n      <IconButton>\n        <CrossIcon />\n      </IconButton>\n    </ToastClose>\n  );\n};\n\ninterface HMSToastProps extends ToastProps {\n  title: string;\n  description?: string;\n  isClosable?: boolean;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n  inlineAction?: boolean;\n}\n\nconst HMSToast: React.FC<HMSToastProps> = ({\n  title,\n  description,\n  isClosable = true,\n  icon,\n  action,\n  inlineAction = false,\n  ...props\n}) => {\n  return (\n    <>\n      <ToastRoot {...props}>\n        <ToastTitle>\n          <Flex align=\"center\" css={{ gap: \"$4\", flex: \"1 1 0\", minWidth: 0 }}>\n            {icon ? (\n              <Box css={{ w: \"$10\", h: \"$10\", alignSelf: \"start\", mt: \"$2\" }}>\n                {icon}\n              </Box>\n            ) : null}\n            <Text\n              variant=\"sub1\"\n              css={{ c: \"inherit\", wordBreak: \"break-word\" }}\n            >\n              {title}\n            </Text>\n          </Flex>\n          {isClosable ? <DefaultClose /> : null}\n          {!isClosable && inlineAction && action ? (\n            <ToastAction altText={`${title}Action`}>{action}</ToastAction>\n          ) : null}\n        </ToastTitle>\n        {description ? (\n          <ToastDescription>\n            <Text\n              variant=\"body1\"\n              css={{ fontWeight: \"$regular\", c: \"$on_surface_medium\" }}\n            >\n              {description}\n            </Text>\n          </ToastDescription>\n        ) : null}\n        {!inlineAction && action ? (\n          <ToastAction altText={`${title}Action`} css={{ mt: \"$10\" }}>\n            {action}\n          </ToastAction>\n        ) : null}\n      </ToastRoot>\n    </>\n  );\n};\nexport const Toast = {\n  Provider: ToastPrimitives.Provider,\n  Root: ToastRoot,\n  Title: ToastTitle,\n  Description: ToastDescription,\n  Close: DefaultClose,\n  Action: ToastAction,\n  Viewport: ToastViewport,\n  HMSToast: HMSToast,\n};\n", "export * from \"./Toast\";\n", "import React, { PropsWithChildren } from \"react\";\nimport * as BaseAccordion from \"@radix-ui/react-accordion\";\nimport { CSS } from \"@stitches/react\";\nimport { ChevronUpIcon } from \"@100mslive/react-icons\";\nimport { Box } from \"../Layout\";\nimport { styled } from \"../Theme\";\nimport { slideDown, slideUp } from \"../utils\";\n\nconst StyledAccordion = styled(BaseAccordion.Root, {});\n\nconst StyledItem = styled(BaseAccordion.Item, {\n  marginTop: \"$px\",\n  display: \"block\",\n  \"&:first-child\": {\n    marginTop: 0,\n    borderTopLeftRadius: \"$0\",\n    borderTopRightRadius: \"$0\",\n  },\n  \"&:last-child\": {\n    borderBottomLeftRadius: \"$4\",\n    borderBottomRightRadius: \"$4\",\n  },\n});\n\nconst StyledHeader = styled(BaseAccordion.Header, {\n  all: \"unset\",\n  display: \"flex\",\n  fontFamily: \"$sans\",\n});\n\nconst StyledTrigger = styled(BaseAccordion.Trigger, {\n  all: \"unset\",\n  fontFamily: \"$sans\",\n  flex: 1,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  fontSize: \"$md\",\n  lineHeight: \"$md\",\n  color: \"$on_surface_high\",\n});\n\nconst StyledContent = styled(BaseAccordion.Content, {\n  display: \"contents\",\n  fontSize: \"$md\",\n  fontFamily: \"$sans\",\n  color: \"$on_surface_medium\",\n  '&[data-state=\"open\"]': {\n    animation: `${slideDown(\n      \"--radix-accordion-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n  '&[data-state=\"closed\"]': {\n    animation: `${slideUp(\n      \"--radix-accordion-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n});\n\nconst StyledChevron = styled(ChevronUpIcon, {\n  color: \"$on_primary_high\",\n  transition: \"transform 300ms cubic-bezier(0.87, 0, 0.13, 1)\",\n  \"[data-state=closed] &\": { transform: \"rotate(180deg)\" },\n});\n\n// Exports\nexport const AccordionRoot = StyledAccordion;\nexport const AccordionItem = StyledItem;\n\nexport const AccordionHeader: React.FC<\n  PropsWithChildren<\n    BaseAccordion.AccordionTriggerProps & {\n      iconStyles?: CSS;\n      css?: CSS;\n      chevronID?: string;\n    }\n  >\n> = React.forwardRef<\n  HTMLButtonElement,\n  PropsWithChildren<\n    BaseAccordion.AccordionTriggerProps & {\n      iconStyles?: CSS;\n      css?: CSS;\n      chevronID?: string;\n    }\n  >\n>(({ children, iconStyles, css, chevronID, ...props }, forwardedRef) => (\n  <StyledHeader css={css}>\n    <StyledTrigger {...props} ref={forwardedRef}>\n      {children}\n      <StyledChevron data-testid={chevronID} aria-hidden css={iconStyles} />\n    </StyledTrigger>\n  </StyledHeader>\n));\n\nexport const AccordionContent: React.FC<\n  PropsWithChildren<\n    BaseAccordion.AccordionContentProps & { contentStyles?: CSS }\n  >\n> = React.forwardRef<\n  HTMLDivElement,\n  PropsWithChildren<\n    BaseAccordion.AccordionContentProps & { contentStyles?: CSS }\n  >\n>(({ children, contentStyles, ...props }, forwardedRef) => (\n  <StyledContent {...props} ref={forwardedRef}>\n    <Box css={contentStyles}>{children}</Box>\n  </StyledContent>\n));\n", "import {\n  AccordionContent,\n  AccordionHeader,\n  AccordionItem,\n  AccordionRoot,\n} from \"./Accordion\";\n\nexport const Accordion = {\n  Root: AccordionRoot,\n  Item: AccordionItem,\n  Content: AccordionContent,\n  Header: AccordionHeader,\n};\n", "import { styled } from \"../Theme\";\n\nconst StyledFieldset = styled(\"fieldset\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  border: \"none\",\n  backgroundColor: \"transparent\",\n});\n\nexport const Fieldset = StyledFieldset;\n", "export * from \"./Fieldset\";\n", "import { Flex } from \"../Layout\";\nimport { styled } from \"../Theme\";\n\nconst Root = styled(Flex, {\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  py: \"$4\",\n  position: \"relative\",\n  height: \"100%\",\n  \"@md\": { flexWrap: \"wrap\", gap: \"$4\" },\n});\n\nconst Left = styled(Flex, {\n  alignItems: \"center\",\n  position: \"absolute\",\n  left: \"$10\",\n  gap: \"$8\",\n  \"@md\": {\n    position: \"unset\",\n    justifyContent: \"center\",\n    w: \"100%\",\n  },\n});\n\nconst Center = styled(Flex, {\n  w: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"$8\",\n});\n\nconst Right = styled(Flex, {\n  alignItems: \"center\",\n  position: \"absolute\",\n  right: \"$10\",\n  gap: \"$8\",\n  \"@md\": {\n    display: \"none\",\n  },\n});\n\nexport const Footer = {\n  Root,\n  Left,\n  Center,\n  Right,\n};\n", "export { Footer } from \"./Footer\";\n", "import * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { styled } from \"../Theme\";\n\nconst StyledRoot = styled(SelectPrimitive.Root, {});\n\nconst StyledTrigger = styled(SelectPrimitive.SelectTrigger, {\n  all: \"unset\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"$2\",\n  padding: \"$8\",\n  lineHeight: \"$px\",\n  gap: \"$8\",\n  backgroundColor: \"$secondary_default\",\n  color: \"$on_primary_high\",\n  fontSize: \"$8\",\n  cursor: \"pointer\",\n  r: \"$1\",\n});\n\nconst StyledContent = styled(SelectPrimitive.Content, {\n  overflow: \"hidden\",\n  backgroundColor: \"$surface_bright\",\n  r: \"$1\",\n  h: \"$80\",\n});\n\nconst StyledViewport = styled(SelectPrimitive.Viewport, {\n  padding: \"$3\",\n});\n\nconst StyledItem = styled(SelectPrimitive.Item, {\n  all: \"unset\",\n  fontSize: \"$7\",\n  r: \"$1\",\n  display: \"flex\",\n  p: \"$4 $8\",\n  w: \"$52\",\n  position: \"relative\",\n  userSelect: \"none\",\n  cursor: \"pointer\",\n});\n\nconst StyledLabel = styled(SelectPrimitive.Label, {\n  p: \"$4 $8\",\n  lineHeight: \"$10\",\n  color: \"$on_primary_high\",\n});\n\nconst StyledSeparator = styled(SelectPrimitive.Separator, {\n  height: \"$px\",\n  backgroundColor: \"$on_primary_high\",\n  margin: \"$4\",\n  opacity: 0.4,\n});\n\nconst StyledItemIndicator = styled(SelectPrimitive.ItemIndicator, {\n  position: \"absolute\",\n  right: \"$8\",\n  width: \"$8\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"$on_primary_high\",\n});\n\nconst scrollButtonStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  p: \"$4\",\n  backgroundColor: \"$surface_bright\",\n  color: \"$on_primary_high\",\n  cursor: \"default\",\n};\n\nconst StyledScrollUpButton = styled(\n  SelectPrimitive.ScrollUpButton,\n  scrollButtonStyles\n);\n\nconst StyledScrollDownButton = styled(\n  SelectPrimitive.ScrollDownButton,\n  scrollButtonStyles\n);\n\nexport const Select = {\n  Root: StyledRoot,\n  Trigger: StyledTrigger,\n  Content: StyledContent,\n  Viewport: StyledViewport,\n  Item: StyledItem,\n  Label: StyledLabel,\n  Separator: StyledSeparator,\n  ItemIndicator: StyledItemIndicator,\n  ScrollUpButton: StyledScrollUpButton,\n  ScrollDownButton: StyledScrollDownButton,\n  Value: SelectPrimitive.Value,\n  Icon: SelectPrimitive.Icon,\n  ItemText: SelectPrimitive.ItemText,\n  Group: SelectPrimitive.Group,\n};\n", "export { Select } from \"./ReactSelect\";\n", "import * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { styled } from \"../Theme\";\n\nconst StyledTabsRoot = styled(TabsPrimitive.Root, {\n  display: \"flex\",\n});\n\nconst StyledList = styled(TabsPrimitive.List, {\n  flexShrink: 0,\n  display: \"flex\",\n});\n\nconst StyledTrigger = styled(TabsPrimitive.Trigger, {\n  all: \"unset\",\n  fontFamily: \"$sans\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  fontSize: \"$sm\",\n  lineHeight: \"$sm\",\n  color: \"$on_surface_high\",\n  userSelect: \"none\",\n  cursor: \"pointer\",\n  '&[data-state=\"active\"]': {\n    bg: \"$surface_brighter\",\n    r: \"$1\",\n  },\n});\n\nconst StyledContent = styled(TabsPrimitive.Content, {\n  flex: \"1 1 0\",\n  padding: \"$10\",\n  outline: \"none\",\n});\n\nexport const Tabs = {\n  Root: StyledTabsRoot,\n  List: StyledList,\n  Content: StyledContent,\n  Trigger: StyledTrigger,\n};\n", "export * from \"./Tabs\";\n", "import React, { ComponentProps } from \"react\";\nimport { QRCodeSVG } from \"qrcode.react\";\n\nexport const QRCode = (props: ComponentProps<typeof QRCodeSVG>) => {\n  return <QRCodeSVG style={{ width: \"100%\", height: \"100%\" }} {...props} />;\n};\n", "export * from \"./QRCode\";\n", "import React from \"react\";\nimport * as icons from \"@100mslive/react-icons\";\nimport { Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { styled } from \"../Theme\";\n\nconst LinkComponent = styled(\"a\", {\n  textDecoration: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"$5\",\n  variants: {\n    color: {\n      highEmp: {\n        color: \"$on_surface_high\",\n        \"&:hover\": {\n          color: \"$on_surface_medium\",\n        },\n      },\n      primary: {\n        color: \"$primary_default\",\n        \"&:hover\": {\n          color: \"$primary_bright\",\n        },\n      },\n    },\n  },\n});\n\nexport interface LinkProps extends React.ComponentProps<typeof LinkComponent> {\n  as?: React.ElementType;\n  iconSide?: \"left\" | \"right\" | \"none\";\n  icon?: keyof typeof icons;\n  color?: \"highEmp\" | \"primary\";\n}\n\nexport const Link = ({\n  iconSide = \"left\",\n  icon,\n  color = \"primary\",\n  children,\n  ...rest\n}: LinkProps) => {\n  const Icon = icon ? icons[icon] : React.Fragment;\n  const renderedIcon = icon ? (\n    <Flex as=\"span\">\n      <Icon height={13.33} width={13.33} />{\" \"}\n    </Flex>\n  ) : null;\n\n  return (\n    <LinkComponent {...rest} color={color}>\n      {iconSide === \"left\" && renderedIcon}\n      <Text as=\"span\" variant=\"body2\" css={{ color: \"inherit\" }}>\n        {children}\n      </Text>\n      {iconSide === \"right\" && renderedIcon}\n    </LinkComponent>\n  );\n};\n", "export { Link } from \"./Link\";\nexport type { LinkProps } from \"./Link\";\n", "import { Content, Root, Trigger } from \"@radix-ui/react-collapsible\";\nimport { styled } from \"../Theme\";\nimport { slideDown, slideUp } from \"../utils\";\n\nconst CollapsibleRoot = styled(Root, {});\n\nconst CollapsibleTrigger = styled(Trigger, {\n  cursor: \"pointer\",\n  appearance: \"none !important\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n});\n\nconst CollapsibleContent = styled(Content, {\n  w: \"$80\",\n  r: \"$1\",\n  overflowY: \"auto\",\n  '&[data-state=\"open\"]': {\n    animation: `${slideDown(\n      \"--radix-collapsible-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n  '&[data-state=\"closed\"]': {\n    animation: `${slideUp(\n      \"--radix-collapsible-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n});\n\nexport const Collapsible = {\n  Root: CollapsibleRoot,\n  Trigger: CollapsibleTrigger,\n  Content: CollapsibleContent,\n};\n", "export * from \"./Collapsible\";\n", "import React from \"react\";\nimport { Label } from \"../../../Label\";\nimport { Flex } from \"../../../Layout\";\nimport { Switch } from \"../../../Switch\";\n\nconst SwitchWithLabel = ({\n  label,\n  icon,\n  id,\n  onChange,\n  checked,\n  hide = false,\n}: {\n  label: string;\n  icon?: React.ReactNode;\n  id: string;\n  onChange: (value: boolean) => void;\n  checked: boolean;\n  hide?: boolean;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        my: \"$2\",\n        py: \"$8\",\n        w: \"100%\",\n        borderBottom: \"1px solid $border_default\",\n        display: hide ? \"none\" : \"flex\",\n      }}\n    >\n      <Label\n        htmlFor={id}\n        css={{\n          fontSize: \"$md\",\n          fontWeight: \"$semiBold\",\n          color: checked ? \"$on_surface_high\" : \"$on_surface_low\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"$8\",\n          flex: \"1 1 0\",\n        }}\n      >\n        {icon}\n        {label}\n      </Label>\n      <Switch id={id} checked={checked} onCheckedChange={onChange} />\n    </Flex>\n  );\n};\n\nexport default SwitchWithLabel;\n", "import { useState } from \"react\";\nimport { useLocalStorage } from \"react-use\";\n\nexport const UserPreferencesKeys = {\n  PREVIEW: \"preview\",\n  NOTIFICATIONS: \"notifications\",\n  UI_SETTINGS: \"uiSettings\",\n  RTMP_URLS: \"rtmpUrls\",\n  USER_ID: \"userId\",\n};\n\nexport const defaultPreviewPreference = {\n  name: \"\",\n  isAudioMuted: false,\n  isVideoMuted: false,\n};\n\nexport const useUserPreferences = (key, defaultPreference) => {\n  const [localStorageValue, setStorageValue] = useLocalStorage(\n    key,\n    defaultPreference\n  );\n  const [preference, setPreference] = useState(\n    localStorageValue || defaultPreference\n  );\n  const changePreference = (value) => {\n    setPreference(value);\n    setStorageValue(value);\n  };\n  return [preference, changePreference];\n};\n", "import { useCallback, useMemo } from \"react\";\nimport {\n  selectAppData,\n  selectAppDataByPath,\n  selectAudioTrackByPeerID,\n  selectPermissions,\n  selectPolls,\n  selectSessionStore,\n  selectTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\nimport {\n  APP_DATA,\n  POLL_STATE,\n  SESSION_STORE_KEY,\n  UI_SETTINGS,\n} from \"../../common/constants\";\n\n/**\n * fields saved related to UI settings in store's app data can be\n * accessed using this hook. key is optional if not passed\n * the whole UI settings object is returned. Usage -\n * 1. val = useUiSettings(\"isAudioOnly\");\n *    console.log(val); // false\n * 2. val = useUISettings();\n *    console.log(val); // {isAudioOnly: false}\n * @param {string | undefined} uiSettingKey\n */\nexport const useUISettings = (uiSettingKey) => {\n  const uiSettings = useHMSStore(\n    selectAppDataByPath(APP_DATA.uiSettings, uiSettingKey)\n  );\n  return uiSettings;\n};\n\n/**\n * fields saved related to UI settings in store's app data can be\n * accessed using this hook. key is optional if not passed\n * the whole UI settings object is returned. Usage -\n * [val, setVal] = useUiSettings(\"isAudioOnly\");\n * console.log(val); // false\n * setVal(true);\n * @param {string} uiSettingKey\n */\nexport const useSetUiSettings = (uiSettingKey) => {\n  const value = useUISettings(uiSettingKey);\n  const setValue = useSetAppData({\n    key1: APP_DATA.uiSettings,\n    key2: uiSettingKey,\n  });\n  return [value, setValue];\n};\n\nexport const useIsHLSStartedFromUI = () => {\n  return useHMSStore(selectAppData(APP_DATA.hlsStarted));\n};\n\nexport const useIsRTMPStartedFromUI = () => {\n  return useHMSStore(selectAppData(APP_DATA.rtmpStarted));\n};\n\nexport const useAuthToken = () => {\n  return useHMSStore(selectAppData(APP_DATA.authToken));\n};\n\nexport const useUrlToEmbed = () => {\n  return useHMSStore(selectAppData(APP_DATA.embedConfig))?.url;\n};\n\nexport const usePDFConfig = () => {\n  return useHMSStore(selectAppData(APP_DATA.pdfConfig));\n};\n\nexport const useResetPDFConfig = () => {\n  const [, setPDFConfig] = useSetAppDataByKey(APP_DATA.pdfConfig);\n  return useCallback(() => setPDFConfig(), [setPDFConfig]);\n};\n\nexport const useResetEmbedConfig = () => {\n  const [, setEmbedConfig] = useSetAppDataByKey(APP_DATA.embedConfig);\n  return () => setEmbedConfig();\n};\nexport const usePinnedTrack = () => {\n  const pinnedTrackId = useHMSStore(selectAppData(APP_DATA.pinnedTrackId));\n  const spotlightPeerId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const spotlightVideoTrackId = useHMSStore(\n    selectVideoTrackByPeerID(spotlightPeerId)\n  )?.id;\n  const spotlightAudioTrackId = useHMSStore(\n    selectAudioTrackByPeerID(spotlightPeerId)\n  )?.id;\n  return useHMSStore(\n    selectTrackByID(\n      pinnedTrackId || spotlightVideoTrackId || spotlightAudioTrackId\n    )\n  );\n};\n\nexport const useSubscribedNotifications = (notificationKey) => {\n  const notificationPreference = useHMSStore(\n    selectAppDataByPath(APP_DATA.subscribedNotifications, notificationKey)\n  );\n  return notificationPreference;\n};\n\nexport const useIsNotificationDisabled = () => {\n  const notificationPreference = useHMSStore(\n    selectAppDataByPath(APP_DATA.disableNotifications)\n  );\n  return notificationPreference;\n};\n\nexport const useSetSubscribedNotifications = (notificationKey) => {\n  const value = useSubscribedNotifications(notificationKey);\n  const setValue = useSetAppData({\n    key1: APP_DATA.subscribedNotifications,\n    key2: notificationKey,\n  });\n  return [value, setValue];\n};\n\nexport const useIsCaptionEnabled = () => {\n  const isCaptionEnabled = useHMSStore(selectAppDataByPath(APP_DATA.caption));\n  return isCaptionEnabled;\n};\n\nexport const useSetIsCaptionEnabled = () => {\n  const [value, setValue] = useSetAppDataByKey(APP_DATA.caption);\n  return [value, setValue];\n};\n\nexport const useSubscribeChatSelector = (chatSelectorKey) => {\n  const chatSelectorPreference = useHMSStore(\n    selectAppDataByPath(APP_DATA.chatSelector, chatSelectorKey)\n  );\n  return chatSelectorPreference;\n};\n\nexport const useSetSubscribedChatSelector = (chatSelectorKey) => {\n  const value = useSubscribeChatSelector(chatSelectorKey);\n  const setValue = useSetAppData({\n    key1: APP_DATA.chatSelector,\n    key2: chatSelectorKey,\n  });\n  return [value, setValue];\n};\n\nexport const useSetAppDataByKey = (appDataKey) => {\n  const value = useHMSStore(selectAppData(appDataKey));\n  const actions = useHMSActions();\n  const setValue = useCallback(\n    (value) => {\n      actions.setAppData(appDataKey, value);\n    },\n    [actions, appDataKey]\n  );\n  return [value, setValue];\n};\n\nconst useSetAppData = ({ key1, key2 }) => {\n  const actions = useHMSActions();\n  const store = useHMSVanillaStore();\n  const [, setPreferences] = useUserPreferences(\n    UserPreferencesKeys.UI_SETTINGS\n  );\n  const setValue = useCallback(\n    (value) => {\n      if (!key1) {\n        return;\n      }\n      actions.setAppData(\n        key1,\n        key2\n          ? {\n              [key2]: value,\n            }\n          : value,\n        true\n      );\n      const appData = store.getState(selectAppData());\n      setPreferences({\n        ...appData.uiSettings,\n        [UI_SETTINGS.isAudioOnly]: undefined,\n        subscribedNotifications: appData.subscribedNotifications,\n      });\n    },\n    [actions, key1, key2, store, setPreferences]\n  );\n  return setValue;\n};\n\nexport const useShowPolls = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const polls = useHMSStore(selectPolls);\n\n  const showPolls = useMemo(() => {\n    return (\n      permissions?.pollWrite || (permissions?.pollRead && polls?.length > 0)\n    );\n  }, [permissions?.pollRead, permissions?.pollWrite, polls?.length]);\n\n  return { showPolls };\n};\n\nexport const usePollViewState = () => {\n  const [pollState, setPollState] = useSetAppDataByKey(APP_DATA.pollState);\n\n  const setPollView = useCallback(\n    (view) => {\n      setPollState({\n        [POLL_STATE.pollInView]: pollState?.pollInView,\n        [POLL_STATE.view]: view,\n      });\n    },\n    [pollState?.pollInView, setPollState]\n  );\n\n  return {\n    setPollState,\n    setPollView,\n    pollInView: pollState?.pollInView,\n    view: pollState?.view,\n  };\n};\n\nexport const useIsNoiseCancellationEnabled = () => {\n  const isNoiseCancellationEnabled = useHMSStore(\n    selectAppDataByPath(APP_DATA.noiseCancellation)\n  );\n  return isNoiseCancellationEnabled;\n};\nexport const useSetNoiseCancellation = () => {\n  const [isNoiseCancellationEnabled, setNoiseCancellationEnabled] =\n    useSetAppDataByKey(APP_DATA.noiseCancellation);\n  return [isNoiseCancellationEnabled, setNoiseCancellationEnabled];\n};\n", "import { css } from \"../../..\";\n\nexport const settingOverflow = css({\n  flex: \"1 1 0\",\n  pr: \"$12\",\n  mr: \"-$12\",\n  overflowY: \"auto\",\n});\n\nexport const settingContent = css({\n  display: \"flex\",\n  flexDirection: \"column\",\n  \"&[hidden]\": {\n    display: \"none\",\n  },\n});\n", "import React, { useCallback } from \"react\";\nimport {\n  selectIsLocalScreenShared,\n  selectIsLocalVideoEnabled,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  GalleryIcon,\n  PersonRectangleIcon,\n  SidebarIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex, Slider, Text } from \"../../..\";\nimport SwitchWithLabel from \"./SwitchWithLabel\";\n// @ts-ignore: No implicit Any\nimport { useSetUiSettings } from \"../AppData/useUISettings\";\nimport { settingOverflow } from \"./common\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport const LayoutMode = {\n  SIDEBAR: \"Sidebar\",\n  GALLERY: \"Gallery\",\n  SPOTLIGHT: \"Spotlight\",\n};\n\nexport type LayoutModeKeys = keyof typeof LayoutMode;\n\nexport const LayoutModeIconMapping = {\n  [LayoutMode.GALLERY]: <GalleryIcon />,\n  [LayoutMode.SIDEBAR]: <SidebarIcon />,\n  [LayoutMode.SPOTLIGHT]: <PersonRectangleIcon />,\n};\n\nexport const LayoutSettings = () => {\n  const hmsActions = useHMSActions();\n  const isLocalVideoEnabled = useHMSStore(selectIsLocalVideoEnabled);\n  const isLocalScreenShared = useHMSStore(selectIsLocalScreenShared);\n  const [{ isAudioOnly, maxTileCount, mirrorLocalVideo }, setUISettings] =\n    useSetUiSettings();\n  const toggleIsAudioOnly = useCallback(\n    async (isAudioOnlyModeOn?: boolean) => {\n      if (isAudioOnlyModeOn) {\n        // turn off video and screen share if user switches to audio only mode\n        isLocalVideoEnabled && (await hmsActions.setLocalVideoEnabled(false));\n        isLocalScreenShared && (await hmsActions.setScreenShareEnabled(false));\n      }\n      setUISettings({ [UI_SETTINGS.isAudioOnly]: isAudioOnlyModeOn });\n    },\n    [hmsActions, isLocalVideoEnabled, isLocalScreenShared, setUISettings]\n  );\n\n  return (\n    <Box className={settingOverflow()}>\n      <Flex\n        align=\"center\"\n        css={{ w: \"100%\", my: \"$2\", py: \"$8\", \"@md\": { display: \"none\" } }}\n      >\n        <Text variant=\"md\" css={{ fontWeight: \"$semiBold\" }}>\n          Tiles In View({maxTileCount})\n        </Text>\n        <Flex justify=\"end\" css={{ flex: \"1 1 0\" }}>\n          <Slider\n            step={1}\n            value={[maxTileCount]}\n            min={1}\n            max={49}\n            onValueChange={(e) => {\n              setUISettings({ [UI_SETTINGS.maxTileCount]: e[0] });\n            }}\n            css={{ w: \"70%\" }}\n          />\n        </Flex>\n      </Flex>\n      <SwitchWithLabel\n        label=\"Audio Only Mode\"\n        id=\"audioOnlyMode\"\n        checked={isAudioOnly}\n        onChange={toggleIsAudioOnly}\n      />\n      <SwitchWithLabel\n        label=\"Mirror Local Video\"\n        id=\"mirrorMode\"\n        checked={mirrorLocalVideo}\n        onChange={(value) => {\n          setUISettings({\n            [UI_SETTINGS.mirrorLocalVideo]: value,\n          });\n        }}\n      />\n    </Box>\n  );\n};\n", "import type { Layout } from \"@100mslive/types-prebuilt\";\nimport { JoinForm_JoinBtnType } from \"@100mslive/types-prebuilt/elements/join_form\";\n\nexport const defaultLayout: Layout = {\n  id: \"\",\n  role_id: \"\",\n  template_id: \"\",\n  app_id: \"\",\n  typography: {\n    font_family: \"Inter\",\n  },\n  themes: [],\n  options: {},\n  screens: {\n    preview: {\n      default: {\n        elements: {\n          preview_header: {\n            title: \"Get Started\",\n            sub_title: \"Setup your audio and video before joining\",\n          },\n          join_form: {\n            join_btn_type: JoinForm_JoinBtnType.JOIN_BTN_TYPE_JOIN_ONLY,\n            join_btn_label: \"Join Now\",\n            go_live_btn_label: \"Go Live\",\n          },\n        },\n      },\n    },\n    conferencing: {\n      default: {\n        elements: {\n          chat: {\n            public_chat_enabled: true,\n            private_chat_enabled: true,\n            chat_title: \"Chat\",\n            allow_pinning_messages: true,\n            message_placeholder: \"Send a message...\",\n            roles_whitelist: [],\n            real_time_controls: {\n              can_disable_chat: true,\n              can_block_user: true,\n              can_hide_message: true,\n            },\n          },\n          participant_list: {},\n          video_tile_layout: {\n            grid: {\n              enable_local_tile_inset: true,\n              prominent_roles: [],\n              enable_spotlighting_peer: true,\n            },\n          },\n          emoji_reactions: {},\n        },\n      },\n    },\n    leave: {},\n  },\n};\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\nimport type { GetResponse, Layout } from \"@100mslive/types-prebuilt\";\nimport { defaultLayout } from \"../constants\";\n\n// TODO: remove this usage\nconst fetchWithRetry = async (url = \"\", options = {}) => {\n  const MAX_RETRIES = 4;\n  let error = Error(\"something went wrong\");\n  for (let i = 0; i < MAX_RETRIES; i++) {\n    try {\n      return await fetch(url, options);\n    } catch (err) {\n      error = err as Error;\n    }\n  }\n  console.error(\"Fetch failed after max retries\", { url, options });\n  throw error;\n};\n\n// this should take endpoint and return\nexport type useFetchRoomLayoutProps = {\n  endpoint?: string;\n  authToken: string;\n};\n\nexport type useFetchRoomLayoutResponse = {\n  layout: Layout | undefined;\n  updateRoomLayoutForRole: (role: string) => void;\n  setOriginalLayout: () => void;\n};\n\nexport const useFetchRoomLayout = ({\n  endpoint = \"\",\n  authToken = \"\",\n}: useFetchRoomLayoutProps): useFetchRoomLayoutResponse => {\n  const [layout, setLayout] = useState<Layout | undefined>(undefined);\n  const layoutResp = useRef<GetResponse>();\n  const originalLayout = useRef<Layout>();\n  const isFetchInProgress = useRef(false);\n\n  const setOriginalLayout = useCallback(\n    () => setLayout(originalLayout.current),\n    []\n  );\n\n  const updateRoomLayoutForRole = useCallback((role: string) => {\n    if (!layoutResp.current) {\n      return;\n    }\n    const [layout] = (layoutResp.current?.data || []).filter(\n      (layout) => layout.role === role\n    );\n    if (layout) {\n      setLayout(layout);\n    }\n  }, []);\n  useEffect(() => {\n    (async () => {\n      if (isFetchInProgress.current || !authToken) {\n        return;\n      }\n      isFetchInProgress.current = true;\n      try {\n        const resp = await fetchWithRetry(\n          endpoint || \"https://api.100ms.live/v2/layouts/ui\",\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        layoutResp.current = await resp.json();\n      } catch (e) {\n        console.error(\n          \"[Room Layout API]: Failed to fetch / process room layout. Resorting to default layout.\",\n          e\n        );\n        layoutResp.current = {\n          data: [defaultLayout],\n        };\n      }\n      let layoutForRole = layoutResp.current?.data?.[0];\n      if (!layoutForRole) {\n        console.error(\n          \"[Room Layout API]: Unable to figure out room layout from API response. Resorting to default layout.\"\n        );\n        layoutForRole = defaultLayout;\n      }\n      const layout = layoutForRole;\n      if (!originalLayout.current) {\n        originalLayout.current = layout;\n      }\n      setLayout(layout);\n      isFetchInProgress.current = false;\n    })();\n  }, [authToken, endpoint]);\n\n  return { layout, updateRoomLayoutForRole, setOriginalLayout };\n};\n", "import React from \"react\";\nimport type { Layout } from \"@100mslive/types-prebuilt\";\nimport { isArray, mergeWith } from \"lodash\";\n// @ts-ignore: fix types\nimport { useAuthToken } from \"../../components/AppData/useUISettings\";\nimport {\n  useFetchRoomLayout,\n  useFetchRoomLayoutResponse,\n} from \"./hooks/useFetchRoomLayout\";\n\nexport type RoomLayoutProviderProps = {\n  roomLayoutEndpoint?: string;\n  overrideLayout?: Partial<Layout>;\n};\n\nexport const RoomLayoutContext = React.createContext<\n  | {\n      layout: Layout | undefined;\n      updateRoomLayoutForRole:\n        | useFetchRoomLayoutResponse[\"updateRoomLayoutForRole\"]\n        | undefined;\n      setOriginalLayout:\n        | useFetchRoomLayoutResponse[\"setOriginalLayout\"]\n        | undefined;\n    }\n  | undefined\n>(undefined);\n\n// The default merge in lodash merges the values of current layout and the changes.\n// This behaviour makes changes in array based values inconsistent since a union happens.\n// The customizer uses the new value provided if one of the values is an array\nfunction customizer(objValue: unknown, srcValue: unknown) {\n  if (isArray(objValue) || isArray(srcValue)) {\n    return srcValue;\n  }\n  // default merge behaviour is followed\n  return undefined;\n}\n\nexport const RoomLayoutProvider: React.FC<\n  React.PropsWithChildren<RoomLayoutProviderProps>\n> = ({ children, roomLayoutEndpoint, overrideLayout }) => {\n  const authToken: string = useAuthToken();\n  const { layout, updateRoomLayoutForRole, setOriginalLayout } =\n    useFetchRoomLayout({\n      authToken,\n      endpoint: roomLayoutEndpoint,\n    });\n  const mergedLayout =\n    authToken && layout\n      ? mergeWith(layout, overrideLayout, customizer)\n      : layout;\n  return (\n    <RoomLayoutContext.Provider\n      value={{\n        layout: mergedLayout,\n        updateRoomLayoutForRole,\n        setOriginalLayout,\n      }}\n    >\n      {children}\n    </RoomLayoutContext.Provider>\n  );\n};\n\nexport const useRoomLayout = () => React.useContext(RoomLayoutContext)?.layout;\nexport const useUpdateRoomLayout = () =>\n  React.useContext(RoomLayoutContext)?.updateRoomLayoutForRole;\nexport const useSetOriginalLayout = () =>\n  React.useContext(RoomLayoutContext)?.setOriginalLayout;\n", "import { QUESTION_TYPE } from \"./constants\";\n\n// eslint-disable-next-line complexity\nexport function shadeColor(color, percent) {\n  let R = parseInt(color.substring(1, 3), 16);\n  let G = parseInt(color.substring(3, 5), 16);\n  let B = parseInt(color.substring(5, 7), 16);\n\n  R = Math.floor((R * (100 + percent)) / 100);\n  G = Math.floor((G * (100 + percent)) / 100);\n  B = Math.floor((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  const RR =\n    R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\n  const GG =\n    G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\n  const BB =\n    B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\n\n  return `#${RR}${GG}${BB}`;\n}\n\n/**\n * TODO: this is currently an O(N**2) function, don't use with peer lists, it's currently\n * being used to find intersection between list of role names where the complexity shouldn't matter much.\n */\nexport const arrayIntersection = (a, b) => {\n  if (a === undefined || b === undefined) {\n    return [];\n  }\n  // ensure \"a\" is the bigger array\n  if (b.length > a.length) {\n    let t = b;\n    b = a;\n    a = t;\n  }\n  return a.filter(function (e) {\n    return b.indexOf(e) > -1;\n  });\n};\n\nexport const getMetadata = (metadataString) => {\n  try {\n    return !metadataString ? {} : JSON.parse(metadataString);\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const metadataProps = function (peer) {\n  return {\n    isHandRaised: getMetadata(peer.metadata)?.isHandRaised,\n  };\n};\n\nexport const isScreenshareSupported = () => {\n  return typeof navigator.mediaDevices.getDisplayMedia !== \"undefined\";\n};\n\nexport const metadataPayloadParser = (payload) => {\n  try {\n    const data = window.atob(payload);\n    const parsedData = JSON.parse(data);\n    return parsedData;\n  } catch (e) {\n    return { payload };\n  }\n};\n\n// For bottom action sheet, returns updated height based on drag\nexport const getUpdatedHeight = (e, MINIMUM_HEIGHT) => {\n  const heightToPercentage =\n    100 - ((e?.touches?.[0] || e).pageY / window.innerHeight) * 100;\n  // Snap to top if height > 80%, should be at least 40vh\n  const sheetHeightInVH = Math.max(\n    MINIMUM_HEIGHT,\n    heightToPercentage > 80 ? 100 : heightToPercentage\n  );\n  return `${sheetHeightInVH}vh`;\n};\n\nexport const getFormattedCount = (num) => {\n  const formatter = new Intl.NumberFormat(\"en\", {\n    notation: \"compact\",\n    maximumFractionDigits: 2,\n  });\n  const formattedNum = formatter.format(num);\n  return formattedNum;\n};\n\nexport const formatTime = (timeInSeconds) => {\n  timeInSeconds = Math.floor(timeInSeconds / 1000);\n  const hours = Math.floor(timeInSeconds / 3600);\n  const minutes = Math.floor((timeInSeconds % 3600) / 60);\n  const seconds = timeInSeconds % 60;\n  const hour = hours !== 0 ? `${hours < 10 ? \"0\" : \"\"}${hours}:` : \"\";\n  return `${hour}${minutes < 10 ? \"0\" : \"\"}${minutes}:${\n    seconds < 10 ? \"0\" : \"\"\n  }${seconds}`;\n};\n\nconst compareArrays = (a, b) => {\n  if (a.length !== b.length) return false;\n  else {\n    // Comparing each element of your array\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nexport const checkCorrectAnswer = (answer, localPeerResponse, type) => {\n  if (type === QUESTION_TYPE.SINGLE_CHOICE) {\n    return answer?.option === localPeerResponse?.option;\n  } else if (type === QUESTION_TYPE.MULTIPLE_CHOICE) {\n    return (\n      answer?.options &&\n      localPeerResponse?.options &&\n      compareArrays(answer?.options, localPeerResponse?.options)\n    );\n  }\n};\n\nexport const isValidTextInput = (text, minLength = 1, maxLength = 1024) => {\n  return text && text.length >= minLength && text.length <= maxLength;\n};\n\nexport const calculateAvatarAndAttribBoxSize = (\n  calculatedWidth,\n  calculatedHeight\n) => {\n  if (!calculatedWidth || !calculatedHeight) {\n    return [undefined, undefined];\n  }\n\n  let avatarSize = \"large\";\n  if (calculatedWidth <= 150 || calculatedHeight <= 150) {\n    avatarSize = \"small\";\n  } else if (calculatedWidth <= 300 || calculatedHeight <= 300) {\n    avatarSize = \"medium\";\n  }\n\n  let attribBoxSize = \"medium\";\n  if (calculatedWidth <= 180 || calculatedHeight <= 180) {\n    attribBoxSize = \"small\";\n  }\n\n  return [avatarSize, attribBoxSize];\n};\n\nexport const isMobileUserAgent = /Mobi|Android|iPhone/i.test(\n  navigator.userAgent\n);\n\nexport const getPeerResponses = (questions, peerid, userid) => {\n  return questions.map((question) =>\n    question.responses?.filter(\n      (response) =>\n        response &&\n        (response.peer?.peerid === peerid ||\n          response.peer?.userid === userid) &&\n        !response.skipped\n    )\n  );\n};\n\nexport const getIndexToShow = (responses) => {\n  let lastAttemptedIndex = 0;\n\n  Object.keys(responses).forEach((key) => {\n    const keyNum = parseInt(key);\n    if (keyNum > lastAttemptedIndex && responses[key]) {\n      lastAttemptedIndex = keyNum;\n    }\n  });\n\n  return lastAttemptedIndex + 1;\n};\n\nexport const getPeerParticipationSummary = (\n  poll,\n  localPeerID,\n  localCustomerUserID\n) => {\n  let correctResponses = 0;\n  let score = 0;\n  const questions = poll.questions || [];\n  const peerResponses = getPeerResponses(\n    questions,\n    localPeerID,\n    localCustomerUserID\n  );\n  let totalResponses = peerResponses.length || 0;\n\n  peerResponses.forEach((peerResponse) => {\n    if (!peerResponse?.[0]) {\n      return;\n    }\n    const isCorrect = checkCorrectAnswer(\n      questions[peerResponse[0].questionIndex - 1].answer,\n      peerResponse[0],\n      questions[peerResponse[0].questionIndex - 1].type\n    );\n    if (isCorrect) {\n      score += questions[peerResponse[0].questionIndex - 1]?.weight || 0;\n      correctResponses++;\n    }\n  });\n  return { totalResponses, correctResponses, score };\n};\n", "import { useMemo } from \"react\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  DefaultPreviewScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n  LeaveScreen,\n  PreviewScreen,\n  Screens,\n} from \"@100mslive/types-prebuilt\";\nimport {\n  selectHLSState,\n  selectPeerCount,\n  selectRoomStartTime,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayout } from \"..\";\n// @ts-ignore\nimport { getFormattedCount } from \"../../../common/utils\";\n\nexport type useRoomLayoutScreenProps = {\n  screen: keyof Screens;\n};\n\ntype useRoomLayoutScreenReturnType<T extends useRoomLayoutScreenProps> =\n  T[\"screen\"] extends \"conferencing\"\n    ? ConferencingScreen\n    : T[\"screen\"] extends \"leave\"\n    ? LeaveScreen\n    : T[\"screen\"] extends \"preview\"\n    ? PreviewScreen\n    : undefined;\n\nfunction useRoomLayoutScreen<T extends useRoomLayoutScreenProps>({\n  screen,\n}: T): useRoomLayoutScreenReturnType<T> | undefined {\n  const roomLayout = useRoomLayout();\n  const screenProps = roomLayout?.screens?.[screen] as\n    | useRoomLayoutScreenReturnType<T>\n    | undefined;\n  return screenProps;\n}\n\ntype PreviewKeys = Omit<PreviewScreen, \"skip_preview_screen\">;\n\nexport function useRoomLayoutPreviewScreen() {\n  const screenProps = useRoomLayoutScreen({ screen: \"preview\" });\n  const isPreviewScreenEnabled =\n    !!screenProps && !screenProps?.skip_preview_screen;\n  let elements: DefaultPreviewScreen_Elements | undefined;\n  let screenType: keyof PreviewKeys | undefined;\n  if (isPreviewScreenEnabled) {\n    screenType = Object.keys(screenProps).filter(\n      (key) => key !== \"skip_preview_screen\"\n    )[0] as keyof PreviewKeys;\n    elements = screenProps[screenType]?.elements;\n  }\n  return {\n    isPreviewScreenEnabled,\n    elements,\n    screenType,\n  };\n}\n\nexport type ConferencingScreenElements = DefaultConferencingScreen_Elements &\n  HLSLiveStreamingScreen_Elements;\n\nexport function useRoomLayoutConferencingScreen() {\n  const screenProps = useRoomLayoutScreen({ screen: \"conferencing\" }) || {};\n  const screenType = Object.keys(screenProps)[0] as keyof ConferencingScreen;\n  const elements = screenProps[screenType]\n    ?.elements as ConferencingScreenElements;\n  // @ts-ignore\n  const hideSections: string[] = screenProps[screenType]?.hideSections || [];\n  return {\n    hideSections,\n    elements,\n    screenType,\n  };\n}\n\nexport function useRoomLayoutLeaveScreen() {\n  const screenProps = useRoomLayoutScreen({ screen: \"leave\" });\n  const isLeaveScreenEnabled = !!screenProps;\n  return {\n    isLeaveScreenEnabled,\n    feedback: screenProps?.default?.elements?.feedback,\n  };\n}\n\nexport function useRoomLayoutHeader() {\n  const { elements } = useRoomLayoutConferencingScreen();\n  // return elements.header;\n  const { isRecordingOn } = useRecordingStreaming();\n  const peerCount = useHMSStore(selectPeerCount);\n  const sessionStartedAt = useHMSStore(selectRoomStartTime);\n  const hlsState = useHMSStore(selectHLSState);\n\n  // People watching, start timestamp, recording status\n  const details = useMemo(() => {\n    const details = [];\n    if (hlsState?.variants[0]?.[\"startedAt\"]) {\n      details.push(`${getFormattedCount(peerCount)} watching`);\n      details.push(hlsState.variants[0][\"startedAt\"]);\n    } else if (sessionStartedAt) {\n      details.push(sessionStartedAt);\n    }\n    if (isRecordingOn) {\n      details.push(\"Recording\");\n    }\n    return details;\n  }, [hlsState?.variants, isRecordingOn, peerCount, sessionStartedAt]);\n\n  return {\n    title: elements.header?.title || \"\",\n    description: elements.header?.description || \"\",\n    details,\n  };\n}\n", "import { useCallback } from \"react\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  selectAppData,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { usePollViewState } from \"./useUISettings\";\nimport {\n  APP_DATA,\n  POLL_STATE,\n  POLL_VIEWS,\n  SIDE_PANE_OPTIONS,\n} from \"../../common/constants\";\n\n/**\n * Gives a boolean value if the sidepaneType matches current sidepane value in store\n * @param {string} sidepaneType\n * @returns {boolean} - if the sidepaneType is passed returns boolean else the current value\n */\nexport const useIsSidepaneTypeOpen = (sidepaneType) => {\n  if (!sidepaneType) {\n    throw Error(\"Pass one of the side pane options\");\n  }\n  return useHMSStore(selectAppData(APP_DATA.sidePane)) === sidepaneType;\n};\n\n/**\n * Gives the current value of sidepane in store\n * @returns {string} - if the sidepaneType is passed returns boolean else the current value\n */\nexport const useSidepaneState = () => {\n  const sidePane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  return sidePane;\n};\n\n/**\n * Toggle the sidepane value between passed sidePaneType and '';\n * @param {string} sidepaneType\n */\nexport const useSidepaneToggle = (sidepaneType) => {\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const toggleSidepane = useCallback(() => {\n    const isOpen =\n      vanillaStore.getState(selectAppData(APP_DATA.sidePane)) === sidepaneType;\n    hmsActions.setAppData(APP_DATA.sidePane, !isOpen ? sidepaneType : \"\");\n  }, [vanillaStore, hmsActions, sidepaneType]);\n  return toggleSidepane;\n};\n\nexport const usePollViewToggle = () => {\n  const hmsActions = useHMSActions();\n  const { view, setPollState } = usePollViewState();\n  const isOpen = useSidepaneState() === SIDE_PANE_OPTIONS.POLLS;\n\n  const togglePollView = useCallback(\n    (id) => {\n      match({ id, isOpen, view })\n        .with(\n          {\n            id: P.string,\n          },\n          () => {\n            setPollState({\n              [POLL_STATE.pollInView]: id,\n              [POLL_STATE.view]: POLL_VIEWS.VOTE,\n            });\n            hmsActions.setAppData(APP_DATA.sidePane, SIDE_PANE_OPTIONS.POLLS);\n          }\n        )\n        .with(\n          {\n            isOpen: true,\n            view: P.when((view) => !!view),\n          },\n          () => {\n            setPollState({\n              [POLL_STATE.pollInView]: undefined,\n              [POLL_STATE.view]: null,\n            });\n            hmsActions.setAppData(APP_DATA.sidePane, \"\");\n          }\n        )\n        .otherwise(() => {\n          setPollState({\n            [POLL_STATE.pollInView]: undefined,\n            [POLL_STATE.view]: POLL_VIEWS.CREATE_POLL_QUIZ,\n          });\n          hmsActions.setAppData(APP_DATA.sidePane, SIDE_PANE_OPTIONS.POLLS);\n        });\n    },\n    [hmsActions, view, setPollState, isOpen]\n  );\n\n  return togglePollView;\n};\n\n/**\n * resets the sidepane value\n */\nexport const useSidepaneReset = () => {\n  const hmsActions = useHMSActions();\n  const resetSidepane = useCallback(() => {\n    hmsActions.setAppData(APP_DATA.sidePane, \"\");\n    hmsActions.setAppData(APP_DATA.pollInView, \"\");\n  }, [hmsActions]);\n  return resetSidepane;\n};\n", "export const trackSourceOptions = [\n  { label: \"All Track Sources\", value: \"\" },\n  { label: \"regular\", value: \"regular\" },\n  { label: \"screen\", value: \"screen\" },\n  { label: \"audioplaylist\", value: \"audioplaylist\" },\n  { label: \"videoplaylist\", value: \"videoplaylist\" },\n];\nexport const trackTypeOptions = [\n  { label: \"All Track Types\", value: \"\" },\n  { label: \"audio\", value: \"audio\" },\n  { label: \"video\", value: \"video\" },\n];\n\nexport const DEFAULT_TILES_IN_VIEW = { MWEB: 4, DESKTOP: 9 };\n", "import React, { useEffect, useMemo, useRef } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectFullAppData,\n  selectHLSState,\n  selectRoomState,\n  selectRTMPState,\n  useAVToggle,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { LayoutMode } from \"../Settings/LayoutSettings\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n//@ts-ignore\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n// @ts-ignore\nimport { useIsSidepaneTypeOpen, useSidepaneToggle } from \"./useSidepane\";\n// @ts-ignore\nimport { useSetAppDataByKey, useSetNoiseCancellation } from \"./useUISettings\";\nimport {\n  APP_DATA,\n  CHAT_SELECTOR,\n  POLL_STATE,\n  SIDE_PANE_OPTIONS,\n  UI_MODE_GRID,\n  UI_SETTINGS,\n} from \"../../common/constants\";\nimport { DEFAULT_TILES_IN_VIEW } from \"../MoreSettings/constants\";\n\nconst initialAppData = {\n  [APP_DATA.uiSettings]: {\n    [UI_SETTINGS.isAudioOnly]: false,\n    [UI_SETTINGS.maxTileCount]: 9,\n    [UI_SETTINGS.showStatsOnTiles]: false,\n    [UI_SETTINGS.enableAmbientMusic]: false,\n    [UI_SETTINGS.uiViewMode]: UI_MODE_GRID,\n    [UI_SETTINGS.mirrorLocalVideo]: true,\n    [UI_SETTINGS.layoutMode]: LayoutMode.GALLERY,\n  },\n  [APP_DATA.subscribedNotifications]: {\n    PEER_JOINED: false,\n    PEER_LEFT: false,\n    NEW_MESSAGE: true,\n    ERROR: true,\n    METADATA_UPDATED: true,\n  },\n  [APP_DATA.chatOpen]: false,\n  [APP_DATA.chatSelector]: {\n    [CHAT_SELECTOR.ROLE]: \"\",\n    [CHAT_SELECTOR.PEER]: {},\n  },\n  [APP_DATA.chatDraft]: \"\",\n  [APP_DATA.sidePane]: \"\",\n  [APP_DATA.sheet]: \"\",\n  [APP_DATA.hlsStarted]: false,\n  [APP_DATA.rtmpStarted]: false,\n  [APP_DATA.recordingStarted]: false,\n  [APP_DATA.dropdownList]: [],\n  [APP_DATA.authToken]: \"\",\n  [APP_DATA.minimiseInset]: false,\n  [APP_DATA.activeScreensharePeerId]: \"\",\n  [APP_DATA.disableNotifications]: false,\n  [APP_DATA.loadingEffects]: false,\n  [APP_DATA.background]: \"none\",\n  [APP_DATA.pollState]: {\n    [POLL_STATE.pollInView]: \"\",\n    [POLL_STATE.view]: \"\",\n  },\n  // by default on because of on demand now, for beam disabled\n  [APP_DATA.caption]: false,\n  [APP_DATA.noiseCancellation]: false,\n};\n\nexport const AppData = React.memo(() => {\n  const hmsActions = useHMSActions();\n  const [preferences = {}] = useUserPreferences(\n    UserPreferencesKeys.UI_SETTINGS\n  );\n  const appData = useHMSStore(selectFullAppData);\n  const { elements } = useRoomLayoutConferencingScreen();\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const { isLocalVideoEnabled } = useAVToggle();\n  const sidepaneOpenedRef = useRef(false);\n  const [, setNoiseCancellationEnabled] = useSetNoiseCancellation();\n  const isMobile = useMedia(cssConfig.media.md);\n\n  useEffect(() => {\n    if (elements?.noise_cancellation?.enabled_by_default) {\n      setNoiseCancellationEnabled(true);\n    }\n  }, [\n    elements?.noise_cancellation?.enabled_by_default,\n    setNoiseCancellationEnabled,\n  ]);\n\n  const defaultMediaURL = useMemo(() => {\n    const media = elements?.virtual_background?.background_media || [];\n    for (let i = 0; i < media.length; i++) {\n      if (media[i].default && media[i].url) {\n        return media[i].url;\n      }\n    }\n    return \"\";\n  }, [elements?.virtual_background?.background_media]);\n\n  useEffect(() => {\n    hmsActions.initAppData({\n      ...initialAppData,\n      ...appData,\n    });\n    // @ts-ignore\n    hmsActions.setFrameworkInfo({\n      type: \"react-web\",\n      isPrebuilt: true,\n      version: React.version,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hmsActions]);\n\n  useEffect(() => {\n    const uiSettings = preferences || {};\n    const updatedSettings = {\n      ...uiSettings,\n      [UI_SETTINGS.isAudioOnly]: undefined,\n      [UI_SETTINGS.uiViewMode]: uiSettings.uiViewMode || UI_MODE_GRID,\n    };\n    hmsActions.setAppData(APP_DATA.uiSettings, updatedSettings, true);\n  }, [hmsActions, preferences]);\n\n  useEffect(() => {\n    hmsActions.setAppData(\n      APP_DATA.uiSettings,\n      {\n        [UI_SETTINGS.maxTileCount]: isMobile\n          ? DEFAULT_TILES_IN_VIEW.MWEB\n          : Number(elements?.video_tile_layout?.grid?.tiles_in_view) ||\n            DEFAULT_TILES_IN_VIEW.DESKTOP,\n      },\n      true\n    );\n  }, [hmsActions, isMobile, elements?.video_tile_layout?.grid?.tiles_in_view]);\n\n  useEffect(() => {\n    if (!preferences.subscribedNotifications) {\n      return;\n    }\n    hmsActions.setAppData(\n      APP_DATA.subscribedNotifications,\n      preferences.subscribedNotifications,\n      true\n    );\n  }, [preferences.subscribedNotifications, hmsActions]);\n\n  useEffect(() => {\n    if (defaultMediaURL && !sidepaneOpenedRef.current && isLocalVideoEnabled) {\n      hmsActions.setAppData(APP_DATA.background, defaultMediaURL);\n      sidepaneOpenedRef.current = true;\n      toggleVB();\n    }\n  }, [hmsActions, toggleVB, isLocalVideoEnabled, defaultMediaURL]);\n\n  return <ResetStreamingStart />;\n});\n\n/**\n * reset hlsStarted, rtmpStarted values when streaming starts\n */\nconst ResetStreamingStart = () => {\n  const { isHLSRunning, isRTMPRunning, isBrowserRecordingOn } =\n    useRecordingStreaming();\n  const hlsError = useHMSStore(selectHLSState).error;\n  const rtmpError = useHMSStore(selectRTMPState).error;\n  const roomState = useHMSStore(selectRoomState);\n  const [hlsStarted, setHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const [recordingStarted, setRecordingStarted] = useSetAppDataByKey(\n    APP_DATA.recordingStarted\n  );\n  const [rtmpStarted, setRTMPStarted] = useSetAppDataByKey(\n    APP_DATA.rtmpStarted\n  );\n  const toggleStreaming = useSidepaneToggle(SIDE_PANE_OPTIONS.STREAMING);\n  const isStreamingOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.STREAMING);\n\n  useEffect(() => {\n    if (isBrowserRecordingOn && recordingStarted) {\n      setRecordingStarted(false);\n    }\n  }, [isBrowserRecordingOn, recordingStarted, setRecordingStarted]);\n  /**\n   * Reset on leave\n   */\n  useEffect(() => {\n    if (roomState === HMSRoomState.Disconnected) {\n      setHLSStarted(false);\n      setRecordingStarted(false);\n      setRTMPStarted(false);\n    }\n  }, [roomState, setHLSStarted, setRTMPStarted, setRecordingStarted]);\n  useEffect(() => {\n    if (isHLSRunning || hlsError) {\n      if (hlsStarted) {\n        setHLSStarted(false);\n        if (isStreamingOpen) {\n          toggleStreaming();\n        }\n      }\n    }\n  }, [\n    isHLSRunning,\n    hlsStarted,\n    setHLSStarted,\n    hlsError,\n    isStreamingOpen,\n    toggleStreaming,\n  ]);\n  useEffect(() => {\n    if (isRTMPRunning || rtmpError || isBrowserRecordingOn) {\n      if (rtmpStarted) {\n        setRTMPStarted(false);\n        if (isStreamingOpen) {\n          toggleStreaming();\n        }\n      }\n    }\n  }, [\n    isRTMPRunning,\n    setRTMPStarted,\n    rtmpStarted,\n    rtmpError,\n    isBrowserRecordingOn,\n    isStreamingOpen,\n    toggleStreaming,\n  ]);\n  return null;\n};\n", "import React, { useContext } from \"react\";\n// @ts-ignore\nimport { DEFAULT_PORTAL_CONTAINER } from \"./common/constants\";\n\ntype HMSPrebuiltContextType = {\n  roomCode: string;\n  userName?: string;\n  userId?: string;\n  containerSelector: string;\n  endpoints?: Record<string, string>;\n  onLeave?: () => void;\n  onJoin?: () => void;\n};\n\nexport const HMSPrebuiltContext = React.createContext<HMSPrebuiltContextType>({\n  roomCode: \"\",\n  userName: \"\",\n  userId: \"\",\n  containerSelector: DEFAULT_PORTAL_CONTAINER,\n  endpoints: {},\n  onLeave: undefined,\n  onJoin: undefined,\n});\n\nHMSPrebuiltContext.displayName = \"HMSPrebuiltContext\";\n\nexport const useHMSPrebuiltContext = () => {\n  const context = useContext(HMSPrebuiltContext);\n  if (!context) {\n    throw Error(\n      \"Make sure HMSPrebuiltContext.Provider is present at the top level of your application\"\n    );\n  }\n  return context;\n};\n", "// Open issue with eslint-plugin-import https://github.com/import-js/eslint-plugin-import/issues/1810\n// eslint-disable-next-line\nimport {\n  HMSVBPlugin,\n  HMSVirtualBackgroundTypes,\n} from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport { parsedUserAgent } from \"@100mslive/react-sdk\";\nimport { isSafari } from \"../../common/constants\";\nexport class VBPlugin {\n  private hmsPlugin?: HMSVBPlugin;\n  private effectsPlugin?: any;\n\n  initialisePlugin = async (effectsSDKKey?: string, onInit?: () => void) => {\n    if (this.getVBObject()) {\n      return;\n    }\n    if (effectsSDKKey) {\n      try {\n        // eslint-disable-next-line\n        const effects = await import(\n          \"@100mslive/hms-virtual-background/hmseffectsplugin\"\n        );\n        this.effectsPlugin = new effects.HMSEffectsPlugin(\n          effectsSDKKey,\n          onInit\n        );\n      } catch (error) {\n        console.error(\n          \"Failed to initialise HMSEffectsPlugin:\",\n          error,\n          \"Using HMSVBPlugin\"\n        );\n        this.hmsPlugin = new HMSVBPlugin(\n          HMSVirtualBackgroundTypes.NONE,\n          HMSVirtualBackgroundTypes.NONE\n        );\n      }\n    } else {\n      this.hmsPlugin = new HMSVBPlugin(\n        HMSVirtualBackgroundTypes.NONE,\n        HMSVirtualBackgroundTypes.NONE\n      );\n    }\n  };\n\n  getBackground = () => {\n    if (this.effectsPlugin) {\n      return this.effectsPlugin?.getBackground();\n    } else {\n      const background = this.hmsPlugin?.getBackground();\n      // @ts-ignore\n      return background?.src || background;\n    }\n  };\n\n  getBlurAmount = () => {\n    if (this.effectsPlugin) {\n      return this.effectsPlugin.getBlurAmount();\n    } else {\n      // Treating HMS VB intensity as a fixed value\n      return this.hmsPlugin?.getBackground() === HMSVirtualBackgroundTypes.BLUR\n        ? 1\n        : 0;\n    }\n  };\n\n  getVBObject = () => {\n    return this.effectsPlugin || this.hmsPlugin;\n  };\n\n  getName = () => {\n    return this.effectsPlugin\n      ? this.effectsPlugin?.getName()\n      : this.hmsPlugin?.getName();\n  };\n\n  setBlur = async (blurPower: number) => {\n    if (this.effectsPlugin) {\n      this.effectsPlugin?.setBlur(blurPower);\n    } else {\n      await this.hmsPlugin?.setBackground(\n        HMSVirtualBackgroundTypes.BLUR,\n        HMSVirtualBackgroundTypes.BLUR\n      );\n    }\n  };\n\n  setBackground = async (mediaURL: string) => {\n    if (this.effectsPlugin) {\n      this.effectsPlugin?.setBackground(mediaURL);\n    } else {\n      const img = document.createElement(\"img\");\n      let retries = 0;\n      const MAX_RETRIES = 3;\n      img.alt = \"VB\";\n      img.src = mediaURL;\n      try {\n        await this.hmsPlugin?.setBackground(\n          img,\n          HMSVirtualBackgroundTypes.IMAGE\n        );\n      } catch (e) {\n        console.error(e);\n        if (retries++ < MAX_RETRIES) {\n          await this.hmsPlugin?.setBackground(\n            img,\n            HMSVirtualBackgroundTypes.IMAGE\n          );\n        }\n      }\n    }\n  };\n\n  setPreset = async (preset: \"quality\" | \"balanced\") => {\n    if (this.effectsPlugin) {\n      await this.effectsPlugin.setPreset(preset);\n    }\n  };\n\n  getPreset = () => {\n    return this.effectsPlugin?.getPreset() || \"\";\n  };\n\n  removeEffects = async () => {\n    if (this.effectsPlugin) {\n      this.effectsPlugin?.removeEffects();\n    } else {\n      await this.hmsPlugin?.setBackground(\n        HMSVirtualBackgroundTypes.NONE,\n        HMSVirtualBackgroundTypes.NONE\n      );\n    }\n  };\n\n  reset = () => {\n    this.effectsPlugin = undefined;\n    this.hmsPlugin = undefined;\n  };\n\n  isEffectsSupported = () => {\n    if (!isSafari) {\n      return true;\n    }\n    const browserVersion = parsedUserAgent?.getBrowser()?.version || \"16\";\n    if (browserVersion && parseInt(browserVersion.split(\".\")[0]) < 17) {\n      return false;\n    }\n    return true;\n  };\n}\n\nexport const VBHandler = new VBPlugin();\n", "let CANVAS_FILL_COLOR;\nlet CANVAS_STROKE_COLOR;\n\nfunction setPIPCanvasColors() {\n  if (!CANVAS_FILL_COLOR) {\n    CANVAS_FILL_COLOR = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(\"--hms-ui-colors-surface_bright\");\n  }\n  if (!CANVAS_STROKE_COLOR) {\n    CANVAS_STROKE_COLOR = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(\"--hms-ui-colors-border_bright\");\n  }\n}\n\nexport function resetPIPCanvasColors() {\n  CANVAS_FILL_COLOR = \"\";\n  CANVAS_STROKE_COLOR = \"\";\n}\n/**\n * no tile - blank canvas, black image\n * 1 tile - takes full space on canvas\n * 2 tile - stack two video adjacent to each other\n * 3 tile - two rows first row has two tile second row has one tile centered.\n * 4 tiles - two rows two columns - all equal size\n * All videos will respect their aspect ratios.\n */\nexport function drawVideoElementsOnCanvas(videoElements, canvas) {\n  let videoTiles = videoElements.filter(\n    (videoElement) => videoElement.srcObject !== null\n  );\n\n  const ctx = canvas.getContext(\"2d\");\n  setPIPCanvasColors();\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  if (videoTiles.length === 0) {\n    // no tile to render, render black image\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    return;\n  }\n\n  fillGridTiles(videoTiles.slice(0, 4), ctx, canvas);\n}\n\n// this is to send some data for stream and resolve video element's play for a\n// video element rendering this canvas' capture stream\nexport function dummyChangeInCanvas(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  setPIPCanvasColors();\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * Imagine the canvas as a grid with passed in number of rows and columns. Go\n * over the tiles in the grid in order while drawing the videoElements upon them.\n */\nfunction fillGridTiles(videoElements, ctx, canvas) {\n  const offset = 8;\n  canvas.width = 480;\n  canvas.height = 320;\n\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Show borders only when there is atleast one video\n  if (videoElements.length > 0) {\n    ctx.strokeStyle = CANVAS_STROKE_COLOR;\n    ctx.lineWidth = offset / 2;\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n\n  if (videoElements.length === 1) {\n    const video = videoElements[0];\n    const { width, height } = getRenderDimensions(\n      video,\n      canvas.width - offset,\n      canvas.height - offset\n    );\n    /**\n     * The x and y offset are to center the video tile horizontally and vertically\n     * width and height are the aspect ratio constrained video tile dimensions\n     */\n    const xOffset = (canvas.width - width) / 2;\n    const yOffset = (canvas.height - height) / 2;\n    ctx.drawImage(video, xOffset, yOffset, width, height);\n  }\n\n  if (videoElements.length === 2) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset, // This will be the max available width for each tile\n        canvas.height - offset\n      );\n      /**\n       * (canvas.width / 2 - width) / 2 This is to center width wise within in the box\n       * (canvas.width / 2) * index This is the start offset\n       * for 1st element it is 0, for second it will be canvas.width/2 which starts from the center\n       */\n      const xOffset =\n        (canvas.width / 2 - width) / 2 + (canvas.width / 2) * index;\n      /**\n       * (canvas.height - height) / 2 This is to center height wise\n       */\n      const yOffset = (canvas.height - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw a border between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke(path);\n  }\n\n  if (videoElements.length === 3) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset,\n        canvas.height / 2 - offset\n      );\n      /**\n       * for first two tiles, xOffset is similar to the 2 tiles calculation with only difference being the height. it is half now.\n       */\n      const xOffset =\n        index < 2\n          ? (canvas.width / 2 - width) / 2 + (canvas.width / 2) * index\n          : canvas.width / 2 - width / 2;\n      const yOffset =\n        (index < 2 ? 0 : canvas.height / 2) + (canvas.height / 2 - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw borders between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height / 2);\n    ctx.stroke(path);\n    path.moveTo(0, canvas.height / 2);\n    path.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke(path);\n  }\n  if (videoElements.length === 4) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset,\n        canvas.height / 2 - offset\n      );\n      /**\n       * Similar to two tiles repeat after 2 tiles\n       * (canvas.width / 2 - width) / 2 is to center horizontally\n       */\n      const xOffset =\n        (canvas.width / 2 - width) / 2 + (canvas.width / 2) * (index % 2);\n      /**\n       * Similar to two tiles with the yOffset being height/2 for the 3rd and 4th tiles\n       * (canvas.height / 2 - height) / 2 is to center vertically\n       */\n      const yOffset =\n        (index < 2 ? 0 : canvas.height / 2) + (canvas.height / 2 - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw borders between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke(path);\n    path.moveTo(0, canvas.height / 2);\n    path.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke(path);\n  }\n}\n\n/**\n * Restrict the dimensions within the available dimension with aspect ratio\n * constraint applied\n * @param {HTMLVideoElement} video\n * @param {number} width\n * @param {number} height\n * @returns { width: number, height: number }\n */\nfunction getRenderDimensions(video, width, height) {\n  let finalWidth = (video.videoWidth / video.videoHeight) * height;\n  let finalHeight = height;\n\n  if (finalWidth > width) {\n    finalWidth = width;\n    finalHeight = (video.videoHeight / video.videoWidth) * width;\n  }\n  return { width: finalWidth, height: finalHeight };\n}\n", "import * as workerTimers from \"worker-timers\";\nimport {\n  HMSActions,\n  HMSPeer,\n  HMSTrack,\n  HMSVideoTrack,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit any\nimport {\n  drawVideoElementsOnCanvas,\n  dummyChangeInCanvas,\n  resetPIPCanvasColors,\n} from \"./pipUtils\";\nimport { isIOS, isMacOS, isSafari } from \"../../common/constants\";\nconst MAX_NUMBER_OF_TILES_IN_PIP = 4;\nconst DEFAULT_FPS = 30;\nconst DEFAULT_CANVAS_WIDTH = 480;\nconst DEFAULT_CANVAS_HEIGHT = 320;\nconst LEAVE_EVENT_NAME = \"leavepictureinpicture\";\n\nenum PIPStates {\n  starting = \"starting\",\n  started = \"started\",\n  stopping = \"stopping\",\n  stopped = \"stopped\",\n}\n\n/**\n * video elements are stitched together as a canvas which is converted to\n * another video element converted to PIP.\n * The task is split into two parts -\n * 1. a function which gets hit when the input changes and updates the tracks\n * to show\n * 2. an independent loop which updates the canvas periodically based on the current\n * tracks which should be shown.\n */\nclass PipManager {\n  private listeners = new Set<(value: boolean) => void>();\n  private canvas: HTMLCanvasElement | null = null;\n  private pipVideo: HTMLVideoElement | null = null;\n  private hmsActions: HMSActions | null = null;\n  private timeoutRef = 0;\n  private videoElements: HTMLVideoElement[] = [];\n  private onStateChange: ((value: boolean) => void) | null = null;\n  private tracksToShow: Array<string> = [];\n  private state: PIPStates = PIPStates.stopped;\n\n  constructor() {\n    this.reset();\n  }\n\n  listenToStateChange(cb: (value: boolean) => void) {\n    this.listeners.add(cb);\n  }\n\n  /**\n   * @private\n   */\n  reset() {\n    console.debug(\"resetting PIP state\");\n    resetPIPCanvasColors();\n    this.canvas = null; // where stitching will take place\n    this.pipVideo = null; // the element which will be sent in PIP\n    this.timeoutRef = 0; // setTimeout reference so it can be cancelled\n    this.hmsActions = null; // for attaching detaching\n    this.videoElements = []; // for attaching tracks\n    this.tracksToShow = [];\n    this.onStateChange = null; // for user of this class to listen to changes\n    this.state = PIPStates.stopped;\n  }\n\n  /**\n   * check if PIP is supported in this browser env\n   */\n  isSupported() {\n    return (\n      !!document.pictureInPictureEnabled && !isIOS && !(isMacOS && isSafari)\n    );\n  }\n\n  /**\n   * check if pip is currently turned on\n   */\n  isOn() {\n    return !!document.pictureInPictureElement;\n  }\n\n  /**\n   * request browser to start pip and start the render loop updating the pip\n   * video element with peer tracks.\n   * @param hmsActions\n   * @param onStateChangeFn {function(bool):void} callback called to notify change in pip state\n   */\n  async start(\n    hmsActions: HMSActions,\n    onStateChangeFn: (value: boolean) => void\n  ): Promise<void> {\n    if (!this.isSupported()) {\n      throw new Error(\"pip is not supported on this browser\");\n    }\n    console.debug(\"starting PIP, current state\", this.state);\n    if (this.state === PIPStates.started) {\n      await this.stop(); // if anything is already running\n    } else if (this.state === PIPStates.starting) {\n      return; // ignore double clicks\n    }\n    this.state = PIPStates.starting;\n    try {\n      await this.init(hmsActions, onStateChangeFn);\n      // when user closes pip, call internal stop\n      this.pipVideo?.addEventListener(LEAVE_EVENT_NAME, this.stop);\n      this.renderLoop();\n      if (!this.isOn()) {\n        await this.requestPIP();\n      }\n      console.debug(\"pip started\");\n      this.state = PIPStates.started;\n      this.onStateChange?.(true);\n      this.callListeners(true);\n    } catch (err) {\n      console.error(\"error in request pip\", err);\n      this.state = PIPStates.stopped;\n    }\n  }\n\n  stop = async () => {\n    if (this.state === PIPStates.stopped) {\n      return;\n    }\n    this.state = PIPStates.stopping;\n    this.pipVideo?.removeEventListener(LEAVE_EVENT_NAME, this.stop);\n    if (this.timeoutRef) {\n      workerTimers.clearTimeout(this.timeoutRef);\n      this.timeoutRef = 0;\n    }\n    if (this.isOn()) {\n      this.exitPIP();\n    }\n    // detach all to avoid bandwidth consumption\n    await this.detachOldAttachNewTracks(this.tracksToShow, []);\n    this.onStateChange?.(false); // notify parent about this\n    this.callListeners(false);\n    this.reset(); // cleanup\n    this.state = PIPStates.stopped;\n  };\n\n  /**\n   * @param peers {Array} All Remote Peers present in call.\n   * @param tracksMap {Object} map of track id to track\n   * */\n  async updatePeersAndTracks(\n    peers: HMSPeer[],\n    tracksMap: Record<string, HMSTrack>\n  ) {\n    if (!this.canvas) {\n      console.log(\"no canvas to render video to\");\n      return;\n    }\n    const newTracksToShowUnordered = this.pickTracksToShow(peers, tracksMap);\n    const currentTracksShowing = this.tracksToShow;\n    this.tracksToShow = this.orderNewTracksToShow(\n      newTracksToShowUnordered,\n      currentTracksShowing\n    );\n    try {\n      await this.detachOldAttachNewTracks(\n        currentTracksShowing,\n        this.tracksToShow,\n        tracksMap\n      );\n    } catch (error) {\n      console.error(\"error in detaching/attaching tracks\", error);\n    }\n  }\n\n  // ------- Private function --------------\n  /**\n   * @private {boolean} on - whether pip is on/off\n   */\n  callListeners = (on: boolean) => {\n    this.listeners.forEach((listener) => listener?.(on));\n  };\n\n  /**\n   * @private\n   */\n  async init(\n    hmsActions: HMSActions,\n    onStateChangeFn: (value: boolean) => void\n  ) {\n    await this.initMediaElements();\n    this.hmsActions = hmsActions;\n    this.onStateChange = onStateChangeFn;\n  }\n\n  async initMediaElements() {\n    if (!this.canvas) {\n      const { canvas, pipVideo } = this.initializeCanvasAndVideoElement();\n      this.canvas = canvas; // where stitching will take place\n      this.pipVideo = pipVideo; // the element which will be sent in PIP\n      this.videoElements = this.initializeVideoElements(); // for attaching tracks\n      const videoPlayPromise = this.pipVideo.play();\n      dummyChangeInCanvas(this.canvas);\n      await videoPlayPromise;\n    }\n  }\n\n  initializeCanvasAndVideoElement() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = DEFAULT_CANVAS_WIDTH;\n    canvas.height = DEFAULT_CANVAS_HEIGHT;\n    const pipVideo = document.createElement(\"video\");\n    pipVideo.width = DEFAULT_CANVAS_WIDTH;\n    pipVideo.height = DEFAULT_CANVAS_HEIGHT;\n    pipVideo.muted = true;\n    pipVideo.srcObject = canvas.captureStream();\n    return { canvas, pipVideo };\n  }\n\n  initializeVideoElements() {\n    const videoElements = [];\n    for (let i = 0; i < MAX_NUMBER_OF_TILES_IN_PIP; i++) {\n      const videoElement = document.createElement(\"video\");\n      videoElement.autoplay = true;\n      videoElement.playsInline = true;\n      videoElements.push(videoElement);\n    }\n    return videoElements;\n  }\n\n  /**\n   * render loop is responsible for rendering the video elements on canvas/pip.\n   * in each loop current video elements are stitched and painted on canvas\n   */\n  renderLoop() {\n    const delay = 1000 / DEFAULT_FPS;\n    this.timeoutRef = workerTimers.setTimeout(() => {\n      if (\n        this.state === PIPStates.stopping ||\n        this.state === PIPStates.stopped\n      ) {\n        return;\n      }\n      if (this.state === PIPStates.started) {\n        drawVideoElementsOnCanvas(this.videoElements, this.canvas);\n      }\n      this.renderLoop();\n    }, delay);\n  }\n\n  async requestPIP() {\n    try {\n      if (this.isOn()) {\n        this.exitPIP(); // is this really needed?\n      }\n      if (!this.pipVideo) {\n        return;\n      }\n      await this.pipVideo.requestPictureInPicture();\n    } catch (error) {\n      console.error(\"error in requestpip\", error, \"state\", this.state);\n      throw error;\n    }\n  }\n\n  exitPIP() {\n    document.exitPictureInPicture();\n  }\n\n  /**\n   * Logic - pick only enabled video tracks\n   * @param peers {Array<any>}\n   * @param tracksMap {Record<string, any>}\n   */\n  pickTracksToShow(peers: HMSPeer[], tracksMap: Record<string, HMSTrack>) {\n    const tracksToShow = new Set<string>();\n    for (const peer of peers) {\n      if (tracksToShow.size === MAX_NUMBER_OF_TILES_IN_PIP) {\n        break;\n      } else if (\n        peer.videoTrack &&\n        this.showTrack(tracksMap[peer.videoTrack] as HMSVideoTrack)\n      ) {\n        tracksToShow.add(peer.videoTrack);\n      }\n    }\n    return Array.from(tracksToShow);\n  }\n\n  /**\n   * there has to be a smart reordering of new tracks based on currently showing\n   * ones to reduce unnecessary displacement. If someone was showing up both\n   * earlier and now, it's a better UX to keep their position same instead\n   * of letting it change.\n   * The returned array is a shuffled version of newTracks with position of\n   * tracks present in the old tracks intact.\n   * eg. old = [1,5,9,3], new = [3,8,2,9], result = [8,2,9,3]\n   * @param oldTracks {Array}\n   * @param newTracks {Array}\n   * @return {Array}\n   */\n  orderNewTracksToShow(newTracks: string[], oldTracks: string[]) {\n    const betterNewTracks: Array<string> = new Array(newTracks.length);\n    const leftOvers: Array<string> = [];\n    // put the common ones in right position\n    newTracks.forEach((track) => {\n      const oldPosition = oldTracks.indexOf(track);\n      if (oldPosition !== -1 && oldPosition < newTracks.length) {\n        // if track is there currently and we can put it on the same position\n        betterNewTracks[oldPosition] = track;\n      } else {\n        leftOvers.push(track);\n      }\n    });\n    // put the left overs in remaining empty positions\n    for (let i = 0; i < newTracks.length; i++) {\n      if (!betterNewTracks[i]) {\n        const newEntry = leftOvers.shift();\n        if (newEntry) {\n          betterNewTracks[i] = newEntry;\n        }\n      }\n    }\n    return Array.from(new Set(betterNewTracks));\n  }\n\n  private showTrack(track: HMSVideoTrack | undefined) {\n    return track && track.enabled && !track.degraded;\n  }\n\n  /**\n   * call detach for tracks which no longer need to be shown and attach for\n   * new ones which are to be shown now.\n   * Note: oldTracks and newTracks are not necessarily of same length\n   * @param oldTracks {Array<String>}\n   * @param newTracks {Array<String>}\n   * @param tracksMap {Record<String, any>}\n   */\n  // eslint-disable-next-line complexity\n  async detachOldAttachNewTracks(\n    oldTracks: Array<string>,\n    newTracks: Array<string>,\n    tracksMap: Record<string, HMSTrack> | null = null\n  ) {\n    const numTracks = Math.max(oldTracks.length, newTracks.length);\n    for (let i = 0; i < numTracks; i++) {\n      if (oldTracks[i] === newTracks[i]) {\n        continue; // it would already have been attached previously\n      } else if (oldTracks[i]) {\n        // old track is there but not equal to new track, detach\n        // no need to call detach if we know for sure track is no longer in store\n        if (!tracksMap || tracksMap[oldTracks[i]]) {\n          await this.hmsActions?.detachVideo(\n            oldTracks[i],\n            this.videoElements[i]\n          );\n        }\n        if (this.videoElements[i]) {\n          // even if old track got removed from the room, element needs to be cleaned up\n          this.videoElements[i].srcObject = null;\n        }\n      }\n      if (newTracks[i]) {\n        await this.hmsActions?.attachVideo(newTracks[i], this.videoElements[i]);\n      }\n    }\n  }\n}\n\nexport const PictureInPicture = new PipManager();\n// PictureInPicture.initMediaElements().catch(console.error);  // for safari, init early\n", "import { v4 } from \"uuid\";\n\nexport const ToastManager = {\n  toasts: new Map(),\n  listeners: new Map(),\n  addToast(toast) {\n    const id = toast.id ? toast.id : v4();\n    this.toasts.set(id, { ...toast, id });\n    this.onChange();\n    return id;\n  },\n\n  clearAllToast() {\n    this.toasts.clear();\n    this.onChange();\n  },\n\n  removeToast(id) {\n    this.toasts.delete(id);\n    this.onChange();\n  },\n  replaceToast(id, toast) {\n    if (this.isActive(id)) {\n      this.toasts.set(id, { ...this.toasts.get(id), ...toast });\n      this.onChange();\n      return id;\n    } else {\n      return this.addToast(toast);\n    }\n  },\n  addListener(cb) {\n    this.listeners.set(cb, cb);\n  },\n  removeListener(cb) {\n    this.listeners.delete(cb);\n  },\n  isActive(id) {\n    return this.toasts.has(id);\n  },\n  onChange() {\n    const toasts = Array.from(this.toasts.values());\n    this.listeners.forEach((listener) => listener(toasts));\n  },\n};\n", "import { useCallback } from \"react\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\n// @ts-ignore: No implicit Any\nimport { PictureInPicture } from \"../PIP/PIPManager\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const useRedirectToLeave = () => {\n  const { onLeave } = useHMSPrebuiltContext();\n\n  const redirect = useCallback(\n    (timeout = 0) => {\n      setTimeout(() => {\n        PictureInPicture.stop().catch(() => console.error(\"stopping pip\"));\n        ToastManager.clearAllToast();\n        onLeave?.();\n      }, timeout);\n    },\n    [onLeave]\n  );\n\n  return { redirectToLeave: redirect };\n};\n", "import React, { useContext, useEffect } from \"react\";\nimport { usePreviousDistinct } from \"react-use\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  HMSRoomState,\n  selectRoomState,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { VBHandler } from \"./components/VirtualBackground/VBHandler\";\nimport {\n  useRoomLayout,\n  useSetOriginalLayout,\n} from \"./provider/roomLayoutProvider\";\nimport { useRedirectToLeave } from \"./components/hooks/useRedirectToLeave\";\nimport {\n  useRoomLayoutLeaveScreen,\n  useRoomLayoutPreviewScreen,\n} from \"./provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { APP_DATA } from \"./common/constants\";\n\nexport enum PrebuiltStates {\n  MEETING = \"meeting\",\n  PREVIEW = \"preview\",\n  LEAVE = \"leave\",\n}\n\ntype AppStateContextType = {\n  rejoin: () => void;\n};\n\nexport const AppStateContext = React.createContext<AppStateContextType>({\n  rejoin: () => {\n    console.log(\"Rejoin\");\n  },\n});\n\nAppStateContext.displayName = \"AppStateContext\";\n\nexport const useHMSAppStateContext = () => {\n  const context = useContext(AppStateContext);\n  if (!context) {\n    throw Error(\n      \"Make sure AppStateContext.Provider is present at the top level of your application\"\n    );\n  }\n  return context;\n};\n\nexport const useAppStateManager = () => {\n  const roomLayout = useRoomLayout();\n  const setOriginalLayout = useSetOriginalLayout();\n  const [activeState, setActiveState] = React.useState<\n    PrebuiltStates | undefined\n  >();\n  const roomState = useHMSStore(selectRoomState);\n  const prevRoomState = usePreviousDistinct(roomState);\n  const hmsActions = useHMSActions();\n  const { isLeaveScreenEnabled } = useRoomLayoutLeaveScreen();\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const { redirectToLeave } = useRedirectToLeave();\n\n  const rejoin = () => {\n    setOriginalLayout?.();\n    hmsActions.setAppData(APP_DATA.authToken, \"\");\n    setActiveState(\n      isPreviewScreenEnabled ? PrebuiltStates.PREVIEW : PrebuiltStates.MEETING\n    );\n  };\n\n  useEffect(() => {\n    if (!roomLayout) {\n      return;\n    }\n    match([roomState, prevRoomState])\n      .with([HMSRoomState.Connected, P.any], () =>\n        setActiveState(PrebuiltStates.MEETING)\n      )\n      .with(\n        [HMSRoomState.Disconnecting, HMSRoomState.Connected],\n        [HMSRoomState.Disconnecting, HMSRoomState.Connecting],\n        [HMSRoomState.Disconnecting, HMSRoomState.Reconnecting],\n        [HMSRoomState.Disconnected, HMSRoomState.Connected],\n        [HMSRoomState.Disconnected, HMSRoomState.Connecting],\n        [HMSRoomState.Disconnected, HMSRoomState.Reconnecting],\n        () => {\n          setActiveState((prevState) => {\n            return match({\n              isLeaveScreenEnabled,\n              isPreviewScreenEnabled,\n              prevState,\n            })\n              .when(\n                ({ isLeaveScreenEnabled, prevState }) =>\n                  isLeaveScreenEnabled && prevState !== PrebuiltStates.LEAVE,\n                () => PrebuiltStates.LEAVE\n              )\n              .with(\n                { isPreviewScreenEnabled: true },\n                () => PrebuiltStates.PREVIEW\n              )\n              .otherwise(() => PrebuiltStates.MEETING);\n          });\n          VBHandler.reset();\n          redirectToLeave(1000); // to clear toasts after 1 second\n        }\n      )\n      .with([HMSRoomState.Disconnected, P.nullish], () => {\n        setActiveState(\n          isPreviewScreenEnabled\n            ? PrebuiltStates.PREVIEW\n            : PrebuiltStates.MEETING\n        );\n      })\n      .otherwise(() => {\n        // do nothing\n      });\n  }, [\n    roomLayout,\n    roomState,\n    isLeaveScreenEnabled,\n    isPreviewScreenEnabled,\n    prevRoomState,\n    redirectToLeave,\n  ]);\n  return { activeState, rejoin };\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useSessionStorage } from \"react-use\";\nimport { match } from \"ts-pattern\";\nimport { v4 as uuid } from \"uuid\";\nimport { HMSException, useHMSActions } from \"@100mslive/react-sdk\";\nimport { Dialog } from \"../../Modal\";\nimport { Text } from \"../../Text\";\nimport { useHMSPrebuiltContext } from \"../AppContext\";\nimport { PrebuiltStates } from \"../AppStateContext\";\n// @ts-ignore: No implicit Any\nimport errorImage from \"../images/transaction_error.svg\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"./AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { UserPreferencesKeys } from \"./hooks/useUserPreferences\";\nimport { APP_DATA } from \"../common/constants\";\n\n/**\n * query params exposed -\n * skip_preview=true => used by recording and streaming service, skips preview and directly joins\n *                      header and footer don't show up in this case\n * skip_preview_headful=true => used by automation testing to skip preview without impacting the UI\n * name=abc => gives the initial name for the peer joining\n * auth_token=123 => uses the passed in token to join instead of fetching from token endpoint\n * ui_mode=activespeaker => lands in active speaker mode after joining the room\n */\nconst AuthToken = React.memo<{\n  authTokenByRoomCodeEndpoint: string;\n  defaultAuthToken?: string;\n  activeState?: PrebuiltStates;\n}>(({ authTokenByRoomCodeEndpoint, defaultAuthToken, activeState }) => {\n  const hmsActions = useHMSActions();\n  const { roomCode, userId } = useHMSPrebuiltContext();\n  const [error, setError] = useState({ title: \"\", body: \"\" });\n  const authToken = defaultAuthToken;\n  const [tokenInAppData, setAuthTokenInAppData] = useSetAppDataByKey(\n    APP_DATA.authToken\n  );\n  const [savedUserId, setSavedUserId] = useSessionStorage<string>(\n    UserPreferencesKeys.USER_ID\n  );\n  const progressRef = useRef<boolean | null>(null);\n\n  useEffect(() => {\n    if (authToken) {\n      setAuthTokenInAppData(authToken);\n      return;\n    }\n\n    if (\n      tokenInAppData ||\n      progressRef.current ||\n      activeState === PrebuiltStates.LEAVE\n    ) {\n      return;\n    }\n\n    if (!roomCode) {\n      console.error(\"room code not provided\");\n      return;\n    }\n\n    let userIdForAuthToken = userId || savedUserId;\n    if (!userIdForAuthToken) {\n      userIdForAuthToken = uuid();\n      setSavedUserId(userIdForAuthToken);\n    }\n\n    progressRef.current = true;\n    hmsActions\n      .getAuthTokenByRoomCode(\n        { roomCode, userId: userIdForAuthToken },\n        { endpoint: authTokenByRoomCodeEndpoint }\n      )\n      .then((token) => setAuthTokenInAppData(token))\n      .catch((error) => setError(convertError(error)))\n      .finally(() => {\n        progressRef.current = false;\n      });\n  }, [\n    hmsActions,\n    authToken,\n    authTokenByRoomCodeEndpoint,\n    setAuthTokenInAppData,\n    roomCode,\n    userId,\n    savedUserId,\n    tokenInAppData,\n    setSavedUserId,\n    activeState,\n  ]);\n\n  if (error.title) {\n    return (\n      <Dialog.Root open={true}>\n        <Dialog.Content\n          css={{\n            maxWidth: \"$100\",\n            boxSizing: \"border-box\",\n            p: \"$10 $12\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <img src={errorImage} height={80} width={80} alt=\"Token Error\" />\n          <Text variant=\"h4\" css={{ textAlign: \"center\", mb: \"$4\", mt: \"$10\" }}>\n            {error.title}\n          </Text>\n          <Text css={{ c: \"$on_surface_medium\", textAlign: \"center\" }}>\n            {error.body}\n          </Text>\n        </Dialog.Content>\n      </Dialog.Root>\n    );\n  }\n  return null;\n});\n\nconst convertError = (error: HMSException) => {\n  console.error(\"[error]\", { error });\n  console.warn(\n    \"If you think this is a mistake on our side, please reach out to us over Discord:\",\n    \"https://discord.com/invite/kGdmszyzq2\"\n  );\n  return match([error.action, error.code])\n    .with([\"GET_TOKEN\", 403], () => ({\n      title: \"Psst! This room is currently inactive.\",\n      body: \"Please feel free to join another open room for more conversations. Thanks for stopping by!\",\n    }))\n\n    .with([\"GET_TOKEN\", 404], () => ({\n      title: \"Room code does not exist\",\n      body: \"We could not find a room code corresponding to this link.\",\n    }))\n    .with([\"GET_TOKEN\", 2003], () => ({\n      title: \"Endpoint is not reachable\",\n      body: `Endpoint is not reachable. ${error.description}.`,\n    }))\n    .otherwise(() =>\n      // @ts-ignore\n      match(error.response?.status)\n        .with(404, () => ({\n          title: \"Room does not exist\",\n          body: \"We could not find a room corresponding to this link.\",\n        }))\n        .with(403, () => ({\n          title: \"Accessing room using this link format is disabled\",\n          body: \"You can re-enable this from the developer section in Dashboard.\",\n        }))\n        .otherwise(() => {\n          console.error(\"Token API Error\", error);\n          return {\n            title: \"Error fetching token\",\n            body: \"An error occurred while fetching the app token. Please look into logs for more details.\",\n          };\n        })\n    );\n};\n\nexport default AuthToken;\n", "import { IconButton as BaseIconButton } from \"../IconButton\";\nimport { styled } from \"../Theme\";\n\nconst IconButton = styled(BaseIconButton, {\n  width: \"$14\",\n  height: \"$14\",\n  border: \"1px solid $border_bright\",\n  bg: \"$background_dim\",\n  r: \"$1\",\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n    backgroundColor: \"$secondary_dim\",\n    color: \"$on_primary_high\",\n  },\n  variants: {\n    active: {\n      true: {\n        color: \"$on_surface_high\",\n        backgroundColor: \"transparent\",\n      },\n    },\n  },\n});\n\nexport default IconButton;\n", "import React from \"react\";\nimport { VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Flex } from \"../../../Layout\";\nimport { styled } from \"../../../Theme\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\n\nconst variants = {\n  disabled: {\n    true: {\n      bg: \"$surface_brighter\",\n    },\n  },\n  active: {\n    false: {\n      bg: \"$secondary_dim\",\n    },\n  },\n};\n\nconst IconSection = styled(IconButton, {\n  w: \"unset\",\n  h: \"$14\",\n  p: \"$4\",\n  r: \"$1\",\n  bg: \"transparent\",\n  borderTopRightRadius: \"0 !important\",\n  borderColor: \"$border_bright\",\n  borderBottomRightRadius: \"0 !important\",\n  position: \"relative\",\n  \"&:not([disabled]):focus-visible\": {\n    zIndex: 1,\n  },\n  \"@md\": {\n    mx: 0,\n    borderTopRightRadius: \"$1 !important\",\n    borderBottomRightRadius: \"$1 !important\",\n  },\n  variants: {\n    ...variants,\n    hideOptions: {\n      true: {\n        borderTopRightRadius: \"$1 !important\",\n        borderBottomRightRadius: \"$1 !important\",\n      },\n    },\n  },\n});\n\nconst OptionsSection = styled(IconButton, {\n  w: \"unset\",\n  h: \"$14\",\n  p: \"$4 $2\",\n  r: \"$1\",\n  borderTopLeftRadius: \"0 !important\",\n  borderColor: \"$border_bright\",\n  borderBottomLeftRadius: \"0 !important\",\n  borderLeftWidth: \"0 !important\",\n  position: \"relative\",\n  \"&:not([disabled]):focus-visible\": {\n    zIndex: 1,\n  },\n  \"@md\": {\n    display: \"none\",\n  },\n  variants,\n});\n\nconst Icon = styled(Flex, {\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"$on_primary_high\",\n  variants: {\n    disabled: {\n      true: {\n        color: \"$on_surface_low\",\n      },\n    },\n    active: {\n      true: {\n        color: \"$on_surface_high\",\n      },\n    },\n  },\n});\n\nexport const IconButtonWithOptions = ({\n  disabled = false,\n  onDisabledClick = () => {\n    return;\n  },\n  testid = \"\",\n  tooltipMessage = \"\",\n  icon,\n  children,\n  active,\n  hideOptions = false,\n  onClick = () => {\n    return;\n  },\n}: {\n  onClick: () => void;\n  onDisabledClick: () => void;\n  icon: React.ReactNode;\n  children: React.ReactNode;\n  testid?: string;\n  hideOptions?: boolean;\n  active: boolean;\n  disabled?: boolean;\n  tooltipMessage?: string;\n}) => {\n  const commonProps = { disabled, active };\n  return (\n    <Flex>\n      <IconSection\n        data-testid={testid}\n        {...commonProps}\n        onClick={onClick}\n        hideOptions={hideOptions}\n        className=\"__cancel-drag-event\"\n      >\n        <Tooltip disabled={!tooltipMessage} title={tooltipMessage}>\n          <Icon {...commonProps}>{icon}</Icon>\n        </Tooltip>\n      </IconSection>\n      {!hideOptions && children ? (\n        <Dropdown.Root>\n          <Dropdown.Trigger\n            asChild\n            // onClick does not work\n            onPointerDown={(e) => {\n              if (disabled) {\n                e.preventDefault();\n                onDisabledClick();\n              }\n            }}\n          >\n            <OptionsSection {...commonProps}>\n              <Tooltip title=\"View Options\">\n                <Icon {...commonProps}>\n                  <VerticalMenuIcon />\n                </Icon>\n              </Tooltip>\n            </OptionsSection>\n          </Dropdown.Trigger>\n          <Dropdown.Content\n            sideOffset={5}\n            alignOffset={-44}\n            align=\"start\"\n            side=\"top\"\n            css={{\n              w: 344,\n              maxWidth: \"100%\",\n              maxHeight: \"unset\",\n              p: 0,\n              border: \"none\",\n              bg: \"$surface_dim\",\n            }}\n          >\n            {children}\n          </Dropdown.Content>\n        </Dropdown.Root>\n      ) : null}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { styled } from \"../../../Theme\";\n\nconst ActionTileRoot = ({\n  active,\n  disabled = false,\n  children,\n  onClick,\n  ...props\n}) => (\n  <Flex\n    {...props}\n    css={{\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      p: \"$4 $2\",\n      position: \"relative\",\n      bg: active ? \"$surface_bright\" : \"\",\n      color: disabled ? \"$on_surface_low\" : \"$on_surface_high\",\n      gap: \"$4\",\n      r: \"$1\",\n      \"&:hover\": {\n        bg: \"$surface_bright\",\n      },\n    }}\n    onClick={() => {\n      if (!disabled) {\n        onClick();\n      }\n    }}\n  >\n    {children}\n  </Flex>\n);\n\nconst ActionTileCount = styled(Text, {\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  fontWeight: \"$semiBold\",\n  color: \"$on_surface_high\",\n  p: \"$1 $2\",\n  minWidth: \"$9\",\n  textAlign: \"center\",\n  boxSizing: \"border-box\",\n  bg: \"$surface_bright\",\n  r: \"$round\",\n  letterSpacing: \"1.5px\",\n  fontSize: \"$tiny !important\",\n  lineHeight: \"$tiny !important\",\n});\n\nconst ActionTileTitle = styled(Text, {\n  fontWeight: \"$semiBold\",\n  color: \"inherit\",\n  textAlign: \"center\",\n  fontSize: \"$xs !important\",\n});\n\nexport const ActionTile = {\n  Root: ActionTileRoot,\n  Title: ActionTileTitle,\n  Count: ActionTileCount,\n};\n", "import React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { CSS, VariantProps } from \"@stitches/react\";\nimport { Dialog } from \"../Modal\";\nimport { styled } from \"../Theme\";\nimport {\n  sheetFadeIn,\n  sheetFadeOut,\n  sheetSlideIn,\n  sheetSlideOut,\n} from \"../utils\";\n\nconst SheetRoot = styled(DialogPrimitive.Root, {\n  minHeight: \"240px\",\n  maxWidth: \"100%\",\n});\nconst SheetTrigger = styled(DialogPrimitive.Trigger, {\n  appearance: \"none !important\", // Needed for safari it shows white overlay\n});\n\nconst StyledOverlay = styled(Dialog.Overlay, {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n\n  '&[data-state=\"open\"]': {\n    animation: `${sheetFadeIn} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n  },\n\n  '&[data-state=\"closed\"]': {\n    animation: `${sheetFadeOut} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n  },\n});\n\nconst StyledContent = styled(DialogPrimitive.Content, {\n  color: \"$on_surface_medium\",\n  backgroundColor: \"$surface_default\",\n  borderTopLeftRadius: \"$3\",\n  borderTopRightRadius: \"$3\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  position: \"fixed\",\n  zIndex: 22,\n  top: 0,\n  right: 0,\n  left: 0,\n  bottom: 0,\n  maxHeight: \"96%\",\n\n  // Among other things, prevents text alignment inconsistencies when dialog can't be centered in the viewport evenly.\n  // Affects animated and non-animated dialogs alike.\n  willChange: \"transform\",\n\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"@allowMotion\": {\n    '&[data-state=\"open\"]': {\n      animation: `${sheetSlideIn} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n    },\n\n    '&[data-state=\"closed\"]': {\n      animation: `${sheetSlideOut} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n    },\n  },\n  \"@ls\": {\n    maxWidth: \"50%\",\n    margin: \"0 auto\",\n  },\n\n  variants: {\n    side: {\n      top: {\n        $$transformValue: \"translate3d(0,-100%,0)\",\n        bottom: \"auto\",\n      },\n      right: {\n        $$transformValue: \"translate3d(100%,0,0)\",\n        right: 0,\n      },\n      bottom: {\n        $$transformValue: \"translate3d(0,100%,0)\",\n        bottom: 0,\n        top: \"auto\",\n      },\n      left: {\n        $$transformValue: \"translate3d(-100%,0,0)\",\n        left: 0,\n      },\n    },\n  },\n\n  defaultVariants: {\n    side: \"bottom\",\n  },\n});\n\ntype SheetContentVariants = VariantProps<typeof StyledContent>;\ntype DialogContentPrimitiveProps = React.ComponentProps<\n  typeof DialogPrimitive.Content\n>;\ntype SheetContentProps = DialogContentPrimitiveProps &\n  SheetContentVariants & { css?: CSS; container?: HTMLElement };\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof StyledContent>,\n  SheetContentProps\n>(({ children, container, ...props }, forwardedRef) => (\n  <Dialog.Portal container={container}>\n    <StyledOverlay />\n    <StyledContent {...props} ref={forwardedRef}>\n      {children}\n    </StyledContent>\n  </Dialog.Portal>\n));\nconst SheetClose = Dialog.Close;\nconst SheetTitle = styled(DialogPrimitive.Title, {\n  margin: 0,\n});\nconst SheetDescription = Dialog.Description;\nconst SheetDefaultCloseIcon = Dialog.DefaultClose;\n\nexport const Sheet = {\n  Root: SheetRoot,\n  Trigger: SheetTrigger,\n  Content: SheetContent,\n  Description: SheetDescription,\n  Title: SheetTitle,\n  Close: SheetClose,\n  DefaultClose: SheetDefaultCloseIcon,\n};\n", "export { Sheet } from \"./Sheet\";\n", "import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Flex, Text, textEllipsis } from \"../../index\";\n\nconst DialogDropdownTrigger = React.forwardRef(\n  ({ title, css, open, icon, titleCSS = {} }, ref) => {\n    return (\n      <Dropdown.Trigger\n        asChild\n        data-testid={`${title}_selector`}\n        css={{\n          border: \"1px solid $border_bright\",\n          bg: \"$surface_bright\",\n          r: \"$1\",\n          p: \"$6 $9\",\n          zIndex: 10,\n          ...css,\n        }}\n        ref={ref}\n      >\n        <Flex\n          css={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            color: \"$on_surface_high\",\n            w: \"100%\",\n          }}\n        >\n          {icon}\n          <Text\n            css={{\n              color: \"inherit\",\n              ...textEllipsis(\"90%\"),\n              flex: \"1 1 0\",\n              mx: icon ? \"$6\" : \"0\",\n              ...titleCSS,\n            }}\n          >\n            {title}\n          </Text>\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </Flex>\n      </Dropdown.Trigger>\n    );\n  }\n);\n\nexport { DialogDropdownTrigger };\n", "import { useEffect, useRef, useState } from \"react\";\n\nexport const useAudioOutputTest = ({ deviceId }: { deviceId: string }) => {\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const [playing, setPlaying] = useState(false);\n  useEffect(() => {\n    if (audioRef.current && deviceId) {\n      try {\n        // @ts-ignore\n        if (typeof audioRef.current.setSinkId !== \"undefined\") {\n          // @ts-ignore\n          audioRef.current.setSinkId(deviceId);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [deviceId]);\n  return { playing, setPlaying, audioRef };\n};\n", "export const useDropdownSelection = () => {\n  return \"$surface_bright\";\n};\n", "import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  DeviceType,\n  selectIsLocalVideoEnabled,\n  selectLocalVideoTrackID,\n  selectVideoTrackByID,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon, SpeakerIcon, VideoOnIcon } from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Button,\n  Dropdown,\n  Flex,\n  StyledVideoTile,\n  Text,\n  Video,\n} from \"../../../\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { DialogDropdownTrigger } from \"../../primitives/DropdownTrigger\";\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { useAudioOutputTest } from \"../hooks/useAudioOutputTest\";\nimport { useDropdownSelection } from \"../hooks/useDropdownSelection\";\nimport { settingOverflow } from \"./common\";\nimport { TEST_AUDIO_URL, UI_SETTINGS } from \"../../common/constants\";\n\n/**\n * wrap the button on click of whom settings should open, this component will take care of the rest,\n * it'll give the user options to change input/output device as well as check speaker.\n * There is also another controlled way of using this by passing in open and onOpenChange.\n */\nconst Settings = ({ setHide }) => {\n  const { allDevices, selectedDeviceIDs, updateDevice } = useDevices();\n  const { videoInput, audioInput, audioOutput } = allDevices;\n  const videoTrackId = useHMSStore(selectLocalVideoTrackID);\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  // don't show speaker selector where the API is not supported, and use\n  // a generic word(\"Audio\") for Mic. In some cases(Chrome Android for example) this changes both mic and speaker keeping them in sync.\n  const shouldShowAudioOutput = \"setSinkId\" in HTMLMediaElement.prototype;\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const trackSelector = selectVideoTrackByID(videoTrackId);\n  const hmsActions = useHMSActions();\n  const track = useHMSStore(trackSelector);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  useEffect(() => {\n    if (isMobile) {\n      hmsActions.refreshDevices();\n    }\n  }, [hmsActions, isMobile]);\n\n  /**\n   * Chromium browsers return an audioOutput with empty label when no permissions are given\n   */\n  const audioOutputFiltered = audioOutput?.filter((item) => !!item.label) ?? [];\n\n  if (\n    !videoInput?.length &&\n    !audioInput?.length &&\n    !audioOutputFiltered?.length\n  ) {\n    setHide(true);\n  }\n\n  return (\n    <Box className={settingOverflow()}>\n      {videoInput?.length ? (\n        <Fragment>\n          {isVideoOn && (\n            <StyledVideoTile.Container\n              css={{\n                w: \"90%\",\n                px: \"$10\",\n                height: \"$48\",\n                bg: \"transparent\",\n                m: \"$10 auto\",\n              }}\n            >\n              <Video\n                trackId={videoTrackId}\n                mirror={track?.facingMode !== \"environment\" && mirrorLocalVideo}\n              />\n            </StyledVideoTile.Container>\n          )}\n          <DeviceSelector\n            title=\"Video\"\n            devices={videoInput}\n            icon={<VideoOnIcon />}\n            selection={selectedDeviceIDs.videoInput}\n            onChange={(deviceId) =>\n              updateDevice({\n                deviceId,\n                deviceType: DeviceType.videoInput,\n              })\n            }\n          />\n        </Fragment>\n      ) : null}\n\n      {audioInput?.length ? (\n        <DeviceSelector\n          title={shouldShowAudioOutput ? \"Microphone\" : \"Audio\"}\n          icon={<MicOnIcon />}\n          devices={audioInput}\n          selection={selectedDeviceIDs.audioInput}\n          onChange={(deviceId) =>\n            updateDevice({\n              deviceId,\n              deviceType: DeviceType.audioInput,\n            })\n          }\n        />\n      ) : null}\n\n      {audioOutputFiltered?.length && shouldShowAudioOutput ? (\n        <DeviceSelector\n          title=\"Speaker\"\n          icon={<SpeakerIcon />}\n          devices={audioOutput}\n          selection={selectedDeviceIDs.audioOutput}\n          onChange={(deviceId) =>\n            updateDevice({\n              deviceId,\n              deviceType: DeviceType.audioOutput,\n            })\n          }\n        >\n          <TestAudio id={selectedDeviceIDs.audioOutput} />\n        </DeviceSelector>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DeviceSelector = ({\n  title,\n  devices,\n  selection,\n  onChange,\n  icon,\n  children = null,\n}) => {\n  const [open, setOpen] = useState(false);\n  const selectionBg = useDropdownSelection();\n  const ref = useRef(null);\n\n  return (\n    <Box css={{ mb: \"$10\" }}>\n      <Text css={{ mb: \"$4\" }}>{title}</Text>\n      <Flex\n        align=\"center\"\n        css={{\n          gap: \"$4\",\n          \"@md\": {\n            flexDirection: children ? \"column\" : \"row\",\n            alignItems: children ? \"start\" : \"center\",\n          },\n        }}\n      >\n        <Box\n          css={{\n            position: \"relative\",\n            flex: \"1 1 0\",\n            minWidth: 0,\n            w: \"100%\",\n            maxWidth: \"100%\",\n            \"@md\": {\n              mb: children ? \"$8\" : 0,\n            },\n          }}\n        >\n          <Dropdown.Root open={open} onOpenChange={setOpen}>\n            <DialogDropdownTrigger\n              ref={ref}\n              icon={icon}\n              title={\n                devices.find(({ deviceId }) => deviceId === selection)?.label ||\n                \"Select device from list\"\n              }\n              open={open}\n            />\n            <Dropdown.Portal>\n              <Dropdown.Content\n                align=\"start\"\n                sideOffset={8}\n                css={{ w: ref.current?.clientWidth, zIndex: 1001 }}\n              >\n                {devices.map((device) => {\n                  return (\n                    <Dropdown.Item\n                      key={device.label}\n                      onSelect={() => onChange(device.deviceId)}\n                      css={{\n                        px: \"$9\",\n                        bg:\n                          device.deviceId === selection\n                            ? selectionBg\n                            : undefined,\n                      }}\n                    >\n                      {device.label}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Content>\n            </Dropdown.Portal>\n          </Dropdown.Root>\n        </Box>\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n\nconst TestAudio = ({ id }) => {\n  const { playing, setPlaying, audioRef } = useAudioOutputTest({\n    deviceId: id,\n  });\n  return (\n    <>\n      <Button\n        variant=\"standard\"\n        css={{\n          flexShrink: 0,\n          p: \"$6 $9\",\n          \"@md\": {\n            w: \"100%\",\n          },\n        }}\n        onClick={() => audioRef.current?.play()}\n        disabled={playing}\n      >\n        <SpeakerIcon />\n        &nbsp;Test{\" \"}\n        <Text as=\"span\" css={{ display: \"none\", \"@md\": { display: \"inline\" } }}>\n          &nbsp; speaker\n        </Text>\n      </Button>\n      <audio\n        ref={audioRef}\n        src={TEST_AUDIO_URL}\n        onEnded={() => setPlaying(false)}\n        onPlay={() => setPlaying(true)}\n        css={{ display: \"none\" }}\n      />\n    </>\n  );\n};\n\nexport default Settings;\n", "import React from \"react\";\nimport {\n  AlertOctagonIcon,\n  HandIcon,\n  PeopleAddIcon,\n  PeopleRemoveIcon,\n} from \"@100mslive/react-icons\";\nimport { Box } from \"../../..\";\nimport SwitchWithLabel from \"./SwitchWithLabel\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetSubscribedNotifications,\n  useSubscribedNotifications,\n} from \"../AppData/useUISettings\";\nimport { settingOverflow } from \"./common\";\nimport { SUBSCRIBED_NOTIFICATIONS } from \"../../common/constants\";\n\nconst NotificationItem = ({\n  type,\n  label,\n  icon,\n  checked,\n}: {\n  type: string;\n  label: string;\n  icon: React.ReactNode;\n  checked: boolean;\n}) => {\n  const [, setSubscribedNotifications] = useSetSubscribedNotifications(type);\n  return (\n    <SwitchWithLabel\n      label={label}\n      id={type}\n      icon={icon}\n      checked={checked}\n      onChange={(value) => {\n        setSubscribedNotifications(value);\n      }}\n    />\n  );\n};\n\nexport const NotificationSettings = () => {\n  const subscribedNotifications = useSubscribedNotifications();\n\n  return (\n    <Box className={settingOverflow()}>\n      <NotificationItem\n        label=\"Peer Joined\"\n        type={SUBSCRIBED_NOTIFICATIONS.PEER_JOINED}\n        icon={<PeopleAddIcon />}\n        checked={subscribedNotifications.PEER_JOINED}\n      />\n      <NotificationItem\n        label=\"Peer Leave\"\n        type={SUBSCRIBED_NOTIFICATIONS.PEER_LEFT}\n        icon={<PeopleRemoveIcon />}\n        checked={subscribedNotifications.PEER_LEFT}\n      />\n      <NotificationItem\n        label=\"Hand Raised\"\n        type={SUBSCRIBED_NOTIFICATIONS.METADATA_UPDATED}\n        icon={<HandIcon />}\n        checked={subscribedNotifications.METADATA_UPDATED}\n      />\n      <NotificationItem\n        label=\"Error\"\n        type={SUBSCRIBED_NOTIFICATIONS.ERROR}\n        icon={<AlertOctagonIcon />}\n        checked={subscribedNotifications.ERROR}\n      />\n    </Box>\n  );\n};\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  ChevronLeftIcon,\n  CrossIcon,\n  GridFourIcon,\n  NotificationsIcon,\n  SettingsIcon,\n} from \"@100mslive/react-icons\";\nimport { HorizontalDivider } from \"../../../Divider\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Tabs } from \"../../../Tabs\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport DeviceSettings from \"./DeviceSettings\";\nimport { LayoutSettings } from \"./LayoutSettings\";\nimport { NotificationSettings } from \"./NotificationSettings\";\nimport { settingContent } from \"./common\";\n\nconst settingsList = [\n  {\n    tabName: \"devices\",\n    title: \"Device Settings\",\n    icon: SettingsIcon,\n    content: DeviceSettings,\n  },\n  {\n    tabName: \"notifications\",\n    title: \"Notifications\",\n    icon: NotificationsIcon,\n    content: NotificationSettings,\n  },\n  {\n    tabName: \"layout\",\n    title: \"Layout\",\n    icon: GridFourIcon,\n    content: LayoutSettings,\n  },\n];\n\nconst SettingsModal = ({\n  open,\n  onOpenChange,\n  screenType,\n  children = <></>,\n}) => {\n  const mediaQueryLg = cssConfig.media.md;\n  const isMobile = useMedia(mediaQueryLg);\n\n  const [showSetting, setShowSetting] = useState(() =>\n    settingsList.reduce((obj, { tabName }) => ({ ...obj, [tabName]: true }), {})\n  );\n\n  const hideSettingByTabName = useCallback(\n    (key) => (hide) => setShowSetting((prev) => ({ ...prev, [key]: !hide })),\n    [setShowSetting]\n  );\n\n  useEffect(() => {\n    if (screenType === \"hls_live_streaming\") {\n      hideSettingByTabName(\"layout\")(true);\n    }\n  }, [screenType, hideSettingByTabName]);\n\n  const [selection, setSelection] = useState(\n    () => Object.keys(showSetting).find((key) => showSetting[key]) ?? \"\"\n  );\n  const resetSelection = useCallback(() => {\n    setSelection(\"\");\n  }, []);\n\n  useEffect(() => {\n    if (isMobile) {\n      setSelection(\"\");\n    } else {\n      const firstNotHiddenTabName =\n        Object.keys(showSetting).find((key) => showSetting[key]) ?? \"\";\n      setSelection(firstNotHiddenTabName);\n    }\n  }, [isMobile, showSetting]);\n\n  return isMobile ? (\n    <MobileSettingModal\n      open={open}\n      onOpenChange={onOpenChange}\n      selection={selection}\n      setSelection={setSelection}\n      showSetting={showSetting}\n      hideSettingByTabName={hideSettingByTabName}\n      resetSelection={resetSelection}\n    >\n      {children}\n    </MobileSettingModal>\n  ) : (\n    <DesktopSettingModal\n      open={open}\n      onOpenChange={onOpenChange}\n      selection={selection}\n      setSelection={setSelection}\n      showSetting={showSetting}\n      hideSettingByTabName={hideSettingByTabName}\n      resetSelection={resetSelection}\n    >\n      {children}\n    </DesktopSettingModal>\n  );\n};\n\nconst MobileSettingModal = ({\n  open,\n  onOpenChange,\n  selection,\n  setSelection,\n  showSetting,\n  hideSettingByTabName,\n  resetSelection,\n  children = <></>,\n}) => {\n  return (\n    <Sheet.Root open={open} onOpenChange={onOpenChange}>\n      <Sheet.Trigger asChild>{children}</Sheet.Trigger>\n      <Sheet.Content\n        css={{\n          bg: \"$surface_dim\",\n          overflowY: \"auto\",\n        }}\n      >\n        <Sheet.Title css={{ py: \"$10\", px: \"$8\", alignItems: \"center\" }}>\n          <Flex direction=\"row\" justify=\"between\" css={{ w: \"100%\" }}>\n            {!selection ? (\n              <Text variant=\"h6\" css={{ display: \"flex\" }}>\n                Settings\n              </Text>\n            ) : (\n              <Text variant=\"h6\" css={{ display: \"flex\" }}>\n                <Box\n                  as=\"span\"\n                  css={{ r: \"$round\", mr: \"$2\" }}\n                  onClick={resetSelection}\n                >\n                  <ChevronLeftIcon />\n                </Box>\n                {selection?.charAt(0).toUpperCase() + selection.slice(1)}\n              </Text>\n            )}\n            <Sheet.Close>\n              <IconButton as=\"div\" data-testid=\"dialog_cross_icon\">\n                <CrossIcon />\n              </IconButton>\n            </Sheet.Close>\n          </Flex>\n        </Sheet.Title>\n        <HorizontalDivider />\n        {!selection ? (\n          <Flex\n            direction=\"column\"\n            css={{\n              px: \"$8\",\n              pb: \"$8\",\n              overflowY: \"auto\",\n            }}\n          >\n            {settingsList\n              .filter(({ tabName }) => showSetting[tabName])\n              .map(({ icon: Icon, tabName, title }) => {\n                return (\n                  <Box\n                    key={tabName}\n                    value={tabName}\n                    onClick={() => {\n                      setSelection(tabName);\n                    }}\n                    as=\"div\"\n                    css={{\n                      all: \"unset\",\n                      fontFamily: \"$sans\",\n                      py: \"$10\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontSize: \"$sm\",\n                      lineHeight: \"$sm\",\n                      color: \"$on_surface_high\",\n                      userSelect: \"none\",\n                      gap: \"$8\",\n                      cursor: \"pointer\",\n                      \"&:hover\": {\n                        bg: \"$surface_brighter\",\n                        r: \"$1\",\n                        gap: \"$8\",\n                        border: \"none\",\n                      },\n                      borderBottom: \"1px solid $border_default\",\n                    }}\n                  >\n                    <Icon />\n                    {title}\n                  </Box>\n                );\n              })}\n          </Flex>\n        ) : (\n          <Box\n            direction=\"column\"\n            css={{\n              overflowY: \"scroll\",\n              px: \"$8\",\n              py: \"$10\",\n              maxHeight: \"70vh\",\n              overflowX: \"hidden\",\n            }}\n          >\n            {settingsList\n              .filter(\n                ({ tabName }) => showSetting[tabName] && selection === tabName\n              )\n              .map(({ content: Content, title, tabName }) => {\n                return (\n                  <Content\n                    key={title}\n                    setHide={hideSettingByTabName(tabName)}\n                  />\n                );\n              })}\n          </Box>\n        )}\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\nconst DesktopSettingModal = ({\n  open,\n  onOpenChange,\n  selection,\n  setSelection,\n  showSetting,\n  hideSettingByTabName,\n  resetSelection,\n  children = <></>,\n}) => {\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Trigger asChild>{children}</Dialog.Trigger>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(800px, 90%)\",\n            height: \"min(656px, 90%)\",\n            p: 0,\n            r: \"$4\",\n          }}\n        >\n          <Tabs.Root\n            value={selection}\n            activationMode=\"automatic\"\n            onValueChange={setSelection}\n            css={{ size: \"100%\", position: \"relative\" }}\n          >\n            <Tabs.List\n              css={{\n                w: \"18.625rem\",\n                flexDirection: \"column\",\n                bg: \"$background_default\",\n                p: \"$14 $10\",\n                borderTopLeftRadius: \"$4\",\n                borderBottomLeftRadius: \"$4\",\n              }}\n            >\n              <Text variant=\"h5\">Settings </Text>\n              <Flex\n                direction=\"column\"\n                css={{ mx: 0, overflowY: \"auto\", pt: \"$10\" }}\n              >\n                {settingsList\n                  .filter(({ tabName }) => showSetting[tabName])\n                  .map(({ icon: Icon, tabName, title }) => {\n                    return (\n                      <Tabs.Trigger\n                        key={tabName}\n                        value={tabName}\n                        css={{ gap: \"$8\" }}\n                      >\n                        <Icon />\n                        {title}\n                      </Tabs.Trigger>\n                    );\n                  })}\n              </Flex>\n            </Tabs.List>\n            {selection && (\n              <Flex\n                direction=\"column\"\n                css={{\n                  flex: \"1 1 0\",\n                  minWidth: 0,\n                  mr: \"$4\",\n                }}\n              >\n                {settingsList\n                  .filter(({ tabName }) => showSetting[tabName])\n                  .map(({ content: Content, title, tabName }) => {\n                    return (\n                      <Tabs.Content\n                        key={tabName}\n                        value={tabName}\n                        className={settingContent()}\n                      >\n                        <SettingsContentHeader\n                          onBack={resetSelection}\n                          isMobile={false}\n                        >\n                          {title}\n                        </SettingsContentHeader>\n                        <Content setHide={hideSettingByTabName(tabName)} />\n                      </Tabs.Content>\n                    );\n                  })}\n              </Flex>\n            )}\n          </Tabs.Root>\n          <Dialog.Close\n            css={{ position: \"absolute\", right: \"$10\", top: \"$10\" }}\n          >\n            <IconButton as=\"div\" data-testid=\"dialog_cross_icon\">\n              <CrossIcon />\n            </IconButton>\n          </Dialog.Close>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\nconst SettingsContentHeader = ({ children, isMobile, onBack }) => {\n  return (\n    <Text\n      variant=\"h6\"\n      css={{ mb: \"$12\", display: \"flex\", alignItems: \"center\" }}\n    >\n      {isMobile && (\n        <Box\n          as=\"span\"\n          css={{ bg: \"$surface_bright\", mr: \"$4\", r: \"$round\", p: \"$2\" }}\n          onClick={onBack}\n        >\n          <ChevronLeftIcon />\n        </Box>\n      )}\n      {children}\n    </Text>\n  );\n};\n\nexport default SettingsModal;\n", "import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { HMSKrispPlugin } from \"@100mslive/hms-noise-cancellation\";\nimport {\n  DeviceType,\n  HMSRoomState,\n  selectIsLocalAudioPluginPresent,\n  selectLocalAudioTrackID,\n  selectLocalPeer,\n  selectLocalVideoTrackID,\n  selectRoom,\n  selectRoomState,\n  selectVideoTrackByID,\n  useAVToggle,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  AudioLevelIcon,\n  CameraFlipIcon,\n  CheckIcon,\n  MicOffIcon,\n  MicOnIcon,\n  SettingsIcon,\n  SpeakerIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { IconButtonWithOptions } from \"./IconButtonWithOptions/IconButtonWithOptions\";\n// @ts-ignore: No implicit Any\nimport { ActionTile } from \"./MoreSettings/ActionTile\";\n// @ts-ignore: No implicit Any\nimport SettingsModal from \"./Settings/SettingsModal\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { AudioLevel } from \"../../AudioLevel\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Switch } from \"../../Switch\";\nimport { Text } from \"../../Text\";\nimport { Tooltip } from \"../../Tooltip\";\nimport IconButton from \"../IconButton\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsNoiseCancellationEnabled,\n  useSetNoiseCancellation,\n} from \"./AppData/useUISettings\";\nimport { useAudioOutputTest } from \"./hooks/useAudioOutputTest\";\nimport { isAndroid, isIOS, isMacOS, TEST_AUDIO_URL } from \"../common/constants\";\n\nconst krispPlugin = new HMSKrispPlugin();\n// const optionsCSS = { fontWeight: '$semiBold', color: '$on_surface_high', w: '100%' };\n\nexport const Options = ({\n  options,\n  selectedDeviceId,\n  onClick,\n}: {\n  options?: Array<MediaDeviceInfo | InputDeviceInfo>;\n  selectedDeviceId?: string;\n  onClick: (deviceId: string) => Promise<void>;\n}) => {\n  return (\n    <>\n      {options?.map((option) => (\n        <Dropdown.Item\n          key={option.label}\n          css={{\n            backgroundColor: \"$surface_dim\",\n            p: \"$4 $8\",\n            h: \"$15\",\n            fontSize: \"$xs\",\n            justifyContent: \"space-between\",\n            color:\n              selectedDeviceId === option.deviceId ? \"$primary_bright\" : \"\",\n          }}\n          onClick={() => {\n            onClick(option.deviceId);\n          }}\n        >\n          {option.label}\n          {selectedDeviceId === option.deviceId ? (\n            <CheckIcon width={16} height={16} />\n          ) : null}\n        </Dropdown.Item>\n      ))}\n    </>\n  );\n};\n\nconst OptionLabel = ({\n  children,\n  icon,\n}: {\n  children: React.ReactNode;\n  icon: React.ReactNode;\n}) => {\n  return (\n    <Dropdown.Label\n      css={{\n        h: \"$16\",\n        p: \"$4 $8\",\n        color: \"$on_surface_medium\",\n        bg: \"transparent\",\n        fontSize: \"$xs\",\n        gap: \"$4\",\n        alignItems: \"center\",\n      }}\n    >\n      <Flex\n        css={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          \"& svg\": { size: \"$8\" },\n        }}\n      >\n        {icon}\n      </Flex>{\" \"}\n      {children}\n    </Dropdown.Label>\n  );\n};\n\nconst useNoiseCancellationWithPlugin = () => {\n  const actions = useHMSActions();\n  const [inProgress, setInProgress] = useState(false);\n  const [, setNoiseCancellationEnabled] = useSetNoiseCancellation();\n  const isEnabledForRoom = useHMSStore(selectRoom)?.isNoiseCancellationEnabled;\n  const setNoiseCancellationWithPlugin = useCallback(\n    async (enabled: boolean) => {\n      if (!isEnabledForRoom || inProgress) {\n        return;\n      }\n      if (!krispPlugin.checkSupport().isSupported) {\n        throw Error(\"Krisp plugin is not supported\");\n      }\n      setInProgress(true);\n      if (enabled) {\n        await actions.addPluginToAudioTrack(krispPlugin);\n      } else {\n        await actions.removePluginFromAudioTrack(krispPlugin);\n      }\n      setNoiseCancellationEnabled(enabled);\n      setInProgress(false);\n    },\n    [actions, inProgress, isEnabledForRoom, setNoiseCancellationEnabled]\n  );\n  return {\n    setNoiseCancellationWithPlugin,\n    inProgress,\n  };\n};\n\nexport const NoiseCancellation = ({\n  actionTile,\n  iconOnly,\n  setOpenOptionsSheet,\n}: {\n  setOpenOptionsSheet?: (value: boolean) => void;\n  iconOnly?: boolean;\n  actionTile?: boolean;\n}) => {\n  const localPeerAudioTrackID = useHMSStore(selectLocalAudioTrackID);\n  const isNoiseCancellationEnabled = useIsNoiseCancellationEnabled();\n  const { setNoiseCancellationWithPlugin, inProgress } =\n    useNoiseCancellationWithPlugin();\n  const room = useHMSStore(selectRoom);\n  const isKrispPluginAdded = useHMSStore(\n    selectIsLocalAudioPluginPresent(krispPlugin.getName())\n  );\n\n  if (\n    !krispPlugin.isSupported() ||\n    !room.isNoiseCancellationEnabled ||\n    !localPeerAudioTrackID\n  ) {\n    return null;\n  }\n\n  if (actionTile) {\n    return (\n      <ActionTile.Root\n        active={isNoiseCancellationEnabled && isKrispPluginAdded}\n        disable={inProgress}\n        onClick={async () => {\n          await setNoiseCancellationWithPlugin(!isNoiseCancellationEnabled);\n          setOpenOptionsSheet?.(false);\n        }}\n      >\n        <AudioLevelIcon />\n        <ActionTile.Title>\n          {isNoiseCancellationEnabled ? \"Noise Reduced\" : \"Reduce Noise\"}\n        </ActionTile.Title>\n      </ActionTile.Root>\n    );\n  }\n\n  if (iconOnly) {\n    return (\n      <Tooltip\n        title={isNoiseCancellationEnabled ? \"Noise Reduced\" : \"Reduce Noise\"}\n      >\n        <IconButton\n          onClick={async () => {\n            await setNoiseCancellationWithPlugin(!isNoiseCancellationEnabled);\n          }}\n          disabled={inProgress}\n          css={{\n            bg:\n              isNoiseCancellationEnabled && isKrispPluginAdded\n                ? \"$surface_brighter\"\n                : \"$background_dim\",\n            borderColor:\n              isNoiseCancellationEnabled && isKrispPluginAdded\n                ? \"$border_brighter\"\n                : \"$border_bright\",\n          }}\n        >\n          <AudioLevelIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n  return (\n    <>\n      <Dropdown.ItemSeparator css={{ mx: 0 }} />\n      <Dropdown.Item\n        css={{\n          p: \"$4 $8\",\n          h: \"$15\",\n          fontSize: \"$xs\",\n          justifyContent: \"space-between\",\n        }}\n        onClick={async (e) => {\n          e.preventDefault();\n          await setNoiseCancellationWithPlugin(!isNoiseCancellationEnabled);\n        }}\n      >\n        <Text\n          css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$2\",\n            fontSize: \"$xs\",\n            \"& svg\": { size: \"$8\" },\n          }}\n        >\n          <AudioLevelIcon />\n          Reduce Noise\n        </Text>\n        <Switch\n          id=\"noise_cancellation\"\n          checked={isNoiseCancellationEnabled && isKrispPluginAdded}\n          disabled={inProgress}\n          onClick={(e) => e.stopPropagation()}\n          onCheckedChange={async (value) => {\n            await setNoiseCancellationWithPlugin(value);\n          }}\n        />\n      </Dropdown.Item>\n      <Dropdown.ItemSeparator css={{ mx: 0 }} />\n    </>\n  );\n};\n\nconst AudioOutputLabel = ({ deviceId }: { deviceId: string }) => {\n  const { playing, setPlaying, audioRef } = useAudioOutputTest({ deviceId });\n  return (\n    <OptionLabel icon={<SpeakerIcon />}>\n      <Box css={{ flex: \"1 1 0\" }}>Speakers</Box>\n      <Text\n        variant=\"xs\"\n        css={{ color: \"$primary_bright\", \"&:hover\": { cursor: \"pointer\" } }}\n        onClick={async () => {\n          if (playing) {\n            return;\n          }\n          await audioRef.current?.play();\n        }}\n      >\n        <audio\n          ref={audioRef}\n          src={TEST_AUDIO_URL}\n          onEnded={() => setPlaying(false)}\n          onPlay={() => setPlaying(true)}\n          style={{ display: \"none\" }}\n        />\n        {playing ? \"Playing Sound...\" : \"Play Test Sound\"}\n      </Text>\n    </OptionLabel>\n  );\n};\n\nconst AudioSettings = ({ onClick }: { onClick: () => void }) => {\n  return (\n    <>\n      <Dropdown.Item\n        css={{\n          backgroundColor: \"$surface_dim\",\n          p: \"$4 $8\",\n          h: \"$15\",\n          alignItems: \"center\",\n          gap: \"$2\",\n          fontSize: \"$xs\",\n          \"& svg\": { size: \"$8\" },\n        }}\n        onClick={onClick}\n      >\n        <SettingsIcon /> Audio Settings\n      </Dropdown.Item>\n    </>\n  );\n};\nexport const AudioVideoToggle = ({\n  hideOptions = false,\n}: {\n  hideOptions?: boolean;\n}) => {\n  const { allDevices, selectedDeviceIDs, updateDevice } = useDevices(\n    (error) => {\n      ToastManager.addToast({\n        title: error.message,\n        variant: \"error\",\n        duration: 2000,\n      });\n    }\n  );\n  const { videoInput, audioInput, audioOutput } = allDevices;\n  const localPeer = useHMSStore(selectLocalPeer);\n  const { isLocalVideoEnabled, isLocalAudioEnabled, toggleAudio, toggleVideo } =\n    useAVToggle();\n  const actions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const videoTrackId = useHMSStore(selectLocalVideoTrackID);\n  const localVideoTrack = useHMSStore(selectVideoTrackByID(videoTrackId));\n  const roomState = useHMSStore(selectRoomState);\n  const hasAudioDevices = Number(audioInput?.length) > 0;\n  const hasVideoDevices = Number(videoInput?.length) > 0;\n  const shouldShowAudioOutput =\n    \"setSinkId\" in HTMLMediaElement.prototype &&\n    Number(audioOutput?.length) > 0;\n  const { screenType } = useRoomLayoutConferencingScreen();\n  const [showSettings, setShowSettings] = useState(false);\n  const isKrispPluginAdded = useHMSStore(\n    selectIsLocalAudioPluginPresent(krispPlugin.getName())\n  );\n  const isNoiseCancellationEnabled = useIsNoiseCancellationEnabled();\n  const { setNoiseCancellationWithPlugin, inProgress } =\n    useNoiseCancellationWithPlugin();\n  const showMuteIcon = !isLocalAudioEnabled || !toggleAudio;\n\n  useEffect(() => {\n    (async () => {\n      const isEnabledForRoom =\n        vanillaStore.getState(selectRoom)?.isNoiseCancellationEnabled;\n      if (\n        isEnabledForRoom &&\n        isNoiseCancellationEnabled &&\n        !isKrispPluginAdded &&\n        !inProgress &&\n        localPeer?.audioTrack\n      ) {\n        try {\n          await setNoiseCancellationWithPlugin(true);\n          ToastManager.addToast({\n            title: `Noise Reduction Enabled`,\n            variant: \"standard\",\n            duration: 2000,\n            icon: <AudioLevelIcon />,\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isNoiseCancellationEnabled, localPeer?.audioTrack, inProgress]);\n\n  if (!toggleAudio && !toggleVideo) {\n    return null;\n  }\n  return (\n    <Fragment>\n      {toggleAudio ? (\n        <IconButtonWithOptions\n          disabled={!toggleAudio}\n          hideOptions={hideOptions || !hasAudioDevices}\n          onDisabledClick={toggleAudio}\n          testid=\"audio_toggle_btn\"\n          tooltipMessage={`Turn ${isLocalAudioEnabled ? \"off\" : \"on\"} audio (${\n            isMacOS ? \"\u2318\" : \"ctrl\"\n          } + d)`}\n          icon={!isLocalAudioEnabled ? <MicOffIcon /> : <MicOnIcon />}\n          active={isLocalAudioEnabled}\n          onClick={toggleAudio}\n          key=\"toggleAudio\"\n        >\n          <Dropdown.Group>\n            <OptionLabel icon={<MicOnIcon />}>\n              <Box css={{ flex: \"1 1 0\" }}>\n                {!shouldShowAudioOutput ? \"Audio\" : \"Microphone\"}\n              </Box>\n              {!showMuteIcon && <AudioLevel trackId={localPeer?.audioTrack} />}\n            </OptionLabel>\n            <Options\n              options={audioInput}\n              selectedDeviceId={selectedDeviceIDs.audioInput}\n              onClick={(deviceId) =>\n                updateDevice({ deviceId, deviceType: DeviceType.audioInput })\n              }\n            />\n          </Dropdown.Group>\n          <Dropdown.ItemSeparator css={{ mx: 0 }} />\n          {shouldShowAudioOutput && (\n            <>\n              <AudioOutputLabel\n                deviceId={selectedDeviceIDs.audioOutput || \"\"}\n              />\n              <Dropdown.Group>\n                <Options\n                  options={audioOutput}\n                  selectedDeviceId={selectedDeviceIDs.audioOutput}\n                  onClick={(deviceId) =>\n                    updateDevice({\n                      deviceId,\n                      deviceType: DeviceType.audioOutput,\n                    })\n                  }\n                />\n              </Dropdown.Group>\n            </>\n          )}\n          <NoiseCancellation />\n          <AudioSettings onClick={() => setShowSettings(true)} />\n        </IconButtonWithOptions>\n      ) : null}\n\n      {toggleVideo ? (\n        <IconButtonWithOptions\n          disabled={!toggleVideo}\n          hideOptions={hideOptions || !hasVideoDevices}\n          onDisabledClick={toggleVideo}\n          tooltipMessage={`Turn ${isLocalVideoEnabled ? \"off\" : \"on\"} video (${\n            isMacOS ? \"\u2318\" : \"ctrl\"\n          } + e)`}\n          testid=\"video_toggle_btn\"\n          icon={!isLocalVideoEnabled ? <VideoOffIcon /> : <VideoOnIcon />}\n          key=\"toggleVideo\"\n          active={isLocalVideoEnabled}\n          onClick={toggleVideo}\n        >\n          <Options\n            options={videoInput}\n            selectedDeviceId={selectedDeviceIDs.videoInput}\n            onClick={(deviceId) =>\n              updateDevice({ deviceId, deviceType: DeviceType.videoInput })\n            }\n          />\n        </IconButtonWithOptions>\n      ) : null}\n\n      {localVideoTrack?.facingMode &&\n      roomState === HMSRoomState.Preview &&\n      (isIOS || isAndroid) ? (\n        <Tooltip title=\"Switch Camera\" key=\"switchCamera\">\n          <IconButton\n            onClick={async () => {\n              try {\n                await actions.switchCamera();\n              } catch (e) {\n                ToastManager.addToast({\n                  title: `Error while flipping camera ${\n                    (e as Error).message || \"\"\n                  }`,\n                  variant: \"error\",\n                });\n              }\n            }}\n          >\n            <CameraFlipIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n      {showSettings && (\n        <SettingsModal\n          open={showSettings}\n          onOpenChange={() => setShowSettings(false)}\n          screenType={screenType}\n        />\n      )}\n    </Fragment>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectIsTranscriptionEnabled,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ClosedCaptionIcon, OpenCaptionIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"../../Tooltip\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../IconButton\";\n// @ts-ignore: No implicit Any\nimport { useSetIsCaptionEnabled } from \"./AppData/useUISettings.js\";\n\nexport const CaptionIcon = () => {\n  const isCaptionPresent = useHMSStore(selectIsTranscriptionEnabled);\n  const [isCaption, setIsCaption] = useSetIsCaptionEnabled();\n\n  const onClick = () => {\n    setIsCaption(!isCaption);\n  };\n  if (!isCaptionPresent) {\n    return null;\n  }\n  return (\n    <Tooltip\n      title={isCaption ? \"Hide closed captions\" : \"Show closed captions\"}\n    >\n      <IconButton data-testid=\"caption_btn\" onClick={onClick}>\n        {isCaption ? (\n          <ClosedCaptionIcon width=\"20\" height=\"20px\" />\n        ) : (\n          <OpenCaptionIcon width=\"20\" height=\"20px\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { styled } from \"../../../Theme\";\n\n// When changing emojis in the grid, keep in mind that the payload used in sendHLSTimedMetadata has a limit of 100 characters. Using bigger emoji Ids can cause the limit to be exceeded.\nconst emojiReactionList = [\n  [\n    { emojiId: \"+1\" },\n    { emojiId: \"-1\" },\n    { emojiId: \"wave\" },\n    { emojiId: \"clap\" },\n    { emojiId: \"fire\" },\n  ],\n  [\n    { emojiId: \"tada\" },\n    { emojiId: \"heart_eyes\" },\n    { emojiId: \"joy\" },\n    { emojiId: \"open_mouth\" },\n    { emojiId: \"sob\" },\n  ],\n];\n\nexport const EmojiCard = ({ sendReaction }) => {\n  return emojiReactionList.map((emojiLine, index) => (\n    <Flex key={index} justify=\"between\" css={{ mb: \"$8\" }}>\n      {emojiLine.map((emoji) => (\n        <EmojiContainer\n          key={emoji.emojiId}\n          onClick={() => sendReaction(emoji.emojiId)}\n        >\n          <em-emoji id={emoji.emojiId} size=\"100%\" set=\"apple\"></em-emoji>\n        </EmojiContainer>\n      ))}\n    </Flex>\n  ));\n};\n\nconst EmojiContainer = styled(\"span\", {\n  position: \"relative\",\n  cursor: \"pointer\",\n  width: \"$16\",\n  height: \"$16\",\n  p: \"$4\",\n  \"&:hover\": {\n    p: \"7px\",\n    bg: \"$surface_brighter\",\n    borderRadius: \"$1\",\n  },\n});\n", "import { useEffect } from \"react\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useDropdownList = ({\n  name,\n  open,\n}: {\n  name: string;\n  open: boolean;\n}) => {\n  const [dropdownList = [], setDropdownList] = useSetAppDataByKey(\n    APP_DATA.dropdownList\n  );\n\n  useEffect(() => {\n    if (open) {\n      if (!dropdownList.includes(name)) {\n        setDropdownList([...dropdownList, name]);\n      }\n    } else {\n      const index = dropdownList.indexOf(name);\n      if (index >= 0) {\n        const newDropdownList = [...dropdownList];\n        newDropdownList.splice(index, 1);\n        setDropdownList(newDropdownList);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, name]);\n};\n", "import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { HMSHLSPlayer } from \"@100mslive/hls-player\";\nimport { JoinForm_JoinBtnType } from \"@100mslive/types-prebuilt/elements/join_form\";\nimport {\n  HMSPeer,\n  HMSRecording,\n  parsedUserAgent,\n  selectAvailableRoleNames,\n  selectIsAllowedToPublish,\n  selectIsConnectedToRoom,\n  selectLocalPeerRole,\n  selectPeerCount,\n  selectPeerMetadata,\n  selectPeers,\n  selectPeersByRoles,\n  selectRecordingState,\n  selectRemotePeers,\n  selectRolesMap,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { config } from \"../../Theme\";\nimport { useRoomLayout } from \"../provider/roomLayoutProvider\";\n// @ts-ignore\nimport { useSetAppDataByKey } from \"../components/AppData/useUISettings\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit any\nimport { isScreenshareSupported } from \"../common/utils\";\nimport {\n  APP_DATA,\n  CHAT_SELECTOR,\n  RTMP_RECORD_DEFAULT_RESOLUTION,\n} from \"./constants\";\n/**\n * Hook to execute a callback when alone in room(after a certain 5d of time)\n * @param {number} thresholdMs The threshold(in ms) after which the callback is executed,\n * starting from the instant when alone in room.\n * note: the cb is not called when another peer joins during this period.\n */\nexport const useWhenAloneInRoom = (thresholdMs = 5 * 60 * 1000) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const peerCount = useHMSStore(selectPeerCount);\n  const [aloneForLong, setAloneForLong] = useState(false);\n  const cbTimeout = useRef(null);\n  const alone = isConnected && peerCount === 1;\n\n  useEffect(() => {\n    if (alone && !cbTimeout.current) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      cbTimeout.current = setTimeout(() => {\n        setAloneForLong(true);\n      }, thresholdMs);\n    } else if (!alone) {\n      cbTimeout.current && clearTimeout(cbTimeout.current);\n      cbTimeout.current = null;\n      setAloneForLong(false);\n    }\n  }, [alone, thresholdMs]);\n\n  useEffect(() => {\n    return () => {\n      if (cbTimeout.current) {\n        clearTimeout(cbTimeout.current);\n      }\n    };\n  }, []);\n\n  return { alone, aloneForLong };\n};\n\nexport const useFilteredRoles = () => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  return elements?.chat?.roles_whitelist || [];\n};\n\nexport const useDefaultChatSelection = () => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const roles = useFilteredRoles();\n  // default is everyone for public chat\n  if (elements?.chat?.public_chat_enabled) {\n    return CHAT_SELECTOR.EVERYONE;\n  }\n  // sending first role as default\n  if (roles.length > 0) {\n    return roles[0];\n  }\n  // sending empty\n  return \"\";\n};\n\nexport const useShowStreamingUI = () => {\n  const layout = useRoomLayout();\n  const { join_form } = layout?.screens?.preview?.default?.elements || {};\n  return (\n    join_form?.join_btn_type ===\n    JoinForm_JoinBtnType.JOIN_BTN_TYPE_JOIN_AND_GO_LIVE\n  );\n};\n\n// The search results should not have role name matches\nexport const useParticipants = (params?: {\n  metadata?: { isHandRaised?: boolean };\n  role?: string;\n  search?: string;\n}) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const peerCount = useHMSStore(selectPeerCount);\n  const availableRoles = useHMSStore(selectAvailableRoleNames);\n  let participantList = useHMSStore(\n    isConnected ? selectPeers : selectRemotePeers\n  );\n  const rolesWithParticipants = Array.from(\n    new Set(participantList.map((peer) => peer.roleName))\n  );\n  const vanillaStore = useHMSVanillaStore();\n  if (params?.metadata?.isHandRaised) {\n    participantList = participantList.filter((peer) => {\n      return vanillaStore.getState(selectPeerMetadata(peer.id)).isHandRaised;\n    });\n  }\n  if (params?.role && availableRoles.includes(params.role)) {\n    participantList = participantList.filter(\n      (peer) => peer.roleName === params.role\n    );\n  }\n  if (params?.search) {\n    const search = params.search;\n    // Removed peer.roleName?.toLowerCase().includes(search)\n    participantList = participantList.filter((peer) =>\n      peer.name.toLowerCase().includes(search)\n    );\n  }\n  return {\n    participants: participantList,\n    isConnected,\n    peerCount,\n    rolesWithParticipants,\n  };\n};\n\nexport const useIsLandscape = () => {\n  const isMobile = parsedUserAgent.getDevice().type === \"mobile\";\n  const isLandscape = useMedia(config.media.ls);\n  return isMobile && isLandscape;\n};\n\nexport const useLandscapeHLSStream = () => {\n  const isLandscape = useIsLandscape();\n  const { screenType } = useRoomLayoutConferencingScreen();\n  return isLandscape && screenType === \"hls_live_streaming\";\n};\n\nexport const useMobileHLSStream = () => {\n  const isMobile = useMedia(config.media.md);\n  const { screenType } = useRoomLayoutConferencingScreen();\n  return isMobile && screenType === \"hls_live_streaming\";\n};\n\nexport const useKeyboardHandler = (\n  isPaused: boolean,\n  hlsPlayer: HMSHLSPlayer\n) => {\n  const handleKeyEvent = useCallback(\n    async (event: KeyboardEvent) => {\n      switch (event.key) {\n        case \" \":\n          if (isPaused) {\n            await hlsPlayer?.play();\n          } else {\n            hlsPlayer?.pause();\n          }\n          break;\n        case \"ArrowRight\":\n          hlsPlayer?.seekTo(hlsPlayer?.getVideoElement().currentTime + 10);\n          break;\n        case \"ArrowLeft\":\n          hlsPlayer?.seekTo(hlsPlayer?.getVideoElement().currentTime - 10);\n          break;\n      }\n    },\n    [hlsPlayer, isPaused]\n  );\n\n  return handleKeyEvent;\n};\nexport interface RTMPRecordingResolution {\n  width: number;\n  height: number;\n}\nexport const useRecordingHandler = () => {\n  const hmsActions = useHMSActions();\n  const recordingState: HMSRecording = useHMSStore(selectRecordingState);\n  const [isRecordingLoading, setIsRecordingLoading] = useState(false);\n  const [recordingStarted, setRecordingState] = useSetAppDataByKey(\n    APP_DATA.recordingStarted\n  );\n  useEffect(() => {\n    if (recordingState.browser.error && recordingStarted) {\n      setRecordingState(false);\n    }\n  }, [recordingStarted, recordingState.browser.error, setRecordingState]);\n  const startRecording = useCallback(\n    async (resolution: RTMPRecordingResolution | null = null) => {\n      try {\n        setRecordingState(true);\n        setIsRecordingLoading(true);\n        await hmsActions.startRTMPOrRecording({\n          resolution: getResolution(resolution),\n          record: true,\n        });\n      } catch (error) {\n        const err = error as Error;\n        if (err.message.includes(\"stream already running\")) {\n          ToastManager.addToast({\n            title: \"Recording already running\",\n            variant: \"error\",\n          });\n        } else {\n          ToastManager.addToast({\n            title: err.message,\n            variant: \"error\",\n          });\n        }\n        setRecordingState(false);\n      }\n      setIsRecordingLoading(false);\n    },\n    [hmsActions, setRecordingState]\n  );\n  return {\n    recordingStarted,\n    startRecording,\n    isRecordingLoading,\n  };\n};\n\nexport function getResolution(\n  recordingResolution: RTMPRecordingResolution | null\n): RTMPRecordingResolution | undefined {\n  if (!recordingResolution) {\n    return undefined;\n  }\n  const resolution: RTMPRecordingResolution = RTMP_RECORD_DEFAULT_RESOLUTION;\n  if (recordingResolution.width) {\n    resolution.width = recordingResolution.width;\n  }\n  if (recordingResolution.height) {\n    resolution.height = recordingResolution.height;\n  }\n  return resolution;\n}\n\nexport interface WaitingRoomInfo {\n  isNotAllowedToPublish: boolean;\n  isScreenOnlyPublishParams: boolean;\n  hasSubscribedRolePublishing: boolean;\n}\nexport function useWaitingRoomInfo(): WaitingRoomInfo {\n  const localPeerRole = useHMSStore(selectLocalPeerRole);\n  const { video, audio, screen } = useHMSStore(selectIsAllowedToPublish);\n  const isScreenShareAllowed = isScreenshareSupported();\n  const roles = useHMSStore(selectRolesMap);\n  const peersByRoles = useHMSStore(\n    selectPeersByRoles(localPeerRole?.subscribeParams.subscribeToRoles || [])\n  );\n  // show no publish as screenshare in mweb is not possible\n  const isNotAllowedToPublish = !(\n    video ||\n    audio ||\n    (screen && isScreenShareAllowed)\n  );\n  const isScreenOnlyPublishParams: boolean = screen && !(video || audio);\n  const hasSubscribedRolePublishing: boolean = useMemo(() => {\n    return peersByRoles.some((peer: HMSPeer) => {\n      if (peer.roleName && roles[peer.roleName] && !peer.isLocal) {\n        return !!roles[peer.roleName].publishParams?.allowed.length;\n      }\n      return false;\n    });\n  }, [peersByRoles, roles]);\n\n  return {\n    isNotAllowedToPublish,\n    isScreenOnlyPublishParams,\n    hasSubscribedRolePublishing,\n  };\n}\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport data from \"@emoji-mart/data/sets/14/apple.json\";\nimport { init } from \"emoji-mart\";\nimport {\n  selectAvailableRoleNames,\n  selectIsConnectedToRoom,\n  selectLocalPeerID,\n  useCustomEvent,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { EmojiIcon } from \"@100mslive/react-icons\";\nimport { EmojiCard } from \"./Footer/EmojiCard\";\n// import { ToastManager } from './Toast/ToastManager';\nimport { Dropdown } from \"../../Dropdown\";\nimport { Box } from \"../../Layout\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\nimport IconButton from \"../IconButton\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useDropdownList } from \"./hooks/useDropdownList\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../common/hooks\";\nimport { EMOJI_REACTION_TYPE } from \"../common/constants\";\n\ninit({ data });\n\nexport const EmojiReaction = ({ showCard = false }) => {\n  const [open, setOpen] = useState(false);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const { elements } = useRoomLayoutConferencingScreen();\n  useDropdownList({ open: open, name: \"EmojiReaction\" });\n  // const hmsActions = useHMSActions();\n  const roles = useHMSStore(selectAvailableRoleNames);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  // const { isStreamingOn } = useRecordingStreaming();\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeStream = useLandscapeHLSStream();\n\n  const { sendEvent } = useCustomEvent({\n    type: EMOJI_REACTION_TYPE,\n  });\n\n  const sendReaction = async (emojiId) => {\n    const data = {\n      type: EMOJI_REACTION_TYPE,\n      emojiId: emojiId,\n      senderId: localPeerId,\n    };\n    // TODO: RT find a way to figure out hls-viewer roles\n    sendEvent(data, { roleNames: roles });\n    window.showFlyingEmoji?.({ emojiId, senderId: localPeerId });\n    /* if (isStreamingOn) {\n      try {\n        await hmsActions.sendHLSTimedMetadata([\n          {\n            payload: JSON.stringify(data),\n            duration: 2,\n          },\n        ]);\n      } catch (error) {\n        console.log(error);\n        ToastManager.addToast({ title: error.message });\n      }\n    } */\n  };\n\n  if (!isConnected || !elements.emoji_reactions) {\n    return null;\n  }\n\n  if (showCard) {\n    return <EmojiCard sendReaction={sendReaction} />;\n  }\n  return (\n    <Dropdown.Root open={open} onOpenChange={setOpen}>\n      <Dropdown.Trigger asChild data-testid=\"emoji_reaction_btn\">\n        <IconButton\n          css={\n            isMobile || isLandscape\n              ? {\n                  bg: \"$surface_default\",\n                  r: \"$round\",\n                  border: \"1px solid $border_bright\",\n                }\n              : {}\n          }\n        >\n          <Tooltip title=\"Emoji reaction\">\n            <Box>\n              <EmojiIcon />\n            </Box>\n          </Tooltip>\n        </IconButton>\n      </Dropdown.Trigger>\n      <Dropdown.Content\n        sideOffset={5}\n        align={isMobileHLSStream || isLandscapeStream ? \"end\" : \"center\"}\n        css={{ p: \"$8\", bg: \"$surface_default\" }}\n      >\n        <EmojiCard sendReaction={sendReaction} />\n      </Dropdown.Content>\n    </Dropdown.Root>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectLocalPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\n\nconst Int2EnButton = () => {\n  const hmsActions = useHMSActions();\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const changeRole = () => {\n    hmsActions.changeRoleOfPeer(localPeerId, \"interpreter-en\", true);\n  };\n\n  return (\n    <Tooltip key=\"int2en\" title=\"Interpreting to English\">\n      <IconButton onClick={changeRole}>\n        <div className=\"text-xs text-slate-200 rounded-lg\">EN</div>\n      </IconButton>\n    </Tooltip>\n  );\n};\nexport default Int2EnButton;\n", "import React from \"react\";\nimport {\n  selectLocalPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\n\nconst Int2FrButton = () => {\n  const hmsActions = useHMSActions();\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const changeRole = () => {\n    hmsActions.changeRoleOfPeer(localPeerId, \"interpreter-fr\", true);\n  };\n\n  return (\n    <Tooltip key=\"int2fr\" title=\"Interpr\u00E9tation vers le fran\u00E7ais\">\n      <IconButton onClick={changeRole} className=\"w-auto\">\n        <div className=\"text-xs text-slate-200 rounded-lg\">FR</div>\n      </IconButton>\n    </Tooltip>\n  );\n};\nexport default Int2FrButton;\n", "import React from \"react\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const EndSessionContent = ({\n  setShowEndStreamAlert,\n  leaveRoom,\n  isModal = false,\n  isStreamingOn = false,\n}: {\n  setShowEndStreamAlert: (value: boolean) => void;\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  isModal?: boolean;\n  isStreamingOn: boolean;\n}) => {\n  return (\n    <Box>\n      <Flex\n        css={{\n          color: \"$alert_error_default\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />\n        <Text variant=\"lg\" css={{ color: \"inherit\", fontWeight: \"$semiBold\" }}>\n          End {isStreamingOn ? \"Stream\" : \"Session\"}\n        </Text>\n        {isModal ? null : (\n          <Box\n            css={{ color: \"$on_surface_high\", ml: \"auto\" }}\n            onClick={() => setShowEndStreamAlert(false)}\n          >\n            <CrossIcon />\n          </Box>\n        )}\n      </Flex>\n      <Text\n        variant=\"sm\"\n        css={{ color: \"$on_surface_medium\", mb: \"$8\", mt: \"$4\" }}\n      >\n        The {isStreamingOn ? \"stream\" : \"session\"} will end for everyone. You\n        can't undo this action.\n      </Text>\n      <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\", gap: \"$8\" }}>\n        <Button\n          outlined\n          variant=\"standard\"\n          css={{ w: \"100%\", \"@md\": { display: \"none\" } }}\n          onClick={() => setShowEndStreamAlert(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"danger\"\n          css={{ w: \"100%\" }}\n          onClick={async () => {\n            await leaveRoom({ endStream: true });\n            setShowEndStreamAlert(false);\n          }}\n          id=\"stopStream\"\n          data-testid=\"stop_stream_btn\"\n        >\n          End {isStreamingOn ? \"Stream\" : \"Session\"}\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n", "import { IconButton } from \"../../../IconButton\";\nimport { styled } from \"../../../Theme\";\n\nexport const LeaveIconButton = styled(IconButton, {\n  color: \"$on_primary_high\",\n  h: \"$14\",\n  px: \"$4\",\n  r: \"$1\",\n  bg: \"$alert_error_default\",\n  \"&:not([disabled]):hover\": {\n    bg: \"$alert_error_bright\",\n  },\n  \"&:not([disabled]):active\": {\n    bg: \"$alert_error_default\",\n  },\n  \"@md\": {\n    mx: 0,\n  },\n});\n\nexport const MenuTriggerButton = styled(LeaveIconButton, {\n  borderLeft: \"1px solid $alert_error_dim\",\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  px: \"$2\",\n});\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { CSS } from \"../../../Theme\";\n\nexport const LeaveCard = ({\n  icon,\n  title,\n  subtitle,\n  onClick,\n  bg,\n  titleColor,\n  css = {},\n}: {\n  icon: React.JSX.Element;\n  title: string;\n  subtitle: string;\n  onClick: () => void;\n  titleColor: string;\n  bg: string;\n  css?: CSS;\n}) => {\n  return (\n    <Flex\n      css={{ p: \"$10\", flexGrow: 1, gap: \"$8\", bg, ...css }}\n      onClick={onClick}\n    >\n      <Box css={{ color: titleColor }}>{icon}</Box>\n      <Box css={{ gap: \"$2\" }}>\n        <Text variant=\"lg\" css={{ color: titleColor }}>\n          {title}\n        </Text>\n        <Text variant=\"sm\" css={{ c: \"inherit\" }}>\n          {subtitle}\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const LeaveSessionContent = ({\n  setShowLeaveRoomAlert,\n  leaveRoom,\n  isModal = false,\n}: {\n  setShowLeaveRoomAlert: (value: boolean) => void;\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  isModal?: boolean;\n}) => {\n  return (\n    <Box>\n      <Flex\n        css={{\n          color: \"$alert_error_default\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />\n        <Text variant=\"lg\" css={{ color: \"inherit\", fontWeight: \"$semiBold\" }}>\n          Leave\n        </Text>\n        {isModal ? null : (\n          <Box\n            css={{ color: \"$on_surface_high\", ml: \"auto\" }}\n            onClick={() => setShowLeaveRoomAlert(false)}\n          >\n            <CrossIcon />\n          </Box>\n        )}\n      </Flex>\n      <Text variant=\"sm\" css={{ color: \"$on_surface_low\", mb: \"$8\", mt: \"$4\" }}>\n        Others will continue after you leave. You can join the session again.\n      </Text>\n      <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\", gap: \"$8\" }}>\n        <Button\n          outlined\n          variant=\"standard\"\n          css={{ w: \"100%\", \"@md\": { display: \"none\" } }}\n          onClick={() => setShowLeaveRoomAlert(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"danger\"\n          css={{ w: \"100%\" }}\n          onClick={async () => {\n            await leaveRoom();\n          }}\n          id=\"leaveRoom\"\n          data-testid=\"leave_room\"\n        >\n          Leave Session\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n", "import React, { Fragment, useState } from \"react\";\nimport { ConferencingScreen } from \"@100mslive/types-prebuilt\";\nimport {\n  selectIsConnectedToRoom,\n  selectPermissions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { ExitIcon, StopIcon, VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport { EndSessionContent } from \"./EndSessionContent\";\nimport { LeaveIconButton, MenuTriggerButton } from \"./LeaveAtoms\";\nimport { LeaveCard } from \"./LeaveCard\";\nimport { LeaveSessionContent } from \"./LeaveSessionContent\";\n// @ts-ignore: No implicit Any\nimport { useDropdownList } from \"../hooks/useDropdownList\";\n\nexport const DesktopLeaveRoom = ({\n  leaveRoom,\n  screenType,\n  endRoom,\n  container,\n}: {\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  screenType: keyof ConferencingScreen;\n  endRoom: () => Promise<void>;\n  container?: HTMLElement;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [showLeaveRoomAlert, setShowLeaveRoomAlert] = useState(false);\n  const [showEndStreamAlert, setShowEndStreamAlert] = useState(false);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const permissions = useHMSStore(selectPermissions);\n  const { isStreamingOn } = useRecordingStreaming();\n  const showStream =\n    screenType !== \"hls_live_streaming\" &&\n    isStreamingOn &&\n    permissions?.hlsStreaming;\n  const showLeaveOptions =\n    (permissions?.hlsStreaming && isStreamingOn) || permissions?.endRoom;\n\n  useDropdownList({\n    open: open || showEndStreamAlert || showLeaveRoomAlert,\n    name: \"LeaveRoom\",\n  });\n\n  if (!permissions || !isConnected) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {showLeaveOptions ? (\n        <Flex>\n          <LeaveIconButton\n            key=\"LeaveRoom\"\n            data-testid=\"leave_room_btn\"\n            css={{\n              borderTopRightRadius: 0,\n              borderBottomRightRadius: 0,\n            }}\n            onClick={() => setShowLeaveRoomAlert(true)}\n          >\n            <Tooltip title=\"Leave Room\">\n              <Box>\n                <ExitIcon style={{ transform: \"rotate(180deg)\" }} />\n              </Box>\n            </Tooltip>\n          </LeaveIconButton>\n          <Dropdown.Root open={open} onOpenChange={setOpen} modal={false}>\n            <Dropdown.Trigger\n              asChild\n              css={{\n                '&[data-state=\"open\"]': {\n                  bg: \"$alert_error_dim\",\n                },\n              }}\n            >\n              <MenuTriggerButton data-testid=\"leave_end_dropdown_trigger\">\n                <VerticalMenuIcon />\n              </MenuTriggerButton>\n            </Dropdown.Trigger>\n            <Dropdown.Portal container={container}>\n              <Dropdown.Content\n                css={{ p: 0, w: \"$100\" }}\n                alignOffset={-50}\n                sideOffset={10}\n              >\n                <Dropdown.Item\n                  css={{\n                    bg: \"$surface_dim\",\n                    color: \"$on_surface_medium\",\n                    \"&:hover\": {\n                      bg: \"$surface_default\",\n                      color: \"$on_surface_high\",\n                    },\n                    p: \"0\",\n                  }}\n                  data-testid=\"just_leave_btn\"\n                >\n                  <LeaveCard\n                    title={showStream ? \"Leave Stream\" : \"Leave Session\"}\n                    subtitle={`Others will continue after you leave. You can join the ${\n                      showStream ? \"stream\" : \"session\"\n                    } again.`}\n                    bg=\"\"\n                    titleColor=\"$on_surface_high\"\n                    icon={\n                      <ExitIcon\n                        height={24}\n                        width={24}\n                        style={{ transform: \"rotate(180deg)\" }}\n                      />\n                    }\n                    onClick={async () => await leaveRoom()}\n                    css={{ p: \"$8 $4\" }}\n                  />\n                </Dropdown.Item>\n\n                <Dropdown.Item\n                  css={{\n                    bg: \"$alert_error_dim\",\n                    color: \"$alert_error_bright\",\n                    \"&:hover\": {\n                      bg: \"$alert_error_dim\",\n                      color: \"$alert_error_brighter\",\n                    },\n                    p: \"0\",\n                  }}\n                  data-testid=\"end_room_btn\"\n                >\n                  <LeaveCard\n                    title={showStream ? \"End Stream\" : \"End Session\"}\n                    subtitle={`The ${\n                      showStream ? \"stream\" : \"session\"\n                    } will end for everyone. You can't undo this action.`}\n                    bg=\"\"\n                    titleColor=\"$alert_error_brighter\"\n                    icon={<StopIcon height={24} width={24} />}\n                    onClick={() => {\n                      setOpen(false);\n                      setShowEndStreamAlert(true);\n                    }}\n                    css={{ p: \"$8 $4\" }}\n                  />\n                </Dropdown.Item>\n              </Dropdown.Content>\n            </Dropdown.Portal>\n          </Dropdown.Root>\n        </Flex>\n      ) : (\n        <LeaveIconButton\n          onClick={() => {\n            setShowLeaveRoomAlert(true);\n          }}\n          key=\"LeaveRoom\"\n          data-testid=\"leave_room_btn\"\n        >\n          <Tooltip title=\"Leave Room\">\n            <Box>\n              <ExitIcon style={{ transform: \"rotate(180deg)\" }} />\n            </Box>\n          </Tooltip>\n        </LeaveIconButton>\n      )}\n\n      <Dialog.Root open={showEndStreamAlert} modal={false}>\n        <Dialog.Portal>\n          <Dialog.Overlay />\n          <Dialog.Content\n            css={{ w: \"min(420px, 90%)\", p: \"$8\", bg: \"$surface_dim\" }}\n          >\n            <EndSessionContent\n              setShowEndStreamAlert={setShowEndStreamAlert}\n              leaveRoom={\n                isStreamingOn ? () => leaveRoom({ endStream: true }) : endRoom\n              }\n              isStreamingOn={isStreamingOn}\n              isModal\n            />\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n\n      <Dialog.Root open={showLeaveRoomAlert} modal={false}>\n        <Dialog.Portal>\n          <Dialog.Overlay />\n          <Dialog.Content\n            css={{ w: \"min(420px, 90%)\", p: \"$8\", bg: \"$surface_dim\" }}\n          >\n            <LeaveSessionContent\n              setShowLeaveRoomAlert={setShowLeaveRoomAlert}\n              leaveRoom={leaveRoom}\n              isModal\n            />\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    </Fragment>\n  );\n};\n", "import React, { Fragment, useState } from \"react\";\n// @ts-ignore: No implicit Any\nimport {\n  selectIsConnectedToRoom,\n  selectPermissions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { CrossIcon, ExitIcon, StopIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Box } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport { EndSessionContent } from \"./EndSessionContent\";\nimport { LeaveIconButton } from \"./LeaveAtoms\";\nimport { LeaveCard } from \"./LeaveCard\";\nimport { LeaveSessionContent } from \"./LeaveSessionContent\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useDropdownList } from \"../hooks/useDropdownList\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\n\nexport const MwebLeaveRoom = ({\n  leaveRoom,\n  endRoom,\n  container,\n}: {\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  endRoom: () => Promise<void>;\n  container?: HTMLElement;\n}) => {\n  const [open, setOpen] = useState(false);\n  const { screenType } = useRoomLayoutConferencingScreen();\n  const [showLeaveRoomAlert, setShowLeaveRoomAlert] = useState(false);\n  const [showEndStreamAlert, setShowEndStreamAlert] = useState(false);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const permissions = useHMSStore(selectPermissions);\n  const { isStreamingOn } = useRecordingStreaming();\n  const showStream =\n    screenType !== \"hls_live_streaming\" &&\n    isStreamingOn &&\n    permissions?.hlsStreaming;\n  const showLeaveOptions =\n    (permissions?.hlsStreaming && isStreamingOn) || permissions?.endRoom;\n\n  useDropdownList({ open, name: \"LeaveRoom\" });\n\n  if (!permissions || !isConnected) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {showLeaveOptions ? (\n        <Sheet.Root open={open} onOpenChange={setOpen}>\n          <Sheet.Trigger asChild>\n            <LeaveButton\n              onClick={() => {\n                setOpen((open) => !open);\n              }}\n            />\n          </Sheet.Trigger>\n          <Sheet.Content container={container}>\n            <LeaveCard\n              title={showStream ? \"Leave Stream\" : \"Leave Session\"}\n              subtitle={`Others will continue after you leave. You can join the ${\n                showStream ? \"stream\" : \"session\"\n              } again.`}\n              bg=\"$surface_default\"\n              titleColor=\"$on_surface_high\"\n              icon={\n                <ExitIcon\n                  height={24}\n                  width={24}\n                  style={{ transform: \"rotate(180deg)\" }}\n                />\n              }\n              onClick={async () => await leaveRoom()}\n              css={{\n                pt: 0,\n                mt: \"$10\",\n                color: \"$on_surface_low\",\n                \"&:hover\": { color: \"$on_surface_high\" },\n              }}\n            />\n\n            <LeaveCard\n              title={showStream ? \"End Stream\" : \"End Session\"}\n              subtitle={`The will end the ${\n                showStream ? \"stream\" : \"session\"\n              } for everyone. You can't undo this action.`}\n              bg=\"$alert_error_dim\"\n              titleColor=\"$alert_error_brighter\"\n              css={{\n                color: \"$alert_error_bright\",\n                \"&:hover\": { color: \"$alert_error_brighter\" },\n              }}\n              icon={<StopIcon height={24} width={24} />}\n              onClick={() => {\n                setOpen(false);\n                setShowEndStreamAlert(true);\n              }}\n            />\n          </Sheet.Content>\n        </Sheet.Root>\n      ) : (\n        <LeaveButton onClick={() => setShowLeaveRoomAlert(true)} />\n      )}\n      <Sheet.Root\n        open={showEndStreamAlert}\n        onOpenChange={setShowEndStreamAlert}\n      >\n        <Sheet.Content\n          css={{ bg: \"$surface_dim\", p: \"$10\", pb: \"$12\" }}\n          container={container}\n        >\n          <EndSessionContent\n            setShowEndStreamAlert={setShowEndStreamAlert}\n            leaveRoom={isStreamingOn ? leaveRoom : endRoom}\n            isStreamingOn={isStreamingOn}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n\n      <Sheet.Root\n        open={showLeaveRoomAlert}\n        onOpenChange={setShowLeaveRoomAlert}\n      >\n        <Sheet.Content\n          css={{ bg: \"$surface_dim\", p: \"$10\", pb: \"$12\" }}\n          container={container}\n        >\n          <LeaveSessionContent\n            setShowLeaveRoomAlert={setShowLeaveRoomAlert}\n            leaveRoom={leaveRoom}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n    </Fragment>\n  );\n};\n\nconst LeaveButton = ({ onClick }: { onClick: () => void }) => {\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  return isMobileHLSStream || isLandscapeHLSStream ? (\n    <IconButton key=\"LeaveRoom\" data-testid=\"leave_room_btn\" onClick={onClick}>\n      <Tooltip title=\"Leave Room\">\n        <Box>\n          <CrossIcon />\n        </Box>\n      </Tooltip>\n    </IconButton>\n  ) : (\n    <LeaveIconButton\n      key=\"LeaveRoom\"\n      data-testid=\"leave_room_btn\"\n      css={{\n        borderTopRightRadius: \"$1\",\n        borderBottomRightRadius: \"$1\",\n      }}\n      onClick={onClick}\n    >\n      <Tooltip title=\"Leave Room\">\n        <Box>\n          <ExitIcon style={{ transform: \"rotate(180deg)\" }} />\n        </Box>\n      </Tooltip>\n    </LeaveIconButton>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { ConferencingScreen } from \"@100mslive/types-prebuilt\";\nimport {\n  HMSPeer,\n  HMSRole,\n  selectHLSState,\n  selectIsConnectedToRoom,\n  selectPeersByCondition,\n  selectPermissions,\n  selectRolesMap,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { DesktopLeaveRoom } from \"./DesktopLeaveRoom\";\nimport { MwebLeaveRoom } from \"./MwebLeaveRoom\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\n\nexport const LeaveRoom = ({\n  screenType,\n  container,\n}: {\n  screenType: keyof ConferencingScreen;\n  container?: HTMLElement;\n}) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const permissions = useHMSStore(selectPermissions);\n  const isMobile = useMedia(cssConfig.media.md);\n  const rolesMap: Record<string, HMSRole> = useHMSStore(selectRolesMap);\n  const streamingPermissionRoles = Object.keys(rolesMap).filter((roleName) => {\n    const roleObj = rolesMap[roleName];\n    return roleObj.permissions.hlsStreaming;\n  });\n  const peersWithStreamingRights = useHMSStore(\n    selectPeersByCondition((peer: HMSPeer) =>\n      streamingPermissionRoles.includes(peer.roleName || \"\")\n    )\n  );\n  const hlsState = useHMSStore(selectHLSState);\n  const hmsActions = useHMSActions();\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  const stopStream = async () => {\n    try {\n      if (permissions?.hlsStreaming) {\n        console.log(\"Stopping HLS stream\");\n        await hmsActions.stopHLSStreaming();\n        ToastManager.addToast({ title: \"Stopping the stream\" });\n      }\n    } catch (e) {\n      console.error(\"Error stopping stream\", e);\n      ToastManager.addToast({\n        title: \"Error in stopping the stream\",\n        type: \"error\",\n      });\n    }\n  };\n\n  const endRoom = async () => {\n    await hmsActions.endRoom(false, \"End Room\");\n  };\n\n  const leaveRoom = async (\n    options: { endStream?: boolean } = { endStream: false }\n  ) => {\n    if (\n      options.endStream ||\n      (hlsState.running && peersWithStreamingRights.length === 1)\n    ) {\n      await stopStream();\n    }\n    await hmsActions.leave();\n  };\n\n  if (!permissions || !isConnected) {\n    return null;\n  }\n  if (isMobileHLSStream || isLandscapeHLSStream) {\n    return (\n      <MwebLeaveRoom\n        leaveRoom={leaveRoom}\n        endRoom={endRoom}\n        container={container}\n      />\n    );\n  }\n  return isMobile ? (\n    <MwebLeaveRoom\n      leaveRoom={leaveRoom}\n      endRoom={endRoom}\n      container={container}\n    />\n  ) : (\n    <DesktopLeaveRoom\n      leaveRoom={leaveRoom}\n      screenType={screenType}\n      endRoom={endRoom}\n      container={container}\n    />\n  );\n};\n", "import {\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n} from \"@100mslive/react-sdk\";\n\n/**\n * Media Session API allows for handling control actions on top of pip\n * https://web.dev/media-session/#video-conferencing-actions\n */\nclass SetupMediaSession {\n  setup = (actions, store) => {\n    this.actions = actions;\n    this.store = store;\n    this.initState();\n    this.setUpHandlers();\n  };\n\n  initState = () => {\n    const isMicActive = this.store.getState(selectIsLocalAudioEnabled);\n    const isCamActive = this.store.getState(selectIsLocalVideoEnabled);\n    navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    navigator.mediaSession?.setCameraActive?.(isCamActive);\n\n    this.store.subscribe((isMicActive) => {\n      navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    }, selectIsLocalAudioEnabled);\n\n    this.store.subscribe((isCamActive) => {\n      navigator.mediaSession?.setCameraActive?.(isCamActive);\n    }, selectIsLocalVideoEnabled);\n  };\n\n  toggleMic = async () => {\n    console.log(\"toggle mic clicked in pip\");\n    const current = this.store.getState(selectIsLocalAudioEnabled);\n    await this.actions.setLocalAudioEnabled(!current);\n  };\n\n  toggleCam = async () => {\n    console.log(\"toggle cam clicked in pip\");\n    const current = this.store.getState(selectIsLocalVideoEnabled);\n    await this.actions.setLocalVideoEnabled(!current);\n  };\n\n  leave = () => {\n    console.log(\"leave called from pip\");\n    this.actions.leave();\n  };\n\n  setUpHandlers = () => {\n    if (navigator.mediaSession) {\n      try {\n        navigator.mediaSession.setActionHandler(\n          \"togglemicrophone\",\n          this.toggleMic\n        );\n        navigator.mediaSession.setActionHandler(\"togglecamera\", this.toggleCam);\n        navigator.mediaSession.setActionHandler(\"hangup\", this.leave);\n      } catch (err) {\n        console.error(\"error in setting media session handlers\", err);\n      }\n    }\n  };\n}\n\nexport const MediaSession = new SetupMediaSession();\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  selectPeers,\n  selectTracksMap,\n  useHMSActions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { PipIcon } from \"@100mslive/react-icons\";\nimport { Flex, Tooltip } from \"../../..\";\nimport IconButton from \"../../IconButton\";\nimport { PictureInPicture } from \"./PIPManager\";\n// @ts-ignore: No implicit Any\nimport { MediaSession } from \"./SetupMediaSession\";\n// @ts-ignore: No implicit Any\nimport { usePinnedTrack } from \"../AppData/useUISettings\";\n\n/**\n * shows a button which when clicked shows some videos in PIP, clicking\n * again turns it off.\n */\nconst PIPComponent = ({ content = null }) => {\n  const [isPipOn, setIsPipOn] = useState(PictureInPicture.isOn());\n  const hmsActions = useHMSActions();\n  const store = useHMSVanillaStore();\n\n  const onPipToggle = useCallback(() => {\n    if (!isPipOn) {\n      PictureInPicture.start(hmsActions, setIsPipOn).catch((err) =>\n        console.error(\"error in starting pip\", err)\n      );\n      MediaSession.setup(hmsActions, store);\n    } else {\n      PictureInPicture.stop().catch((err) =>\n        console.error(\"error in stopping pip\", err)\n      );\n    }\n  }, [hmsActions, isPipOn, store]);\n\n  if (!PictureInPicture.isSupported()) {\n    return null;\n  }\n  return (\n    <>\n      {content ? (\n        <Flex\n          css={{ w: \"100%\" }}\n          onClick={() => onPipToggle()}\n          data-testid=\"pip_btn\"\n        >\n          {content}\n        </Flex>\n      ) : (\n        <Tooltip\n          title={`${\n            isPipOn ? \"Deactivate\" : \"Activate\"\n          } picture in picture view`}\n        >\n          <IconButton\n            active={!isPipOn}\n            key=\"pip\"\n            onClick={() => onPipToggle()}\n            data-testid=\"pip_btn\"\n          >\n            <PipIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </>\n  );\n};\n\n/**\n * this is a separate component so it can be conditionally rendered and\n * the subscriptions to store are done only if required.\n */\nexport const ActivatedPIP = () => {\n  const store = useHMSVanillaStore();\n  const pinnedTrack = usePinnedTrack();\n\n  useEffect(() => {\n    function subscribeToStore() {\n      return store.subscribe((tracksMap) => {\n        let pipPeers = store.getState(selectPeers);\n        if (pinnedTrack) {\n          pipPeers = pipPeers.filter((peer) => pinnedTrack.peerId === peer.id);\n        }\n        PictureInPicture.updatePeersAndTracks(pipPeers, tracksMap).catch(\n          (err) => {\n            console.error(\"error in updating pip\", err);\n          }\n        );\n      }, selectTracksMap);\n    }\n    let unsubscribe: (() => void) | undefined = PictureInPicture.isOn()\n      ? subscribeToStore()\n      : undefined;\n    PictureInPicture.listenToStateChange((isOn) => {\n      if (isOn) {\n        if (!unsubscribe) {\n          unsubscribe = subscribeToStore();\n        }\n      } else {\n        unsubscribe?.();\n        unsubscribe = undefined;\n      }\n    });\n    return () => {\n      unsubscribe?.();\n      unsubscribe = undefined;\n    };\n  }, [pinnedTrack, store]);\n\n  return <></>;\n};\n\nexport default PIPComponent;\n", "import React from \"react\";\nimport PIPComponent from \"./PIPComponent\";\n\nexport const PIP = ({ content = null }) => {\n  return <PIPComponent content={content} />;\n};\n", "import { styled } from \"../Theme\";\n\nexport const TextArea = styled(\"textarea\", {\n  fontFamily: \"$sans\",\n  lineHeight: \"inherit\",\n  backgroundColor: \"$surface_default\",\n  borderRadius: \"8px\",\n  outline: \"none\",\n  border: \"1px solid $border_default\",\n  padding: \"0.5rem 0.75rem\",\n  minHeight: \"30px\",\n  color: \"$on_surface_high\",\n  fontSize: \"$md\",\n  \"&:focus\": {\n    boxShadow: \"0 0 0 1px $colors$primary_default\",\n    border: \"1px solid transparent\",\n  },\n  \"&::placeholder\": {\n    color: \"$on_surface_medium\",\n  },\n  variants: {\n    error: {\n      true: {\n        \"&:focus\": {\n          boxShadow: \"0 0 0 3px $colors$alert_error_default\",\n        },\n      },\n    },\n  },\n});\n", "export { TextArea } from \"./TextArea\";\n", "import React from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const MwebChatOption = ({\n  icon,\n  text,\n  onClick,\n  color = \"$on_surface_high\",\n}: {\n  icon: React.ReactNode;\n  text: string;\n  onClick: () => void | Promise<void>;\n  color?: string;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{ w: \"100%\", color, cursor: \"pointer\", gap: \"$4\", p: \"$8\" }}\n      onClick={onClick}\n    >\n      {icon}\n      <Text variant=\"sm\" css={{ color, fontWeight: \"$semiBold\" }}>\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectLocalPeer,\n  selectSessionStore,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const useChatBlacklist = (\n  sessionStoreKey:\n    | SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST\n    | SESSION_STORE_KEY.CHAT_PEER_BLACKLIST\n) => {\n  const hmsActions = useHMSActions();\n  const blacklistedIDs = useHMSStore(selectSessionStore(sessionStoreKey));\n\n  const blacklistItem = useCallback(\n    async (blacklistID: string) => {\n      await hmsActions.sessionStore\n        .set(sessionStoreKey, [...(blacklistedIDs || []), blacklistID])\n        .catch((err) => ToastManager.addToast({ title: err.description }));\n    },\n    [hmsActions, sessionStoreKey, blacklistedIDs]\n  );\n\n  return { blacklistItem, blacklistedIDs };\n};\n\nexport const useIsPeerBlacklisted = ({\n  local = false,\n  peerCustomerUserId = \"\",\n}) => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const blacklistedPeerIDs =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_PEER_BLACKLIST)) ||\n    [];\n  return blacklistedPeerIDs?.includes(\n    local ? localPeer?.customerUserId : peerCustomerUserId\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  HMSMessage,\n  selectPeerNameByID,\n  selectSessionStore,\n  useHMSActions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport type PinnedMessage = {\n  text: string;\n  id: string;\n  pinnedBy: string;\n};\n\n/**\n * set pinned chat message by updating the session store\n */\nexport const usePinnedMessages = () => {\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n\n  const setPinnedMessages = useCallback(\n    async (message: HMSMessage, pinnedBy: string) => {\n      const peerName =\n        vanillaStore.getState(selectPeerNameByID(message?.sender)) ||\n        message?.senderName;\n      const newPinnedMessage = { text: \"\", id: message.id, pinnedBy };\n\n      if (message && peerName) {\n        newPinnedMessage[\"text\"] = `${peerName}: ${message.message}`;\n      } else if (message) {\n        newPinnedMessage[\"text\"] = message.message;\n      }\n\n      const pinnedMessages =\n        vanillaStore.getState(\n          selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n        ) || [];\n      if (\n        !pinnedMessages?.find(\n          (pinnedMessage: PinnedMessage) =>\n            pinnedMessage.id === newPinnedMessage.id\n        )\n      ) {\n        await hmsActions.sessionStore\n          .set(\n            SESSION_STORE_KEY.PINNED_MESSAGES,\n            [...pinnedMessages, newPinnedMessage].slice(-3)\n          ) // Limiting to maximum of 3 messages - FIFO\n          .catch((err) => ToastManager.addToast({ title: err.description }));\n      }\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  const removePinnedMessage = useCallback(\n    async (indexToRemove: number) => {\n      const pinnedMessages =\n        vanillaStore.getState(\n          selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n        ) || [];\n      if (pinnedMessages[indexToRemove]) {\n        await hmsActions.sessionStore\n          .set(\n            SESSION_STORE_KEY.PINNED_MESSAGES,\n            pinnedMessages.filter(\n              (_: PinnedMessage, index: number) => index !== indexToRemove\n            )\n          )\n          .catch((err) => ToastManager.addToast({ title: err.description }));\n      }\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  const unpinBlacklistedMessages = useCallback(\n    async (blacklistedMessageIDSet: Set<string>) => {\n      const pinnedMessages =\n        vanillaStore.getState(\n          selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n        ) || [];\n      const filteredPinnedMessages = pinnedMessages?.filter(\n        (pinnedMessage: PinnedMessage) =>\n          !blacklistedMessageIDSet?.has(pinnedMessage.id)\n      );\n\n      await hmsActions.sessionStore\n        .set(SESSION_STORE_KEY.PINNED_MESSAGES, filteredPinnedMessages)\n        .catch((err) => ToastManager.addToast({ title: err.description }));\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  return { setPinnedMessages, removePinnedMessage, unpinBlacklistedMessages };\n};\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  HMSMessage,\n  selectLocalPeerName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  CopyIcon,\n  CrossCircleIcon,\n  CrossIcon,\n  EyeCloseIcon,\n  PeopleRemoveIcon,\n  PinIcon,\n  ReplyGroupIcon,\n  ReplyIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { Tooltip } from \"../../../Tooltip\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { MwebChatOption } from \"./MwebChatOption\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport {\n  useChatBlacklist,\n  useIsPeerBlacklisted,\n} from \"../hooks/useChatBlacklist\";\nimport { usePinnedMessages } from \"../hooks/usePinnedMessages\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst iconStyle = { height: \"1.125rem\", width: \"1.125rem\" };\nconst tooltipBoxCSS = {\n  fontSize: \"$xs\",\n  backgroundColor: \"$surface_default\",\n  p: \"$1 $5\",\n  fontWeight: \"$regular\",\n  borderRadius: \"$3\",\n};\n\nexport const ChatActions = ({\n  showPinAction,\n  onReply,\n  onReplyGroup,\n  showReply,\n  message,\n  sentByLocalPeer,\n  isMobile,\n  openSheet,\n  setOpenSheet,\n}: {\n  showPinAction: boolean;\n  onReply: () => void;\n  onReplyGroup: () => void;\n  showReply: boolean;\n  message: HMSMessage;\n  sentByLocalPeer: boolean;\n  isMobile: boolean;\n  openSheet: boolean;\n  setOpenSheet: (\n    value: boolean,\n    e?: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => void;\n}) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const { can_hide_message = false, can_block_user = false } =\n    elements?.chat?.real_time_controls || {};\n  const { roles_whitelist = [] } = elements?.chat || {};\n\n  const [open, setOpen] = useState(false);\n  const actions = useHMSActions();\n  const canRemoveOthers = useHMSStore(selectPermissions)?.removeOthers;\n  const { blacklistItem: blacklistPeer } = useChatBlacklist(\n    SESSION_STORE_KEY.CHAT_PEER_BLACKLIST\n  );\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const { setPinnedMessages, unpinBlacklistedMessages } = usePinnedMessages();\n\n  const {\n    blacklistItem: blacklistMessage,\n    blacklistedIDs: blacklistedMessageIDs,\n  } = useChatBlacklist(SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST);\n\n  const isSenderBlocked = useIsPeerBlacklisted({\n    peerCustomerUserId: message.senderUserId,\n  });\n\n  const updatePinnedMessages = useCallback(\n    (messageID = \"\") => {\n      const blacklistedMessageIDSet = new Set([\n        ...(blacklistedMessageIDs || []),\n        messageID,\n      ]);\n      unpinBlacklistedMessages(blacklistedMessageIDSet);\n    },\n    [blacklistedMessageIDs, unpinBlacklistedMessages]\n  );\n\n  const copyMessageContent = useCallback(() => {\n    try {\n      navigator?.clipboard.writeText(message.message);\n      ToastManager.addToast({\n        title: \"Message copied successfully\",\n      });\n    } catch (e) {\n      console.log(e);\n      ToastManager.addToast({\n        title: \"Could not copy message\",\n      });\n    }\n  }, [message]);\n\n  const options: Record<\n    string,\n    {\n      text: string;\n      tooltipText?: string;\n      icon: React.ReactNode;\n      onClick: () => void | Promise<void>;\n      show: boolean;\n      color?: string;\n    }\n  > = {\n    reply: {\n      text: \"Reply privately\",\n      tooltipText: \"Reply privately\",\n      icon: <ReplyIcon style={iconStyle} />,\n      onClick: onReply,\n      show: showReply,\n    },\n    replyGroup: {\n      text: \"Reply to group\",\n      tooltipText: \"Reply to group\",\n      icon: <ReplyGroupIcon style={iconStyle} />,\n      onClick: onReplyGroup,\n      show:\n        !!message.senderRole && roles_whitelist.includes(message.senderRole),\n    },\n    pin: {\n      text: \"Pin message\",\n      tooltipText: \"Pin\",\n      icon: <PinIcon style={iconStyle} />,\n      onClick: () => setPinnedMessages(message, localPeerName || \"\"),\n      show: showPinAction,\n    },\n    copy: {\n      text: \"Copy text\",\n      tooltipText: \"Copy\",\n      icon: <CopyIcon style={iconStyle} />,\n      onClick: copyMessageContent,\n      show: true,\n    },\n    hide: {\n      text: message.recipientPeer ? \"Hide for both\" : \"Hide for everyone\",\n      icon: <EyeCloseIcon style={iconStyle} />,\n      onClick: async () => {\n        blacklistMessage(message.id);\n        updatePinnedMessages(message.id);\n      },\n      show: !!can_hide_message,\n    },\n    block: {\n      text: \"Block from chat\",\n      icon: <CrossCircleIcon style={iconStyle} />,\n      onClick: async () => {\n        if (message.senderUserId) {\n          blacklistPeer(message.senderUserId);\n        }\n      },\n      color: \"$alert_error_default\",\n      show: !!can_block_user && !sentByLocalPeer && !isSenderBlocked,\n    },\n    remove: {\n      text: \"Remove participant\",\n      icon: <PeopleRemoveIcon style={iconStyle} />,\n      color: \"$alert_error_default\",\n      show: !!canRemoveOthers && !sentByLocalPeer,\n      onClick: async () => {\n        if (!message.sender) {\n          return;\n        }\n        try {\n          await actions.removePeer(message.sender, \"\");\n        } catch (error) {\n          ToastManager.addToast({\n            title: (error as Error).message,\n            variant: \"error\",\n          });\n        }\n      },\n    },\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root open={openSheet} onOpenChange={setOpenSheet}>\n        <Sheet.Content\n          css={{ bg: \"$surface_default\", pb: \"$14\" }}\n          onClick={(e) => setOpenSheet(false, e)}\n        >\n          <Sheet.Title\n            css={{\n              display: \"flex\",\n              color: \"$on_surface_high\",\n              w: \"100%\",\n              justifyContent: \"space-between\",\n              mt: \"$8\",\n              fontSize: \"$md\",\n              px: \"$10\",\n              pb: \"$8\",\n              borderBottom: \"1px solid $border_bright\",\n              alignItems: \"center\",\n            }}\n          >\n            Message options\n            <Sheet.Close\n              css={{ color: \"$on_surface_high\" }}\n              onClick={(e) => setOpenSheet(false, e)}\n            >\n              <CrossIcon />\n            </Sheet.Close>\n          </Sheet.Title>\n\n          {Object.keys(options).map((optionKey) => {\n            const option = options[optionKey];\n            return option.show ? (\n              <MwebChatOption\n                key={optionKey}\n                text={option.text}\n                icon={option.icon}\n                onClick={option.onClick}\n                color={option?.color}\n              />\n            ) : null;\n          })}\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dropdown.Root\n      open={open}\n      onOpenChange={setOpen}\n      css={{ \"@md\": { display: \"none\" } }}\n    >\n      <Flex\n        className=\"chat_actions\"\n        css={{\n          background: \"$surface_bright\",\n          borderRadius: \"$1\",\n          p: \"$2\",\n          opacity: open ? 1 : 0,\n          position: \"absolute\",\n          top: 0,\n          right: 0,\n          zIndex: 1,\n          \"@md\": { opacity: 1 },\n        }}\n      >\n        {options.reply.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title={options.reply.tooltipText}>\n            <IconButton\n              data-testid=\"reply_message_btn\"\n              onClick={options.reply.onClick}\n            >\n              {options.reply.icon}\n            </IconButton>\n          </Tooltip>\n        ) : null}\n        {options.replyGroup.show ? (\n          <Tooltip\n            boxCss={tooltipBoxCSS}\n            title={options.replyGroup.tooltipText}\n          >\n            <IconButton\n              data-testid=\"reply_group_message_btn\"\n              onClick={options.replyGroup.onClick}\n            >\n              {options.replyGroup.icon}\n            </IconButton>\n          </Tooltip>\n        ) : null}\n        {options.pin.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title={options.pin.tooltipText}>\n            <IconButton\n              data-testid=\"pin_message_btn\"\n              onClick={options.pin.onClick}\n            >\n              {options.pin.icon}\n            </IconButton>\n          </Tooltip>\n        ) : null}\n\n        {options.copy.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title={options.copy.tooltipText}>\n            <IconButton\n              onClick={options.copy.onClick}\n              data-testid=\"copy_message_btn\"\n            >\n              <CopyIcon style={iconStyle} />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n\n        {options.block.show || options.hide.show || options.remove.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title=\"More actions\">\n            <Dropdown.Trigger asChild>\n              <IconButton>\n                <VerticalMenuIcon style={iconStyle} />\n              </IconButton>\n            </Dropdown.Trigger>\n          </Tooltip>\n        ) : null}\n      </Flex>\n      <Dropdown.Portal>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"end\"\n          css={{\n            width: \"$48\",\n            backgroundColor: \"$surface_bright\",\n            py: \"$0\",\n            border: \"1px solid $border_bright\",\n          }}\n        >\n          {options.hide.show ? (\n            <Dropdown.Item\n              data-testid=\"hide_message_btn\"\n              onClick={options.hide.onClick}\n            >\n              {options.hide.icon}\n              <Text variant=\"sm\" css={{ ml: \"$4\", fontWeight: \"$semiBold\" }}>\n                {options.hide.text}\n              </Text>\n            </Dropdown.Item>\n          ) : null}\n\n          {options.block.show ? (\n            <Dropdown.Item\n              data-testid=\"block_peer_btn\"\n              onClick={options.block.onClick}\n              css={{ color: options.block.color }}\n            >\n              {options.block.icon}\n              <Text\n                variant=\"sm\"\n                css={{ ml: \"$4\", color: \"inherit\", fontWeight: \"$semiBold\" }}\n              >\n                {options.block.text}\n              </Text>\n            </Dropdown.Item>\n          ) : null}\n          {options.remove.show ? (\n            <Dropdown.Item\n              data-testid=\"remove_peer_btn\"\n              onClick={options.remove.onClick}\n              css={{ color: options.remove.color }}\n            >\n              {options.remove.icon}\n              <Text\n                variant=\"sm\"\n                css={{ ml: \"$4\", color: \"inherit\", fontWeight: \"$semiBold\" }}\n              >\n                {options.remove.text}\n              </Text>\n            </Dropdown.Item>\n          ) : null}\n        </Dropdown.Content>\n      </Dropdown.Portal>\n    </Dropdown.Root>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\n// @ts-ignore\nimport emptyChat from \"../../images/empty-chat.svg\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\n\nexport const EmptyChat = () => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  const isMobile = useMedia(cssConfig.media.md);\n  const canSendMessages =\n    elements.chat &&\n    (elements.chat.public_chat_enabled ||\n      elements.chat.private_chat_enabled ||\n      (elements.chat.roles_whitelist &&\n        elements.chat.roles_whitelist.length)) &&\n    !isLocalPeerBlacklisted;\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeStream = useLandscapeHLSStream();\n  const streaming = isMobileHLSStream || isLandscapeStream;\n\n  if (isMobile && elements?.chat?.is_overlay && !streaming) return <></>;\n\n  return (\n    <Flex\n      css={{\n        width: \"100%\",\n        flex: \"1 1 0\",\n        textAlign: \"center\",\n        px: \"$4\",\n      }}\n      align=\"center\"\n      justify=\"center\"\n    >\n      <Box>\n        <Box\n          css={{\n            m: \"0 auto\",\n            mt: \"$4\",\n            \"@media (max-height: 575px)\": { display: \"none\" },\n          }}\n        >\n          <img\n            src={emptyChat}\n            style={{ display: \"inline\" }}\n            alt=\"Empty Chat\"\n            height={132}\n            width={185}\n          />\n        </Box>\n\n        <Text variant=\"h5\" css={{ mt: \"$8\", c: \"$on_surface_high\" }}>\n          {canSendMessages ? \"Start a conversation\" : \"No messages yet\"}\n        </Text>\n        {canSendMessages ? (\n          <Text\n            variant=\"sm\"\n            css={{\n              mt: \"$4\",\n              maxWidth: \"80%\",\n              textAlign: \"center\",\n              mx: \"auto\",\n              c: \"$on_surface_medium\",\n            }}\n          >\n            There are no messages here yet. Start a conversation by sending a\n            message.\n          </Text>\n        ) : null}\n      </Box>\n    </Flex>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport { selectSessionStore, useHMSStore } from \"@100mslive/react-sdk\";\nimport { PinnedMessage } from \"./usePinnedMessages\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const usePinnedBy = (messageId: string) => {\n  const pinnedMessages = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n  );\n  const [pinnedBy, setPinnedBy] = useState(\"\");\n\n  useEffect(() => {\n    let match = \"\";\n    pinnedMessages?.forEach((pinnedMessage: PinnedMessage) => {\n      if (pinnedMessage.id === messageId) {\n        match = pinnedMessage.pinnedBy;\n      }\n    });\n\n    setPinnedBy(match);\n  }, [messageId, pinnedMessages]);\n\n  return pinnedBy;\n};\n", "export const formatTime = (date: Date) => {\n  if (!(date instanceof Date)) {\n    return \"\";\n  }\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const suffix = hours > 11 ? \"PM\" : \"AM\";\n  return `${hours < 10 ? \"0\" : \"\"}${hours}:${\n    minutes < 10 ? \"0\" : \"\"\n  }${minutes} ${suffix}`;\n};\n\nexport const CHAT_MESSAGE_LIMIT = 2000;\n", "import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useMedia } from \"react-use\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { VariableSizeList } from \"react-window\";\nimport {\n  HMSMessage,\n  HMSPeerID,\n  HMSRoleName,\n  selectHMSMessages,\n  selectLocalPeerID,\n  selectLocalPeerName,\n  selectLocalPeerRoleName,\n  selectPeerNameByID,\n  selectSessionStore,\n  selectUnreadHMSMessagesCount,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { SolidPinIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig, styled } from \"../../../Theme\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport { ChatActions } from \"./ChatActions\";\nimport { EmptyChat } from \"./EmptyChat\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useSetSubscribedChatSelector } from \"../AppData/useUISettings\";\nimport { usePinnedBy } from \"../hooks/usePinnedBy\";\nimport { formatTime } from \"./utils\";\nimport { CHAT_SELECTOR, SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst rowHeights: Record<number, { size: number; id: string }> = {};\nlet listInstance: VariableSizeList | null = null; //eslint-disable-line\nfunction getRowHeight(index: number) {\n  // 72 will be default row height for any message length\n  return rowHeights[index]?.size || 72;\n}\n\nconst setRowHeight = (index: number, id: string, size: number) => {\n  if (rowHeights[index]?.id === id && rowHeights[index]?.size === size) {\n    return;\n  }\n  listInstance?.resetAfterIndex(Math.max(index - 1, 0));\n  Object.assign(rowHeights, { [index]: { size, id } });\n};\n\nconst getMessageBackgroundColor = (\n  messageType: string,\n  selectedPeerID: string,\n  selectedRole: string,\n  isOverlay: boolean\n) => {\n  if (messageType && !(selectedPeerID || selectedRole)) {\n    return isOverlay ? \"rgba(0, 0, 0, 0.64)\" : \"$surface_default\";\n  }\n  return \"\";\n};\n\nconst MessageTypeContainer = ({\n  left,\n  right,\n}: {\n  left?: string;\n  right?: string;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        ml: \"$2\",\n        mr: \"$4\",\n        gap: \"$space$2\",\n        flexWrap: \"nowrap\",\n      }}\n    >\n      {left && (\n        <Text\n          variant=\"xs\"\n          as=\"span\"\n          css={{\n            color: \"$on_surface_medium\",\n            textTransform: \"capitalize\",\n            fontWeight: \"$regular\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {left}\n        </Text>\n      )}\n      {right && (\n        <Text\n          as=\"span\"\n          variant=\"overline\"\n          css={{\n            color: \"$on_surface_medium\",\n            fontWeight: \"$regular\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {right}\n        </Text>\n      )}\n    </Flex>\n  );\n};\n\nexport const MessageType = ({\n  roles,\n  hasCurrentUserSent,\n  receiver,\n}: {\n  roles?: HMSRoleName[];\n  hasCurrentUserSent: boolean;\n  receiver?: HMSPeerID;\n}) => {\n  const peerName = useHMSStore(selectPeerNameByID(receiver));\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  if (receiver) {\n    return (\n      <MessageTypeContainer\n        left={\n          hasCurrentUserSent ? `${peerName ? `to ${peerName}` : \"\"}` : \"to You\"\n        }\n        right=\"(DM)\"\n      />\n    );\n  }\n\n  if (roles && roles.length) {\n    return (\n      <MessageTypeContainer\n        left={`to ${hasCurrentUserSent ? roles[0] : localPeerRoleName}`}\n        right=\"(Group)\"\n      />\n    );\n  }\n  return null;\n};\n\nconst URL_REGEX =\n  /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nconst Link = styled(\"a\", {\n  color: \"$primary_default\",\n  wordBreak: \"break-word\",\n  \"&:hover\": {\n    textDecoration: \"underline\",\n  },\n});\n\nexport const AnnotisedMessage = ({\n  message,\n  length,\n}: {\n  message: string;\n  length?: number;\n}) => {\n  if (!message) {\n    return <Fragment />;\n  }\n\n  return (\n    <Fragment>\n      {message\n        .trim()\n        .split(/(\\s)/)\n        .map((part) =>\n          URL_REGEX.test(part) ? (\n            <Link\n              href={part}\n              key={part}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {part.slice(0, length)}\n            </Link>\n          ) : (\n            part.slice(0, length)\n          )\n        )}\n    </Fragment>\n  );\n};\n\nconst getMessageType = ({\n  roles,\n  receiver,\n}: {\n  roles?: HMSRoleName[];\n  receiver?: HMSPeerID;\n}) => {\n  if (roles && roles.length > 0) {\n    return \"role\";\n  }\n  return receiver ? \"private\" : \"\";\n};\n\nexport const SenderName = styled(Text, {\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n  width: \"100%\",\n  minWidth: 0,\n  color: \"$on_surface_high\",\n  fontWeight: \"$semiBold\",\n});\n\nconst ChatMessage = React.memo(\n  ({\n    index,\n    style = {},\n    message,\n  }: {\n    message: HMSMessage;\n    index: number;\n    style: React.CSSProperties;\n  }) => {\n    const { elements } = useRoomLayoutConferencingScreen();\n    const rowRef = useRef<HTMLDivElement | null>(null);\n    const isMobile = useMedia(cssConfig.media.md);\n    const isPrivateChatEnabled = !!elements?.chat?.private_chat_enabled;\n    const isOverlay = elements?.chat?.is_overlay && isMobile;\n    const localPeerId = useHMSStore(selectLocalPeerID);\n    const [selectedRole, setRoleSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.ROLE\n    );\n    const [selectedPeer, setPeerSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.PEER\n    );\n    const messageType = getMessageType({\n      roles: message.recipientRoles,\n      receiver: message.recipientPeer,\n    });\n    const [openSheet, setOpenSheetBare] = useState(false);\n    const showPinAction = !!elements?.chat?.allow_pinning_messages;\n    const showReply =\n      message.sender !== selectedPeer.id &&\n      message.sender !== localPeerId &&\n      isPrivateChatEnabled;\n    useLayoutEffect(() => {\n      if (rowRef.current) {\n        setRowHeight(index, message.id, rowRef.current.clientHeight);\n      }\n    }, [index, message.id]);\n\n    const setOpenSheet = (\n      value: boolean,\n      e?: React.MouseEvent<HTMLElement, MouseEvent>\n    ) => {\n      e?.stopPropagation();\n      setOpenSheetBare(value);\n    };\n\n    return (\n      <Box\n        css={{\n          mb: \"$5\",\n          pr: \"$10\",\n          mt: \"$4\",\n          \"&:not(:hover} .chat_actions\": { display: \"none\" },\n          \"&:hover .chat_actions\": { display: \"flex\", opacity: 1 },\n        }}\n        style={style}\n      >\n        <Flex\n          ref={rowRef}\n          align=\"center\"\n          css={{\n            flexWrap: \"wrap\",\n            position: \"relative\",\n            // Theme independent color, token should not be used for transparent chat\n            background: getMessageBackgroundColor(\n              messageType,\n              selectedPeer.id,\n              selectedRole,\n              !!isOverlay\n            ),\n            r: \"$1\",\n            p: \"$4\",\n            userSelect: \"none\",\n            \"@md\": {\n              cursor: \"pointer\",\n            },\n            \"&:hover\": {\n              background:\n                \"linear-gradient(277deg, $surface_default 0%, $surface_dim 60.87%)\",\n            },\n          }}\n          data-testid=\"chat_msg\"\n          onClick={(e) => {\n            if (isMobile) {\n              setOpenSheet(true, e);\n            }\n          }}\n        >\n          <PinnedBy messageId={message.id} index={index} rowRef={rowRef} />\n          <Text\n            css={{\n              color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n              fontWeight: \"$semiBold\",\n              display: \"flex\",\n              alignItems: \"center\",\n              alignSelf: \"stretch\",\n              width: \"100%\",\n            }}\n            as=\"div\"\n          >\n            <Flex\n              align=\"baseline\"\n              css={{\n                flexWrap: \"nowrap\",\n                maxWidth: \"calc(100% - 10ch)\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {message.senderName === \"You\" || !message.senderName ? (\n                <SenderName\n                  as=\"span\"\n                  variant=\"sub2\"\n                  css={{\n                    color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n                    fontWeight: \"$semiBold\",\n                  }}\n                >\n                  {message.senderName || \"Anonymous\"}\n                </SenderName>\n              ) : (\n                <Tooltip\n                  title={message.senderName}\n                  side=\"top\"\n                  align=\"start\"\n                  boxCss={{ zIndex: 50 }}\n                >\n                  <SenderName\n                    as=\"span\"\n                    variant=\"sub2\"\n                    css={{\n                      color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n                      fontWeight: \"$semiBold\",\n                    }}\n                  >\n                    {message.sender === localPeerId\n                      ? `${message.senderName} (You)`\n                      : message.senderName}\n                  </SenderName>\n                </Tooltip>\n              )}\n              <MessageType\n                hasCurrentUserSent={message.sender === localPeerId}\n                receiver={message.recipientPeer}\n                roles={message.recipientRoles}\n              />\n            </Flex>\n\n            {!isOverlay ? (\n              <Text\n                as=\"span\"\n                variant=\"caption\"\n                css={{\n                  color: \"$on_surface_medium\",\n                  flexShrink: 0,\n                  position: \"absolute\",\n                  right: 0,\n                  zIndex: 1,\n                  mr: \"$4\",\n                  p: \"$2\",\n                }}\n              >\n                {formatTime(message.time)}\n              </Text>\n            ) : null}\n            <ChatActions\n              showPinAction={showPinAction}\n              message={message}\n              sentByLocalPeer={message.sender === localPeerId}\n              onReply={() => {\n                setRoleSelector(\"\");\n                setPeerSelector({\n                  id: message.sender,\n                  name: message.senderName,\n                });\n              }}\n              onReplyGroup={() => {\n                if (message.senderRole) {\n                  setRoleSelector(message.senderRole);\n                  setPeerSelector({});\n                }\n              }}\n              showReply={showReply}\n              isMobile={isMobile}\n              openSheet={openSheet}\n              setOpenSheet={setOpenSheet}\n            />\n          </Text>\n          <Text\n            variant=\"sm\"\n            css={{\n              w: \"100%\",\n              mt: \"$2\",\n              wordBreak: \"break-word\",\n              whiteSpace: \"pre-wrap\",\n              userSelect: \"all\",\n              color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n            }}\n            onClick={(e) => {\n              setOpenSheet(true, e);\n            }}\n          >\n            <AnnotisedMessage message={message.message} />\n          </Text>\n        </Flex>\n      </Box>\n    );\n  }\n);\n\nconst MessageWrapper = React.memo(\n  ({\n    index,\n    style,\n    data,\n  }: {\n    index: number;\n    style: React.CSSProperties;\n    data: HMSMessage[];\n  }) => {\n    return (\n      <ChatMessage\n        style={style}\n        index={index}\n        key={data[index].id}\n        message={data[index]}\n      />\n    );\n  }\n);\n\nconst VirtualizedChatMessages = React.forwardRef<\n  VariableSizeList,\n  { messages: HMSMessage[]; scrollToBottom: (count: number) => void }\n>(({ messages, scrollToBottom }, listRef) => {\n  const hmsActions = useHMSActions();\n  const itemKey = useCallback((index: number, data: HMSMessage[]) => {\n    return data[index].id;\n  }, []);\n  useEffect(() => {\n    requestAnimationFrame(() => scrollToBottom(1));\n  }, [scrollToBottom]);\n  return (\n    <Box\n      css={{\n        mr: \"-$10\",\n        h: \"100%\",\n      }}\n    >\n      <AutoSizer\n        style={{\n          width: \"90%\",\n        }}\n      >\n        {({ height, width }: { height: number; width: number }) => (\n          <VariableSizeList\n            ref={(node) => {\n              if (node) {\n                // @ts-ignore\n                listRef.current = node;\n                listInstance = node;\n              }\n            }}\n            itemCount={messages.length}\n            itemSize={getRowHeight}\n            itemData={messages}\n            width={width}\n            height={height}\n            style={{\n              overflowX: \"hidden\",\n            }}\n            itemKey={itemKey}\n            onItemsRendered={({ visibleStartIndex, visibleStopIndex }) => {\n              for (let i = visibleStartIndex; i <= visibleStopIndex; i++) {\n                if (!messages[i].read) {\n                  hmsActions.setMessageRead(true, messages[i].id);\n                }\n              }\n            }}\n          >\n            {MessageWrapper}\n          </VariableSizeList>\n        )}\n      </AutoSizer>\n    </Box>\n  );\n});\n\nexport const ChatBody = React.forwardRef<\n  VariableSizeList,\n  { scrollToBottom: (count: number) => void }\n>(\n  (\n    { scrollToBottom }: { scrollToBottom: (count: number) => void },\n    listRef\n  ) => {\n    const messages = useHMSStore(selectHMSMessages);\n    const blacklistedMessageIDs = useHMSStore(\n      selectSessionStore(SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST)\n    );\n    const filteredMessages = useMemo(() => {\n      const blacklistedMessageIDSet = new Set(blacklistedMessageIDs || []);\n      return (\n        messages?.filter(\n          (message) =>\n            message.type === \"chat\" && !blacklistedMessageIDSet.has(message.id)\n        ) || []\n      );\n    }, [blacklistedMessageIDs, messages]);\n\n    const vanillaStore = useHMSVanillaStore();\n    const rerenderOnFirstMount = useRef(false);\n\n    useEffect(() => {\n      const unsubscribe = vanillaStore.subscribe(() => {\n        // @ts-ignore\n        if (!listRef.current) {\n          return;\n        }\n        // @ts-ignore\n        const outerElement = listRef.current._outerRef;\n        if (\n          outerElement &&\n          outerElement.clientHeight +\n            outerElement.scrollTop +\n            outerElement.offsetTop >=\n            outerElement.scrollHeight\n        ) {\n          requestAnimationFrame(() => scrollToBottom(1));\n        }\n      }, selectUnreadHMSMessagesCount);\n      return unsubscribe;\n    }, [vanillaStore, listRef, scrollToBottom]);\n\n    useEffect(() => {\n      // @ts-ignore\n      if (\n        filteredMessages.length > 0 &&\n        listRef?.current &&\n        !rerenderOnFirstMount.current\n      ) {\n        rerenderOnFirstMount.current = true;\n        // @ts-ignore\n        listRef.current.resetAfterIndex(0);\n      }\n    }, [listRef, filteredMessages]);\n\n    return filteredMessages.length === 0 ? (\n      <EmptyChat />\n    ) : (\n      <VirtualizedChatMessages\n        messages={filteredMessages}\n        ref={listRef}\n        scrollToBottom={scrollToBottom}\n      />\n    );\n  }\n);\n\nconst PinnedBy = ({\n  messageId,\n  index,\n  rowRef,\n}: {\n  messageId: string;\n  index: number;\n  rowRef?: React.MutableRefObject<HTMLDivElement | null>;\n}) => {\n  const pinnedBy = usePinnedBy(messageId);\n  const localPeerName = useHMSStore(selectLocalPeerName);\n\n  useLayoutEffect(() => {\n    if (rowRef?.current) {\n      if (pinnedBy) {\n        rowRef.current.style.background =\n          \"linear-gradient(277deg, var(--hms-ui-colors-surface_default) 0%, var(--hms-ui-colors-surface_dim) 60.87%)\";\n      } else {\n        rowRef.current.style.background = \"\";\n      }\n      setRowHeight(index, messageId, rowRef?.current.clientHeight);\n    }\n  }, [index, messageId, pinnedBy, rowRef]);\n\n  if (!pinnedBy) {\n    return null;\n  }\n\n  return (\n    <Flex\n      align=\"center\"\n      css={{ gap: \"$2\", mb: \"$2\", color: \"$on_surface_low\" }}\n    >\n      <SolidPinIcon height={12} width={12} />\n      <Text variant=\"xs\" css={{ color: \"inherit\" }}>\n        Pinned by {localPeerName === pinnedBy ? \"you\" : pinnedBy}\n      </Text>\n    </Flex>\n  );\n};\n", "import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  selectHMSMessages,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  selectSessionStore,\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { SendIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { TextArea } from \"../../../TextArea\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\nimport { AnnotisedMessage } from \"../Chat/ChatBody\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { CHAT_MESSAGE_LIMIT, formatTime } from \"../Chat/utils\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const PIPChat = () => {\n  const messages = useHMSStore(selectHMSMessages);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const count = useHMSStore(selectUnreadHMSMessagesCount);\n  const [unreadMessageCount, setUnreadMessageCount] = useState(0);\n\n  const getSenderName = useCallback(\n    (senderName: string, senderID?: string) => {\n      const slicedName =\n        senderName.length > 10 ? senderName.slice(0, 10) + \"...\" : senderName;\n      return slicedName + (senderID === localPeerID ? \" (You)\" : \"\");\n    },\n    [localPeerID]\n  );\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setUnreadMessageCount(count);\n    }, 100);\n    return () => clearTimeout(timeoutId);\n  }, [count]);\n\n  const blacklistedMessageIDs = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST)\n  );\n  const filteredMessages = useMemo(() => {\n    const blacklistedMessageIDSet = new Set(blacklistedMessageIDs || []);\n    return (\n      messages?.filter(\n        (message) =>\n          message.type === \"chat\" && !blacklistedMessageIDSet.has(message.id)\n      ) || []\n    );\n  }, [blacklistedMessageIDs, messages]);\n  const { enabled: isChatEnabled = true, updatedBy: chatStateUpdatedBy = \"\" } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  const { elements } = useRoomLayoutConferencingScreen();\n  const message_placeholder =\n    elements?.chat?.message_placeholder || \"Send a message\";\n  const canSendChatMessages =\n    !!elements?.chat?.public_chat_enabled ||\n    !!elements?.chat?.roles_whitelist?.length ||\n    !!elements?.chat?.private_chat_enabled;\n\n  const getChatStatus = useCallback(() => {\n    if (isLocalPeerBlacklisted)\n      return \"You've been blocked from sending messages\";\n    if (!isChatEnabled)\n      return `Chat has been paused by ${\n        chatStateUpdatedBy.peerId === localPeerID\n          ? \"you\"\n          : chatStateUpdatedBy?.userName\n      }`;\n    return message_placeholder;\n  }, [\n    chatStateUpdatedBy.peerId,\n    chatStateUpdatedBy?.userName,\n    isChatEnabled,\n    isLocalPeerBlacklisted,\n    localPeerID,\n    message_placeholder,\n  ]);\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Box\n        id=\"chat-container\"\n        css={{\n          bg: \"$surface_dim\",\n          overflowY: \"auto\",\n          // Subtracting height of footer\n          h: canSendChatMessages ? \"calc(100% - 87px)\" : \"100%\",\n          position: \"relative\",\n        }}\n      >\n        {unreadMessageCount ? (\n          <Box\n            id=\"new-message-notif\"\n            style={{\n              position: \"fixed\",\n              bottom: \"76px\",\n              right: \"4px\",\n            }}\n          >\n            <Text\n              variant=\"xs\"\n              css={{ cursor: \"pointer\" }}\n              style={{\n                color: \"white\",\n                background: \"gray\",\n                padding: \"4px\",\n                borderRadius: \"4px\",\n              }}\n            >\n              {unreadMessageCount === 1\n                ? \"New message\"\n                : `${unreadMessageCount} new messages`}\n            </Text>\n          </Box>\n        ) : (\n          \"\"\n        )}\n        {filteredMessages.length === 0 ? (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\",\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text variant=\"h5\" css={{ mt: \"$8\", c: \"$on_surface_high\" }}>\n              {canSendChatMessages ? \"Start a conversation\" : \"No messages yet\"}\n            </Text>\n            {canSendChatMessages ? (\n              <Text\n                variant=\"sm\"\n                style={{\n                  maxWidth: \"80%\",\n                  textAlign: \"center\",\n                  marginTop: \"4px\",\n                }}\n              >\n                There are no messages here yet. Start a conversation by sending\n                a message.\n              </Text>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ) : (\n          filteredMessages.map((message) => (\n            <Box\n              className=\"pip-message\"\n              key={message.id}\n              id={message.id}\n              style={{ padding: \"8px 0.75rem\" }}\n            >\n              <Flex\n                style={{\n                  width: \"100%\",\n                  alignItems: \"center\",\n                  justifyContent: \"between\",\n                }}\n              >\n                <Text\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"between\",\n                    width: \"100%\",\n                    alignItems: \"center\",\n                  }}\n                  css={{\n                    color: \"$on_surface_high\",\n                    fontWeight: \"$semiBold\",\n                  }}\n                >\n                  <Flex\n                    style={{ flexGrow: 1, gap: \"2px\", alignItems: \"center\" }}\n                  >\n                    {message.senderName === \"You\" || !message.senderName ? (\n                      <Text\n                        as=\"span\"\n                        variant=\"sub2\"\n                        css={{\n                          color: \"$on_surface_high\",\n                          fontWeight: \"$semiBold\",\n                        }}\n                      >\n                        {message.senderName || \"Anonymous\"}\n                      </Text>\n                    ) : (\n                      <Tooltip\n                        title={message.senderName}\n                        side=\"top\"\n                        align=\"start\"\n                      >\n                        <Text\n                          as=\"span\"\n                          variant=\"sub2\"\n                          css={{\n                            color: \"$on_surface_high\",\n                            fontWeight: \"$semiBold\",\n                          }}\n                        >\n                          {getSenderName(message.senderName, message?.sender)}\n                        </Text>\n                      </Tooltip>\n                    )}\n                    <MessageTitle\n                      localPeerID={localPeerID}\n                      recipientPeer={message.recipientPeer}\n                      recipientRoles={message.recipientRoles}\n                    />\n                  </Flex>\n\n                  <Text\n                    variant=\"xs\"\n                    css={{\n                      color: \"$on_surface_medium\",\n                      flexShrink: 0,\n                      p: \"$2\",\n                      whitespace: \"nowrap\",\n                    }}\n                  >\n                    {formatTime(message.time)}\n                  </Text>\n                </Text>\n              </Flex>\n              <Text\n                variant=\"sm\"\n                css={{\n                  w: \"100%\",\n                  mt: \"$2\",\n                  wordBreak: \"break-word\",\n                  whiteSpace: \"pre-wrap\",\n                  userSelect: \"all\",\n                  color: \"$on_surface_high\",\n                }}\n              >\n                <AnnotisedMessage message={message.message} />\n              </Text>\n            </Box>\n          ))\n        )}\n        <div\n          id=\"marker\"\n          style={{ height: filteredMessages.length ? \"1px\" : 0 }}\n        />\n      </Box>\n      {canSendChatMessages && (\n        <Box css={{ bg: \"$surface_dim\" }}>\n          <Flex css={{ px: \"$4\", pb: \"3px\", gap: \"$2\", alignItems: \"center\" }}>\n            <Text variant=\"caption\">To:</Text>\n            <Flex\n              css={{\n                bg: \"$primary_bright\",\n                color: \"$on_primary_high\",\n                r: \"$2\",\n              }}\n            >\n              <select\n                id=\"selector\"\n                style={{\n                  background: \"inherit\",\n                  color: \"inherit\",\n                  border: \"none\",\n                  outline: \"none\",\n                  borderRadius: \"4px\",\n                  padding: \"0 2px\",\n                }}\n                defaultValue={\n                  elements.chat?.public_chat_enabled\n                    ? \"Everyone\"\n                    : elements.chat?.roles_whitelist?.[0]\n                }\n              >\n                {elements.chat?.roles_whitelist?.map((role) => (\n                  <option key={role} value={role}>\n                    {role}\n                  </option>\n                ))}\n                {elements.chat?.public_chat_enabled ? (\n                  <option value=\"Everyone\">Everyone</option>\n                ) : (\n                  \"\"\n                )}\n              </select>\n            </Flex>\n          </Flex>\n          <Flex\n            align=\"center\"\n            css={{\n              bg: \"$surface_default\",\n              minHeight: \"$16\",\n              width: \"100%\",\n              py: \"$6\",\n              pl: \"$4\",\n              boxSizing: \"border-box\",\n              gap: \"$2\",\n              r: \"$2\",\n            }}\n          >\n            <TextArea\n              id=\"chat-input\"\n              maxLength={CHAT_MESSAGE_LIMIT}\n              disabled={!isChatEnabled || isLocalPeerBlacklisted}\n              rows={1}\n              css={{\n                w: \"100%\",\n                c: \"$on_surface_high\",\n                p: \"0.75rem 0.75rem !important\",\n                border: \"none\",\n                resize: \"none\",\n              }}\n              placeholder={getChatStatus()}\n              required\n              autoComplete=\"off\"\n              aria-autocomplete=\"none\"\n            />\n\n            <IconButton\n              id=\"send-btn\"\n              disabled={!isChatEnabled || isLocalPeerBlacklisted}\n              title={getChatStatus()}\n              css={{\n                ml: \"auto\",\n                height: \"max-content\",\n                mr: \"$4\",\n                \"&:hover\": { c: \"$on_surface_medium\" },\n              }}\n              data-testid=\"send_msg_btn\"\n            >\n              <SendIcon />\n            </IconButton>\n          </Flex>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nconst MessageTitle = ({\n  recipientPeer,\n  recipientRoles,\n  localPeerID,\n}: {\n  recipientPeer?: string;\n  recipientRoles?: string[];\n  localPeerID: string;\n}) => {\n  const peerName = useHMSStore(selectPeerNameByID(recipientPeer));\n\n  return (\n    <>\n      {recipientRoles ? (\n        <Text\n          as=\"span\"\n          variant=\"sub2\"\n          css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n        >\n          to {recipientRoles} (Group)\n        </Text>\n      ) : null}\n      {recipientPeer ? (\n        <Text\n          as=\"span\"\n          variant=\"sub2\"\n          css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n        >\n          to {recipientPeer === localPeerID ? \"You\" : peerName} (DM)\n        </Text>\n      ) : null}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { ExternalLinkIcon } from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Text } from \"../../../Text\";\n\nexport const PIPChatOption = ({\n  openChat,\n  showPIPChat,\n}: {\n  openChat: () => void;\n  showPIPChat: boolean;\n}) => {\n  if (!showPIPChat) {\n    return <></>;\n  }\n  return (\n    <Dropdown.Item onClick={openChat} data-testid=\"pip_chat_btn\">\n      <ExternalLinkIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\", color: \"$on_surface_high\" }}>\n        Pop out Chat\n      </Text>\n    </Dropdown.Item>\n  );\n};\n", "import React from \"react\";\nimport { createPortal } from \"react-dom\";\n\ntype PIPWindowProps = {\n  pipWindow: Window;\n  children: React.ReactNode;\n};\n\nexport const PIPWindow = ({ pipWindow, children }: PIPWindowProps) => {\n  pipWindow.document.body.style.margin = \"0\";\n  pipWindow.document.body.style.overflow = \"clip\";\n  return createPortal(children, pipWindow.document.body);\n};\n", "import React, { useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSPeer,\n  selectAvailableRoleNames,\n  selectPeerByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  CrossIcon,\n} from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { Sheet } from \"../../Sheet\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\n\nconst HighlightTerm = ({ value }: { value: string | undefined }) => {\n  return value ? (\n    <Tooltip side=\"top\" title={value}>\n      <Text\n        variant=\"body2\"\n        css={{\n          color: \"$on_surface_medium\",\n          fontWeight: \"$semiBold\",\n        }}\n      >\n        '{value.slice(0, 100)}\n        {value.length > 100 ? \"...\" : \"\"}'\n      </Text>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n};\n\nconst RoleChangeContent = ({\n  peer,\n  onOpenChange,\n  isMobile = false,\n}: {\n  peer: HMSPeer;\n  onOpenChange: (open: boolean) => void;\n  isMobile?: boolean;\n}) => {\n  const roles = useHMSStore(selectAvailableRoleNames).filter(\n    (role) => role !== peer?.roleName && role !== \"__internal_recorder\"\n  );\n  const [selectedRole, setRole] = useState(\n    roles.filter((role) => role !== peer?.roleName)?.[0] || peer?.roleName\n  );\n  const hmsActions = useHMSActions();\n  const [open, setOpen] = useState(false);\n  const triggerRef = useRef<HTMLButtonElement | undefined>();\n\n  return (\n    <>\n      <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\" }}>\n        <Text as=\"h6\" variant=\"h6\">\n          Switch Role\n        </Text>\n        {isMobile && <CrossIcon onClick={() => onOpenChange(false)} />}\n      </Flex>\n\n      <Box>\n        <Text\n          variant=\"sm\"\n          css={{\n            mt: \"$4\",\n            mb: \"$8\",\n            c: \"$on_surface_medium\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            columnGap: \"4px\",\n          }}\n        >\n          Switch the role of\n          <HighlightTerm value={peer.name} />\n          from <HighlightTerm value={peer.roleName} /> to\n        </Text>\n      </Box>\n      <Flex\n        align=\"center\"\n        css={{\n          w: \"100%\",\n          mb: \"$10\",\n        }}\n      >\n        <Box\n          css={{\n            position: \"relative\",\n            flex: \"1 1 0\",\n            minWidth: 0,\n          }}\n        >\n          <Dropdown.Root\n            open={open}\n            onOpenChange={setOpen}\n            css={{ width: \"100%\" }}\n          >\n            <Dropdown.Trigger\n              // @ts-ignore\n              ref={triggerRef}\n              data-testid=\"open_role_selection_dropdown\"\n              asChild\n              css={{\n                bg: \"$surface_default\",\n                r: \"$1\",\n                p: \"$6 $9\",\n              }}\n            >\n              <Flex align=\"center\" justify=\"between\" css={{ width: \"100%\" }}>\n                <Text>{selectedRole}</Text>\n                {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n              </Flex>\n            </Dropdown.Trigger>\n\n            <Dropdown.Content\n              align=\"start\"\n              sideOffset={8}\n              css={{ zIndex: 1000, w: \"100%\" }}\n            >\n              {roles.map((role) => (\n                <Dropdown.Item\n                  data-testid={role}\n                  key={role}\n                  onSelect={() => setRole(role)}\n                  css={{ w: `${triggerRef.current?.clientWidth}px` }}\n                >\n                  {role}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </Box>\n      </Flex>\n      <Flex justify=\"center\" align=\"center\" css={{ width: \"100%\", gap: \"$md\" }}>\n        {!isMobile && (\n          <Button\n            variant=\"standard\"\n            outlined\n            css={{ width: \"100%\" }}\n            onClick={() => onOpenChange(false)}\n            data-testid=\"cancel_button\"\n          >\n            Cancel\n          </Button>\n        )}\n\n        <Button\n          data-testid=\"change_button\"\n          variant=\"primary\"\n          css={{ width: \"100%\" }}\n          onClick={async () => {\n            if (selectedRole) {\n              await hmsActions.changeRoleOfPeer(peer.id, selectedRole, true);\n              onOpenChange(false);\n            }\n          }}\n        >\n          Switch Role\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nexport const RoleChangeModal = ({\n  peerId,\n  onOpenChange,\n}: {\n  peerId: string;\n  onOpenChange: (open: boolean) => void;\n}) => {\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (!peer) {\n    return null;\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet.Root\n        open={true}\n        onOpenChange={onOpenChange}\n        css={{ borderRadius: \"$0 $0 0 0\" }}\n      >\n        <Sheet.Content\n          css={{\n            p: \"$10 $8\",\n            background: \"$surface_dim\",\n            border: \"1px solid $border_default\",\n          }}\n        >\n          <RoleChangeContent peer={peer} onOpenChange={onOpenChange} isMobile />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ width: \"min(400px,80%)\", p: \"$10\", overflow: \"visible\" }}\n        >\n          <RoleChangeContent peer={peer} onOpenChange={onOpenChange} />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React, { useRef } from \"react\";\nimport { CheckIcon, CloudUploadIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Checkbox } from \"../../Checkbox\";\nimport { HorizontalDivider } from \"../../Divider\";\nimport { IconButton } from \"../../IconButton\";\nimport { Input } from \"../../Input\";\nimport { Label } from \"../../Label\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { Select } from \"../../Select\";\nimport { Switch } from \"../../Switch\";\nimport { Text } from \"../../Text\";\nimport { flexCenter } from \"../../utils\";\n\nexport const DialogContent = ({\n  Icon,\n  title,\n  closeable = true,\n  children,\n  css,\n  iconCSS = {},\n  ...props\n}) => {\n  return (\n    <Dialog.Portal>\n      <Dialog.Overlay />\n      <Dialog.Content css={{ width: \"min(600px, 100%)\", ...css }} {...props}>\n        <Dialog.Title>\n          <Flex justify=\"between\">\n            <Flex align=\"center\" css={{ mb: \"$1\" }}>\n              {Icon ? (\n                <Flex\n                  css={{\n                    mr: \"$2\",\n                    color: \"$on_primary_high\",\n                    ...flexCenter,\n                    ...iconCSS,\n                  }}\n                >\n                  <Icon />\n                </Flex>\n              ) : null}\n              <Text variant=\"h6\" inline>\n                {title}\n              </Text>\n            </Flex>\n            {closeable && (\n              <Dialog.DefaultClose data-testid=\"dialoge_cross_icon\" />\n            )}\n          </Flex>\n        </Dialog.Title>\n        <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n        <Box>{children}</Box>\n      </Dialog.Content>\n    </Dialog.Portal>\n  );\n};\n\nexport const ErrorDialog = ({\n  open = true,\n  onOpenChange,\n  title,\n  children,\n  ...props\n}) => {\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        Icon={CrossIcon}\n        title={title}\n        onInteractOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n        onPointerDownOutside={(e) => e.preventDefault()}\n        closeable={false}\n        iconCSS={{ color: \"$alert_error_default\" }}\n        {...props}\n      >\n        <Box css={{ mt: \"$lg\" }}>{children}</Box>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n\nexport const RequestDialog = ({\n  open = true,\n  onOpenChange,\n  title,\n  body,\n  actionText = \"Accept\",\n  onAction,\n  Icon,\n}) => (\n  <Dialog.Root open={open} onOpenChange={onOpenChange}>\n    <Dialog.Portal>\n      <Dialog.Overlay />\n      <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n        <Dialog.Title\n          css={{ p: 0, display: \"flex\", flexDirection: \"row\", gap: \"$md\" }}\n        >\n          {Icon ? Icon : null}\n          <Text variant=\"h6\">{title}</Text>\n        </Dialog.Title>\n        {typeof body === \"string\" ? (\n          <Text\n            variant=\"md\"\n            css={{\n              fontWeight: 400,\n              mt: \"$4\",\n              mb: \"$10\",\n              c: \"$on_surface_medium\",\n            }}\n          >\n            {body}\n          </Text>\n        ) : (\n          <Box css={{ mt: \"$4\", mb: \"$10\" }}>{body}</Box>\n        )}\n        <Flex\n          justify=\"center\"\n          align=\"center\"\n          css={{ width: \"100%\", gap: \"$md\" }}\n        >\n          <Box css={{ width: \"50%\" }}>\n            <Dialog.Close css={{ width: \"100%\" }}>\n              <Button variant=\"standard\" outlined css={{ width: \"100%\" }}>\n                Cancel\n              </Button>\n            </Dialog.Close>\n          </Box>\n          <Box css={{ width: \"50%\" }}>\n            <Button\n              variant=\"primary\"\n              css={{ width: \"100%\" }}\n              onClick={onAction}\n            >\n              {actionText}\n            </Button>\n          </Box>\n        </Flex>\n      </Dialog.Content>\n    </Dialog.Portal>\n  </Dialog.Root>\n);\n\n/**\n * a row of items which breaks into column on small screen. For example title on left and options to select\n * from on right for select component.\n */\nexport const DialogRow = ({\n  children,\n  breakSm = false,\n  css,\n  justify = \"between\",\n}) => {\n  let finalCSS = {\n    margin: \"$10 0\",\n    w: \"100%\",\n  };\n  if (breakSm) {\n    finalCSS[\"@sm\"] = {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n    };\n  }\n  if (css) {\n    finalCSS = Object.assign(finalCSS, css);\n  }\n  return (\n    <Flex align=\"center\" justify={justify} css={finalCSS}>\n      {children}\n    </Flex>\n  );\n};\n\nexport const DialogCol = ({\n  children,\n  breakSm = false,\n  css,\n  align = \"center\",\n  justify = \"between\",\n  ...props\n}) => {\n  let finalCSS = {\n    margin: \"$10 0\",\n    w: \"100%\",\n  };\n  if (breakSm) {\n    finalCSS[\"@sm\"] = {\n      alignItems: \"flex-start\",\n    };\n  }\n  if (css) {\n    finalCSS = Object.assign(finalCSS, css);\n  }\n  return (\n    <Flex\n      direction=\"column\"\n      align={align}\n      justify={justify}\n      css={finalCSS}\n      {...props}\n    >\n      {children}\n    </Flex>\n  );\n};\n\n/**\n * key field and label field are optional, option is directly used if not passed\n */\nexport const DialogSelect = ({\n  title,\n  options,\n  keyField,\n  labelField,\n  selected,\n  onChange,\n  ...props\n}) => {\n  return (\n    <DialogRow breakSm>\n      <Label>{title}</Label>\n      <Select.Root\n        data-testid={`dialog_select_${title}`}\n        css={{ width: \"70%\", \"@sm\": { width: \"100%\" } }}\n        {...props}\n      >\n        <Select.DefaultDownIcon />\n        <Select.Select\n          onChange={(e) => onChange(e.target.value)}\n          value={selected}\n          css={{ width: \"100%\" }}\n        >\n          {options.map((option) => {\n            const id = keyField ? option[keyField] : option;\n            const label = labelField ? option[labelField] : option;\n            return (\n              <option value={id} key={id}>\n                {label}\n              </option>\n            );\n          })}\n        </Select.Select>\n      </Select.Root>\n    </DialogRow>\n  );\n};\n\nexport const DialogInput = ({\n  title,\n  value,\n  onChange,\n  placeholder,\n  disabled,\n  type,\n  ...props\n}) => {\n  return (\n    <DialogRow breakSm>\n      <Label>{title}</Label>\n      <Input\n        css={{ width: \"70%\", \"@sm\": { width: \"100%\" }, bg: \"$surface_bright\" }}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        placeholder={placeholder}\n        disabled={disabled}\n        type={type}\n        {...props}\n      />\n    </DialogRow>\n  );\n};\n\nexport const DialogInputFile = ({\n  value,\n  onChange,\n  placeholder,\n  disabled,\n  type,\n  ...props\n}) => {\n  const inputRef = useRef();\n  return (\n    <DialogCol\n      breakSm\n      onClick={() => inputRef.current?.click()}\n      css={{\n        justifyContent: \"center\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        py: \"$12\",\n        border: \"1px dashed $border_bright\",\n        r: \"$1\",\n        height: \"max(140px, 30%)\",\n        alignItems: \"center\",\n        m: \"$6 0\",\n      }}\n      gap=\"8\"\n    >\n      <IconButton\n        variant=\"standard\"\n        css={{\n          border: \"none\",\n          background: \"none\",\n          \"&:hover\": {\n            border: \"none\",\n            background: \"none\",\n            bg: \"transparent !important\",\n          },\n        }}\n      >\n        <CloudUploadIcon\n          style={{\n            width: \"3rem\",\n            height: \"3rem\",\n          }}\n        />\n      </IconButton>\n      <Flex direction=\"row\">\n        <Input\n          ref={inputRef}\n          css={{ width: \"70%\", \"@sm\": { width: \"100%\" } }}\n          value={value}\n          onChange={(e) => onChange(e.target)}\n          placeholder={placeholder}\n          disabled={disabled}\n          type={type}\n          hidden={true}\n          {...props}\n        />\n        <IconButton\n          variant=\"standard\"\n          css={{\n            background: \"none\",\n            border: \"none\",\n            textDecoration: \"underline\",\n            \"&:hover\": {\n              background: \"none !important\",\n              border: \"none !important\",\n            },\n          }}\n        >\n          <Text variant=\"md\">{placeholder}</Text>\n        </IconButton>\n      </Flex>\n    </DialogCol>\n  );\n};\n\nexport const DialogSwitch = ({ title, value, onChange, disabled }) => {\n  return (\n    <DialogRow>\n      <Text>{title}</Text>\n      <Flex justify=\"end\" css={{ width: \"70%\" }}>\n        <Switch\n          checked={value}\n          disabled={disabled}\n          onCheckedChange={onChange}\n        />\n      </Flex>\n    </DialogRow>\n  );\n};\n\nexport const DialogCheckbox = ({\n  title,\n  value,\n  onChange,\n  disabled,\n  css,\n  id,\n}) => {\n  return (\n    <DialogRow css={css}>\n      <Label htmlFor={id} css={{ cursor: \"pointer\" }}>\n        {title}\n      </Label>\n      <Checkbox.Root\n        checked={value}\n        onCheckedChange={(value) => onChange(value)}\n        disabled={disabled}\n        id={id}\n      >\n        <Checkbox.Indicator>\n          <CheckIcon width={16} height={16} />\n        </Checkbox.Indicator>\n      </Checkbox.Root>\n    </DialogRow>\n  );\n};\n", "import React, { useCallback, useState } from \"react\";\nimport { InfoIcon } from \"@100mslive/react-icons\";\nimport { Flex, Input, Label, Text, Tooltip } from \"../../../\";\nimport { DialogRow } from \"../../primitives/DialogContent\";\nimport {\n  RTMP_RECORD_DEFAULT_RESOLUTION,\n  RTMP_RECORD_RESOLUTION_MAX,\n  RTMP_RECORD_RESOLUTION_MIN,\n} from \"../../common/constants\";\n\nexport const ResolutionInput = ({\n  onResolutionChange,\n  disabled,\n  tooltipText,\n  css,\n  testId,\n}) => {\n  const [resolution, setResolution] = useState(RTMP_RECORD_DEFAULT_RESOLUTION);\n\n  const resolutionChangeHandler = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      let width = name === \"resWidth\" ? Number(value) : resolution.width;\n      let height = name === \"resHeight\" ? Number(value) : resolution.height;\n\n      if (width === 0) {\n        width = null;\n      }\n      if (height === 0) {\n        height = null;\n      }\n      const newResolution = {\n        width: !isNaN(width) ? width : RTMP_RECORD_DEFAULT_RESOLUTION.width,\n        height: !isNaN(height) ? height : RTMP_RECORD_DEFAULT_RESOLUTION.height,\n      };\n      setResolution(newResolution);\n    },\n    [resolution]\n  );\n\n  return (\n    <DialogRow breakSm css={css}>\n      <Flex gap={1}>\n        <Label css={{ mb: \"$8\" }}>Resolution</Label>\n        {tooltipText && (\n          <Tooltip title={tooltipText}>\n            <div>\n              <InfoIcon color=\"#B0C3DB\" />\n            </div>\n          </Tooltip>\n        )}\n      </Flex>\n      <Flex\n        justify=\"between\"\n        css={{ width: !tooltipText ? \"100%\" : \"70%\", \"@sm\": { width: \"100%\" } }}\n        gap={2}\n        direction=\"column\"\n      >\n        <Flex justify=\"between\" gap={2}>\n          <Flex direction=\"column\" css={{ width: \"50%\" }}>\n            <Text variant=\"xs\">Width</Text>\n            <Input\n              data-testid={`${testId}_width`}\n              css={{ width: \"100%\", mt: \"$4\" }}\n              name=\"resWidth\"\n              value={resolution.width}\n              onChange={resolutionChangeHandler}\n              readOnly={disabled}\n              min={RTMP_RECORD_RESOLUTION_MIN}\n              max={RTMP_RECORD_RESOLUTION_MAX}\n              onBlur={() => onResolutionChange(resolution)}\n              type=\"number\"\n            />\n          </Flex>\n          <Flex direction=\"column\" css={{ width: \"50%\" }}>\n            <Text variant=\"xs\">Height</Text>\n            <Input\n              data-testid={`${testId}_height`}\n              css={{ width: \"100%\", mt: \"$4\" }}\n              name=\"resHeight\"\n              value={resolution.height}\n              onChange={resolutionChangeHandler}\n              onBlur={() => onResolutionChange(resolution)}\n              readOnly={disabled}\n              min={RTMP_RECORD_RESOLUTION_MIN}\n              max={RTMP_RECORD_RESOLUTION_MAX}\n              type=\"number\"\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    </DialogRow>\n  );\n};\n", "import React, { useState } from \"react\";\nimport {\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { AlertTriangleIcon } from \"@100mslive/react-icons\";\nimport { Button, Dialog, Flex, Text } from \"../../../\";\nimport { ResolutionInput } from \"../Streaming/ResolutionInput\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useRecordingHandler } from \"../../common/hooks\";\nimport { RTMP_RECORD_DEFAULT_RESOLUTION } from \"../../common/constants\";\n\nconst StartRecording = ({ open, onOpenChange }) => {\n  const permissions = useHMSStore(selectPermissions);\n  const [resolution, setResolution] = useState(RTMP_RECORD_DEFAULT_RESOLUTION);\n  const { startRecording, recordingStarted } = useRecordingHandler();\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const hmsActions = useHMSActions();\n  if (!permissions?.browserRecording || isHLSRunning) {\n    return null;\n  }\n  if (isBrowserRecordingOn) {\n    return (\n      <Dialog.Root open={open} onOpenChange={onOpenChange}>\n        <Dialog.Portal>\n          <Dialog.Content\n            css={{\n              width: \"min(400px,80%)\",\n              p: \"$10\",\n              bg: \"#201617\",\n            }}\n          >\n            <Dialog.Title>\n              <Flex gap={2} css={{ c: \"$alert_error_default\" }}>\n                <AlertTriangleIcon />\n                <Text css={{ c: \"inherit\" }} variant=\"h6\">\n                  End Recording\n                </Text>\n              </Flex>\n            </Dialog.Title>\n            <Text variant=\"sm\" css={{ c: \"$on_surface_medium\", my: \"$8\" }}>\n              Are you sure you want to end recording? You can\u2019t undo this\n              action.\n            </Text>\n            <Flex justify=\"end\" css={{ mt: \"$12\" }}>\n              <Dialog.Close asChild>\n                <Button\n                  outlined\n                  css={{ borderColor: \"$secondary_bright\", mr: \"$4\" }}\n                >\n                  Don't end\n                </Button>\n              </Dialog.Close>\n              <Button\n                data-testid=\"stop_recording_confirm_mobile\"\n                variant=\"danger\"\n                icon\n                onClick={async () => {\n                  try {\n                    await hmsActions.stopRTMPAndRecording();\n                  } catch (error) {\n                    ToastManager.addToast({\n                      title: error.message,\n                      variant: \"error\",\n                    });\n                  }\n                  onOpenChange(false);\n                }}\n              >\n                End recording\n              </Button>\n            </Flex>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    );\n  }\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n        <Dialog.Title>\n          <Text variant=\"h6\">Start Recording</Text>\n        </Dialog.Title>\n        <ResolutionInput\n          testId=\"recording_resolution_mobile\"\n          css={{ flexDirection: \"column\", alignItems: \"start\" }}\n          onResolutionChange={setResolution}\n        />\n        <Button\n          data-testid=\"start_recording_confirm_mobile\"\n          variant=\"primary\"\n          icon\n          css={{ ml: \"auto\" }}\n          type=\"submit\"\n          disabled={recordingStarted || isStreamingOn}\n          onClick={async () => {\n            await startRecording(resolution);\n            onOpenChange(false);\n          }}\n        >\n          Start\n        </Button>\n      </Dialog.Content>\n    </Dialog.Root>\n  );\n};\n\nexport default StartRecording;\n", "import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  selectHMSStats,\n  selectLocalPeerID,\n  selectPeersMap,\n  selectTracksMap,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { HorizontalDivider } from \"../../Divider\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Label } from \"../../Label\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { formatBytes } from \"../../Stats\";\nimport { Switch } from \"../../Switch\";\nimport { Text } from \"../../Text\";\nimport { DialogDropdownTrigger } from \"../primitives/DropdownTrigger\";\nimport { useSetUiSettings } from \"./AppData/useUISettings\";\nimport { useDropdownSelection } from \"./hooks/useDropdownSelection\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const StatsForNerds = ({ onOpenChange }) => {\n  const tracksWithLabels = useTracksWithLabel();\n  const statsOptions = useMemo(\n    () => [\n      { id: \"local-peer\", label: \"Local Peer Stats\" },\n      ...tracksWithLabels,\n    ],\n    [tracksWithLabels]\n  );\n  const [selectedStat, setSelectedStat] = useState(statsOptions[0]);\n  const [showStatsOnTiles, setShowStatsOnTiles] = useSetUiSettings(\n    UI_SETTINGS.showStatsOnTiles\n  );\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const selectionBg = useDropdownSelection();\n\n  useEffect(() => {\n    if (\n      selectedStat.id !== \"local-peer\" &&\n      !tracksWithLabels.find((track) => track.id === selectedStat.id)\n    ) {\n      setSelectedStat(\"local-peer\");\n    }\n  }, [tracksWithLabels, selectedStat]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            width: \"min(500px, 95%)\",\n            maxHeight: \"100%\",\n            overflowY: \"auto\",\n          }}\n        >\n          {/* Title */}\n          <Dialog.Title css={{ p: \"$4 0\" }}>\n            <Flex justify=\"between\">\n              <Flex align=\"center\" css={{ mb: \"$1\" }}>\n                <Text variant=\"h6\" inline>\n                  Stats For Nerds\n                </Text>\n              </Flex>\n              <Dialog.DefaultClose data-testid=\"stats_dialog_close_icon\" />\n            </Flex>\n          </Dialog.Title>\n          <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n          {/* Switch */}\n          <Flex justify=\"start\" gap={4} css={{ m: \"$10 0\" }}>\n            <Switch\n              checked={showStatsOnTiles}\n              onCheckedChange={setShowStatsOnTiles}\n            />\n            <Text variant=\"body2\" css={{ fontWeight: \"$semiBold\" }}>\n              Show Stats on Tiles\n            </Text>\n          </Flex>\n          {/* Select */}\n          <Flex\n            direction=\"column\"\n            css={{\n              mb: \"$12\",\n              position: \"relative\",\n              minWidth: 0,\n            }}\n          >\n            <Label variant=\"body2\" css={{ c: \"$on_surface_high\" }}>\n              Stats For\n            </Label>\n            <Dropdown.Root\n              data-testid=\"dialog_select_Stats For\"\n              open={open}\n              onOpenChange={setOpen}\n            >\n              <DialogDropdownTrigger\n                title={selectedStat.label || \"Select Stats\"}\n                css={{ mt: \"$4\" }}\n                titleCSS={{ mx: 0 }}\n                open={open}\n                ref={ref}\n              />\n              <Dropdown.Portal>\n                <Dropdown.Content\n                  align=\"start\"\n                  sideOffset={8}\n                  css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n                >\n                  {statsOptions.map((option) => {\n                    const isSelected =\n                      option.id === selectedStat.id &&\n                      option.layer === selectedStat.layer;\n                    return (\n                      <Dropdown.Item\n                        key={`${option.id}-${option.layer || \"\"}`}\n                        onClick={() => {\n                          setSelectedStat(option);\n                        }}\n                        css={{\n                          px: \"$9\",\n                          bg: isSelected ? selectionBg : undefined,\n                          c: isSelected\n                            ? \"$on_primary_high\"\n                            : \"$on_primary_high\",\n                        }}\n                      >\n                        {option.label}\n                      </Dropdown.Item>\n                    );\n                  })}\n                </Dropdown.Content>\n              </Dropdown.Portal>\n            </Dropdown.Root>\n          </Flex>\n          {/* Stats */}\n          {selectedStat.id === \"local-peer\" ? (\n            <LocalPeerStats />\n          ) : (\n            <TrackStats\n              trackID={selectedStat.id}\n              layer={selectedStat.layer}\n              local={selectedStat.local}\n            />\n          )}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst useTracksWithLabel = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const peersMap = useHMSStore(selectPeersMap);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const tracksWithLabels = useMemo(\n    () =>\n      Object.values(tracksMap).reduce((res, track) => {\n        const peerName = peersMap[track.peerId]?.name;\n        const isLocalTrack = track.peerId === localPeerID;\n        if (isLocalTrack && track.layerDefinitions?.length) {\n          res = res.concat(\n            track.layerDefinitions.map(({ layer }) => {\n              return {\n                id: track.id,\n                layer,\n                local: true,\n                label: `${peerName} ${track.source} ${track.type} - ${layer}`,\n              };\n            })\n          );\n          return res;\n        }\n        res.push({\n          id: track.id,\n          local: isLocalTrack,\n          label: `${peerName} ${track.source} ${track.type}`,\n        });\n        return res;\n      }, []),\n    [tracksMap, peersMap, localPeerID]\n  );\n  return tracksWithLabels;\n};\n\nconst LocalPeerStats = () => {\n  const stats = useHMSStatsStore(selectHMSStats.localPeerStats);\n\n  if (!stats) {\n    return null;\n  }\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Packets Lost\" value={stats.subscribe?.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.subscribe?.jitter} />\n      <StatsRow\n        label=\"Publish Bitrate\"\n        value={formatBytes(stats.publish?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Subscribe Bitrate\"\n        value={formatBytes(stats.subscribe?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Available Outgoing Bitrate\"\n        value={formatBytes(stats.publish?.availableOutgoingBitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Total Bytes Sent\"\n        value={formatBytes(stats.publish?.bytesSent)}\n      />\n      <StatsRow\n        label=\"Total Bytes Received\"\n        value={formatBytes(stats.subscribe?.bytesReceived)}\n      />\n      <StatsRow\n        label=\"Round Trip Time\"\n        value={`${\n          (\n            ((stats.publish?.currentRoundTripTime || 0) +\n              (stats.subscribe?.currentRoundTripTime || 0)) /\n            2\n          ).toFixed(3) * 1000\n        } ms`}\n      />\n    </Flex>\n  );\n};\n\nconst TrackStats = ({ trackID, layer, local }) => {\n  const selector = match({ trackID, layer, local })\n    .with(\n      {\n        layer: P.when((layer) => !!layer),\n      },\n      () => selectHMSStats.localVideoTrackStatsByLayer(layer)(trackID)\n    )\n    .with({ local: P.when((local) => !!local) }, () =>\n      selectHMSStats.localAudioTrackStatsByID(trackID)\n    )\n    .otherwise(() => selectHMSStats.trackStatsByID(trackID));\n  const stats = useHMSStatsStore(selector);\n  if (!stats) {\n    return null;\n  }\n  const inbound = stats.type.includes(\"inbound\");\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Type\" value={stats.type + \" \" + stats.kind} />\n      <StatsRow label=\"Bitrate\" value={formatBytes(stats.bitrate, \"b/s\")} />\n      <StatsRow label=\"Packets Lost\" value={stats.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.jitter?.toFixed(3)} />\n      <StatsRow\n        label={inbound ? \"Bytes Received\" : \"Bytes Sent\"}\n        value={formatBytes(inbound ? stats.bytesReceived : stats.bytesSent)}\n      />\n      {stats.kind === \"video\" && (\n        <>\n          <StatsRow label=\"Framerate\" value={stats.framesPerSecond} />\n          {!inbound && (\n            <StatsRow\n              label=\"Quality Limitation Reason\"\n              value={stats.qualityLimitationReason}\n            />\n          )}\n        </>\n      )}\n      <StatsRow\n        label=\"Round Trip Time\"\n        value={\n          stats.roundTripTime\n            ? `${(stats.roundTripTime * 1000).toFixed(3)} ms`\n            : \"-\"\n        }\n      />\n    </Flex>\n  );\n};\n\nconst StatsRow = React.memo(({ label, value }) => (\n  <Box css={{ bg: \"$surface_bright\", w: \"calc(50% - $6)\", p: \"$8\", r: \"$3\" }}>\n    <Text\n      variant=\"overline\"\n      css={{\n        fontWeight: \"$semiBold\",\n        color: \"$on_surface_medium\",\n        textTransform: \"uppercase\",\n      }}\n    >\n      {label}\n    </Text>\n    <Text\n      variant=\"sub1\"\n      css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}\n    >\n      {value || \"-\"}\n    </Text>\n  </Box>\n));\n", "import React, { useCallback, useRef, useState } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  ChangeRoleIcon,\n  CheckIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Dropdown,\n  Flex,\n  Loading,\n  Text,\n} from \"../../../\";\nimport { DialogContent, DialogRow } from \"../../primitives/DialogContent\";\nimport { DialogDropdownTrigger } from \"../../primitives/DropdownTrigger\";\nimport { useFilteredRoles } from \"../../common/hooks\";\n\nexport const BulkRoleChangeModal = ({ onOpenChange }) => {\n  const roles = useFilteredRoles();\n  const hmsActions = useHMSActions();\n  const ref = useRef(null);\n  const roleRef = useRef(null);\n  const [selectedBulkRole, setBulkRole] = useState([]);\n  const [selectedRole, setRole] = useState(\"\");\n  const [bulkRoleDialog, setBulkRoleDialog] = useState(false);\n  const [roleDialog, setRoleDialog] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSubmiting, setIsSubmiting] = useState(false);\n\n  const changeBulkRole = useCallback(async () => {\n    if (selectedBulkRole.length > 0 && selectedRole) {\n      try {\n        setIsSubmiting(true);\n        await hmsActions.changeRoleOfPeersWithRoles(\n          selectedBulkRole,\n          selectedRole\n        );\n        setIsSubmiting(false);\n        setErrorMessage(\"\");\n        onOpenChange(false);\n      } catch (err) {\n        setErrorMessage(err?.message ? err?.message : \"Unknown error\");\n        setIsSubmiting(false);\n      }\n    }\n  }, [selectedBulkRole, selectedRole, hmsActions, onOpenChange]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Bulk Role Change\" Icon={ChangeRoleIcon}>\n        <DialogRow>\n          <Text>For Roles: </Text>\n          <Dropdown.Root\n            open={bulkRoleDialog}\n            onOpenChange={(value) => {\n              if (value) {\n                setBulkRoleDialog(value);\n              }\n            }}\n            modal={false}\n          >\n            <DialogDropdownTrigger\n              ref={ref}\n              title={\n                selectedBulkRole.length === 0\n                  ? \"Select Multiple Roles\"\n                  : selectedBulkRole.toString()\n              }\n              css={{\n                w: \"70%\",\n                p: \"$8\",\n              }}\n              open={bulkRoleDialog}\n            />\n            <Dropdown.Content\n              css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n              onInteractOutside={() => {\n                if (bulkRoleDialog) {\n                  setBulkRoleDialog(false);\n                }\n              }}\n            >\n              {roles &&\n                roles.map((role) => {\n                  return (\n                    <Dropdown.CheckboxItem\n                      key={role}\n                      checked={selectedBulkRole.includes(role)}\n                      onCheckedChange={(value) => {\n                        setBulkRole((selection) => {\n                          return value\n                            ? [...selection, role]\n                            : selection.filter(\n                                (selectedRole) => selectedRole !== role\n                              );\n                        });\n                        setErrorMessage(\"\");\n                      }}\n                    >\n                      <Checkbox.Root\n                        css={{ margin: \"$2\" }}\n                        checked={selectedBulkRole.includes(role)}\n                      >\n                        <Checkbox.Indicator>\n                          <CheckIcon width={16} height={16} />\n                        </Checkbox.Indicator>\n                      </Checkbox.Root>\n                      {role}\n                    </Dropdown.CheckboxItem>\n                  );\n                })}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </DialogRow>\n        <DialogRow>\n          <Text>To Role: </Text>\n          <Dropdown.Root\n            open={roleDialog}\n            onOpenChange={(value) => setRoleDialog(value)}\n          >\n            <DialogDropdownTrigger\n              ref={roleRef}\n              title={selectedRole || \"Select Role\"}\n              css={{\n                w: \"70%\",\n                p: \"$8\",\n              }}\n              open={roleDialog}\n            />\n            <Dropdown.Content\n              css={{ w: roleRef.current?.clientWidth, zIndex: 1000 }}\n            >\n              {roles &&\n                roles.map((role) => {\n                  return (\n                    <Dropdown.Item\n                      key={role}\n                      onSelect={() => {\n                        setRole(role);\n                        setErrorMessage(\"\");\n                      }}\n                    >\n                      {role}\n                    </Dropdown.Item>\n                  );\n                })}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </DialogRow>\n        <DialogRow>\n          {errorMessage && (\n            <Flex\n              gap={2}\n              css={{ c: \"$alert_error_default\", w: \"70%\", ml: \"auto\" }}\n            >\n              <AlertTriangleIcon />\n              <Text css={{ c: \"inherit\" }}>{errorMessage}</Text>\n            </Flex>\n          )}\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={changeBulkRole}\n            disabled={!(selectedRole && selectedBulkRole.length > 0)}\n          >\n            {isSubmiting && <Loading css={{ color: \"$on_primary_medium\" }} />}\n            Apply\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport {\n  HMSTranscriptionMode,\n  selectIsTranscriptionEnabled,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Loading } from \"../../../Loading\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetAppDataByKey,\n  useSetIsCaptionEnabled,\n} from \"../AppData/useUISettings\";\nimport { CAPTION_TOAST } from \"../../common/constants\";\n\nexport const CaptionContent = ({\n  isMobile,\n  onExit,\n}: {\n  isMobile: boolean;\n  onExit: () => void;\n}) => {\n  const DURATION = 2000;\n  const actions = useHMSActions();\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n  const [toastId, setToastId] = useSetAppDataByKey(CAPTION_TOAST.captionToast);\n\n  const [isCaptionEnabled, setIsCaptionEnabled] = useSetIsCaptionEnabled();\n\n  return (\n    <>\n      <Text\n        variant={isMobile ? \"md\" : \"lg\"}\n        css={{\n          color: \"$on_surface_high\",\n          fontWeight: \"$semiBold\",\n          display: \"flex\",\n          \"@md\": { px: \"$8\" },\n        }}\n      >\n        {isTranscriptionEnabled ? \"Disable\" : \"Enable\"} Closed Caption (CC) for\n        this session?\n        <Box\n          css={{\n            color: \"inherit\",\n            ml: \"auto\",\n            \"&:hover\": { color: \"$on_surface_medium\", cursor: \"pointer\" },\n          }}\n          onClick={onExit}\n        >\n          <CrossIcon />\n        </Box>\n      </Text>\n      {!isMobile ? (\n        <Text\n          variant=\"sm\"\n          css={{ color: \"$on_surface_medium\", mt: \"$4\", \"@md\": { px: \"$8\" } }}\n        >\n          This will {isTranscriptionEnabled ? \"disable\" : \"enable\"} Closed\n          Captions for everyone in this room. You can&nbsp;\n          {isTranscriptionEnabled ? \"enable\" : \"disable\"} it later.\n        </Text>\n      ) : null}\n\n      <Flex\n        justify=\"between\"\n        align=\"center\"\n        css={{\n          width: \"100%\",\n          gap: \"$md\",\n          mt: \"$10\",\n          \"@md\": { px: \"$4\" },\n        }}\n      >\n        {isMobile ? null : (\n          <Button\n            variant=\"standard\"\n            css={{ w: \"100%\" }}\n            outlined\n            onClick={onExit}\n          >\n            Cancel\n          </Button>\n        )}\n        <Flex\n          direction=\"column\"\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            width: \"100%\",\n            \"@md\": { px: \"$4\" },\n          }}\n        >\n          {isMobile && isTranscriptionEnabled ? (\n            <Button\n              variant=\"standard\"\n              css={{ w: \"100%\", mb: \"$4\" }}\n              outlined\n              onClick={() => {\n                setIsCaptionEnabled(!isCaptionEnabled);\n                onExit();\n              }}\n            >\n              {isCaptionEnabled ? \"Hide For Me\" : \"Show For Me\"}\n            </Button>\n          ) : null}\n          <Button\n            variant={isTranscriptionEnabled ? \"danger\" : \"primary\"}\n            css={{ width: \"100%\" }}\n            data-testid=\"popup_change_btn\"\n            onClick={async () => {\n              try {\n                if (isTranscriptionEnabled) {\n                  await actions.stopTranscription({\n                    mode: HMSTranscriptionMode.CAPTION,\n                  });\n                  setIsCaptionEnabled(false);\n                  const id = ToastManager.replaceToast(toastId, {\n                    title: `Disabling Closed Caption for everyone.`,\n                    variant: \"standard\",\n                    duration: DURATION,\n                    icon: <Loading color=\"currentColor\" />,\n                  });\n                  setToastId(id);\n                  onExit();\n                  return;\n                }\n                await actions.startTranscription({\n                  mode: HMSTranscriptionMode.CAPTION,\n                });\n                const id = ToastManager.replaceToast(toastId, {\n                  title: `Enabling Closed Caption for everyone.`,\n                  variant: \"standard\",\n                  duration: DURATION,\n                  icon: <Loading color=\"currentColor\" />,\n                });\n                setToastId(id);\n              } catch (err) {\n                const id = ToastManager.replaceToast(toastId, {\n                  title: `Failed to ${\n                    isTranscriptionEnabled ? \"disable\" : \"enable\"\n                  } closed caption`,\n                  variant: \"error\",\n                  icon: <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />,\n                });\n                setToastId(id);\n              } finally {\n                setIsCaptionEnabled(true);\n              }\n              onExit();\n            }}\n          >\n            {isTranscriptionEnabled ? \"Disable\" : \"Enable\"} for Everyone\n          </Button>\n        </Flex>\n      </Flex>\n      {isMobile && (\n        <Text\n          variant=\"sm\"\n          css={{\n            color: \"$on_surface_medium\",\n            pb: \"$4\",\n            mb: \"$8\",\n            \"@md\": { px: \"$8\", mt: \"$4\" },\n          }}\n        >\n          This will {isTranscriptionEnabled ? \"disable\" : \"enable\"} Closed\n          Captions for everyone in this room. You can&nbsp;\n          {isTranscriptionEnabled ? \"enable\" : \"disable\"} it later.\n        </Text>\n      )}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { config as cssConfig, Dialog } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\nimport { CaptionContent } from \"./CaptionContent\";\n\nexport const CaptionModal = ({\n  onOpenChange,\n}: {\n  onOpenChange: (value: boolean) => void;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const props = {\n    isMobile,\n    onExit: () => {\n      onOpenChange(false);\n    },\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root defaultOpen onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ bg: \"$surface_dim\", p: \"$8 0\" }}>\n          <CaptionContent {...props} />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ bg: \"$surface_dim\", width: \"min(400px,80%)\", p: \"$10\" }}\n        >\n          <CaptionContent {...props} />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import { useCallback, useEffect, useState } from \"react\";\nimport screenfull from \"screenfull\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { DEFAULT_PORTAL_CONTAINER } from \"../../common/constants\";\n\nexport const useFullscreen = () => {\n  const [isFullScreenEnabled, setIsFullScreenEnabled] = useState(\n    screenfull.isFullscreen\n  );\n\n  const toggle = useCallback(async () => {\n    if (!screenfull.isEnabled) {\n      ToastManager.addToast({ title: \"Fullscreen feature not supported\" });\n      return;\n    }\n    try {\n      const container = document.querySelector(DEFAULT_PORTAL_CONTAINER);\n      if (isFullScreenEnabled) {\n        await screenfull.exit();\n      } else if (container) {\n        await screenfull.request(container);\n      }\n    } catch (err) {\n      ToastManager.addToast({ title: (err as Error).message });\n    }\n  }, [isFullScreenEnabled]);\n\n  useEffect(() => {\n    const onChange = () => {\n      setIsFullScreenEnabled(screenfull.isFullscreen);\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", onChange);\n    }\n    return () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", onChange);\n      }\n    };\n  }, []);\n\n  return {\n    allowed: screenfull.isEnabled,\n    isFullscreen: isFullScreenEnabled,\n    toggleFullscreen: toggle,\n  };\n};\n", "import React from \"react\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Text } from \"../../..\";\nimport { useFullscreen } from \"../hooks/useFullscreen\";\n\nexport const FullScreenItem = () => {\n  const { allowed, isFullscreen, toggleFullscreen } = useFullscreen();\n\n  if (!allowed) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        toggleFullscreen();\n      }}\n      data-testid=\"full_screen_btn\"\n    >\n      <ExpandIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        {isFullscreen ? \"Exit \" : \"Go \"}Fullscreen\n      </Text>\n    </Dropdown.Item>\n  );\n};\n", "import React from \"react\";\nimport {\n  HMSRoleName,\n  HMSTrackSource,\n  HMSTrackType,\n  selectPermissions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Button } from \"../../../Button\";\nimport { Label } from \"../../../Label\";\nimport { Flex } from \"../../../Layout\";\nimport { RadioGroup } from \"../../../RadioGroup\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit any\nimport { DialogRow, DialogSelect } from \"../../primitives/DialogContent\";\nimport { trackSourceOptions, trackTypeOptions } from \"./constants\";\n\nexport const MuteAllContent = (props: {\n  muteAll: () => Promise<void>;\n  roles?: HMSRoleName[];\n  enabled: boolean;\n  setEnabled: (value: boolean) => void;\n  trackType?: HMSTrackType;\n  setTrackType: (value: HMSTrackType) => void;\n  selectedRole?: HMSRoleName;\n  setRole: (value: HMSRoleName) => void;\n  selectedSource?: HMSTrackSource;\n  setSource: (value: HMSTrackSource) => void;\n  isMobile: boolean;\n}) => {\n  const roles = props.roles || [];\n  const permissions = useHMSStore(selectPermissions);\n  return (\n    <>\n      <DialogSelect\n        title=\"Role\"\n        options={[\n          { label: \"All Roles\", value: \"\" },\n          ...roles.map((role) => ({ label: role, value: role })),\n        ]}\n        selected={props.selectedRole}\n        keyField=\"value\"\n        labelField=\"label\"\n        onChange={props.setRole}\n      />\n      <DialogSelect\n        title=\"Track type\"\n        options={trackTypeOptions}\n        selected={props.trackType}\n        onChange={props.setTrackType}\n        keyField=\"value\"\n        labelField=\"label\"\n      />\n      <DialogSelect\n        title=\"Track source\"\n        options={trackSourceOptions}\n        selected={props.selectedSource}\n        onChange={props.setSource}\n        keyField=\"value\"\n        labelField=\"label\"\n      />\n      <DialogRow>\n        <Text variant=\"md\">Track status</Text>\n        <RadioGroup.Root\n          value={String(props.enabled)}\n          onValueChange={(value) => props.setEnabled(value === \"true\")}\n        >\n          {permissions?.mute && (\n            <Flex align=\"center\" css={{ mr: \"$8\" }}>\n              <RadioGroup.Item\n                value=\"false\"\n                id=\"trackDisableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackDisableRadio\">Mute</Label>\n            </Flex>\n          )}\n          {permissions?.unmute && (\n            <Flex align=\"center\" css={{ cursor: \"pointer\" }}>\n              <RadioGroup.Item\n                value=\"true\"\n                id=\"trackEnableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackEnableRadio\">Request Unmute</Label>\n            </Flex>\n          )}\n        </RadioGroup.Root>\n      </DialogRow>\n      <DialogRow justify=\"end\">\n        <Button\n          variant=\"primary\"\n          onClick={props.muteAll}\n          css={{ w: props?.isMobile ? \"100%\" : \"\" }}\n        >\n          Apply\n        </Button>\n      </DialogRow>\n    </>\n  );\n};\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  HMSRoleName,\n  HMSTrackSource,\n  HMSTrackType,\n  selectAvailableRoleNames,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { MicOffIcon } from \"@100mslive/react-icons\";\nimport { Dialog } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n// @ts-ignore: No implicit any\nimport { DialogContent } from \"../../primitives/DialogContent\";\nimport { MuteAllContent } from \"./MuteAllContent\";\n\nexport const MuteAllModal = ({\n  onOpenChange,\n  isMobile = false,\n}: {\n  onOpenChange: (value: boolean) => void;\n  isMobile?: boolean;\n}) => {\n  const roles = useHMSStore(selectAvailableRoleNames);\n  const hmsActions = useHMSActions();\n  const [enabled, setEnabled] = useState(false);\n  const [trackType, setTrackType] = useState<HMSTrackType>();\n  const [selectedRole, setRole] = useState<HMSRoleName>();\n  const [selectedSource, setSource] = useState<HMSTrackSource>();\n\n  const muteAll = useCallback(async () => {\n    await hmsActions.setRemoteTracksEnabled({\n      enabled: enabled,\n      type: trackType,\n      source: selectedSource,\n      roles: selectedRole ? [selectedRole] : undefined,\n    });\n    onOpenChange(false);\n  }, [\n    selectedRole,\n    enabled,\n    trackType,\n    selectedSource,\n    hmsActions,\n    onOpenChange,\n  ]);\n\n  const props = {\n    muteAll,\n    roles,\n    enabled,\n    setEnabled,\n    trackType,\n    setTrackType,\n    selectedRole,\n    setRole,\n    selectedSource,\n    setSource,\n    isMobile,\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root defaultOpen onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ px: \"$10\" }}>\n          <MuteAllContent {...props} />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Mute/Unmute Remote Tracks\" Icon={MicOffIcon}>\n        <MuteAllContent {...props} />\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectHasPeerHandRaised,\n  selectLocalPeerID,\n  selectPeerMetadata,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n\nexport const useMyMetadata = () => {\n  const hmsActions = useHMSActions();\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const vanillaStore = useHMSVanillaStore();\n  const metaData = useHMSStore(selectPeerMetadata(localPeerId));\n  const isHandRaised = useHMSStore(selectHasPeerHandRaised(localPeerId));\n\n  const update = async (updatedFields: Record<string, any>) => {\n    try {\n      // get current state from store and merge updated fields\n      const currentMetadata = vanillaStore.getState(\n        selectPeerMetadata(localPeerId)\n      );\n      await hmsActions.changeMetadata(\n        Object.assign(currentMetadata, updatedFields)\n      );\n      return true;\n    } catch (error) {\n      console.error(\"failed to update metadata \", updatedFields);\n    }\n    return false;\n  };\n\n  const toggleHandRaise = useCallback(async () => {\n    if (isHandRaised) {\n      await hmsActions.lowerLocalPeerHand();\n      await update({ handRaisedAt: undefined });\n    } else {\n      await hmsActions.raiseLocalPeerHand();\n      await update({ isBRBOn: false, handRaisedAt: Date.now() });\n    }\n  }, [isHandRaised]); //eslint-disable-line\n\n  const toggleBRB = useCallback(async () => {\n    const newValue = !metaData?.isBRBOn;\n    await update({ isBRBOn: newValue });\n    if (newValue) {\n      await hmsActions.lowerLocalPeerHand();\n    }\n  }, [metaData?.isBRBOn]); //eslint-disable-line\n\n  return {\n    isHandRaised,\n    isBRBOn: !!metaData?.isBRBOn,\n    metaData,\n    updateMetaData: update,\n    toggleHandRaise,\n    toggleBRB,\n  };\n};\n", "import { createContext } from \"react\";\n\nexport type PIPContextType = {\n  isSupported: boolean;\n  pipWindow: Window | null;\n  requestPipWindow: (width: number, height: number) => Promise<void>;\n  closePipWindow: () => void;\n};\n\nexport const PIPContext = createContext<PIPContextType | undefined>(undefined);\n", "import { useContext } from \"react\";\nimport { PIPContext, PIPContextType } from \"./context\";\n\nexport const usePIPWindow = (): PIPContextType => {\n  const context = useContext(PIPContext);\n\n  if (context === undefined) {\n    throw new Error(\"usePIPWindow must be used within a PIPContext\");\n  }\n\n  return context;\n};\n", "import { useEffect } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { getCssText } from \"../../../Theme\";\nimport { usePIPWindow } from \"./usePIPWindow\";\n\nexport const usePIPChat = () => {\n  const hmsActions = useHMSActions();\n  const { isSupported, requestPipWindow, pipWindow, closePipWindow } =\n    usePIPWindow();\n\n  useEffect(() => {\n    if (document && pipWindow) {\n      const style = document.createElement(\"style\");\n      style.id = \"stitches\";\n      style.textContent = getCssText();\n      pipWindow.document.head.appendChild(style);\n    }\n  }, [pipWindow]);\n\n  // @ts-ignore\n  useEffect(() => {\n    if (pipWindow) {\n      const chatContainer = pipWindow.document.getElementById(\"chat-container\");\n      const selector = pipWindow.document.getElementById(\n        \"selector\"\n      ) as HTMLSelectElement;\n      const sendBtn = pipWindow.document.getElementById(\"send-btn\");\n      const pipChatInput = pipWindow.document.getElementById(\n        \"chat-input\"\n      ) as HTMLTextAreaElement;\n      const marker = pipWindow.document.getElementById(\"marker\");\n\n      marker?.scrollIntoView({ block: \"end\" });\n\n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting && entry.target.id) {\n              hmsActions.setMessageRead(true, entry.target.id);\n            }\n          });\n        },\n        {\n          root: chatContainer,\n          threshold: 0.8,\n        }\n      );\n\n      const mutationObserver = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.addedNodes.length > 0) {\n            const newMessages = mutation.addedNodes;\n            newMessages.forEach((message) => {\n              const messageId = (message as Element)?.id;\n              if (messageId === \"new-message-notif\") {\n                message.addEventListener(\"click\", () =>\n                  setTimeout(\n                    () =>\n                      marker?.scrollIntoView({\n                        block: \"end\",\n                        behavior: \"smooth\",\n                      }),\n                    0\n                  )\n                );\n              } else if (messageId) observer.observe(message as Element);\n            });\n          }\n        });\n      });\n      mutationObserver.observe(chatContainer as Node, {\n        childList: true,\n      });\n\n      const sendMessage = async () => {\n        const selection = selector?.value || \"Everyone\";\n        if (selection === \"Everyone\") {\n          await hmsActions.sendBroadcastMessage(pipChatInput.value.trim());\n        } else {\n          await hmsActions.sendGroupMessage(pipChatInput.value.trim(), [\n            selection,\n          ]);\n        }\n        pipChatInput.value = \"\";\n        setTimeout(\n          () => marker?.scrollIntoView({ block: \"end\", behavior: \"smooth\" }),\n          0\n        );\n      };\n\n      if (sendBtn && hmsActions && pipChatInput) {\n        const pipMessages =\n          pipWindow.document.getElementsByClassName(\"pip-message\");\n        // @ts-ignore\n        [...pipMessages].forEach((message) => {\n          if (message.id) {\n            hmsActions.setMessageRead(true, message.id);\n          }\n        });\n        // @ts-ignore\n        const sendOnEnter = (e) => {\n          if (e.key === \"Enter\") sendMessage();\n        };\n        sendBtn.addEventListener(\"click\", sendMessage);\n        pipChatInput.addEventListener(\"keypress\", sendOnEnter);\n        return () => {\n          sendBtn.removeEventListener(\"click\", sendMessage);\n          pipChatInput.removeEventListener(\"keypress\", sendOnEnter);\n          mutationObserver.disconnect();\n          observer.disconnect();\n        };\n      }\n    }\n  }, [pipWindow, hmsActions]);\n\n  useEffect(() => {\n    return () => {\n      pipWindow && closePipWindow();\n    };\n  }, [closePipWindow, pipWindow]);\n\n  return { isSupported, requestPipWindow, pipWindow };\n};\n", "import React, { Fragment, useState } from \"react\";\nimport { HMSHLSPlayer } from \"@100mslive/hls-player\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSTranscriptionMode,\n  selectAppData,\n  selectIsTranscriptionAllowedByMode,\n  selectIsTranscriptionEnabled,\n  selectLocalPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BrbIcon,\n  CheckIcon,\n  HamburgerMenuIcon,\n  InfoIcon,\n  OpenCaptionIcon,\n  PipIcon,\n  SettingsIcon,\n} from \"@100mslive/react-icons\";\nimport { Checkbox, Dropdown, Flex, Switch, Text, Tooltip } from \"../../../..\";\nimport IconButton from \"../../../IconButton\";\n// @ts-ignore: No implicit any\nimport { PIP } from \"../../PIP\";\nimport { PIPChat } from \"../../PIP/PIPChat\";\n// @ts-ignore: No implicit any\nimport { PIPChatOption } from \"../../PIP/PIPChatOption\";\nimport { PictureInPicture } from \"../../PIP/PIPManager\";\nimport { PIPWindow } from \"../../PIP/PIPWindow\";\n// @ts-ignore: No implicit any\nimport { RoleChangeModal } from \"../../RoleChangeModal\";\n// @ts-ignore: No implicit any\nimport SettingsModal from \"../../Settings/SettingsModal\";\n// @ts-ignore: No implicit any\nimport StartRecording from \"../../Settings/StartRecording\";\n// @ts-ignore: No implicit any\nimport { StatsForNerds } from \"../../StatsForNerds\";\n// @ts-ignore: No implicit any\nimport { BulkRoleChangeModal } from \"../BulkRoleChangeModal\";\nimport { CaptionModal } from \"../CaptionModal\";\n// @ts-ignore: No implicit any\nimport { FullScreenItem } from \"../FullScreenItem\";\nimport { MuteAllModal } from \"../MuteAllModal\";\n// @ts-ignore: No implicit any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../../AppData/useSidepane\";\n// @ts-ignore: No implicit any\nimport { useDropdownList } from \"../../hooks/useDropdownList\";\nimport { useMyMetadata } from \"../../hooks/useMetadata\";\n// @ts-ignore: No implicit any\nimport { usePIPChat } from \"../../PIP/usePIPChat\";\n// @ts-ignore: No implicit any\nimport {\n  APP_DATA,\n  isMacOS,\n  SIDE_PANE_OPTIONS,\n} from \"../../../common/constants\";\n\nconst MODALS = {\n  CHANGE_NAME: \"changeName\",\n  SELF_ROLE_CHANGE: \"selfRoleChange\",\n  MORE_SETTINGS: \"moreSettings\",\n  START_RECORDING: \"startRecording\",\n  DEVICE_SETTINGS: \"deviceSettings\",\n  STATS_FOR_NERDS: \"statsForNerds\",\n  BULK_ROLE_CHANGE: \"bulkRoleChange\",\n  MUTE_ALL: \"muteAll\",\n  EMBED_URL: \"embedUrl\",\n  CAPTION: \"caption\",\n};\n\nexport const DesktopOptions = ({\n  elements,\n  screenType,\n}: {\n  elements: DefaultConferencingScreen_Elements &\n    HLSLiveStreamingScreen_Elements;\n  screenType: keyof ConferencingScreen;\n}) => {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const hmsActions = useHMSActions();\n  const enablHlsStats = useHMSStore(selectAppData(APP_DATA.hlsStats));\n  const [openModals, setOpenModals] = useState(new Set());\n  const { isBRBOn, toggleBRB } = useMyMetadata();\n  const isPipOn = PictureInPicture.isOn();\n  const isBRBEnabled = !!elements?.brb;\n  const isTranscriptionAllowed = useHMSStore(\n    selectIsTranscriptionAllowedByMode(HMSTranscriptionMode.CAPTION)\n  );\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n  const { isSupported, pipWindow, requestPipWindow } = usePIPChat();\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  // Hide if pip chat is already open\n  const showPipChatOption = !!elements?.chat && isSupported && !pipWindow;\n\n  useDropdownList({ open: openModals.size > 0, name: \"MoreSettings\" });\n\n  const updateState = (modalName: string, value: boolean) => {\n    setOpenModals((modals) => {\n      const copy = new Set(modals);\n      if (value) {\n        // avoiding extra set state trigger which removes currently open dialog by clearing set.\n        copy.clear();\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n\n  return (\n    <Fragment>\n      {isSupported && pipWindow ? (\n        <PIPWindow pipWindow={pipWindow}>\n          <PIPChat />\n        </PIPWindow>\n      ) : null}\n      <Dropdown.Root\n        open={openModals.has(MODALS.MORE_SETTINGS)}\n        onOpenChange={(value) => updateState(MODALS.MORE_SETTINGS, value)}\n        modal={false}\n      >\n        <Tooltip title=\"More options\">\n          <Dropdown.Trigger asChild data-testid=\"more_settings_btn\">\n            <IconButton>\n              <HamburgerMenuIcon />\n            </IconButton>\n          </Dropdown.Trigger>\n        </Tooltip>\n\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"end\"\n          css={{\n            py: \"$0\",\n            maxHeight: \"unset\",\n            \"@md\": { w: \"$64\" },\n            \"div[role='separator']:first-child\": {\n              display: \"none\",\n            },\n          }}\n        >\n          {isBRBEnabled && screenType !== \"hls_live_streaming\" ? (\n            <Dropdown.Item onClick={toggleBRB} data-testid=\"brb_btn\">\n              <BrbIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\", color: \"$on_surface_high\" }}>\n                Be Right Back\n              </Text>\n              <Flex\n                justify=\"end\"\n                css={{ color: \"$on_surface_high\", flexGrow: \"1\" }}\n              >\n                {isBRBOn ? <CheckIcon /> : null}\n              </Flex>\n            </Dropdown.Item>\n          ) : null}\n          {isTranscriptionAllowed ? (\n            <Dropdown.Item\n              data-testid=\"closed_caption_admin\"\n              onClick={() => {\n                updateState(MODALS.CAPTION, true);\n              }}\n            >\n              <OpenCaptionIcon />\n              <Flex direction=\"column\" css={{ flexGrow: \"1\" }}>\n                <Text\n                  variant=\"sm\"\n                  css={{ ml: \"$4\", color: \"$on_surface_high\" }}\n                >\n                  Closed Captions\n                </Text>\n                <Text\n                  variant=\"caption\"\n                  css={{ ml: \"$4\", color: \"$on_surface_medium\" }}\n                >\n                  {isTranscriptionEnabled ? \"Enabled\" : \"Disabled\"}\n                </Text>\n              </Flex>\n              <Switch\n                id=\"closed_caption_start_stop\"\n                checked={isTranscriptionEnabled}\n                disabled={false}\n              />\n            </Dropdown.Item>\n          ) : null}\n          {screenType !== \"hls_live_streaming\" ? (\n            <Dropdown.Item css={{ p: 0, \"&:empty\": { display: \"none\" } }}>\n              <PIP\n                content={\n                  <Flex css={{ w: \"100%\", h: \"100%\", p: \"$8\" }}>\n                    <PipIcon />\n                    <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                      {isPipOn ? \"Disable\" : \"Enable\"} Picture-in-Picture\n                    </Text>\n                  </Flex>\n                }\n              />\n            </Dropdown.Item>\n          ) : null}\n\n          <PIPChatOption\n            showPIPChat={showPipChatOption}\n            openChat={async () => {\n              isChatOpen && toggleChat();\n              await requestPipWindow(350, 500);\n            }}\n          />\n          <FullScreenItem />\n          <Dropdown.ItemSeparator css={{ mx: 0 }} />\n          <Dropdown.Item\n            onClick={() => updateState(MODALS.DEVICE_SETTINGS, true)}\n            data-testid=\"device_settings_btn\"\n          >\n            <SettingsIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Settings\n            </Text>\n          </Dropdown.Item>\n          {match({ screenType, isSupported: HMSHLSPlayer.isSupported() })\n            .with(\n              { screenType: \"hls_live_streaming\", isSupported: false },\n              () => null\n            )\n            .with(\n              { screenType: \"hls_live_streaming\", isSupported: true },\n              () => {\n                return (\n                  <Dropdown.Item\n                    onClick={() =>\n                      hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                    }\n                    data-testid=\"hls_stats\"\n                  >\n                    <Checkbox.Root\n                      css={{ margin: \"$2\" }}\n                      checked={enablHlsStats}\n                      onCheckedChange={() =>\n                        hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                      }\n                    >\n                      <Checkbox.Indicator>\n                        <CheckIcon width={16} height={16} />\n                      </Checkbox.Indicator>\n                    </Checkbox.Root>\n                    <Flex justify=\"between\" css={{ width: \"100%\" }}>\n                      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                        Show HLS Stats\n                      </Text>\n\n                      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                        {`${isMacOS ? \"\u2318\" : \"ctrl\"} + ]`}\n                      </Text>\n                    </Flex>\n                  </Dropdown.Item>\n                );\n              }\n            )\n            .otherwise(() => (\n              <Dropdown.Item\n                onClick={() => updateState(MODALS.STATS_FOR_NERDS, true)}\n                data-testid=\"stats_for_nerds_btn\"\n              >\n                <InfoIcon />\n                <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                  Stats for Nerds\n                </Text>\n              </Dropdown.Item>\n            ))}\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {openModals.has(MODALS.BULK_ROLE_CHANGE) && (\n        <BulkRoleChangeModal\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.BULK_ROLE_CHANGE, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.MUTE_ALL) && (\n        <MuteAllModal\n          onOpenChange={(value: boolean) => updateState(MODALS.MUTE_ALL, value)}\n        />\n      )}\n\n      {openModals.has(MODALS.START_RECORDING) && (\n        <StartRecording\n          open\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.START_RECORDING, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.DEVICE_SETTINGS) && (\n        <SettingsModal\n          open\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.DEVICE_SETTINGS, value)\n          }\n          screenType={screenType}\n        />\n      )}\n      {openModals.has(MODALS.STATS_FOR_NERDS) && (\n        <StatsForNerds\n          open\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.STATS_FOR_NERDS, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.SELF_ROLE_CHANGE) && (\n        <RoleChangeModal\n          peerId={localPeerId}\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.SELF_ROLE_CHANGE, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.CAPTION) && (\n        <CaptionModal\n          onOpenChange={(value: boolean) => updateState(MODALS.CAPTION, value)}\n        />\n      )}\n      {/* {openModals.has(MODALS.EMBED_URL) && (\n        <EmbedUrlModal onOpenChange={value => updateState(MODALS.EMBED_URL, value)} />\n      )} */}\n    </Fragment>\n  );\n};\n", "import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { HMSRecordingState } from \"@100mslive/hms-video-store\";\nimport {\n  HMSRoomState,\n  selectHLSState,\n  selectIsConnectedToRoom,\n  selectPermissions,\n  selectRecordingState,\n  selectRoomState,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  CrossIcon,\n  PauseCircleIcon,\n  RecordIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Button,\n  config as cssConfig,\n  Flex,\n  HorizontalDivider,\n  Loading,\n  Popover,\n  Text,\n  Tooltip,\n} from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useRecordingHandler } from \"../../common/hooks\";\n// @ts-ignore\nimport { formatTime } from \"../../common/utils\";\n\nexport const getRecordingText = (\n  {\n    isBrowserRecordingOn,\n    isServerRecordingOn,\n    isHLSRecordingOn,\n  }: {\n    isBrowserRecordingOn: boolean;\n    isServerRecordingOn: boolean;\n    isHLSRecordingOn: boolean;\n  },\n  delimiter = \", \"\n) => {\n  if (!isBrowserRecordingOn && !isServerRecordingOn && !isHLSRecordingOn) {\n    return \"\";\n  }\n  const title: string[] = [];\n  if (isBrowserRecordingOn) {\n    title.push(\"Browser\");\n  }\n  if (isServerRecordingOn) {\n    title.push(\"Server\");\n  }\n  if (isHLSRecordingOn) {\n    title.push(\"HLS\");\n  }\n  return title.join(delimiter);\n};\n\nexport const LiveStatus = () => {\n  const { isHLSRunning, isRTMPRunning } = useRecordingStreaming();\n  const hlsState = useHMSStore(selectHLSState);\n  const isMobile = useMedia(cssConfig.media.md);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const { screenType } = useRoomLayoutConferencingScreen();\n  const [liveTime, setLiveTime] = useState(0);\n\n  const startTimer = useCallback(() => {\n    intervalRef.current = setInterval(() => {\n      const timeStamp =\n        hlsState?.variants[0]?.[\n          screenType === \"hls_live_streaming\" ? \"startedAt\" : \"initialisedAt\"\n        ];\n      if (hlsState?.running && timeStamp) {\n        setLiveTime(Date.now() - timeStamp.getTime());\n      }\n    }, 1000);\n  }, [hlsState?.running, hlsState?.variants, screenType]);\n\n  useEffect(() => {\n    if (hlsState?.running) {\n      startTimer();\n    }\n    if (!hlsState?.running && intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [hlsState.running, isMobile, startTimer]);\n\n  if (!isHLSRunning && !isRTMPRunning) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      gap=\"1\"\n      css={{\n        border: \"1px solid $border_default\",\n        padding: \"$4 $6 $4 $6\",\n        borderRadius: \"$1\",\n      }}\n    >\n      <Box\n        css={{\n          w: \"$4\",\n          h: \"$4\",\n          r: \"$round\",\n          bg: \"$alert_error_default\",\n          mr: \"$2\",\n        }}\n      />\n      <Flex align=\"center\" gap=\"2\">\n        <Text variant={!isMobile ? \"button\" : \"body2\"}>LIVE</Text>\n        <Text variant=\"caption\">\n          {hlsState?.variants?.length > 0 && isHLSRunning\n            ? formatTime(liveTime)\n            : \"\"}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const RecordingStatus = () => {\n  const {\n    isBrowserRecordingOn,\n    isServerRecordingOn,\n    isHLSRecordingOn,\n    isRecordingOn,\n  } = useRecordingStreaming();\n  const permissions = useHMSStore(selectPermissions);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (\n    !isRecordingOn ||\n    // if only browser recording is enabled, stop recording is shown\n    // so no need to show this as it duplicates\n    [\n      permissions?.browserRecording,\n      !isServerRecordingOn,\n      !isHLSRecordingOn,\n      isBrowserRecordingOn,\n    ].every((value) => !!value)\n  ) {\n    // show recording icon in mobile without popover\n    if (!(isMobile && isRecordingOn)) return null;\n  }\n\n  return (\n    <Tooltip\n      boxCss={{ zIndex: 1 }}\n      title={getRecordingText({\n        isBrowserRecordingOn,\n        isServerRecordingOn,\n        isHLSRecordingOn,\n      })}\n    >\n      <Flex\n        css={{\n          color: \"$alert_error_default\",\n          alignItems: \"center\",\n        }}\n      >\n        <RecordIcon width={24} height={24} />\n      </Flex>\n    </Tooltip>\n  );\n};\n\nexport const RecordingPauseStatus = () => {\n  const recording = useHMSStore(selectRecordingState);\n  if (recording.hls && recording.hls.state === HMSRecordingState.PAUSED) {\n    return (\n      <Tooltip\n        boxCss={{ zIndex: 1 }}\n        title={getRecordingText({\n          isBrowserRecordingOn: false,\n          isServerRecordingOn: false,\n          isHLSRecordingOn: true,\n        })}\n      >\n        <Flex\n          css={{\n            color: \"$on_surface_high\",\n            alignItems: \"center\",\n          }}\n        >\n          <PauseCircleIcon width={24} height={24} />\n        </Flex>\n      </Tooltip>\n    );\n  }\n  return null;\n};\n\nconst StartRecording = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const [open, setOpen] = useState(false);\n  const { startRecording, recordingStarted } = useRecordingHandler();\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const hmsActions = useHMSActions();\n  if (!permissions?.browserRecording || isHLSRunning) {\n    return null;\n  }\n  if (isBrowserRecordingOn) {\n    return (\n      <Popover.Root open={open} onOpenChange={setOpen}>\n        <Popover.Trigger asChild>\n          <Button\n            variant=\"danger\"\n            data-testid=\"stop_recording\"\n            icon\n            outlined\n            onClick={() => setOpen(true)}\n          >\n            <RecordIcon />\n            <Text\n              as=\"span\"\n              css={{ \"@md\": { display: \"none\" }, color: \"currentColor\" }}\n            >\n              Stop Recording\n            </Text>\n          </Button>\n        </Popover.Trigger>\n        <Popover.Portal>\n          <Popover.Content align=\"end\" sideOffset={8} css={{ w: \"$64\" }}>\n            <Text variant=\"body1\" css={{ color: \"$on_surface_medium\" }}>\n              Are you sure you want to end the recording?\n            </Text>\n            <Button\n              data-testid=\"stop_recording_confirm\"\n              variant=\"danger\"\n              icon\n              css={{ ml: \"auto\" }}\n              onClick={async () => {\n                try {\n                  await hmsActions.stopRTMPAndRecording();\n                } catch (error) {\n                  const err = error as Error;\n                  ToastManager.addToast({\n                    title: err.message,\n                    variant: \"error\",\n                  });\n                }\n                setOpen(false);\n              }}\n            >\n              Stop\n            </Button>\n          </Popover.Content>\n        </Popover.Portal>\n      </Popover.Root>\n    );\n  }\n  return (\n    <Button\n      data-testid=\"start_recording\"\n      variant=\"standard\"\n      icon\n      disabled={recordingStarted || isStreamingOn}\n      onClick={async () => {\n        await startRecording();\n      }}\n    >\n      {recordingStarted ? (\n        <Loading size={24} color=\"currentColor\" />\n      ) : (\n        <RecordIcon />\n      )}\n      <Text\n        as=\"span\"\n        css={{ \"@md\": { display: \"none\" }, color: \"currentColor\" }}\n      >\n        {recordingStarted ? \"Starting\" : \"Start\"} Recording\n      </Text>\n    </Button>\n  );\n};\n\n/**\n * @description only start recording button will be shown.\n */\nexport const StreamActions = () => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const isMobile = useMedia(cssConfig.media.md);\n  const roomState = useHMSStore(selectRoomState);\n\n  return (\n    <Flex align=\"center\" css={{ gap: \"$4\" }}>\n      {!isMobile && (\n        <Flex align=\"center\" css={{ gap: \"$4\" }}>\n          <RecordingPauseStatus />\n          <RecordingStatus />\n          {roomState !== HMSRoomState.Preview ? <LiveStatus /> : null}\n        </Flex>\n      )}\n      {isConnected && !isMobile ? <StartRecording /> : null}\n    </Flex>\n  );\n};\n\nexport const StopRecordingInSheet = ({\n  onStopRecording,\n  onClose,\n}: {\n  onStopRecording: () => void;\n  onClose: () => void;\n}) => {\n  return (\n    <Sheet.Root open={true}>\n      <Sheet.Content>\n        <Sheet.Title css={{ p: \"$10\" }}>\n          <Flex\n            direction=\"row\"\n            justify=\"between\"\n            css={{ w: \"100%\", c: \"$alert_error_default\" }}\n          >\n            <Flex justify=\"start\" align=\"center\" gap=\"3\">\n              <AlertTriangleIcon />\n              <Text variant=\"h5\" css={{ c: \"$alert_error_default\" }}>\n                Stop Recording\n              </Text>\n            </Flex>\n            <Sheet.Close css={{ color: \"white\" }} onClick={onClose}>\n              <CrossIcon />\n            </Sheet.Close>\n          </Flex>\n        </Sheet.Title>\n        <HorizontalDivider />\n        <Box\n          as=\"div\"\n          css={{ p: \"$10\", overflowY: \"scroll\", maxHeight: \"70vh\" }}\n        >\n          <Text variant=\"caption\" css={{ c: \"$on_surface_medium\", pb: \"$8\" }}>\n            Are you sure you want to stop recording? You can\u2019t undo this action.\n          </Text>\n          <Button\n            variant=\"danger\"\n            css={{ width: \"100%\" }}\n            type=\"submit\"\n            data-testid=\"popup_change_btn\"\n            onClick={onStopRecording}\n          >\n            Stop\n          </Button>\n        </Box>\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\n", "import React from \"react\";\nimport { ChevronLeftIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Input } from \"../../../Input\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const ChangeNameContent = ({\n  changeName,\n  setCurrentName,\n  currentName,\n  localPeerName,\n  isMobile,\n  onExit,\n  onBackClick,\n}: {\n  changeName: () => Promise<void>;\n  setCurrentName: (name: string) => void;\n  currentName?: string;\n  localPeerName?: string;\n  isMobile: boolean;\n  onExit: () => void;\n  onBackClick: () => void;\n}) => {\n  return (\n    <form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        await changeName();\n      }}\n    >\n      <Text\n        variant={isMobile ? \"md\" : \"lg\"}\n        css={{\n          color: \"$on_surface_high\",\n          fontWeight: \"$semiBold\",\n          display: \"flex\",\n          pb: \"$4\",\n          \"@md\": { px: \"$8\", borderBottom: \"1px solid $border_default\" },\n        }}\n      >\n        {isMobile ? (\n          <ChevronLeftIcon\n            onClick={onBackClick}\n            style={{ marginRight: \"0.5rem\" }}\n          />\n        ) : null}\n        Change Name\n        <Box\n          css={{\n            color: \"inherit\",\n            ml: \"auto\",\n            \"&:hover\": { color: \"$on_surface_medium\", cursor: \"pointer\" },\n          }}\n          onClick={onExit}\n        >\n          <CrossIcon />\n        </Box>\n      </Text>\n      <Text\n        variant=\"sm\"\n        css={{\n          color: \"$on_surface_medium\",\n          pb: \"$6\",\n          mb: \"$8\",\n          \"@md\": { px: \"$8\", mt: \"$4\" },\n        }}\n      >\n        Your name will be visible to other participants in the session.\n      </Text>\n      <Flex\n        justify=\"center\"\n        align=\"center\"\n        css={{ my: \"$8\", w: \"100%\", \"@md\": { px: \"$8\" } }}\n      >\n        <Input\n          css={{ width: \"100%\", bg: \"$surface_default\" }}\n          value={currentName}\n          // Prevents popup from showing up on chrome mweb\n          type={isMobile ? \"search\" : \"text\"}\n          onChange={(e) => {\n            setCurrentName(e.target.value);\n          }}\n          autoComplete=\"name\"\n          required\n          data-testid=\"change_name_field\"\n          onKeyDown={async (e) => {\n            if (\n              e.key === \"Enter\" &&\n              currentName &&\n              currentName.trim().length > 0 &&\n              currentName !== localPeerName\n            ) {\n              e.preventDefault();\n              if (isMobile) {\n                return;\n              }\n              changeName();\n            }\n          }}\n        />\n      </Flex>\n\n      <Flex\n        justify=\"between\"\n        align=\"center\"\n        css={{\n          width: \"100%\",\n          gap: \"$md\",\n          mt: \"$10\",\n          \"@md\": { px: \"$4\" },\n        }}\n      >\n        {isMobile ? null : (\n          <Button\n            variant=\"standard\"\n            css={{ w: \"100%\" }}\n            outlined\n            type=\"submit\"\n            disabled={!localPeerName}\n            onClick={onExit}\n          >\n            Cancel\n          </Button>\n        )}\n\n        <Button\n          variant=\"primary\"\n          css={{ width: \"100%\" }}\n          type=\"submit\"\n          disabled={\n            !currentName?.trim() || currentName?.trim() === localPeerName\n          }\n          data-testid=\"popup_change_btn\"\n        >\n          Change\n        </Button>\n      </Flex>\n    </form>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectLocalPeerName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig, Dialog } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore: No implicit Any\nimport { ChangeNameContent } from \"./ChangeNameContent\";\n// @ts-ignore: No implicit Any\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n\nexport const ChangeNameModal = ({\n  onOpenChange,\n  openParentSheet = undefined,\n}: {\n  onOpenChange: (value: boolean) => void;\n  openParentSheet?: () => void;\n}) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW\n  );\n  const hmsActions = useHMSActions();\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const [currentName, setCurrentName] = useState(localPeerName);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const changeName = async () => {\n    const name = currentName?.trim() || \"\";\n    if (!name || name === localPeerName) {\n      return;\n    }\n    try {\n      await hmsActions.changeName(name);\n      setPreviewPreference({\n        ...(previewPreference || {}),\n        name,\n      });\n    } catch (error) {\n      console.error(\"failed to update name\", error);\n      ToastManager.addToast({ title: (error as Error).message });\n    } finally {\n      onOpenChange(false);\n    }\n  };\n\n  const props = {\n    changeName,\n    setCurrentName,\n    currentName,\n    localPeerName,\n    isMobile,\n    onExit: () => onOpenChange(false),\n    onBackClick: () => {\n      onOpenChange(false);\n      openParentSheet?.();\n    },\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root defaultOpen onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ bg: \"$surface_dim\", p: \"$8 0\" }}>\n          <ChangeNameContent {...props} />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ bg: \"$surface_dim\", width: \"min(400px,80%)\", p: \"$10\" }}\n        >\n          <ChangeNameContent {...props} />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectAppData,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useIsSheetTypeOpen = (sheetType: string) => {\n  if (!sheetType) {\n    throw Error(\"Pass one of the sheet options\");\n  }\n  return useHMSStore(selectAppData(APP_DATA.sheet)) === sheetType;\n};\n\nexport const useSheetState = () => {\n  const sheet = useHMSStore(selectAppData(APP_DATA.sheet));\n  return sheet;\n};\n\nexport const useSheetToggle = (sheetType: string) => {\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const toggleSheet = useCallback(() => {\n    const isOpen =\n      vanillaStore.getState(selectAppData(APP_DATA.sheet)) === sheetType;\n    hmsActions.setAppData(APP_DATA.sheet, !isOpen ? sheetType : \"\");\n  }, [vanillaStore, hmsActions, sheetType]);\n  return toggleSheet;\n};\n\nexport const useSheetReset = () => {\n  const hmsActions = useHMSActions();\n  const resetSheet = useCallback(() => {\n    hmsActions.setAppData(APP_DATA.sheet, \"\");\n  }, [hmsActions]);\n  return resetSheet;\n};\n", "import { useEffect, useState } from \"react\";\nimport { selectLocalPeerID } from \"@100mslive/hms-video-store\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const useUnreadPollQuizPresent = () => {\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const notification = useHMSNotifications(HMSNotificationTypes.POLL_STARTED);\n  const [unreadPollQuiz, setUnreadPollQuiz] = useState(false);\n\n  useEffect(() => {\n    if (!notification) {\n      return;\n    }\n    setUnreadPollQuiz(notification.data.startedBy !== localPeerID);\n  }, [localPeerID, notification]);\n  return { unreadPollQuiz, setUnreadPollQuiz };\n};\n", "import React, { useRef, useState } from \"react\";\nimport { useClickAway } from \"react-use\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSTranscriptionMode,\n  selectIsConnectedToRoom,\n  selectIsLocalVideoEnabled,\n  selectIsTranscriptionAllowedByMode,\n  selectIsTranscriptionEnabled,\n  selectPeerCount,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport {\n  BrbIcon,\n  ClosedCaptionIcon,\n  CrossIcon,\n  EmojiIcon,\n  HamburgerMenuIcon,\n  HandIcon,\n  HandRaiseSlashedIcon,\n  InfoIcon,\n  OpenCaptionIcon,\n  PeopleIcon,\n  QuizActiveIcon,\n  QuizIcon,\n  RecordIcon,\n  SettingsIcon,\n  VirtualBackgroundIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Loading, Tooltip } from \"../../../..\";\nimport { Sheet } from \"../../../../Sheet\";\n// @ts-ignore: No implicit any\nimport IconButton from \"../../../IconButton\";\nimport { NoiseCancellation } from \"../../AudioVideoToggle\";\n// @ts-ignore: No implicit any\nimport { EmojiReaction } from \"../../EmojiReaction\";\n// @ts-ignore: No implicit any\nimport { StopRecordingInSheet } from \"../../Header/StreamActions\";\n// @ts-ignore: No implicit any\nimport SettingsModal from \"../../Settings/SettingsModal\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../../Toast/ToastManager\";\n// @ts-ignore: No implicit any\nimport { ActionTile } from \"../ActionTile\";\nimport { CaptionModal } from \"../CaptionModal\";\n// @ts-ignore: No implicit any\nimport { ChangeNameModal } from \"../ChangeNameModal\";\n// @ts-ignore: No implicit any\nimport { MuteAllModal } from \"../MuteAllModal\";\nimport { useRoomLayoutHeader } from \"../../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useSheetToggle } from \"../../AppData/useSheet\";\n// @ts-ignore: No implicit any\nimport {\n  usePollViewToggle,\n  useSidepaneToggle,\n} from \"../../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetIsCaptionEnabled,\n  useShowPolls,\n} from \"../../AppData/useUISettings\";\n// @ts-ignore: No implicit any\nimport { useDropdownList } from \"../../hooks/useDropdownList\";\nimport { useMyMetadata } from \"../../hooks/useMetadata\";\nimport { useUnreadPollQuizPresent } from \"../../hooks/useUnreadPollQuizPresent\";\nimport {\n  useLandscapeHLSStream,\n  useMobileHLSStream,\n  useRecordingHandler,\n} from \"../../../common/hooks\";\n// @ts-ignore: No implicit any\nimport { getFormattedCount } from \"../../../common/utils\";\n// @ts-ignore: No implicit any\nimport { SHEET_OPTIONS, SIDE_PANE_OPTIONS } from \"../../../common/constants\";\n\nconst MODALS = {\n  CHANGE_NAME: \"changeName\",\n  SELF_ROLE_CHANGE: \"selfRoleChange\",\n  MORE_SETTINGS: \"moreSettings\",\n  START_RECORDING: \"startRecording\",\n  DEVICE_SETTINGS: \"deviceSettings\",\n  STATS_FOR_NERDS: \"statsForNerds\",\n  BULK_ROLE_CHANGE: \"bulkRoleChange\",\n  MUTE_ALL: \"muteAll\",\n  EMBED_URL: \"embedUrl\",\n  CAPTION: \"caption\",\n};\n\nexport const MwebOptions = ({\n  elements,\n  screenType,\n}: {\n  elements: DefaultConferencingScreen_Elements;\n  screenType: keyof ConferencingScreen;\n}) => {\n  const hmsActions = useHMSActions();\n  const permissions = useHMSStore(selectPermissions);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const [openModals, setOpenModals] = useState(new Set());\n  const [openOptionsSheet, setOpenOptionsSheet] = useState(false);\n  const [openSettingsSheet, setOpenSettingsSheet] = useState(false);\n  const [showEmojiCard, setShowEmojiCard] = useState(false);\n  const [showRecordingOn, setShowRecordingOn] = useState(false);\n  const toggleParticipants = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n  const { showPolls } = useShowPolls();\n  const togglePollView = usePollViewToggle();\n  const peerCount = useHMSStore(selectPeerCount);\n  const emojiCardRef = useRef(null);\n  const { isBRBOn, toggleBRB, isHandRaised, toggleHandRaise } = useMyMetadata();\n  const { unreadPollQuiz, setUnreadPollQuiz } = useUnreadPollQuizPresent();\n  const { title, description } = useRoomLayoutHeader();\n  const toggleDetailsSheet = useSheetToggle(SHEET_OPTIONS.ROOM_DETAILS);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const isLocalVideoEnabled = useHMSStore(selectIsLocalVideoEnabled);\n  const { startRecording, isRecordingLoading } = useRecordingHandler();\n  const isTranscriptionAllowed = useHMSStore(\n    selectIsTranscriptionAllowedByMode(HMSTranscriptionMode.CAPTION)\n  );\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n\n  const [isCaptionEnabled] = useSetIsCaptionEnabled();\n  useDropdownList({\n    open: openModals.size > 0 || openOptionsSheet || openSettingsSheet,\n    name: \"MoreSettings\",\n  });\n\n  const updateState = (modalName: string, value: boolean) => {\n    setOpenModals((modals) => {\n      const copy = new Set(modals);\n      if (value) {\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n\n  useClickAway(emojiCardRef, () => setShowEmojiCard(false));\n\n  return (\n    <>\n      <Sheet.Root open={openOptionsSheet} onOpenChange={setOpenOptionsSheet}>\n        <Tooltip title=\"More options\">\n          <Sheet.Trigger asChild data-testid=\"more_settings_btn\">\n            <IconButton\n              css={{\n                bg:\n                  isMobileHLSStream || isLandscapeHLSStream\n                    ? \"$surface_default\"\n                    : \"\",\n              }}\n            >\n              <HamburgerMenuIcon />\n            </IconButton>\n          </Sheet.Trigger>\n        </Tooltip>\n        <Sheet.Content css={{ bg: \"$surface_dim\", pb: \"$14\" }}>\n          <Sheet.Title\n            css={{\n              display: \"flex\",\n              color: \"$on_surface_high\",\n              w: \"100%\",\n              justifyContent: \"space-between\",\n              fontSize: \"$md\",\n              mt: \"$8\",\n              px: \"$10\",\n              pb: \"$8\",\n              borderBottom: \"1px solid $border_default\",\n              mb: \"$8\",\n              alignItems: \"center\",\n            }}\n          >\n            Options\n            <Sheet.Close>\n              <Box css={{ color: \"$on_surface_high\" }}>\n                <CrossIcon />\n              </Box>\n            </Sheet.Close>\n          </Sheet.Title>\n          <Box\n            css={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr 1fr\",\n              gridTemplateRows: \"auto\",\n              gridColumnGap: \"$6\",\n              gridRowGap: \"$8\",\n              px: \"$9\",\n            }}\n          >\n            {elements?.participant_list && (\n              <ActionTile.Root\n                onClick={() => {\n                  toggleParticipants();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                <ActionTile.Count>\n                  {getFormattedCount(peerCount)}\n                </ActionTile.Count>\n                <PeopleIcon />\n                <ActionTile.Title>Participants</ActionTile.Title>\n              </ActionTile.Root>\n            )}\n\n            {elements.hand_raise ? (\n              <ActionTile.Root\n                active={isHandRaised}\n                onClick={() => {\n                  toggleHandRaise();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                {isHandRaised ? <HandRaiseSlashedIcon /> : <HandIcon />}\n                <ActionTile.Title>\n                  {isHandRaised ? \"Lower\" : \"Raise\"} Hand\n                </ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n            <NoiseCancellation\n              setOpenOptionsSheet={setOpenOptionsSheet}\n              actionTile\n            />\n            {isTranscriptionAllowed ? (\n              <ActionTile.Root\n                onClick={() => {\n                  setOpenOptionsSheet(false);\n                  updateState(MODALS.CAPTION, true);\n                }}\n              >\n                {isTranscriptionEnabled && isCaptionEnabled ? (\n                  <ClosedCaptionIcon />\n                ) : (\n                  <OpenCaptionIcon />\n                )}\n                <ActionTile.Title>Closed Caption</ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n            {isLocalVideoEnabled && !!elements?.virtual_background ? (\n              <ActionTile.Root\n                onClick={() => {\n                  toggleVB();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                <VirtualBackgroundIcon />\n                <ActionTile.Title>Virtual Background</ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n\n            {elements?.emoji_reactions &&\n              !(isLandscapeHLSStream || isMobileHLSStream) && (\n                <ActionTile.Root\n                  onClick={() => {\n                    setShowEmojiCard(true);\n                    setOpenOptionsSheet(false);\n                  }}\n                >\n                  <EmojiIcon />\n                  <ActionTile.Title>Emoji Reactions</ActionTile.Title>\n                </ActionTile.Root>\n              )}\n\n            {showPolls && (\n              <ActionTile.Root\n                onClick={() => {\n                  togglePollView();\n                  setOpenOptionsSheet(false);\n                  setUnreadPollQuiz(false);\n                }}\n              >\n                {unreadPollQuiz ? <QuizActiveIcon /> : <QuizIcon />}\n                <ActionTile.Title>Polls and Quizzes</ActionTile.Title>\n              </ActionTile.Root>\n            )}\n\n            {elements?.brb && (\n              <ActionTile.Root\n                active={isBRBOn}\n                onClick={() => {\n                  toggleBRB();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                <BrbIcon />\n                <ActionTile.Title>Be Right Back</ActionTile.Title>\n              </ActionTile.Root>\n            )}\n\n            <ActionTile.Root\n              onClick={() => {\n                setOpenSettingsSheet(true);\n                setOpenOptionsSheet(false);\n              }}\n            >\n              <SettingsIcon />\n              <ActionTile.Title>Settings</ActionTile.Title>\n            </ActionTile.Root>\n\n            {isConnected && permissions?.browserRecording ? (\n              <ActionTile.Root\n                disabled={isHLSRunning}\n                onClick={async () => {\n                  if (isRecordingLoading) {\n                    return;\n                  }\n                  if (isBrowserRecordingOn || isStreamingOn) {\n                    setOpenOptionsSheet(false);\n                    setShowRecordingOn(true);\n                  } else {\n                    // start recording\n                    await startRecording();\n                    setOpenOptionsSheet(false);\n                  }\n                  if (isHLSRunning) {\n                    setOpenOptionsSheet(false);\n                  }\n                }}\n              >\n                {isRecordingLoading ? <Loading /> : <RecordIcon />}\n                <ActionTile.Title>\n                  {match({ isBrowserRecordingOn, isRecordingLoading })\n                    .with(\n                      { isBrowserRecordingOn: true, isRecordingLoading: false },\n                      () => \"Recording On\"\n                    )\n                    .with(\n                      { isRecordingLoading: true },\n                      () => \"Starting Recording\"\n                    )\n                    .with(\n                      { isRecordingLoading: false },\n                      () => \"Start Recording\"\n                    )\n                    .otherwise(() => null)}\n                </ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n\n            {title || description ? (\n              <ActionTile.Root\n                onClick={() => {\n                  setOpenOptionsSheet(false);\n                  toggleDetailsSheet();\n                }}\n              >\n                <InfoIcon />\n                <ActionTile.Title>About Session</ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n          </Box>\n        </Sheet.Content>\n      </Sheet.Root>\n      <SettingsModal\n        open={openSettingsSheet}\n        onOpenChange={setOpenSettingsSheet}\n        screenType={screenType}\n      />\n      {openModals.has(MODALS.MUTE_ALL) && (\n        <MuteAllModal\n          onOpenChange={(value: boolean) => updateState(MODALS.MUTE_ALL, value)}\n          isMobile\n        />\n      )}\n      {openModals.has(MODALS.CHANGE_NAME) && (\n        <ChangeNameModal\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.CHANGE_NAME, value)\n          }\n          openParentSheet={() => setOpenOptionsSheet(true)}\n        />\n      )}\n      {openModals.has(MODALS.CAPTION) && (\n        <CaptionModal\n          onOpenChange={(value: boolean) => updateState(MODALS.CAPTION, value)}\n        />\n      )}\n      {showEmojiCard && (\n        <Box\n          ref={emojiCardRef}\n          css={{\n            maxWidth: \"100%\",\n            w: \"100%\",\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            bottom: \"$18\",\n            bg: \"$surface_default\",\n            zIndex: \"10\",\n            p: \"$8\",\n            pb: 0,\n            r: \"$1\",\n            mx: \"$4\",\n          }}\n        >\n          <EmojiReaction showCard />\n        </Box>\n      )}\n      {showRecordingOn && (\n        <StopRecordingInSheet\n          onClose={() => setShowRecordingOn(false)}\n          onStopRecording={async () => {\n            try {\n              await hmsActions.stopRTMPAndRecording();\n              setShowRecordingOn(false);\n            } catch (error) {\n              ToastManager.addToast({\n                // @ts-ignore\n                title: error.message,\n                variant: \"error\",\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\n// @ts-ignore: No implicit Any\nimport { DesktopOptions } from \"./SplitComponents/DesktopOptions\";\n// @ts-ignore: No implicit Any\nimport { MwebOptions } from \"./SplitComponents/MwebOptions\";\nimport { config as cssConfig } from \"../../..\";\nimport { useLandscapeHLSStream } from \"../../common/hooks\";\n\nexport const MoreSettings = ({\n  elements,\n  screenType,\n}: {\n  elements:\n    | DefaultConferencingScreen_Elements\n    | HLSLiveStreamingScreen_Elements;\n  screenType: keyof ConferencingScreen;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  return isMobile || isLandscapeHLSStream ? (\n    <MwebOptions elements={elements} screenType={screenType} />\n  ) : (\n    <DesktopOptions elements={elements} screenType={screenType} />\n  );\n};\n", "import React from \"react\";\nimport { HandIcon, HandRaiseSlashedIcon } from \"@100mslive/react-icons\";\nimport { CSS } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../IconButton\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useMyMetadata } from \"./hooks/useMetadata\";\n\nexport const RaiseHand = ({ css }: { css?: CSS }) => {\n  const { isHandRaised, toggleHandRaise } = useMyMetadata();\n  const { elements } = useRoomLayoutConferencingScreen();\n\n  if (!elements.hand_raise) {\n    return null;\n  }\n\n  return (\n    <Tooltip title={isHandRaised ? \"Lower hand\" : \"Raise hand\"}>\n      <IconButton\n        data-testid=\"hand_raise_btn\"\n        css={css}\n        active={!isHandRaised}\n        onClick={async () => await toggleHandRaise()}\n      >\n        {isHandRaised ? <HandRaiseSlashedIcon /> : <HandIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import { styled } from \"../../Theme\";\nimport IconButton from \"../IconButton\";\n\nexport const ScreenShareButton = styled(IconButton, {\n  h: \"$14\",\n  px: \"$8\",\n  r: \"$1\",\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  \"@md\": {\n    px: \"$4\",\n    mx: 0,\n  },\n});\n\nexport const ShareMenuIcon = styled(ScreenShareButton, {\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderTopRightRadius: \"$1\",\n  borderBottomRightRadius: \"$1\",\n  borderLeftWidth: 0,\n  w: \"$4\",\n  \"@md\": {\n    w: \"unset\",\n    px: \"$2\",\n  },\n});\n", "import React from \"react\";\nimport { Dialog, Text } from \"../../../\";\nimport { DialogCol } from \"../../primitives/DialogContent\";\n\nexport const PDFHeader = () => {\n  return (\n    <DialogCol\n      align=\"start\"\n      css={{\n        mt: 0,\n        mb: \"$6\",\n      }}\n    >\n      <Dialog.Title asChild>\n        <Text as=\"h6\" variant=\"h6\">\n          Share PDF\n        </Text>\n      </Dialog.Title>\n      <Dialog.Description asChild>\n        <Text\n          variant=\"sm\"\n          css={{\n            c: \"$on_surface_medium\",\n          }}\n        >\n          Choose PDF you want to annotate and share\n        </Text>\n      </Dialog.Description>\n    </DialogCol>\n  );\n};\n", "import React from \"react\";\nimport { Button, Flex } from \"../../../\";\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const SubmitPDF = ({ pdfFile, onOpenChange }) => {\n  const [, setPDFConfig] = useSetAppDataByKey(APP_DATA.pdfConfig);\n\n  return (\n    <Flex\n      direction=\"row\"\n      css={{\n        mb: \"0\",\n        mt: \"auto\",\n        gap: \"$8\",\n      }}\n    >\n      <Button\n        variant=\"standard\"\n        outlined\n        type=\"submit\"\n        onClick={() => {\n          onOpenChange(false);\n        }}\n        css={{ w: \"50%\" }}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={() => {\n          if (pdfFile) {\n            setPDFConfig(pdfFile);\n            onOpenChange(false);\n          }\n        }}\n        disabled={!pdfFile}\n        data-testid=\"share_pdf_btn\"\n        css={{\n          w: \"50%\",\n        }}\n      >\n        Start Sharing\n      </Button>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { InfoIcon } from \"@100mslive/react-icons\";\nimport { Text } from \"../../../\";\nimport { DialogRow } from \"../../primitives/DialogContent\";\n\nexport const PDFInfo = () => {\n  return (\n    <DialogRow\n      css={{\n        px: \"$8\",\n        py: \"$3\",\n        bg: \"$surface_default\",\n        r: \"$1\",\n        outline: \"none\",\n        border: \"1px solid $border_bright\",\n        minHeight: \"$11\",\n      }}\n    >\n      <InfoIcon\n        width=\"64px\"\n        height=\"64px\"\n        style={{\n          paddingRight: \"16px\",\n        }}\n      />\n      <Text variant=\"caption\">\n        On the next screen, ensure you select \u201CThis Tab\u201D and click on share.\n        Only the PDF viewer will be seen by other participants\n      </Text>\n    </DialogRow>\n  );\n};\n", "import React from \"react\";\nimport { TrashIcon } from \"@100mslive/react-icons\";\nimport { Dialog, Flex, Text } from \"../../../\";\nimport { DialogRow } from \"../../primitives/DialogContent\";\nimport { PDFHeader } from \"./pdfHeader\";\nimport { PDFInfo } from \"./pdfInfo\";\nimport { SubmitPDF } from \"./submitPdf\";\n\nexport const UploadedFile = ({ pdfFile, setPDFFile, onOpenChange }) => {\n  const [fileName, ext] = pdfFile.name.split(\".\");\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(420px,80%)\",\n            overflow: \"auto\",\n            p: \"$10\",\n            bg: \"$surface_dim\",\n          }}\n        >\n          <Flex direction=\"column\">\n            <PDFHeader />\n            <DialogRow\n              css={{\n                fontFamily: \"$sans\",\n                bg: \"$surface_bright\",\n                r: \"$1\",\n                outline: \"none\",\n                border: \"1px solid $border_bright\",\n                p: \"$4 $6\",\n                minHeight: \"$11\",\n                c: \"$on_primary_high\",\n                fs: \"$md\",\n                w: \"100%\",\n                \"&:focus\": {\n                  boxShadow: \"0 0 0 1px $colors$primary_default\",\n                  border: \"1px solid transparent\",\n                },\n                mb: 0,\n                mt: \"$6\",\n              }}\n            >\n              <Flex direction=\"row\" css={{ flexGrow: \"1\", maxWidth: \"88%\" }}>\n                <Text\n                  css={{\n                    textOverflow: \"ellipsis\",\n                    overflow: \"hidden\",\n                    whiteSpace: \"nowrap\",\n                  }}\n                >\n                  {fileName}\n                </Text>\n                <Text css={{ whiteSpace: \"nowrap\" }}>.{ext}</Text>\n              </Flex>\n              <TrashIcon\n                onClick={() => setPDFFile(null)}\n                style={{\n                  cursor: \"pointer\",\n                }}\n              />\n            </DialogRow>\n            <PDFInfo />\n            <SubmitPDF pdfFile={pdfFile} onOpenChange={onOpenChange} />\n          </Flex>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { Dialog, Flex } from \"../../../\";\nimport { DialogInputFile } from \"../../primitives/DialogContent\";\nimport { PDFHeader } from \"./pdfHeader\";\nimport { SubmitPDF } from \"./submitPdf\";\nimport { UploadedFile } from \"./uploadedFile\";\n\nexport function PDFFileOptions({ onOpenChange }) {\n  const [pdfFile, setPDFFile] = useState(null);\n\n  return !pdfFile ? (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(420px,80%)\",\n            overflow: \"auto\",\n            p: \"$10\",\n            bg: \"$surface_dim\",\n          }}\n        >\n          <Flex direction=\"column\">\n            <PDFHeader />\n            <DialogInputFile\n              onChange={(target) => {\n                setPDFFile(target.files[0]);\n              }}\n              placeholder=\"Click to upload\"\n              type=\"file\"\n              accept=\".pdf\"\n            />\n\n            <SubmitPDF pdfFile={pdfFile} onOpenChange={onOpenChange} />\n          </Flex>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  ) : (\n    <UploadedFile\n      pdfFile={pdfFile}\n      setPDFFile={setPDFFile}\n      onOpenChange={onOpenChange}\n    />\n  );\n}\n", "import React, { Fragment, useState } from \"react\";\nimport { useScreenShare } from \"@100mslive/react-sdk\";\nimport { StarIcon, VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport PDFShareImg from \"./../../images/pdf-share.png\";\nimport ScreenShareImg from \"./../../images/screen-share.png\";\nimport { Box, Dropdown, Flex, IconButton, Text, Tooltip } from \"../../../\";\nimport { ShareMenuIcon } from \"../ShareMenuIcon\";\nimport { PDFFileOptions } from \"./pdfFileOptions\";\n\nconst MODALS = {\n  SHARE: \"share\",\n  SCREEN_SHARE: \"screenShare\",\n  PDF_SHARE: \"pdfShare\",\n};\n\nexport function ShareScreenOptions() {\n  const [openModals, setOpenModals] = useState(new Set());\n  const { amIScreenSharing } = useScreenShare();\n  const updateState = (modalName, value) => {\n    setOpenModals((modals) => {\n      const copy = new Set(modals);\n      if (value) {\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n  const { toggleScreenShare } = useScreenShare();\n  return (\n    <Fragment>\n      <Dropdown.Root\n        open={openModals.has(MODALS.SHARE)}\n        onOpenChange={(value) => updateState(MODALS.SHARE, value)}\n        modal={false}\n      >\n        <Dropdown.Trigger\n          asChild\n          data-testid=\"sharing_btn\"\n          disabled={amIScreenSharing}\n        >\n          <ShareMenuIcon disabled={amIScreenSharing}>\n            <Tooltip title=\"Share\">\n              <Box>\n                <VerticalMenuIcon />\n              </Box>\n            </Tooltip>\n          </ShareMenuIcon>\n        </Dropdown.Trigger>\n        <Dropdown.Content\n          sideOffset={5}\n          css={{\n            w: \"$96\",\n            maxHeight: \"$96\",\n            p: 0,\n            bg: \"$surface_dim\",\n          }}\n        >\n          <Dropdown.Item\n            css={{\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              px: \"$10\",\n              pt: \"$10\",\n              pb: \"$6\",\n              \"&:hover\": {\n                bg: \"transparent\",\n                cursor: \"default\",\n              },\n            }}\n          >\n            <Text variant=\"h6\">Start Sharing</Text>\n            <Text variant=\"sm\">Choose what you want to share</Text>\n          </Dropdown.Item>\n          <Dropdown.Item\n            css={{\n              flexDirection: \"row\",\n              alignItems: \"flex-start\",\n              gap: \"$8\",\n              px: \"$10\",\n              pt: \"$6\",\n              pb: \"$10\",\n              \"&:hover\": {\n                bg: \"transparent\",\n                cursor: \"default\",\n              },\n            }}\n          >\n            <Flex\n              direction=\"column\"\n              align=\"center\"\n              css={{\n                gap: \"$6\",\n              }}\n            >\n              <IconButton\n                as=\"div\"\n                onClick={toggleScreenShare}\n                css={{\n                  p: \"$6\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  border: \"1px solid $border_bright\",\n                  r: \"$2\",\n                  bg: \"$surface_brighter\",\n                  pb: \"0\",\n                }}\n              >\n                <img\n                  src={ScreenShareImg}\n                  alt=\"screen-share\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    borderTopLeftRadius: \"0.5rem\", // TODO: create image component to solve for style hardcoding\n                    borderTopRightRadius: \"0.5rem\",\n                  }}\n                />\n              </IconButton>\n              <Flex direction=\"column\" align=\"center\">\n                <Text variant=\"body2\">Share Screen</Text>\n                <Text\n                  variant=\"caption\"\n                  css={{\n                    c: \"$on_surface_low\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Share your tab, window or your entire screen\n                </Text>\n              </Flex>\n            </Flex>\n            <Flex\n              direction=\"column\"\n              align=\"center\"\n              css={{\n                gap: \"$6\",\n              }}\n            >\n              <IconButton\n                onClick={() => {\n                  updateState(MODALS.PDF_SHARE, true);\n                }}\n                disabled={amIScreenSharing}\n                css={{\n                  p: \"$6\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  border: \"$border_bright 1px solid\",\n                  r: \"$2\",\n                  bg: \"$surface_bright\",\n                  pb: \"0\",\n                }}\n              >\n                <img\n                  src={PDFShareImg}\n                  alt=\"pdf-share\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    borderTopLeftRadius: \"0.5rem\", // TODO: create image component to solve for style hardcoding\n                    borderTopRightRadius: \"0.5rem\",\n                  }}\n                />\n                <Flex\n                  direction=\"row\"\n                  align=\"center\"\n                  css={{\n                    position: \"absolute\",\n                    top: \"35%\",\n                    left: \"54%\",\n                    padding: \"$2 $4\",\n                    r: \"$2\",\n                    bg: \"$primary_bright\",\n                    zIndex: \"2\",\n                    gap: \"$2\",\n                  }}\n                >\n                  <StarIcon height={14} width={14} />\n\n                  <Text\n                    variant=\"xs\"\n                    css={{\n                      fontWeight: \"$semiBold\",\n                      c: \"$on_primary_high\",\n                      pr: \"$4\",\n                    }}\n                  >\n                    New\n                  </Text>\n                </Flex>\n              </IconButton>\n              <Flex direction=\"column\" align=\"center\">\n                <Text variant=\"body2\">Share PDF</Text>\n                <Text\n                  variant=\"caption\"\n                  css={{\n                    c: \"$on_surface_low\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Annotate, draw shapes, and more over PDFs\n                </Text>\n              </Flex>\n            </Flex>\n          </Dropdown.Item>\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {openModals.has(MODALS.PDF_SHARE) && (\n        <PDFFileOptions\n          onOpenChange={(value) => updateState(MODALS.PDF_SHARE, value)}\n        />\n      )}\n    </Fragment>\n  );\n}\n", "import React, { Fragment } from \"react\";\nimport {\n  selectIsAllowedToPublish,\n  useAwayNotifications,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { ShareScreenOptions } from \"./pdfAnnotator/shareScreenOptions\";\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Tooltip } from \"../../Tooltip\";\nimport { ScreenShareButton } from \"./ShareMenuIcon\";\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { isScreenshareSupported } from \"../common/utils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const ScreenshareToggle = ({ css = {} }) => {\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    toggleScreenShare,\n  } = useScreenShare((error) => {\n    ToastManager.addToast({\n      title: error.message,\n      variant: \"error\",\n      duration: 2000,\n    });\n  });\n  const { requestPermission } = useAwayNotifications();\n  const isVideoScreenshare = amIScreenSharing && !!video;\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Flex direction=\"row\">\n        <ScreenShareButton\n          variant=\"standard\"\n          key=\"ShareScreen\"\n          active={!isVideoScreenshare}\n          css={css}\n          disabled={isAudioOnly}\n          onClick={async () => {\n            await toggleScreenShare();\n            await requestPermission();\n          }}\n        >\n          <Tooltip\n            title={`${!isVideoScreenshare ? \"Start\" : \"Stop\"} screen sharing`}\n          >\n            <Box>\n              <ShareScreenIcon />\n            </Box>\n          </Tooltip>\n        </ScreenShareButton>\n        <ShareScreenOptions />\n      </Flex>\n    </Fragment>\n  );\n};\n", "import React, { useEffect } from \"react\";\n// eslint-disable-next-line\nimport { HMSVirtualBackgroundTypes } from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport {\n  selectAppData,\n  selectIsEffectsEnabled,\n  selectIsLocalVideoEnabled,\n  selectIsVBEnabled,\n  useAVToggle,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { VirtualBackgroundIcon } from \"@100mslive/react-icons\";\nimport { Loading } from \"../../../Loading\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\nimport { VBHandler } from \"./VBHandler\";\n// @ts-ignore\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { APP_DATA, isSafari, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const VBToggle = () => {\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const isVBOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.VB);\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  const isVBEnabled = useHMSStore(selectIsVBEnabled);\n  const isEffectsEnabled = useHMSStore(selectIsEffectsEnabled);\n  const loadingEffects = useHMSStore(selectAppData(APP_DATA.loadingEffects));\n  const hmsActions = useHMSActions();\n  const { toggleVideo } = useAVToggle();\n\n  useEffect(() => {\n    if (!toggleVideo) {\n      VBHandler?.reset();\n      hmsActions.setAppData(\n        APP_DATA.background,\n        HMSVirtualBackgroundTypes.NONE\n      );\n    }\n  }, [hmsActions, toggleVideo]);\n\n  if (!isVideoOn || (!isEffectsEnabled && isSafari) || !isVBEnabled) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      side=\"top\"\n      disabled={isVBOpen}\n      title=\"Configure Virtual Background\"\n    >\n      <IconButton\n        active={!isVBOpen}\n        onClick={toggleVB}\n        data-testid=\"virtual_bg_btn\"\n      >\n        {loadingEffects ? <Loading size={18} /> : <VirtualBackgroundIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChatIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex, Text, Tooltip } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ChatToggle = ({ onClick }: { onClick?: () => void }) => {\n  const countUnreadMessages = useHMSStore(selectUnreadHMSMessagesCount);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n\n  return (\n    <Box\n      css={{\n        position: \"relative\",\n      }}\n    >\n      <Tooltip key=\"chat\" title={`${isChatOpen ? \"Close\" : \"Open\"} chat`}>\n        <IconButton\n          onClick={() => (onClick ? onClick() : toggleChat())}\n          css={{ bg: isChatOpen ? \"$surface_brighter\" : \"\" }}\n          data-testid=\"chat_btn\"\n        >\n          <ChatIcon />\n        </IconButton>\n      </Tooltip>\n      {countUnreadMessages > 0 && (\n        <Flex\n          css={{\n            height: \"$8\",\n            p: \"$4 4.5px\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            position: \"absolute\",\n            top: \"-$4\",\n            right: \"-$4\",\n            borderRadius: \"$space$14\",\n            background: \"$primary_default\",\n          }}\n        >\n          <Text variant=\"overline\">\n            {countUnreadMessages > 99 ? \"99+\" : countUnreadMessages}\n          </Text>\n        </Flex>\n      )}\n    </Box>\n  );\n};\n", "const connectionTooltip = {\n  0: \"Reconnecting\",\n  1: \"Very Bad Connection\",\n  2: \"Bad Connection\",\n  3: \"Moderate Connection\",\n  4: \"Good Connection\",\n  5: \"Excellent Connection\",\n};\nconnectionTooltip[-1] = \"Network Unknown\";\n\n/**\n * @param connectionScore -> 1-5 connection score for network quality\n */\nexport const getTooltipText = (connectionScore) => {\n  return connectionTooltip[connectionScore];\n};\n\n/**\n * position is needed here as we don't want all the dots/arcs to be colored,\n * the non colored ones will be passed in the default color. If user is\n * disconnected(score=0), no dot/arc will be colored.\n * @param position -> 1 to 5\n * @param connectionScore -> 0 to 5, 0 means disconnected\n * @param defaultColor -> color for components not taking the connection color\n */\nexport const getColor = (position, connectionScore, defaultColor, theme) => {\n  const shouldBeColored = position <= connectionScore;\n  if (!shouldBeColored) {\n    return defaultColor;\n  }\n  if (connectionScore >= 4) {\n    return theme.colors.alert_success;\n  } else if (connectionScore >= 1) {\n    return theme.colors.alert_warning;\n  }\n  return defaultColor;\n};\n", "import React from \"react\";\nimport {\n  HMSPeerType,\n  selectConnectionQualityByPeerID,\n  selectPeerTypeByID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PoorConnectivityIcon } from \"@100mslive/react-icons\";\nimport { styled, Tooltip, useTheme } from \"../../..\";\n// @ts-ignore\nimport { getColor, getTooltipText } from \"./connectionQualityUtils\";\n\nconst Wrapper = styled(\"span\", {\n  width: \"28px\",\n  height: \"28px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"$round\",\n  variants: {\n    isTile: {\n      true: {\n        width: \"unset\",\n        height: \"unset\",\n      },\n    },\n  },\n});\n\nexport const ConnectionIndicator = ({\n  peerId,\n  isTile = false,\n  hideBg = false,\n}: {\n  peerId: string;\n  isTile?: boolean;\n  hideBg?: boolean;\n}) => {\n  const downlinkQuality = useHMSStore(\n    selectConnectionQualityByPeerID(peerId)\n  )?.downlinkQuality;\n  const peerType = useHMSStore(selectPeerTypeByID(peerId));\n  const { theme } = useTheme();\n  const defaultColor = theme.colors.on_surface_low;\n  if (\n    downlinkQuality === -1 ||\n    downlinkQuality === undefined ||\n    peerType === HMSPeerType.SIP\n  ) {\n    return null;\n  }\n  if (downlinkQuality === 0) {\n    return (\n      <Tooltip side=\"left\" title={getTooltipText(downlinkQuality)}>\n        <Wrapper\n          isTile={isTile}\n          css={{ color: \"#ED4C5A\" }}\n          data-testid=\"tile_network\"\n        >\n          <PoorConnectivityIcon />\n        </Wrapper>\n      </Tooltip>\n    );\n  }\n  const size = isTile ? 12 : 16;\n  return (\n    <Tooltip side=\"left\" title={getTooltipText(downlinkQuality)}>\n      <Wrapper\n        isTile={isTile}\n        data-testid=\"tile_network\"\n        css={{ backgroundColor: hideBg ? \"\" : \"$surface_bright\" }}\n      >\n        <svg\n          width={size}\n          height={size}\n          viewBox=\"0 0 14 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlSpace=\"preserve\"\n          style={{\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            strokeLinejoin: \"round\",\n            strokeMiterlimit: 2,\n          }}\n        >\n          <path\n            d=\"M6.875 0c2.549.035 4.679.902 6.445 2.648.366.362.45.796.216 1.096-.239.306-.714.34-1.142.072a2.28 2.28 0 0 1-.341-.271C9.24.862 4.924.775 1.992 3.346c-.284.249-.594.419-.983.393-.272-.019-.49-.135-.613-.388-.125-.261-.05-.498.114-.713.073-.092.156-.177.245-.254C2.516.804 4.591.039 6.875 0Z\"\n            fill={getColor(4, downlinkQuality, defaultColor, theme)}\n            transform=\"translate(-.333)\"\n          />\n          <path\n            d=\"M7.056 2.964c1.756.035 3.208.7 4.499 1.763.162.134.277.315.354.512.098.251.114.503-.075.72-.193.222-.452.259-.725.198-.293-.066-.518-.247-.738-.443a4.859 4.859 0 0 0-6.198-.26c-.166.127-.318.271-.475.409-.242.211-.513.343-.843.317-.43-.034-.679-.397-.561-.81.062-.211.181-.4.345-.546 1.265-1.162 2.733-1.836 4.417-1.86Z\"\n            fill={getColor(3, downlinkQuality, defaultColor, theme)}\n            transform=\"translate(-.333)\"\n          />\n          <path\n            d=\"M7.384,6.052C8.293,6.068 9.157,6.449 9.783,7.108C10.005,7.339 10.157,7.6 10.07,7.942C9.959,8.377 9.435,8.581 9.071,8.243C7.935,7.191 6.356,7.183 5.152,8.183C4.816,8.462 4.6,8.485 4.332,8.27C4.063,8.055 3.998,7.691 4.177,7.358C4.273,7.179 4.414,7.038 4.57,6.911C5.26,6.349 6.149,6.05 7.384,6.052L7.384,6.052Z\"\n            fill={getColor(2, downlinkQuality, defaultColor, theme)}\n          />\n          <path\n            d=\"M8.214,9.941C8.214,10.234 8.097,10.515 7.888,10.721C7.68,10.928 7.398,11.042 7.104,11.039C6.471,11.036 5.982,10.541 5.993,9.912C6.004,9.259 6.499,8.766 7.133,8.779C7.744,8.791 8.22,9.301 8.214,9.941Z\"\n            fill={getColor(1, downlinkQuality, defaultColor, theme)}\n          />\n        </svg>\n      </Wrapper>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport {\n  HMSPeerID,\n  selectLocalPeerID,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PeopleRemoveIcon } from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Text } from \"../../Text\";\n\nexport const RemoveParticipant = ({ peerId }: { peerId: HMSPeerID }) => {\n  const canRemoveOthers = useHMSStore(selectPermissions)?.removeOthers;\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const actions = useHMSActions();\n\n  if (peerId === localPeerId || !canRemoveOthers) {\n    return null;\n  }\n  return (\n    <Dropdown.Item\n      css={{ color: \"$alert_error_default\", bg: \"$surface_default\" }}\n      onClick={async () => {\n        try {\n          await actions.removePeer(peerId, \"\");\n        } catch (error) {\n          const ex = error as Error;\n          ToastManager.addToast({ title: ex.message, variant: \"error\" });\n        }\n      }}\n    >\n      <PeopleRemoveIcon />\n      <Text\n        variant=\"sm\"\n        css={{ ml: \"$4\", color: \"inherit\", fontWeight: \"$semiBold\" }}\n      >\n        Remove Participant\n      </Text>\n    </Dropdown.Item>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSPeer,\n  selectPermissions,\n  selectRoleByRoleName,\n  selectTracksMap,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  MicOffIcon,\n  MicOnIcon,\n  PersonRectangleIcon,\n  RemoveUserIcon,\n  VerticalMenuIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { getMetadata } from \"../../common/utils\";\n\nconst dropdownItemCSS = {\n  backgroundColor: \"$surface_default\",\n  gap: \"$4\",\n  p: \"$8\",\n};\nconst optionTextCSS = {\n  fontWeight: \"$semiBold\",\n  color: \"$on_surface_high\",\n  textTransform: \"none\",\n  whiteSpace: \"nowrap\",\n};\n\nconst DropdownWrapper = ({ children }: { children: React.ReactNode }) => {\n  const [openOptions, setOpenOptions] = useState(false);\n  if (React.Children.toArray(children).length === 0) {\n    return null;\n  }\n  return (\n    <Dropdown.Root open={openOptions} onOpenChange={setOpenOptions}>\n      <Dropdown.Trigger\n        data-testid=\"role_group_options\"\n        onClick={(e) => e.stopPropagation()}\n        className=\"role_actions\"\n        asChild\n        css={{\n          p: \"$1\",\n          r: \"$0\",\n          c: \"$on_surface_high\",\n          visibility: openOptions ? \"visible\" : \"hidden\",\n          \"&:hover\": {\n            c: \"$on_surface_medium\",\n          },\n          \"@md\": {\n            visibility: \"visible\",\n          },\n        }}\n      >\n        <Flex>\n          <VerticalMenuIcon />\n        </Flex>\n      </Dropdown.Trigger>\n      <Dropdown.Content\n        onClick={(e) => e.stopPropagation()}\n        css={{ w: \"max-content\", bg: \"$surface_default\", py: 0 }}\n        align=\"end\"\n      >\n        {children}\n      </Dropdown.Content>\n    </Dropdown.Root>\n  );\n};\n\nexport const RoleOptions = ({\n  roleName,\n  peerList,\n}: {\n  roleName: string;\n  peerList: HMSPeer[];\n}) => {\n  const permissions = useHMSStore(selectPermissions);\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const { on_stage_role, off_stage_roles = [] } =\n    (elements as DefaultConferencingScreen_Elements)?.on_stage_exp || {};\n  const canRemoveRoleFromStage =\n    permissions?.changeRole && roleName === on_stage_role;\n  const role = useHMSStore(selectRoleByRoleName(roleName));\n  const tracks = useHMSStore(selectTracksMap);\n  if (!role) {\n    return null;\n  }\n  const canPublishAudio = role.publishParams.allowed.includes(\"audio\");\n  const canPublishVideo = role.publishParams.allowed.includes(\"video\");\n\n  let isVideoOnForSomePeers = false;\n  let isAudioOnForSomePeers = false;\n\n  peerList.forEach((peer) => {\n    if (peer.isLocal) {\n      return;\n    }\n    const isAudioOn = !!peer.audioTrack && tracks[peer.audioTrack]?.enabled;\n    const isVideoOn = !!peer.videoTrack && tracks[peer.videoTrack]?.enabled;\n    isAudioOnForSomePeers = isAudioOnForSomePeers || isAudioOn;\n    isVideoOnForSomePeers = isVideoOnForSomePeers || isVideoOn;\n  });\n\n  const setTrackEnabled = async (type: \"audio\" | \"video\", enabled = false) => {\n    try {\n      await hmsActions.setRemoteTracksEnabled({\n        roles: [roleName],\n        source: \"regular\",\n        type,\n        enabled,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // on stage and off stage roles\n  const canRemoveRoleFromRoom =\n    permissions?.removeOthers &&\n    (on_stage_role === roleName || off_stage_roles?.includes(roleName));\n\n  if (\n    peerList.length === 0 ||\n    // if only local peer is present no need to show any options\n    (peerList.length === 1 && peerList[0].isLocal) ||\n    !role\n  ) {\n    return null;\n  }\n\n  const removeAllFromStage = () => {\n    peerList.forEach((peer) => {\n      const prevRole = getMetadata(peer.metadata).prevRole;\n      if (prevRole) {\n        hmsActions.changeRoleOfPeer(peer.id, prevRole, true);\n      }\n    });\n  };\n\n  const removePeersFromRoom = async () => {\n    try {\n      peerList.forEach(async (peer) => {\n        await hmsActions.removePeer(peer.id, \"\");\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <DropdownWrapper>\n      {canRemoveRoleFromStage ? (\n        <Dropdown.Item\n          css={{ ...dropdownItemCSS, borderBottom: \"1px solid $border_bright\" }}\n          onClick={removeAllFromStage}\n        >\n          <PersonRectangleIcon />\n          <Text variant=\"sm\" css={optionTextCSS}>\n            Remove all from Stage\n          </Text>\n        </Dropdown.Item>\n      ) : null}\n\n      {match({\n        canPublishAudio,\n        isAudioOnForSomePeers,\n        canMute: permissions?.mute,\n        canUnmute: permissions?.unmute,\n      })\n        .with(\n          { canPublishAudio: true, isAudioOnForSomePeers: true, canMute: true },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"audio\", false)}\n              >\n                <MicOffIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Mute Audio for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .with(\n          {\n            canPublishAudio: true,\n            isAudioOnForSomePeers: false,\n            canUnmute: true,\n          },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"audio\", true)}\n              >\n                <MicOnIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Request to Unmute Audio for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .otherwise(() => null)}\n      {match({\n        canPublishVideo,\n        isVideoOnForSomePeers,\n        canMute: permissions?.mute,\n        canUnmute: permissions?.unmute,\n      })\n        .with(\n          { canPublishVideo: true, isVideoOnForSomePeers: true, canMute: true },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"video\", false)}\n              >\n                <VideoOffIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Mute Video for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .with(\n          {\n            canPublishVideo: true,\n            isVideoOnForSomePeers: false,\n            canUnmute: true,\n          },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"video\", true)}\n              >\n                <VideoOnIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Request to Unmute Video for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .otherwise(() => null)}\n\n      {canRemoveRoleFromRoom ? (\n        <Dropdown.Item\n          css={{\n            ...dropdownItemCSS,\n            borderTop: \"1px solid $border_bright\",\n            color: \"$alert_error_default\",\n          }}\n          onClick={removePeersFromRoom}\n        >\n          <RemoveUserIcon />\n          <Text variant=\"sm\" css={{ ...optionTextCSS, color: \"inherit\" }}>\n            Remove all from Room\n          </Text>\n        </Dropdown.Item>\n      ) : null}\n    </DropdownWrapper>\n  );\n};\n", "import { match, P } from \"ts-pattern\";\nimport {\n  HMSPeer,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const useGroupOnStageActions = ({ peers }: { peers: HMSPeer[] }) => {\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const {\n    bring_to_stage_label,\n    remove_from_stage_label,\n    on_stage_role,\n    off_stage_roles = [],\n    skip_preview_for_role_change = false,\n  } = elements.on_stage_exp || {};\n  const canChangeRole = useHMSStore(selectPermissions)?.changeRole;\n\n  const offStageRolePeers = peers.filter((peer) =>\n    match({ on_stage_role, bring_to_stage_label, roleName: peer.roleName })\n      .with(\n        {\n          on_stage_role: P.when((role) => !!role),\n          bring_to_stage_label: P.when((label) => !!label),\n          roleName: P.when((role) => !!role && off_stage_roles.includes(role)),\n        },\n        () => true\n      )\n      .otherwise(() => false)\n  );\n\n  const lowerAllHands = async () => {\n    return Promise.all(\n      peers.map((peer) => hmsActions.lowerRemotePeerHand(peer.id))\n    );\n  };\n\n  const bringAllToStage = () => {\n    if (!canChangeRole || !on_stage_role) {\n      return;\n    }\n    return Promise.all(\n      offStageRolePeers.map((peer) => {\n        return hmsActions\n          .changeRoleOfPeer(\n            peer.id,\n            on_stage_role,\n            skip_preview_for_role_change\n          )\n          .then(() => {\n            return skip_preview_for_role_change\n              ? hmsActions.lowerRemotePeerHand(peer.id)\n              : null;\n          });\n      })\n    );\n  };\n\n  return {\n    lowerAllHands,\n    bringAllToStage,\n    canBringToStage: canChangeRole && offStageRolePeers.length > 0,\n    bring_to_stage_label,\n    remove_from_stage_label,\n  };\n};\n", "import React, { useEffect } from \"react\";\nimport { useMeasure } from \"react-use\";\nimport { FixedSizeList } from \"react-window\";\nimport {\n  HMSPeer,\n  selectIsLargeRoom,\n  useHMSStore,\n  usePaginatedParticipants,\n} from \"@100mslive/react-sdk\";\nimport { AddIcon, ChevronRightIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Accordion } from \"../../../Accordion\";\nimport { Button } from \"../../../Button\";\nimport { HorizontalDivider } from \"../../../Divider\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { Participant } from \"./ParticipantList\";\nimport { RoleOptions } from \"./RoleOptions\";\nimport { useGroupOnStageActions } from \"../hooks/useGroupOnStageActions\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../../common/utils\";\n\nexport const ROW_HEIGHT = 50;\nconst ITER_TIMER = 5000;\n\nexport interface ItemData {\n  peerList: HMSPeer[];\n  isHandRaisedAccordion?: boolean;\n  isConnected: boolean;\n}\n\nexport function itemKey(index: number, data: ItemData) {\n  return data.peerList[index]?.id;\n}\n\nexport const VirtualizedParticipantItem = React.memo(\n  ({\n    index,\n    data,\n    style,\n  }: {\n    index: number;\n    data: ItemData;\n    style: React.CSSProperties;\n  }) => {\n    return (\n      <Participant\n        key={data.peerList[index].id}\n        peer={data.peerList[index]}\n        isHandRaisedAccordion={data.isHandRaisedAccordion}\n        isConnected={data.isConnected}\n        style={style}\n      />\n    );\n  }\n);\n\nexport const RoleAccordion = ({\n  peerList = [],\n  roleName,\n  isConnected,\n  filter,\n  isHandRaisedAccordion = false,\n  offStageRoles,\n  onActive,\n}: ItemData & {\n  roleName: string;\n  isHandRaisedAccordion?: boolean;\n  filter?: { search?: string };\n  offStageRoles: string[];\n  onActive?: (role: string) => void;\n}) => {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n  const { peers, total, loadPeers } = usePaginatedParticipants({\n    role: roleName,\n    limit: 10,\n  });\n  const isOffStageRole = roleName && offStageRoles.includes(roleName);\n  let peersInAccordion = peerList;\n  // for large rooms, peer list would be empty\n  if (isOffStageRole && isLargeRoom) {\n    peersInAccordion = peers;\n    if (filter?.search) {\n      peersInAccordion = peersInAccordion.filter((peer) =>\n        peer.name.toLowerCase().includes(filter.search || \"\")\n      );\n    }\n  }\n  const {\n    bringAllToStage,\n    bring_to_stage_label,\n    canBringToStage,\n    lowerAllHands,\n  } = useGroupOnStageActions({\n    peers: peersInAccordion,\n  });\n\n  useEffect(() => {\n    if (!isOffStageRole || !isLargeRoom) {\n      return;\n    }\n    loadPeers();\n    const interval = setInterval(() => {\n      loadPeers();\n    }, ITER_TIMER);\n    return () => clearInterval(interval);\n  }, [isOffStageRole, isLargeRoom]); //eslint-disable-line\n\n  if (\n    peersInAccordion.length === 0 ||\n    (isHandRaisedAccordion && filter?.search)\n  ) {\n    return null;\n  }\n\n  const height = ROW_HEIGHT * peersInAccordion.length;\n  const hasNext = total > peersInAccordion.length && !filter?.search;\n\n  return (\n    <Accordion.Item\n      value={roleName}\n      css={{ \"&:hover .role_actions\": { visibility: \"visible\" }, mb: \"$8\" }}\n      ref={ref}\n    >\n      <Accordion.Header\n        chevronID={`role_accordion_btn_${roleName}`}\n        iconStyles={{ c: \"$on_surface_high\" }}\n        css={{\n          textTransform: \"capitalize\",\n          p: \"$6 $8\",\n          fontSize: \"$sm\",\n          fontWeight: \"$semiBold\",\n          c: \"$on_surface_medium\",\n          borderRadius: \"$1\",\n          border: \"1px solid $border_default\",\n          '&[data-state=\"open\"]': {\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0,\n          },\n        }}\n      >\n        <Flex justify=\"between\" align=\"center\" css={{ flexGrow: 1, pr: \"$6\" }}>\n          <Text\n            variant=\"sm\"\n            css={{\n              fontWeight: \"$semiBold\",\n              textTransform: \"capitalize\",\n              color: \"$on_surface_medium\",\n            }}\n          >\n            {roleName}{\" \"}\n            {`(${getFormattedCount(\n              isLargeRoom && isOffStageRole ? total : peerList.length\n            )})`}\n          </Text>\n          <RoleOptions roleName={roleName} peerList={peersInAccordion} />\n        </Flex>\n      </Accordion.Header>\n      <Accordion.Content\n        contentStyles={{\n          border: \"1px solid $border_default\",\n          borderTop: \"none\",\n        }}\n      >\n        <FixedSizeList\n          itemSize={ROW_HEIGHT}\n          itemData={{\n            peerList: isHandRaisedAccordion\n              ? peersInAccordion.sort((a, b) => {\n                  try {\n                    const aHandRaisedAt = JSON.parse(\n                      a.metadata || \"{}\"\n                    ).handRaisedAt;\n                    const bHandRaisedAt = JSON.parse(\n                      b.metadata || \"{}\"\n                    ).handRaisedAt;\n                    return aHandRaisedAt - bHandRaisedAt;\n                  } catch (err) {\n                    return 0;\n                  }\n                })\n              : peersInAccordion,\n            isConnected,\n            isHandRaisedAccordion,\n          }}\n          itemKey={itemKey}\n          itemCount={peersInAccordion.length}\n          width={width}\n          height={height}\n        >\n          {VirtualizedParticipantItem}\n        </FixedSizeList>\n        {offStageRoles?.includes(roleName) && hasNext ? (\n          <Flex\n            align=\"center\"\n            justify=\"end\"\n            css={{\n              gap: \"$1\",\n              cursor: \"pointer\",\n              color: \"$on_surface_high\",\n              p: \"$6\",\n              borderTop: \"1px solid $border_default\",\n            }}\n            onClick={() => onActive?.(roleName)}\n          >\n            <Text variant=\"sm\" css={{ color: \"inherit\" }}>\n              View All\n            </Text>\n            <ChevronRightIcon />\n          </Flex>\n        ) : null}\n        {isHandRaisedAccordion && canBringToStage && (\n          <>\n            <HorizontalDivider />\n            <Flex css={{ w: \"100%\", p: \"$6\", gap: \"$4\" }} justify=\"center\">\n              <Button\n                variant=\"standard\"\n                onClick={lowerAllHands}\n                icon\n                css={{ pl: \"$2\" }}\n              >\n                <CrossIcon /> Lower all hands\n              </Button>\n\n              <Button onClick={bringAllToStage} icon css={{ pl: \"$2\" }}>\n                <AddIcon /> {bring_to_stage_label}\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Accordion.Content>\n    </Accordion.Item>\n  );\n};\n", "import { useEffect } from \"react\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { selectAppData, useHMSStore } from \"@100mslive/react-sdk\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSidepaneReset } from \"./useSidepane\";\nimport { APP_DATA, SidePaneOption } from \"../../common/constants\";\n\n// Closes the sidepane if an element is removed from the layout via the customiser\nexport const useSidepaneResetOnLayoutUpdate = (\n  layoutKey: keyof DefaultConferencingScreen_Elements,\n  sidepaneOption: SidePaneOption\n) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const resetSidePane = useSidepaneReset();\n  useEffect(() => {\n    if (sidepane === sidepaneOption && !elements?.[layoutKey]) {\n      resetSidePane();\n    }\n  }, [\n    elements,\n    elements?.[layoutKey],\n    resetSidePane,\n    sidepane,\n    layoutKey,\n    sidepaneOption,\n  ]);\n};\n", "import { useState } from \"react\";\nimport {\n  selectPeerMetadata,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const usePeerOnStageActions = ({\n  peerId,\n  role,\n}: {\n  peerId: string;\n  role: string;\n}) => {\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const {\n    bring_to_stage_label,\n    remove_from_stage_label,\n    on_stage_role,\n    off_stage_roles = [],\n    skip_preview_for_role_change = false,\n  } = elements.on_stage_exp || {};\n  const isInStage = role === on_stage_role;\n  const canChangeRole = useHMSStore(selectPermissions)?.changeRole;\n  const shouldShowStageRoleChange =\n    canChangeRole &&\n    ((isInStage && remove_from_stage_label) ||\n      (off_stage_roles?.includes(role) && bring_to_stage_label));\n  const prevRole = useHMSStore(selectPeerMetadata(peerId))?.prevRole;\n  const [open, setOpen] = useState(false);\n\n  const lowerPeerHand = async () => {\n    await hmsActions.lowerRemotePeerHand(peerId);\n  };\n\n  const handleStageAction = async () => {\n    if (isInStage) {\n      prevRole && hmsActions.changeRoleOfPeer(peerId, prevRole, true);\n    } else if (on_stage_role) {\n      await hmsActions.changeRoleOfPeer(\n        peerId,\n        on_stage_role,\n        skip_preview_for_role_change\n      );\n      if (skip_preview_for_role_change) {\n        await lowerPeerHand();\n      }\n    }\n    setOpen(false);\n  };\n\n  return {\n    open,\n    setOpen,\n    lowerPeerHand,\n    handleStageAction,\n    shouldShowStageRoleChange,\n    isInStage,\n    bring_to_stage_label,\n    remove_from_stage_label,\n  };\n};\n", "import React, { Fragment, useCallback, useState } from \"react\";\nimport { useDebounce, useMedia } from \"react-use\";\nimport {\n  HMSPeer,\n  HMSPeerType,\n  HMSRoleName,\n  selectAvailableRoleNames,\n  selectHandRaisedPeers,\n  selectHasPeerHandRaised,\n  selectIsLargeRoom,\n  selectIsPeerAudioEnabled,\n  selectLocalPeerID,\n  selectPeerCount,\n  selectPermissions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  AddIcon,\n  CallIcon,\n  ChangeRoleIcon,\n  CrossIcon,\n  HandIcon,\n  MicOffIcon,\n  PeopleIcon,\n  PersonSettingsIcon,\n  SearchIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Accordion,\n  Box,\n  Button,\n  config as cssConfig,\n  Dropdown,\n  Flex,\n  Input,\n  Text,\n  textEllipsis,\n} from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\nimport { ConnectionIndicator } from \"../Connection/ConnectionIndicator\";\nimport { RemoveParticipant } from \"../RemoveParticipant\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport { RoleAccordion } from \"./RoleAccordion\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { useSidepaneResetOnLayoutUpdate } from \"../AppData/useSidepaneResetOnLayoutUpdate\";\nimport { usePeerOnStageActions } from \"../hooks/usePeerOnStageActions\";\nimport { useParticipants } from \"../../common/hooks\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../../common/utils\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ParticipantList = ({\n  offStageRoles = [],\n  onActive,\n}: {\n  offStageRoles: HMSRoleName[];\n  onActive: (role: string) => void;\n}) => {\n  const [filter, setFilter] = useState<{ search?: string } | undefined>();\n  const { participants, isConnected, peerCount } = useParticipants(filter);\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n  const peersOrderedByRoles: Record<string, HMSPeer[]> = {};\n\n  const handRaisedPeers = useHMSStore(selectHandRaisedPeers);\n\n  participants.forEach((participant) => {\n    if (participant.roleName) {\n      if (peersOrderedByRoles[participant.roleName] === undefined) {\n        peersOrderedByRoles[participant.roleName] = [];\n      }\n      peersOrderedByRoles[participant.roleName].push(participant);\n    }\n  });\n\n  // prefill off_stage roles of large rooms to load more peers\n  if (isLargeRoom) {\n    offStageRoles.forEach((role) => {\n      if (!peersOrderedByRoles[role]) {\n        peersOrderedByRoles[role] = [];\n      }\n    });\n  }\n\n  useSidepaneResetOnLayoutUpdate(\n    \"participant_list\",\n    SIDE_PANE_OPTIONS.PARTICIPANTS\n  );\n\n  const onSearch = useCallback((value: string) => {\n    setFilter((filterValue) => {\n      if (!filterValue) {\n        filterValue = {};\n      }\n      filterValue.search = value.toLowerCase();\n      return { ...filterValue };\n    });\n  }, []);\n\n  if (peerCount === 0) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Flex\n        direction=\"column\"\n        css={{\n          size: \"100%\",\n          gap: \"$4\",\n        }}\n      >\n        {!filter?.search && participants.length === 0 ? null : (\n          <ParticipantSearch onSearch={onSearch} inSidePane />\n        )}\n        <VirtualizedParticipants\n          peersOrderedByRoles={peersOrderedByRoles}\n          handRaisedList={handRaisedPeers}\n          isConnected={!!isConnected}\n          filter={filter}\n          offStageRoles={offStageRoles}\n          isLargeRoom={isLargeRoom}\n          onActive={onActive}\n        >\n          {participants.length === 0 ? (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              className=\"emptyParticipants\"\n              css={{ w: \"100%\", p: \"$8 0\", display: \"none\" }}\n            >\n              <Text variant=\"sm\">\n                {!filter ? \"No participants\" : \"No matching participants\"}\n              </Text>\n            </Flex>\n          ) : null}\n        </VirtualizedParticipants>\n      </Flex>\n    </Fragment>\n  );\n};\n\nexport const ParticipantCount = () => {\n  const peerCount = useHMSStore(selectPeerCount);\n  const toggleSidepane = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n  const isPeerListOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.PARTICIPANTS);\n\n  if (peerCount === 0) {\n    return null;\n  }\n  return (\n    <IconButton\n      css={{\n        w: \"auto\",\n        p: \"$4\",\n        h: \"auto\",\n        bg: isPeerListOpen ? \"$surface_brighter\" : \"\",\n      }}\n      onClick={() => {\n        if (peerCount > 0) {\n          toggleSidepane();\n        }\n      }}\n      data-testid=\"participant_list\"\n    >\n      <PeopleIcon />\n      <Text variant=\"sm\" css={{ mx: \"$4\", c: \"inherit\" }}>\n        {getFormattedCount(peerCount)}\n      </Text>\n    </IconButton>\n  );\n};\n\nexport const Participant = ({\n  peer,\n  isConnected,\n  isHandRaisedAccordion,\n  style,\n}: {\n  peer: HMSPeer;\n  isConnected: boolean;\n  isHandRaisedAccordion?: boolean;\n  style: React.CSSProperties;\n}) => {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  return (\n    <Flex\n      key={peer.id}\n      css={{\n        w: \"100%\",\n        p: \"$4 $8\",\n        pr: \"$6\",\n        h: \"$16\",\n        \"&:hover .participant_item\": { display: \"flex\" },\n      }}\n      align=\"center\"\n      justify=\"between\"\n      data-testid={\"participant_\" + peer.name}\n      style={style}\n    >\n      <Text\n        variant=\"sm\"\n        css={{\n          ...textEllipsis(\"100%\"),\n          flex: \"1 1 0\",\n          mr: \"$8\",\n          fontWeight: \"$semiBold\",\n          color: \"$on_surface_high\",\n        }}\n      >\n        {peer.name} {localPeerId === peer.id ? \"(You)\" : \"\"}\n      </Text>\n      {isConnected && peer.roleName ? (\n        <ParticipantActions\n          peerId={peer.id}\n          peerType={peer.type}\n          role={peer.roleName}\n          isHandRaisedAccordion={isHandRaisedAccordion}\n        />\n      ) : null}\n    </Flex>\n  );\n};\n\nconst VirtualizedParticipants = ({\n  peersOrderedByRoles = {},\n  isConnected,\n  filter,\n  handRaisedList = [],\n  offStageRoles,\n  isLargeRoom,\n  onActive,\n  children,\n}: {\n  peersOrderedByRoles: Record<string, HMSPeer[]>;\n  isConnected: boolean;\n  filter: undefined | { search?: string };\n  handRaisedList: HMSPeer[];\n  offStageRoles: HMSRoleName[];\n  isLargeRoom: boolean;\n  onActive: (role: string) => void;\n  children: React.ReactNode;\n}) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        gap: \"$8\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        pr: \"$10\",\n        mr: \"-$10\",\n        flex: \"1 1 0\",\n        \"& > div:empty ~ .emptyParticipants\": {\n          display: \"flex\",\n        },\n      }}\n    >\n      <Accordion.Root type={isLargeRoom ? \"single\" : \"multiple\"} collapsible>\n        {handRaisedList.length > 0 ? (\n          <RoleAccordion\n            peerList={handRaisedList}\n            roleName=\"Hand Raised\"\n            filter={filter}\n            isConnected={isConnected}\n            isHandRaisedAccordion\n            offStageRoles={offStageRoles}\n          />\n        ) : null}\n        {Object.keys(peersOrderedByRoles).map((role) => (\n          <RoleAccordion\n            key={role}\n            peerList={peersOrderedByRoles[role]}\n            roleName={role}\n            isConnected={isConnected}\n            filter={filter}\n            offStageRoles={offStageRoles}\n            onActive={onActive}\n          />\n        ))}\n      </Accordion.Root>\n      {children}\n    </Flex>\n  );\n};\n\n/**\n * shows settings to change for a participant like changing their role\n */\nconst ParticipantActions = React.memo(\n  ({\n    peerId,\n    peerType,\n    role,\n    isHandRaisedAccordion,\n  }: {\n    peerId: string;\n    role: string;\n    isHandRaisedAccordion?: boolean;\n    peerType: HMSPeerType;\n  }) => {\n    const isHandRaised = useHMSStore(selectHasPeerHandRaised(peerId));\n    const canChangeRole = useHMSStore(selectPermissions)?.changeRole;\n    const canRemoveOthers = useHMSStore(selectPermissions)?.removeOthers;\n    const { elements } = useRoomLayoutConferencingScreen();\n    const { on_stage_exp } = elements || {};\n    const shouldShowMoreActions =\n      (on_stage_exp && canChangeRole) || canRemoveOthers;\n    const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n\n    return (\n      <Flex\n        align=\"center\"\n        css={{\n          flexShrink: 0,\n          gap: \"$8\",\n        }}\n      >\n        {isHandRaisedAccordion ? (\n          <HandRaisedAccordionParticipantActions peerId={peerId} role={role} />\n        ) : (\n          <>\n            <ConnectionIndicator peerId={peerId} />\n            {peerType === HMSPeerType.SIP && (\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  p: \"$1\",\n                  c: \"$on_surface_high\",\n                  bg: \"$surface_bright\",\n                  borderRadius: \"$round\",\n                }}\n              >\n                <CallIcon width={19} height={19} />\n              </Flex>\n            )}\n            {isHandRaised && (\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  p: \"$1\",\n                  c: \"$on_surface_high\",\n                  bg: \"$surface_bright\",\n                  borderRadius: \"$round\",\n                }}\n              >\n                <HandIcon height={19} width={19} />\n              </Flex>\n            )}\n            {isAudioMuted ? (\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  p: \"$2\",\n                  c: \"$on_surface_high\",\n                  bg: \"$surface_bright\",\n                  borderRadius: \"$round\",\n                }}\n              >\n                <MicOffIcon height={19} width={19} />\n              </Flex>\n            ) : null}\n\n            {shouldShowMoreActions ? (\n              <ParticipantMoreActions peerId={peerId} role={role} />\n            ) : null}\n          </>\n        )}\n      </Flex>\n    );\n  }\n);\n\nconst quickActionStyle = { p: \"$1\", borderRadius: \"$round\" };\nconst HandRaisedAccordionParticipantActions = ({\n  peerId,\n  role,\n}: {\n  peerId: string;\n  role: string;\n}) => {\n  const {\n    handleStageAction,\n    lowerPeerHand,\n    shouldShowStageRoleChange,\n    isInStage,\n  } = usePeerOnStageActions({\n    peerId,\n    role,\n  });\n  if (!shouldShowStageRoleChange) {\n    return null;\n  }\n  return (\n    <>\n      <Button variant=\"standard\" css={quickActionStyle} onClick={lowerPeerHand}>\n        <CrossIcon height={18} width={18} />\n      </Button>\n      {!isInStage && (\n        <Button\n          variant=\"primary\"\n          onClick={handleStageAction}\n          css={quickActionStyle}\n        >\n          <AddIcon height={18} width={18} />\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst ParticipantMoreActions = ({\n  peerId,\n  role,\n}: {\n  peerId: string;\n  role: string;\n}) => {\n  const {\n    open,\n    setOpen,\n    bring_to_stage_label,\n    remove_from_stage_label,\n    handleStageAction,\n    isInStage,\n    shouldShowStageRoleChange,\n  } = usePeerOnStageActions({ peerId, role });\n  const canChangeRole = !!useHMSStore(selectPermissions)?.changeRole;\n  const [openRoleChangeModal, setOpenRoleChangeModal] = useState(false);\n  const roles = useHMSStore(selectAvailableRoleNames);\n\n  return (\n    <>\n      <Dropdown.Root\n        open={open}\n        onOpenChange={(value) => setOpen(value)}\n        modal={false}\n      >\n        <Dropdown.Trigger\n          asChild\n          data-testid=\"participant_more_actions\"\n          className=\"participant_item\"\n          css={{\n            p: \"$1\",\n            r: \"$0\",\n            c: \"$on_surface_high\",\n            display: open ? \"flex\" : \"none\",\n            \"&:hover\": {\n              bg: \"$surface_bright\",\n            },\n            \"@md\": {\n              display: \"flex\",\n            },\n          }}\n          tabIndex={0}\n        >\n          <Box css={{ my: \"auto\" }}>\n            <VerticalMenuIcon />\n          </Box>\n        </Dropdown.Trigger>\n        <Dropdown.Portal>\n          <Dropdown.Content\n            align=\"end\"\n            sideOffset={8}\n            css={{ w: \"$64\", bg: \"$surface_default\" }}\n          >\n            {shouldShowStageRoleChange ? (\n              <Dropdown.Item\n                css={{ bg: \"$surface_default\" }}\n                onClick={() => handleStageAction()}\n              >\n                <ChangeRoleIcon />\n                <Text\n                  variant=\"sm\"\n                  css={{\n                    ml: \"$4\",\n                    fontWeight: \"$semiBold\",\n                    c: \"$on_surface_high\",\n                  }}\n                >\n                  {isInStage ? remove_from_stage_label : bring_to_stage_label}\n                </Text>\n              </Dropdown.Item>\n            ) : null}\n\n            {canChangeRole && roles.length > 1 ? (\n              <Dropdown.Item\n                css={{ bg: \"$surface_default\" }}\n                onClick={() => setOpenRoleChangeModal(true)}\n              >\n                <PersonSettingsIcon />\n                <Text\n                  variant=\"sm\"\n                  css={{\n                    ml: \"$4\",\n                    fontWeight: \"$semiBold\",\n                    c: \"$on_surface_high\",\n                  }}\n                >\n                  Switch Role\n                </Text>\n              </Dropdown.Item>\n            ) : null}\n            <RemoveParticipant peerId={peerId} />\n          </Dropdown.Content>\n        </Dropdown.Portal>\n      </Dropdown.Root>\n      {openRoleChangeModal && (\n        <RoleChangeModal\n          peerId={peerId}\n          onOpenChange={setOpenRoleChangeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport const ParticipantSearch = ({\n  onSearch,\n  placeholder = \"Search for participants\",\n  inSidePane = false,\n}: {\n  inSidePane?: boolean;\n  placeholder?: string;\n  onSearch: (val: string) => void;\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  const isMobile = useMedia(cssConfig.media.md);\n\n  useDebounce(\n    () => {\n      onSearch(value);\n    },\n    300,\n    [value, onSearch]\n  );\n\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        p: isMobile ? \"0\" : \"$2 0\",\n        mb: \"$2\",\n        position: \"relative\",\n        color: \"$on_surface_medium\",\n        mt: inSidePane ? \"$4\" : \"\",\n      }}\n      onClick={(e) => e.stopPropagation()}\n    >\n      <SearchIcon style={{ position: \"absolute\", left: \"0.5rem\" }} />\n      <Input\n        type=\"text\"\n        placeholder={placeholder}\n        css={{\n          w: \"100%\",\n          p: \"$6\",\n          pl: \"$14\",\n          bg: inSidePane ? \"$surface_default\" : \"$surface_dim\",\n        }}\n        value={value}\n        onKeyDown={(event) => {\n          event.stopPropagation();\n        }}\n        onChange={(event) => {\n          setValue(event.currentTarget.value);\n        }}\n        autoComplete=\"off\"\n        aria-autocomplete=\"none\"\n      />\n    </Flex>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { QuizActiveIcon, QuizIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  usePollViewToggle,\n} from \"../AppData/useSidepane\";\nimport { useUnreadPollQuizPresent } from \"../hooks/useUnreadPollQuizPresent\";\n// @ts-ignore: No implicit Any\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const PollsToggle = () => {\n  const isPollsOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.POLLS);\n  const togglePollView = usePollViewToggle();\n  const { unreadPollQuiz, setUnreadPollQuiz } = useUnreadPollQuizPresent();\n\n  useEffect(() => {\n    if (unreadPollQuiz && isPollsOpen) {\n      setUnreadPollQuiz(false);\n    }\n  }, [isPollsOpen, unreadPollQuiz, setUnreadPollQuiz]);\n\n  return (\n    <Tooltip\n      key=\"polls\"\n      title={`${isPollsOpen ? \"Close\" : \"Open\"} polls and quizzes`}\n    >\n      <IconButton\n        onClick={() => {\n          togglePollView();\n          setUnreadPollQuiz(false);\n        }}\n        css={{ bg: isPollsOpen ? \"$surface_brighter\" : \"\" }}\n        data-testid=\"polls_btn\"\n      >\n        {unreadPollQuiz ? <QuizActiveIcon /> : <QuizIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectPeerScreenSharing,\n  useHMSStore,\n  useWhiteboard,\n} from \"@100mslive/react-sdk\";\nimport { PencilDrawIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const WhiteboardToggle = () => {\n  const { toggle, open, isOwner } = useWhiteboard();\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const disabled = !!peerSharing || (open && !isOwner);\n\n  if (!toggle) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      key=\"whiteboard\"\n      title={\n        peerSharing\n          ? \"Cannot open whiteboard when viewing a shared screen\"\n          : `${open ? \"Close\" : \"Open\"} Whiteboard`\n      }\n    >\n      <IconButton\n        onClick={async () => {\n          if (disabled) {\n            return;\n          }\n          try {\n            await toggle();\n          } catch (error) {\n            ToastManager.addToast({\n              title: (error as Error).message,\n              variant: \"error\",\n            });\n          }\n        }}\n        active={!open}\n        disabled={disabled}\n        data-testid=\"whiteboard_btn\"\n      >\n        <PencilDrawIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "//@ts-nocheck\nimport React, { useEffect } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { ConferencingScreen } from \"@100mslive/types-prebuilt\";\nimport { Chat_ChatState } from \"@100mslive/types-prebuilt/elements/chat\";\nimport { selectLocalPeerRole, useHMSStore } from \"@100mslive/react-sdk\";\nimport { config as cssConfig, Footer as AppFooter } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { CaptionIcon } from \"../CaptionIcon\";\n// @ts-ignore: No implicit Any\nimport { EmojiReaction } from \"../EmojiReaction\";\nimport Int2EnButton from \"../Interpreting/Int2En\";\nimport Int2FrButton from \"../Interpreting/Int2Fr\";\nimport EnButton from \"../Languages/En\";\nimport FrButton from \"../Languages/Fr\";\n// @ts-ignore: No implicit Any\nimport { LeaveRoom } from \"../Leave/LeaveRoom\";\n// @ts-ignore: No implicit Any\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { RaiseHand } from \"../RaiseHand\";\n// @ts-ignore: No implicit Any\nimport { ScreenshareToggle } from \"../ScreenShareToggle\";\n// @ts-ignore: No implicit Any\nimport { VBToggle } from \"../VirtualBackground/VBToggle\";\n// @ts-ignore: No implicit Any\nimport { ChatToggle } from \"./ChatToggle\";\nimport { ParticipantCount } from \"./ParticipantList\";\nimport { PollsToggle } from \"./PollsToggle\";\nimport { WhiteboardToggle } from \"./WhiteboardToggle\";\nimport { ConferencingScreenElements } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { useShowPolls } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\nexport const Footer = ({\n  screenType,\n  elements,\n}: {\n  screenType: keyof ConferencingScreen;\n  elements: ConferencingScreenElements;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isOverlayChat = !!elements?.chat?.is_overlay;\n  const openByDefault =\n    elements?.chat?.initial_state === Chat_ChatState.CHAT_STATE_OPEN;\n\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const { showPolls } = useShowPolls();\n  const role = useHMSStore(selectLocalPeerRole);\n  useEffect(() => {\n    if (!isChatOpen && openByDefault) {\n      toggleChat();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleChat, openByDefault]);\n\n  return (\n    <AppFooter.Root\n      css={{\n        flexWrap: \"nowrap\",\n        \"@md\": {\n          justifyContent: \"center\",\n          gap: \"$10\",\n          position: \"relative\",\n          // To prevent it from showing over the sidepane if chat type is not overlay\n          zIndex: isOverlayChat && isChatOpen ? 20 : 1,\n        },\n      }}\n    >\n      <AppFooter.Left\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            p: \"0\",\n            gap: \"$10\",\n          },\n        }}\n      >\n        {isMobile ? <LeaveRoom screenType={screenType} /> : null}\n        <AudioVideoToggle />\n        {!isMobile && elements.virtual_background ? <VBToggle /> : null}\n        {role?.name === \"interpreter-en\" || role?.name === \"interpreter-fr\" ? (\n          <>\n            <Int2EnButton />\n            <Int2FrButton />\n          </>\n        ) : null}\n        {/* {role?.name === \"guest\" || role?.name === \"host\" ? (\n          <>\n            <EnButton />\n            <FrButton />\n          </>\n        ) : null} */}\n      </AppFooter.Left>\n      <AppFooter.Center\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            gap: \"$10\",\n          },\n        }}\n      >\n        {isMobile ? (\n          <>\n            <ScreenshareToggle />\n            <RaiseHand />\n            {elements?.chat && <ChatToggle />}\n            <MoreSettings elements={elements} screenType={screenType} />\n          </>\n        ) : (\n          <>\n            <ScreenshareToggle />\n            <RaiseHand />\n            {screenType !== \"hls_live_streaming\" && <CaptionIcon />}\n            {elements?.emoji_reactions && <EmojiReaction />}\n            <LeaveRoom screenType={screenType} />\n          </>\n        )}\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <WhiteboardToggle />\n        {showPolls && <PollsToggle />}\n        {!isMobile && elements?.chat && <ChatToggle />}\n        {elements?.participant_list && <ParticipantCount />}\n        <MoreSettings elements={elements} screenType={screenType} />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  selectHLSState,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { Button } from \"../../../Button\";\nimport { Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { APP_DATA } from \"../../common/constants\";\n\nexport function HLSFailureModal() {\n  const hlsError = useHMSStore(selectHLSState).error || false;\n  const [openModal, setOpenModal] = useState(!!hlsError);\n  const hmsActions = useHMSActions();\n  const { isRTMPRunning } = useRecordingStreaming();\n  const [isHLSStarted, setHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const startHLS = useCallback(async () => {\n    try {\n      if (isHLSStarted || isRTMPRunning) {\n        return;\n      }\n      setHLSStarted(true);\n      await hmsActions.startHLSStreaming({});\n    } catch (error) {\n      console.error(error);\n      setHLSStarted(false);\n    }\n  }, [hmsActions, isHLSStarted, setHLSStarted, isRTMPRunning]);\n\n  return hlsError ? (\n    <Dialog.Root\n      open={openModal}\n      onOpenChange={(value) => {\n        if (!value) {\n          setOpenModal(false);\n        }\n      }}\n    >\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content css={{ w: \"min(360px, 90%)\" }}>\n          <Dialog.Title\n            css={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              borderBottom: \"1px solid $border_default\",\n              mt: \"$4\",\n            }}\n          >\n            <Text variant=\"h6\" css={{ fontWeight: \"$semiBold\" }}>\n              Failed to Go Live\n            </Text>\n          </Dialog.Title>\n          <Text variant=\"sm\" css={{ mb: \"$10\", color: \"$on_surface_medium\" }}>\n            Something went wrong and your live broadcast failed. Please try\n            again.\n          </Text>\n          <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\", gap: \"$8\" }}>\n            <Button\n              outlined\n              variant=\"standard\"\n              css={{ w: \"100%\" }}\n              onClick={() => setOpenModal(false)}\n            >\n              Dismiss\n            </Button>\n            <Button css={{ w: \"100%\" }} onClick={startHLS}>\n              Go Live\n            </Button>\n          </Flex>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  ) : null;\n}\n", "import React from \"react\";\nimport { selectPermissions, useHMSStore } from \"@100mslive/react-sdk\";\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  CrossIcon,\n  RecordIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  slideLeftAndFade,\n  Switch,\n  Text,\n} from \"../../../\";\n\nexport const StreamCard = ({\n  title,\n  subtitle,\n  Icon,\n  imgSrc = \"\",\n  css = {},\n  onClick,\n  testId,\n}) => {\n  return (\n    <Flex\n      css={{\n        w: \"100%\",\n        p: \"$10\",\n        r: \"$1\",\n        cursor: \"pointer\",\n        bg: \"$surface_bright\",\n        mb: \"$10\",\n        mt: \"$8\",\n        ...css,\n      }}\n      data-testid={testId}\n      onClick={onClick}\n    >\n      <Text css={{ alignSelf: \"center\", p: \"$4\" }}>\n        {imgSrc ? (\n          <img src={imgSrc} height={40} width={40} alt=\"Streaming\" />\n        ) : (\n          <Icon width={40} height={40} />\n        )}\n      </Text>\n      <Box css={{ flex: \"1 1 0\", mx: \"$8\" }}>\n        <Text variant=\"h6\" css={{ mb: \"$4\" }}>\n          {title}\n        </Text>\n        <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n          {subtitle}\n        </Text>\n      </Box>\n      <Text css={{ alignSelf: \"center\" }}>\n        <ChevronRightIcon />\n      </Text>\n    </Flex>\n  );\n};\n\nexport const ContentHeader = ({ onBack, onClose, title = \"\", content }) => {\n  return (\n    <Flex\n      css={{\n        w: \"100%\",\n        py: \"$8\",\n        px: \"$10\",\n        cursor: \"pointer\",\n        borderBottom: \"1px solid $border_bright\",\n        mb: \"$8\",\n      }}\n    >\n      {onBack ? (\n        <Flex\n          align=\"center\"\n          css={{\n            mr: \"$8\",\n            color: \"$on_surface_high\",\n          }}\n          onClick={onBack}\n          data-testid=\"go_back\"\n        >\n          <ChevronLeftIcon />\n        </Flex>\n      ) : null}\n      <Box css={{ flex: \"1 1 0\", display: \"flex\", alignItems: \"center\" }}>\n        {title ? (\n          <Text\n            variant=\"tiny\"\n            css={{\n              textTransform: \"uppercase\",\n              fontWeight: \"$semiBold\",\n              color: \"$on_surface_medium\",\n            }}\n          >\n            {title}\n          </Text>\n        ) : null}\n        <Text variant=\"h6\">{content}</Text>\n      </Box>\n      {onClose ? (\n        <IconButton\n          onClick={onClose}\n          css={{ alignSelf: \"flex-start\" }}\n          data-testid=\"close_stream_section\"\n        >\n          <CrossIcon />\n        </IconButton>\n      ) : null}\n    </Flex>\n  );\n};\nexport const Container = ({ children, rounded = false }) => {\n  return (\n    <Box\n      css={{\n        size: \"100%\",\n        zIndex: 2,\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bg: \"$surface_dim\",\n        transform: \"translateX(10%)\",\n        animation: `${slideLeftAndFade(\"10%\")} 100ms ease-out forwards`,\n        display: \"flex\",\n        flexDirection: \"column\",\n        borderRadius: rounded ? \"$2\" : \"0\",\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport const ContentBody = ({\n  Icon,\n  title,\n  removeVerticalPadding = false,\n  children,\n}) => {\n  return (\n    <Box css={{ p: removeVerticalPadding ? \"$0 $10\" : \"$10\" }}>\n      <Text css={{ display: \"flex\", alignItems: \"center\", mb: \"$4\" }}>\n        <Icon />\n        <Text as=\"span\" css={{ fontWeight: \"$semiBold\", ml: \"$4\" }}>\n          {title}\n        </Text>\n      </Text>\n      <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n        {children}\n      </Text>\n    </Box>\n  );\n};\n\nexport const RecordStream = ({ record, setRecord, testId }) => {\n  const permissions = useHMSStore(selectPermissions);\n  return permissions?.browserRecording ? (\n    <Flex\n      align=\"center\"\n      css={{ bg: \"$surface_bright\", m: \"$8 $10\", p: \"$8\", r: \"$0\" }}\n    >\n      <Text css={{ color: \"$alert_error_default\" }}>\n        <RecordIcon />\n      </Text>\n      <Text variant=\"sm\" css={{ flex: \"1 1 0\", mx: \"$8\" }}>\n        Record the stream\n      </Text>\n      <Switch\n        checked={record}\n        onCheckedChange={setRecord}\n        data-testid={testId}\n      />\n    </Flex>\n  ) : null;\n};\n\nexport const ErrorText = ({ error }) => {\n  if (!error) {\n    return null;\n  }\n  return (\n    <Text variant=\"sm\" css={{ my: \"$4\", color: \"$alert_error_default\" }}>\n      {error}\n    </Text>\n  );\n};\n", "import React from \"react\";\nimport { HMSPollState } from \"@100mslive/react-sdk\";\nimport { Flex, Text } from \"../../../../\";\nimport { PollStage } from \"./constants\";\n\nconst statusMap: Record<HMSPollState, PollStage> = {\n  created: PollStage.DRAFT,\n  started: PollStage.LIVE,\n  stopped: PollStage.ENDED,\n};\n\nexport const StatusIndicator = ({ status }: { status?: HMSPollState }) => {\n  if (!status) return null;\n  return (\n    <Flex align=\"center\">\n      <Flex\n        css={{\n          backgroundColor:\n            statusMap[status] === PollStage.LIVE\n              ? \"$alert_error_default\"\n              : \"$secondary_default\",\n          p: \"$2 $4\",\n          borderRadius: \"$0\",\n        }}\n      >\n        <Text\n          variant=\"caption\"\n          css={{\n            fontWeight: \"$semiBold\",\n            color: \"$on_primary_high\",\n          }}\n        >\n          {statusMap[status]}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  HMSPollState,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  selectPolls,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { QuestionIcon, StatsIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Input, Switch, Text } from \"../../../..\";\n// @ts-ignore\nimport { Container, ContentHeader, ErrorText } from \"../../Streaming/Common\";\n// @ts-ignore\nimport { usePollViewToggle } from \"../../AppData/useSidepane\";\n// @ts-ignore\nimport { usePollViewState } from \"../../AppData/useUISettings\";\n// @ts-ignore\nimport { isValidTextInput } from \"../../../common/utils\";\nimport { StatusIndicator } from \"../common/StatusIndicator\";\nimport {\n  INTERACTION_TYPE,\n  POLL_STATE,\n  POLL_VIEWS,\n} from \"../../../common/constants\";\n\nexport const PollsQuizMenu = () => {\n  const togglePollView = usePollViewToggle();\n  const permissions = useHMSStore(selectPermissions);\n\n  return (\n    <Container rounded>\n      <ContentHeader content=\"Polls and Quizzes\" onClose={togglePollView} />\n      <Flex\n        direction=\"column\"\n        css={{ px: \"$10\", pb: \"$10\", overflowY: \"auto\" }}\n      >\n        {permissions?.pollWrite && <AddMenu />}\n        <PrevMenu />\n      </Flex>\n    </Container>\n  );\n};\n\nfunction InteractionSelectionCard({\n  title,\n  icon,\n  active,\n  onClick,\n}: {\n  title: string;\n  icon: React.JSX.Element;\n  active: boolean;\n  onClick: () => void;\n}) {\n  const activeBorderStyle = active\n    ? \"$space$px solid $primary_default\"\n    : \"$space$px solid $border_bright\";\n  return (\n    <Flex\n      onClick={onClick}\n      css={{\n        border: activeBorderStyle,\n        p: \"$4\",\n        r: \"$2\",\n        w: \"100%\",\n        cursor: \"pointer\",\n      }}\n      align=\"center\"\n    >\n      <Flex\n        css={{\n          border: activeBorderStyle,\n          p: \"$4\",\n          bg: \"$surface_bright\",\n          c: \"$on_surface_high\",\n          r: \"$0\",\n        }}\n      >\n        {icon}\n      </Flex>\n      <Text variant=\"sub1\" css={{ ml: \"$md\" }}>\n        {title}\n      </Text>\n    </Flex>\n  );\n}\n\nconst AddMenu = () => {\n  const actions = useHMSActions();\n  const [title, setTitle] = useState(\"\");\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  const [hideVoteCount, setHideVoteCount] = useState(false);\n  const [error, setError] = useState();\n  const [titleError, setTitleError] = useState(\"\");\n  const { setPollState } = usePollViewState();\n  const [interactionType, setInteractionType] = useState(INTERACTION_TYPE.POLL);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [interactionType]);\n\n  const handleCreate = (id: string) => {\n    setPollState({\n      [POLL_STATE.pollInView]: id,\n      [POLL_STATE.view]: POLL_VIEWS.CREATE_QUESTIONS,\n    });\n  };\n\n  const validateTitle = useMemo(() => {\n    if (!isValidTextInput(title)) {\n      if (title) {\n        setTitleError(\"The title should have between 2-100 characters\");\n      }\n      return true;\n    } else {\n      setTitleError(\"\");\n      return false;\n    }\n  }, [title]);\n\n  return (\n    <>\n      <Text variant=\"caption\" css={{ c: \"$on_surface_medium\", mb: \"$md\" }}>\n        Select the type you want to continue with\n      </Text>\n      <Flex css={{ w: \"100%\", gap: \"$10\", mb: \"$md\" }}>\n        <InteractionSelectionCard\n          title={INTERACTION_TYPE.POLL}\n          icon={<StatsIcon width={32} height={32} />}\n          onClick={() => setInteractionType(INTERACTION_TYPE.POLL)}\n          active={interactionType === INTERACTION_TYPE.POLL}\n        />\n        <InteractionSelectionCard\n          title={INTERACTION_TYPE.QUIZ}\n          icon={<QuestionIcon width={32} height={32} />}\n          onClick={() => setInteractionType(INTERACTION_TYPE.QUIZ)}\n          active={interactionType === INTERACTION_TYPE.QUIZ}\n        />\n      </Flex>\n      <Flex direction=\"column\" css={{ mb: \"$10\" }}>\n        <Text\n          variant=\"body2\"\n          css={{ mb: \"$4\" }}\n        >{`Name this ${interactionType.toLowerCase()}`}</Text>\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Enter a name to continue\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value.trimStart())}\n          css={{\n            backgroundColor: \"$surface_bright\",\n            border: \"1px solid $border_default\",\n          }}\n        />\n        <Flex align=\"center\" css={{ mt: \"$10\" }}>\n          <Switch\n            onCheckedChange={(value) => setHideVoteCount(value)}\n            css={{ mr: \"$6\" }}\n          />\n          <Text variant=\"body2\" css={{ c: \"$on_surface_medium\" }}>\n            Hide Vote Count\n          </Text>\n        </Flex>\n\n        <Button\n          variant=\"primary\"\n          disabled={validateTitle}\n          css={{ mt: \"$10\" }}\n          onClick={async () => {\n            const id = Date.now().toString();\n            await actions.interactivityCenter\n              .createPoll({\n                id,\n                title,\n                anonymous: false,\n                rolesThatCanViewResponses:\n                  hideVoteCount && localPeerRoleName\n                    ? [localPeerRoleName]\n                    : undefined,\n                // @ts-ignore\n                type: interactionType.toLowerCase(),\n              })\n              .then(() => handleCreate(id))\n              .catch((err) => setError(err.message));\n          }}\n        >\n          Create {interactionType}\n        </Button>\n        <ErrorText error={error || titleError} />\n      </Flex>\n    </>\n  );\n};\n\nconst PrevMenu = () => {\n  const hmsActions = useHMSActions();\n  const polls = useHMSStore(selectPolls);\n  const sortedPolls = useMemo(\n    () =>\n      polls\n        ?.sort(\n          (a, b) =>\n            (b?.createdAt?.getTime?.() || 0) - (a?.createdAt?.getTime?.() || 0)\n        )\n        ?.sort(\n          (a, b) =>\n            (b?.state === \"started\" ? 1 : 0) - (a?.state === \"started\" ? 1 : 0)\n        ),\n    [polls]\n  );\n  const permissions = useHMSStore(selectPermissions);\n\n  useEffect(() => {\n    const updatePolls = async () => {\n      await hmsActions.interactivityCenter.getPolls();\n    };\n    updatePolls();\n  }, [hmsActions.interactivityCenter]);\n\n  return polls?.length ? (\n    <Flex\n      direction=\"column\"\n      css={{\n        width: \"100%\",\n        ...(permissions?.pollWrite\n          ? { borderTop: \"$space$px solid $border_bright\", paddingTop: \"$10\" }\n          : {}),\n      }}\n    >\n      <Text variant=\"h6\" css={{ c: \"$on_surface_high\" }}>\n        Previous Polls and Quizzes\n      </Text>\n      <Flex direction=\"column\" css={{ gap: \"$10\", mt: \"$8\" }}>\n        {sortedPolls?.map((poll) => (\n          <InteractionCard\n            key={poll.id}\n            id={poll.id}\n            title={poll.title}\n            status={poll.state}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  ) : null;\n};\n\nconst InteractionCard = ({\n  id,\n  title,\n  status,\n}: {\n  id: string;\n  title: string;\n  status?: HMSPollState;\n}) => {\n  const { setPollState } = usePollViewState();\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ backgroundColor: \"$surface_bright\", borderRadius: \"$1\", p: \"$8\" }}\n    >\n      <Flex css={{ w: \"100%\", justifyContent: \"space-between\", mb: \"$sm\" }}>\n        <Text\n          variant=\"sub1\"\n          css={{ c: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n        >\n          {title}\n        </Text>\n        <StatusIndicator status={status} />\n      </Flex>\n      <Flex css={{ w: \"100%\", gap: \"$4\" }} justify=\"end\">\n        <Button\n          variant=\"primary\"\n          onClick={() =>\n            setPollState({\n              [POLL_STATE.pollInView]: id,\n              [POLL_STATE.view]:\n                status === \"created\"\n                  ? POLL_VIEWS.CREATE_QUESTIONS\n                  : POLL_VIEWS.VOTE,\n            })\n          }\n        >\n          View\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../../Button\";\nimport { Box, Flex } from \"../../../../Layout\";\nimport { Dialog } from \"../../../../Modal\";\nimport { Text } from \"../../../../Text\";\n\nexport const DeleteQuestionModal = ({\n  open,\n  setOpen,\n  removeQuestion,\n}: {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  removeQuestion: () => void;\n}) => {\n  return (\n    <Dialog.Root open={open}>\n      <Dialog.Overlay />\n      <Dialog.Portal>\n        <Dialog.Content css={{ p: \"$10\" }}>\n          <Box>\n            <Flex\n              css={{\n                color: \"$alert_error_default\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />\n              <Text\n                variant=\"lg\"\n                css={{ color: \"inherit\", fontWeight: \"$semiBold\" }}\n              >\n                Delete Question?\n              </Text>\n\n              <Box\n                css={{\n                  ml: \"auto\",\n                  color: \"$on_surface_medium\",\n                  \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n                }}\n                onClick={() => setOpen(false)}\n              >\n                <CrossIcon />\n              </Box>\n            </Flex>\n            <Text\n              variant=\"sm\"\n              css={{ color: \"$on_surface_medium\", mb: \"$8\", mt: \"$4\" }}\n            >\n              The question will be deleted. You can't undo this action.\n            </Text>\n            <Flex css={{ w: \"100%\", mt: \"$12\", gap: \"$md\" }}>\n              <Button\n                variant=\"standard\"\n                outlined\n                onClick={() => setOpen(false)}\n                css={{ w: \"100%\", fontSize: \"$md\", fontWeight: \"$semiBold\" }}\n              >\n                Cancel\n              </Button>\n              <Button\n                css={{ w: \"100%\", fontSize: \"$md\", fontWeight: \"$semiBold\" }}\n                variant=\"danger\"\n                onClick={() => {\n                  removeQuestion();\n                  setOpen(false);\n                }}\n              >\n                Delete\n              </Button>\n            </Flex>\n          </Box>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport { Flex } from \"../../../../Layout\";\n\nexport const Line = () => (\n  <Flex\n    css={{\n      w: \"100%\",\n      borderBottom: \"1px solid $border_bright\",\n      h: \"1px\",\n      my: \"$8\",\n    }}\n  />\n);\n", "import React from \"react\";\nimport { HMSPollQuestionOption } from \"@100mslive/react-sdk\";\nimport { TrashIcon } from \"@100mslive/react-icons\";\nimport { Input } from \"../../../../Input\";\n// @ts-ignore\nimport IconButton from \"../../../IconButton\";\n\nexport const OptionInputWithDelete = ({\n  index,\n  option,\n  handleOptionTextChange,\n  removeOption,\n}: {\n  index: number;\n  option: HMSPollQuestionOption;\n  handleOptionTextChange: (index: number, value: string) => void;\n  removeOption: (index: number) => void;\n}) => {\n  return (\n    <>\n      <Input\n        placeholder={`Option ${index + 1}`}\n        css={{\n          w: \"100%\",\n          backgroundColor: \"$surface_bright\",\n          border: \"1px solid $border_bright\",\n        }}\n        value={option?.text || \"\"}\n        key={index}\n        onChange={(event) =>\n          handleOptionTextChange(index, event.target.value.trimStart())\n        }\n        maxLength={250}\n      />\n      <IconButton\n        onClick={() => removeOption(index)}\n        css={{ bg: \"transparent\", border: \"none\" }}\n      >\n        <TrashIcon />\n      </IconButton>\n    </>\n  );\n};\n", "import React from \"react\";\nimport { Flex, Text } from \"../../../../\";\n\nexport const VoteCount = ({ voteCount }: { voteCount: number }) => {\n  return (\n    <Flex css={{ alignItems: \"center\" }}>\n      {voteCount ? (\n        <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n          {voteCount}&nbsp;\n          {voteCount === 1 ? \"vote\" : \"votes\"}\n        </Text>\n      ) : null}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { HMSPollQuestionOption } from \"@100mslive/react-sdk\";\nimport { Progress } from \"../../../../\";\n\nexport const VoteProgress = ({\n  option,\n  totalResponses,\n}: {\n  option: HMSPollQuestionOption;\n  totalResponses: number;\n}) => {\n  const showProgress =\n    typeof option.voteCount === \"number\" &&\n    typeof totalResponses === \"number\" &&\n    totalResponses > 0;\n  const progressValue = (100 * (option.voteCount || 0)) / totalResponses;\n\n  return showProgress ? (\n    <Progress.Root value={progressValue} css={{ mt: \"$4\" }}>\n      <Progress.Content\n        style={{\n          transform: `translateX(-${100 - progressValue}%)`,\n        }}\n      />\n    </Progress.Root>\n  ) : null;\n};\n", "// @ts-check\nimport React from \"react\";\nimport { CheckCircleIcon, CheckIcon } from \"@100mslive/react-icons\";\nimport { Checkbox, Flex, Label, Text } from \"../../../../\";\nimport { OptionInputWithDelete } from \"./OptionInputWithDelete\";\nimport { VoteCount } from \"./VoteCount\";\nimport { VoteProgress } from \"./VoteProgress\";\n\nexport const MultipleChoiceOptions = ({\n  questionIndex,\n  options,\n  canRespond,\n  totalResponses,\n  selectedOptions,\n  setSelectedOptions,\n  showVoteCount,\n  isQuiz,\n  correctOptionIndexes,\n  localPeerResponse,\n  isStopped,\n}) => {\n  const handleCheckedChange = (checked, index) => {\n    const newSelected = new Set(selectedOptions);\n    if (checked) {\n      newSelected.add(index);\n    } else {\n      newSelected.delete(index);\n    }\n    setSelectedOptions(newSelected);\n  };\n\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n      {options.map((option) => {\n        return (\n          <Flex\n            align=\"center\"\n            key={`${questionIndex}-${option.index}`}\n            css={{ w: \"100%\", gap: \"$4\" }}\n          >\n            {!isStopped || !isQuiz ? (\n              <Checkbox.Root\n                id={`${questionIndex}-${option.index}`}\n                disabled={!canRespond}\n                checked={localPeerResponse?.options?.includes(option.index)}\n                onCheckedChange={(checked) =>\n                  handleCheckedChange(checked, option.index)\n                }\n                css={{\n                  cursor: canRespond ? \"pointer\" : \"not-allowed\",\n                  flexShrink: 0,\n                }}\n              >\n                <Checkbox.Indicator>\n                  <CheckIcon width={16} height={16} />\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n            ) : null}\n\n            {isStopped && correctOptionIndexes?.includes(option.index) ? (\n              <Flex align=\"center\" css={{ color: \"$on_surface_high\" }}>\n                <CheckCircleIcon height={20} width={20} />\n              </Flex>\n            ) : null}\n\n            <Flex direction=\"column\" css={{ flexGrow: \"1\" }}>\n              <Flex css={{ w: \"100%\" }}>\n                <Text css={{ display: \"flex\", flexGrow: \"1\" }}>\n                  <Label htmlFor={`${questionIndex}-${option.index}`}>\n                    {option.text}\n                  </Label>\n                </Text>\n                {showVoteCount && <VoteCount voteCount={option.voteCount} />}\n              </Flex>\n              {showVoteCount && (\n                <VoteProgress option={option} totalResponses={totalResponses} />\n              )}\n            </Flex>\n\n            {isStopped &&\n            isQuiz &&\n            localPeerResponse?.options.includes(option.index) ? (\n              <Text\n                variant=\"sm\"\n                css={{ color: \"$on_surface_medium\", maxWidth: \"max-content\" }}\n              >\n                Your Answer\n              </Text>\n            ) : null}\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport const MultipleChoiceOptionInputs = ({\n  isQuiz,\n  options,\n  selectAnswer,\n  handleOptionTextChange,\n  removeOption,\n}) => {\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n      {options.map((option, index) => {\n        return (\n          <Flex align=\"center\" key={index} css={{ w: \"100%\", gap: \"$4\" }}>\n            {isQuiz && (\n              <Checkbox.Root\n                onCheckedChange={(checked) => selectAnswer(checked, index)}\n                checked={option.isCorrectAnswer}\n                css={{\n                  cursor: \"pointer\",\n                  width: \"$9\",\n                }}\n              >\n                <Checkbox.Indicator>\n                  <CheckIcon width={16} height={16} />\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n            )}\n            <OptionInputWithDelete\n              index={index}\n              option={option}\n              handleOptionTextChange={handleOptionTextChange}\n              removeOption={removeOption}\n            />\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n", "// @ts-check\nimport React from \"react\";\nimport { CheckCircleIcon } from \"@100mslive/react-icons\";\nimport { Flex, Label, RadioGroup, Text } from \"../../../..\";\nimport { OptionInputWithDelete } from \"./OptionInputWithDelete\";\nimport { VoteCount } from \"./VoteCount\";\nimport { VoteProgress } from \"./VoteProgress\";\n\nexport const SingleChoiceOptions = ({\n  questionIndex,\n  options,\n  canRespond,\n  setAnswer,\n  totalResponses,\n  showVoteCount,\n  correctOptionIndex,\n  isStopped,\n  isQuiz,\n  localPeerResponse,\n}) => {\n  return (\n    <RadioGroup.Root\n      value={localPeerResponse?.option}\n      onValueChange={(value) => setAnswer(value)}\n    >\n      <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n        {options.map((option) => {\n          return (\n            <Flex\n              align=\"center\"\n              key={`${questionIndex}-${option.index}`}\n              css={{ w: \"100%\", gap: \"$4\" }}\n            >\n              {!isStopped || !isQuiz ? (\n                <RadioGroup.Item\n                  css={{\n                    background: \"none\",\n                    h: \"$9\",\n                    w: \"$9\",\n                    border: \"2px solid\",\n                    borderColor: \"$on_surface_high\",\n                    display: \"flex\",\n                    flexShrink: 0,\n                    pt: \"$1\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: canRespond ? \"pointer\" : \"not-allowed\",\n                    '&[data-state=\"checked\"]': {\n                      borderColor: \"$primary_bright\",\n                      borderWidth: \"2px\",\n                    },\n                  }}\n                  disabled={!canRespond}\n                  value={option.index}\n                  id={`${questionIndex}-${option.index}`}\n                >\n                  <RadioGroup.Indicator\n                    css={{\n                      h: \"80%\",\n                      w: \"80%\",\n                      background: \"$primary_bright\",\n                      borderRadius: \"$round\",\n                    }}\n                  />\n                </RadioGroup.Item>\n              ) : null}\n\n              {isStopped && correctOptionIndex === option.index && isQuiz ? (\n                <Flex css={{ color: \"$on_surface_high\" }}>\n                  <CheckCircleIcon height={20} width={20} />\n                </Flex>\n              ) : null}\n\n              <Flex direction=\"column\" css={{ flexGrow: \"1\" }}>\n                <Flex css={{ w: \"100%\" }}>\n                  <Text\n                    css={{\n                      display: \"flex\",\n                      flexGrow: \"1\",\n                      color: \"$on_surface_high\",\n                    }}\n                  >\n                    <Label\n                      style={{ color: \"inherit\" }}\n                      htmlFor={`${questionIndex}-${option.index}`}\n                    >\n                      {option.text}\n                    </Label>\n                  </Text>\n                  {showVoteCount && <VoteCount voteCount={option.voteCount} />}\n                </Flex>\n                {showVoteCount && (\n                  <VoteProgress\n                    option={option}\n                    totalResponses={totalResponses}\n                  />\n                )}\n              </Flex>\n              {isStopped &&\n              isQuiz &&\n              localPeerResponse?.option === option.index ? (\n                <Text\n                  variant=\"sm\"\n                  css={{ color: \"$on_surface_medium\", maxWidth: \"max-content\" }}\n                >\n                  Your Answer\n                </Text>\n              ) : null}\n            </Flex>\n          );\n        })}\n      </Flex>\n    </RadioGroup.Root>\n  );\n};\n\nexport const SingleChoiceOptionInputs = ({\n  isQuiz,\n  options,\n  selectAnswer,\n  handleOptionTextChange,\n  removeOption,\n}) => {\n  const correctOptionIndex = options.findIndex(\n    (option) => option.isCorrectAnswer\n  );\n\n  return (\n    <RadioGroup.Root value={correctOptionIndex} onValueChange={selectAnswer}>\n      <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n        {options.map((option, index) => {\n          return (\n            <Flex\n              align=\"center\"\n              key={`option-${index}`}\n              css={{ w: \"100%\", gap: \"$4\" }}\n            >\n              {isQuiz && (\n                <RadioGroup.Item\n                  css={{\n                    background: \"none\",\n                    w: \"$9\",\n                    border: \"2px solid\",\n                    borderColor: \"$on_surface_high\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\",\n                    '&[data-state=\"checked\"]': {\n                      borderColor: \"$primary_bright\",\n                      borderWidth: \"2px\",\n                    },\n                  }}\n                  value={index}\n                >\n                  <RadioGroup.Indicator\n                    css={{\n                      h: \"80%\",\n                      w: \"80%\",\n                      background: \"$primary_bright\",\n                      borderRadius: \"$round\",\n                    }}\n                  />\n                </RadioGroup.Item>\n              )}\n              <OptionInputWithDelete\n                index={index}\n                option={option}\n                handleOptionTextChange={handleOptionTextChange}\n                removeOption={removeOption}\n              />\n            </Flex>\n          );\n        })}\n      </Flex>\n    </RadioGroup.Root>\n  );\n};\n", "// @ts-check\nimport React, { useCallback, useRef, useState } from \"react\";\nimport {\n  HMSPollQuestionCreateParams,\n  HMSPollQuestionOptionCreateParams,\n  HMSPollQuestionType,\n} from \"@100mslive/react-sdk\";\nimport { AddCircleIcon, TrashIcon } from \"@100mslive/react-icons\";\n// import { Button, Dropdown, Flex, IconButton, Input, Switch, Text, TextArea, Tooltip } from '../../../..';\nimport {\n  Button,\n  Dropdown,\n  Flex,\n  IconButton,\n  Input,\n  Text,\n  TextArea,\n  Tooltip,\n} from \"../../../..\";\n// @ts-ignore\nimport { DialogDropdownTrigger } from \"../../../primitives/DropdownTrigger\";\n// @ts-ignore\nimport { DeleteQuestionModal } from \"./DeleteQuestionModal\";\n// @ts-ignore\nimport { useDropdownSelection } from \"../../hooks/useDropdownSelection\";\n// @ts-ignore\nimport { isValidTextInput } from \"../../../common/utils\";\nimport { Line } from \"../common/Line\";\n// @ts-ignore\nimport { MultipleChoiceOptionInputs } from \"../common/MultipleChoiceOptions\";\n// @ts-ignore\nimport { SingleChoiceOptionInputs } from \"../common/SingleChoiceOptions\";\nimport { QUESTION_TYPE, QUESTION_TYPE_TITLE } from \"../../../common/constants\";\n\nexport const QuestionForm = ({\n  question,\n  index,\n  length,\n  onSave,\n  removeQuestion,\n  isQuiz,\n}: {\n  question: HMSPollQuestionCreateParams & { draftID: number };\n  index: number;\n  length: number;\n  onSave: (\n    optionParams: HMSPollQuestionCreateParams & {\n      draftID: number;\n      saved: boolean;\n    }\n  ) => void;\n  removeQuestion: () => void;\n  isQuiz: boolean;\n}) => {\n  const ref = useRef(null);\n  const selectionBg = useDropdownSelection();\n  const [openDelete, setOpenDelete] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [type, setType] = useState<HMSPollQuestionType>(\n    question.type || QUESTION_TYPE.SINGLE_CHOICE\n  );\n  const [text, setText] = useState(question.text);\n  const [weight, setWeight] = useState(isQuiz ? 10 : 1);\n  const [options, setOptions] = useState(\n    question?.options || [\n      { text: \"\", isCorrectAnswer: false },\n      { text: \"\", isCorrectAnswer: false },\n    ]\n  );\n  // const [skippable, setSkippable] = useState(false);\n  const isValid = isValidQuestion({\n    text,\n    type,\n    options,\n    weight,\n    isQuiz,\n  });\n\n  const handleOptionTextChange = useCallback(\n    (index: number, text: string) => {\n      setOptions((options) => [\n        ...options.slice(0, index),\n        { ...options[index], text },\n        ...options.slice(index + 1),\n      ]);\n    },\n    [setOptions]\n  );\n\n  const removeOption = useCallback(\n    (index: number) =>\n      setOptions((options) => {\n        const newOptions = [...options];\n        newOptions.splice(index, 1);\n        return newOptions;\n      }),\n    [setOptions]\n  );\n\n  const selectSingleChoiceAnswer = useCallback(\n    (answerIndex: number) => {\n      if (!isQuiz) {\n        return;\n      }\n      setOptions((options) =>\n        options.map((option, index) => ({\n          ...option,\n          isCorrectAnswer: index === answerIndex,\n        }))\n      );\n    },\n    [setOptions, isQuiz]\n  );\n\n  const selectMultipleChoiceAnswer = useCallback(\n    (checked: boolean, index: number) => {\n      if (!isQuiz) {\n        return;\n      }\n      setOptions((options) => [\n        ...options.slice(0, index),\n        { ...options[index], isCorrectAnswer: checked },\n        ...options.slice(index + 1),\n      ]);\n    },\n    [setOptions, isQuiz]\n  );\n\n  return (\n    <>\n      <Text\n        variant=\"overline\"\n        css={{ c: \"$on_surface_low\", textTransform: \"uppercase\" }}\n      >\n        Question {index + 1} of {length}\n      </Text>\n      <Text variant=\"body2\" css={{ mt: \"$4\", mb: \"$md\" }}>\n        Question Type\n      </Text>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <DialogDropdownTrigger\n          ref={ref}\n          // @ts-ignore\n          title={QUESTION_TYPE_TITLE[type]}\n          css={{\n            backgroundColor: \"$surface_bright\",\n            border: \"1px solid $border_bright\",\n          }}\n          open={open}\n        />\n        <Dropdown.Portal>\n          {/* @ts-ignore */}\n          <Dropdown.Content\n            align=\"start\"\n            sideOffset={8}\n            css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n          >\n            {Object.keys(QUESTION_TYPE_TITLE).map((value) => {\n              return (\n                <Dropdown.Item\n                  key={value}\n                  // @ts-ignore\n                  onSelect={() => setType(value)}\n                  css={{\n                    px: \"$9\",\n                    bg: type === value ? selectionBg : undefined,\n                  }}\n                >\n                  {/* @ts-ignore */}\n                  {QUESTION_TYPE_TITLE[value]}\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Content>\n        </Dropdown.Portal>\n      </Dropdown.Root>\n      <TextArea\n        maxLength={1024}\n        placeholder=\"Ask a question\"\n        css={{\n          mt: \"$md\",\n          backgroundColor: \"$surface_bright\",\n          border: \"1px solid $border_bright\",\n          minHeight: \"$14\",\n          resize: \"vertical\",\n          maxHeight: \"$32\",\n        }}\n        value={text}\n        onChange={(event) => setText(event.target.value.trimStart())}\n      />\n      <Text\n        variant=\"xs\"\n        css={{ color: \"$on_surface_medium\", textAlign: \"end\", mt: \"$4\" }}\n      >\n        {text?.length || 0}/1024\n      </Text>\n      <Line />\n      {/* @ts-ignore */}\n      {type === QUESTION_TYPE.SINGLE_CHOICE ||\n      type === QUESTION_TYPE.MULTIPLE_CHOICE ? (\n        <>\n          <Text variant=\"body2\" css={{ mb: \"$6\", c: \"$on_surface_medium\" }}>\n            Options\n          </Text>\n\n          {isQuiz && (\n            <Text variant=\"xs\" css={{ c: \"$on_surface_medium\", mb: \"$md\" }}>\n              {type === QUESTION_TYPE.SINGLE_CHOICE\n                ? \"Use the radio buttons to indicate the correct answer\"\n                : \"Use the checkboxes to indicate the correct answer(s)\"}\n            </Text>\n          )}\n\n          {type === QUESTION_TYPE.SINGLE_CHOICE && (\n            <SingleChoiceOptionInputs\n              isQuiz={isQuiz}\n              options={options}\n              selectAnswer={selectSingleChoiceAnswer}\n              handleOptionTextChange={handleOptionTextChange}\n              removeOption={removeOption}\n            />\n          )}\n\n          {type === QUESTION_TYPE.MULTIPLE_CHOICE && (\n            <MultipleChoiceOptionInputs\n              isQuiz={isQuiz}\n              options={options}\n              selectAnswer={selectMultipleChoiceAnswer}\n              handleOptionTextChange={handleOptionTextChange}\n              removeOption={removeOption}\n            />\n          )}\n\n          {options?.length < 20 && (\n            <Flex\n              css={{\n                c: \"$on_surface_medium\",\n                cursor: \"pointer\",\n                \"&:hover\": { c: \"$on_surface_high\" },\n              }}\n              onClick={() =>\n                setOptions([...options, { text: \"\", isCorrectAnswer: false }])\n              }\n            >\n              <AddCircleIcon style={{ position: \"relative\", left: \"-2px\" }} />\n\n              <Text\n                variant=\"sm\"\n                css={{\n                  ml: \"$4\",\n                  c: \"inherit\",\n                }}\n              >\n                Add an option\n              </Text>\n            </Flex>\n          )}\n          <Line />\n          {isQuiz ? (\n            <>\n              <Flex\n                justify=\"between\"\n                align=\"center\"\n                css={{ gap: \"$6\", w: \"100%\" }}\n              >\n                <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n                  Point Weightage\n                </Text>\n                <Input\n                  type=\"number\"\n                  value={weight}\n                  min={1}\n                  max={999}\n                  onChange={(e) =>\n                    setWeight(Math.min(Number(e.target.value), 999))\n                  }\n                  css={{\n                    backgroundColor: \"$surface_bright\",\n                    border: \"1px solid $border_bright\",\n                    maxWidth: \"$20\",\n                  }}\n                />\n              </Flex>\n              {/* <Flex justify=\"between\" css={{ mt: '$md', gap: '$6', w: '100%' }}>\n                <Text variant=\"sm\" css={{ color: '$on_surface_medium' }}>\n                  Allow to skip\n                </Text>\n                <Switch defaultChecked={skippable} onCheckedChange={checked => setSkippable(checked)} />\n              </Flex> */}\n            </>\n          ) : null}\n        </>\n      ) : null}\n\n      <Flex justify=\"end\" align=\"center\" css={{ mt: \"$12\", gap: \"$8\" }}>\n        <IconButton css={{ border: \"1px solid $border_bright\" }}>\n          <TrashIcon onClick={() => setOpenDelete(!open)} />\n        </IconButton>\n        <Tooltip\n          disabled={isValid}\n          title={\n            options.length < 2\n              ? \"At least two options must be added\"\n              : `Please fill all the fields ${\n                  isQuiz ? \"and mark the correct answer(s)\" : \"\"\n                } to continue`\n          }\n          boxCss={{ maxWidth: \"$40\" }}\n        >\n          <Button\n            variant=\"standard\"\n            disabled={!isValid}\n            onClick={() => {\n              onSave({\n                saved: true,\n                text,\n                type,\n                options,\n                skippable: false,\n                draftID: question.draftID,\n                weight,\n              });\n            }}\n          >\n            Save\n          </Button>\n        </Tooltip>\n      </Flex>\n\n      <DeleteQuestionModal\n        open={openDelete}\n        setOpen={setOpenDelete}\n        removeQuestion={removeQuestion}\n      />\n    </>\n  );\n};\n\nexport const isValidQuestion = ({\n  text,\n  type,\n  options,\n  weight,\n  isQuiz = false,\n}: {\n  text: string;\n  type: string;\n  options: HMSPollQuestionOptionCreateParams[];\n  weight: number;\n  isQuiz?: boolean;\n}) => {\n  if (!isValidTextInput(text) || !type) {\n    return false;\n  }\n\n  const everyOptionHasText =\n    options.length > 1 &&\n    options.every((option) => option && isValidTextInput(option.text, 1));\n  const hasCorrectAnswer = options.some((option) => option.isCorrectAnswer);\n\n  if (!isQuiz) {\n    return everyOptionHasText;\n  }\n\n  // The minimum acceptable value of weight is 1\n  if (isQuiz && weight < 1) {\n    return false;\n  }\n\n  return everyOptionHasText && hasCorrectAnswer;\n};\n", "import React, { useMemo } from \"react\";\nimport { HMSPollQuestion } from \"@100mslive/react-sdk\";\nimport { CheckCircleIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"../../../../\";\nimport { QUESTION_TYPE_TITLE } from \"../../../common/constants\";\n\nexport const SavedQuestion = ({\n  question,\n  index,\n  length,\n  convertToDraft,\n}: {\n  question: HMSPollQuestion & { draftID: number };\n  index: number;\n  length: number;\n  convertToDraft: (draftID: number) => void;\n}) => {\n  const answerArray = useMemo(() => {\n    const updatedAnswerArray = [];\n    const { option, options } = question?.answer ?? {};\n    if (option) {\n      updatedAnswerArray.push(option);\n    }\n    if (options) {\n      updatedAnswerArray.push(...options);\n    }\n    return updatedAnswerArray;\n  }, [question?.answer]);\n\n  return (\n    <>\n      <Text\n        variant=\"overline\"\n        css={{ c: \"$on_surface_low\", textTransform: \"uppercase\" }}\n      >\n        {/* @ts-ignore */}\n        Question {index + 1} of {length}: {QUESTION_TYPE_TITLE[question.type]}\n      </Text>\n      <Text variant=\"body2\" css={{ mt: \"$4\", mb: \"$md\" }}>\n        {question.text}\n      </Text>\n      {question.options?.map((option, index) => (\n        <Flex\n          key={`${option.text}-${index}`}\n          css={{ alignItems: \"center\", my: \"$xs\" }}\n        >\n          <Text variant=\"body2\" css={{ c: \"$on_surface_medium\" }}>\n            {option.text}\n          </Text>\n          {/* @ts-ignore */}\n          {(answerArray.includes(index + 1) || option.isCorrectAnswer) && (\n            <Flex css={{ color: \"$alert_success\", mx: \"$xs\" }}>\n              <CheckCircleIcon height={24} width={24} />\n            </Flex>\n          )}\n        </Flex>\n      ))}\n      {question.skippable ? (\n        <Text variant=\"sm\" css={{ color: \"$on_surface_low\", my: \"$md\" }}>\n          Not required to answer\n        </Text>\n      ) : null}\n      <Flex justify=\"end\" css={{ w: \"100%\", alignItems: \"center\" }}>\n        <Button\n          variant=\"standard\"\n          css={{ fontWeight: \"$semiBold\" }}\n          onClick={() => convertToDraft(question.draftID)}\n        >\n          Edit\n        </Button>\n      </Flex>\n    </>\n  );\n};\n", "// @ts-check\nimport React, { useMemo, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  selectPollByID,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { AddCircleIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"../../../../\";\nimport { Container, ContentHeader } from \"../../Streaming/Common\";\nimport { isValidQuestion, QuestionForm } from \"./QuestionForm\";\nimport { SavedQuestion } from \"./SavedQuestion\";\nimport { usePollViewToggle } from \"../../AppData/useSidepane\";\nimport { usePollViewState } from \"../../AppData/useUISettings\";\nimport { POLL_VIEWS } from \"../../../common/constants\";\n\nconst getEditableFormat = (questions) => {\n  const editableQuestions = questions.map((question) => {\n    return { ...question, saved: true, draftID: uuid() };\n  });\n  return editableQuestions;\n};\n\nexport function CreateQuestions() {\n  const actions = useHMSActions();\n  const { isHLSRunning } = useRecordingStreaming();\n  const togglePollView = usePollViewToggle();\n  const { pollInView: id, setPollView } = usePollViewState();\n  const interaction = useHMSStore(selectPollByID(id));\n  const [questions, setQuestions] = useState(\n    interaction.questions?.length\n      ? getEditableFormat(interaction.questions)\n      : [{ draftID: uuid() }]\n  );\n\n  const isValidPoll = useMemo(\n    () => questions.length > 0 && questions.every(isValidQuestion),\n    [questions]\n  );\n\n  const launchPoll = async () => {\n    await actions.interactivityCenter.startPoll(id);\n    await sendTimedMetadata(id);\n    setPollView(POLL_VIEWS.VOTE);\n  };\n\n  const sendTimedMetadata = async (poll_id) => {\n    // send hls timedmetadata when it is running\n    if (poll_id && isHLSRunning) {\n      try {\n        await actions.sendHLSTimedMetadata([\n          {\n            payload: `poll:${poll_id}`,\n            duration: 100,\n          },\n        ]);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n\n  const headingTitle = interaction?.type\n    ? interaction?.type?.[0]?.toUpperCase() + interaction?.type?.slice(1)\n    : \"Polls and Quizzes\";\n  const isQuiz = interaction?.type === \"quiz\";\n  return (\n    <Container rounded>\n      <ContentHeader\n        content={headingTitle}\n        onClose={togglePollView}\n        onBack={() => setPollView(POLL_VIEWS.CREATE_POLL_QUIZ)}\n      />\n      <Flex direction=\"column\" css={{ p: \"$10\", overflowY: \"auto\" }}>\n        <Flex direction=\"column\">\n          {questions.map((question, index) => (\n            <QuestionCard\n              key={question.draftID}\n              question={question}\n              index={index}\n              length={questions.length}\n              onSave={async (questionParams) => {\n                const updatedQuestions = [\n                  ...questions.slice(0, index),\n                  questionParams,\n                  ...questions.slice(index + 1),\n                ];\n                setQuestions(updatedQuestions);\n                const validQuestions = updatedQuestions.filter((question) =>\n                  isValidQuestion(question)\n                );\n                await actions.interactivityCenter.addQuestionsToPoll(\n                  id,\n                  validQuestions\n                );\n              }}\n              isQuiz={isQuiz}\n              removeQuestion={async (questionID) => {\n                const updatedQuestions = questions.filter(\n                  (questionFromSet) => questionID !== questionFromSet?.draftID\n                );\n                setQuestions(updatedQuestions);\n                const validQuestions = updatedQuestions.filter((question) =>\n                  isValidQuestion(question)\n                );\n                await actions.interactivityCenter.addQuestionsToPoll(\n                  id,\n                  validQuestions\n                );\n              }}\n              convertToDraft={(questionID) =>\n                setQuestions((prev) => {\n                  const copyOfQuestions = [...prev];\n                  copyOfQuestions.forEach((question) => {\n                    if (questionID && question.draftID === questionID) {\n                      question.saved = false;\n                    }\n                  });\n                  return copyOfQuestions;\n                })\n              }\n            />\n          ))}\n        </Flex>\n        <Flex\n          css={{\n            c: \"$on_surface_low\",\n            my: \"$sm\",\n            cursor: \"pointer\",\n            \"&:hover\": { c: \"$on_surface_medium\" },\n          }}\n          onClick={() => setQuestions([...questions, { draftID: uuid() }])}\n        >\n          <AddCircleIcon />\n          <Text variant=\"body1\" css={{ ml: \"$md\", c: \"$inherit\" }}>\n            Add another question\n          </Text>\n        </Flex>\n        <Flex css={{ w: \"100%\" }} justify=\"end\">\n          <Button disabled={!isValidPoll} onClick={async () => launchPoll()}>\n            Launch {interaction?.type}\n          </Button>\n        </Flex>\n      </Flex>\n    </Container>\n  );\n}\n\nconst QuestionCard = ({\n  question,\n  onSave,\n  index,\n  length,\n  removeQuestion,\n  isQuiz,\n  convertToDraft,\n}) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ p: \"$md\", bg: \"$surface_default\", r: \"$1\", mb: \"$sm\" }}\n    >\n      {question.saved ? (\n        <SavedQuestion\n          question={question}\n          index={index}\n          length={length}\n          convertToDraft={convertToDraft}\n        />\n      ) : (\n        <QuestionForm\n          question={question}\n          removeQuestion={() => removeQuestion(question.draftID)}\n          onSave={(params) => onSave(params)}\n          index={index}\n          length={length}\n          isQuiz={isQuiz}\n        />\n      )}\n    </Flex>\n  );\n};\n", "export const getFormattedTime = (\n  milliseconds: number | undefined,\n  precise = true\n) => {\n  if (!milliseconds) return \"-\";\n\n  const totalSeconds = milliseconds / 1000;\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n\n  let formattedTime = \"\";\n  if (hours) {\n    formattedTime += `${hours}h `;\n  }\n  if (minutes || hours) {\n    formattedTime += `${minutes}m `;\n  }\n  if (!precise && (hours || minutes)) {\n    return formattedTime;\n  }\n  formattedTime += `${precise ? seconds.toFixed(3) : Math.floor(seconds)}s`;\n\n  return formattedTime;\n};\n", "import React from \"react\";\nimport {\n  CheckCircleIcon,\n  ClockIcon,\n  TrophyFilledIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../../Layout\";\nimport { Text } from \"../../../../Text\";\nimport { getFormattedTime } from \"../common/utils\";\n\nconst positionColorMap: Record<number, string> = {\n  1: \"#D69516\",\n  2: \"#3E3E3E\",\n  3: \"#583B0F\",\n};\n\nexport const LeaderboardEntry = ({\n  position,\n  score,\n  questionCount,\n  correctResponses,\n  userName,\n  maxPossibleScore,\n  duration,\n}: {\n  position: number;\n  score: number;\n  questionCount: number;\n  correctResponses: number;\n  userName: string;\n  maxPossibleScore: number;\n  duration: number;\n}) => {\n  return (\n    <Flex align=\"center\" justify=\"between\" css={{ my: \"$8\" }}>\n      <Flex align=\"center\" css={{ gap: \"$6\" }}>\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            backgroundColor: positionColorMap[position] || \"\",\n            h: \"$10\",\n            w: \"$10\",\n            borderRadius: \"$round\",\n            color: position > 3 ? \"$on_surface_low\" : \"#FFF\",\n            fontSize: \"$xs\",\n            fontWeight: \"$semiBold\",\n          }}\n        >\n          {position}\n        </Flex>\n\n        <Box>\n          <Text\n            variant=\"sm\"\n            css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}\n          >\n            {userName}\n          </Text>\n\n          <Text variant=\"sm\" css={{ mt: \"$1\" }}>\n            {score} / {maxPossibleScore} points\n          </Text>\n        </Box>\n      </Flex>\n\n      <Flex align=\"center\" css={{ gap: \"$4\", color: \"$on_surface_medium\" }}>\n        {position === 1 && score ? (\n          <TrophyFilledIcon height={16} width={16} />\n        ) : null}\n        {questionCount ? (\n          <>\n            <CheckCircleIcon height={16} width={16} />\n            <Text variant=\"xs\">\n              {correctResponses}/{questionCount}\n            </Text>\n          </>\n        ) : null}\n\n        {duration ? (\n          <Flex align=\"center\" css={{ gap: \"$2\", color: \"$on_surface_medium\" }}>\n            <ClockIcon height={16} width={16} />\n            <Text variant=\"xs\">{getFormattedTime(duration)}</Text>\n          </Flex>\n        ) : null}\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Box } from \"../../../../Layout\";\nimport { Text } from \"../../../../Text\";\n\nexport const StatisticBox = ({\n  title,\n  value = 0,\n}: {\n  title: string;\n  value: string | number | undefined;\n}) => {\n  if (!value && !(typeof value === \"number\")) {\n    return <></>;\n  }\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        background: \"$surface_default\",\n        borderRadius: \"$1\",\n        w: \"100%\",\n      }}\n    >\n      <Text\n        variant=\"tiny\"\n        css={{\n          textTransform: \"uppercase\",\n          color: \"$on_surface_medium\",\n          fontWeight: \"$semiBold\",\n          my: \"$4\",\n        }}\n      >\n        {title}\n      </Text>\n      <Text css={{ fontWeight: \"$semiBold\" }}>{value}</Text>\n    </Box>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport {\n  HMSQuizLeaderboardResponse,\n  HMSQuizLeaderboardSummary,\n  selectPollByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const useQuizSummary = (quizID: string) => {\n  const hmsActions = useHMSActions();\n  const quiz = useHMSStore(selectPollByID(quizID));\n  const [quizLeaderboard, setQuizLeaderboard] = useState<\n    HMSQuizLeaderboardResponse | undefined\n  >();\n\n  const summary: HMSQuizLeaderboardSummary = quizLeaderboard?.summary || {\n    totalUsers: 0,\n    votedUsers: 0,\n    avgScore: 0,\n    avgTime: 0,\n    correctUsers: 0,\n  };\n  const [calculations, setCalculations] = useState({\n    maxPossibleScore: 0,\n    totalResponses: 0,\n  });\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      if (\n        !quizLeaderboard &&\n        quiz &&\n        !quiz?.anonymous &&\n        quiz.state === \"stopped\"\n      ) {\n        const leaderboardData =\n          await hmsActions.interactivityCenter.fetchLeaderboard(quiz.id, 0, 50);\n\n        const { maxPossibleScore, totalResponses } =\n          quiz?.questions?.reduce((accumulator, question) => {\n            accumulator.maxPossibleScore += question.weight || 0;\n            accumulator.totalResponses += question?.responses?.length || 0;\n            return accumulator;\n          }, calculations) || calculations;\n\n        setQuizLeaderboard(leaderboardData);\n        setCalculations({ maxPossibleScore, totalResponses });\n      }\n    };\n\n    fetchLeaderboardData();\n  }, [quiz, hmsActions.interactivityCenter, quizLeaderboard, calculations]);\n\n  return {\n    quizLeaderboard,\n    summary,\n    maxPossibleScore: calculations.maxPossibleScore,\n    totalResponses: calculations.totalResponses,\n  };\n};\n", "import React from \"react\";\nimport { HMSPoll, selectLocalPeerID, useHMSStore } from \"@100mslive/react-sdk\";\nimport { Box } from \"../../../../Layout\";\nimport { Text } from \"../../../../Text\";\nimport { StatisticBox } from \"./StatisticBox\";\nimport { useQuizSummary } from \"./useQuizSummary\";\nimport { getFormattedTime } from \"../common/utils\";\n\nexport const PeerParticipationSummary = ({ quiz }: { quiz: HMSPoll }) => {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const { quizLeaderboard, summary } = useQuizSummary(quiz.id);\n  if (quiz.state !== \"stopped\") {\n    return <></>;\n  }\n  const isLocalPeerQuizCreator = localPeerId === quiz.startedBy;\n  const peerEntry = quizLeaderboard?.entries.find(\n    (entry) => entry.peer?.peerid === localPeerId\n  );\n\n  const boxes = isLocalPeerQuizCreator\n    ? [\n        {\n          title: \"Voted\",\n          value: `${\n            summary.totalUsers\n              ? ((100 * summary.votedUsers) / summary.totalUsers).toFixed(0)\n              : 0\n          }% (${summary.votedUsers}/${summary.totalUsers})`,\n        },\n        {\n          title: \"Correct Answers\",\n          value: `${\n            summary.totalUsers\n              ? ((100 * summary.correctUsers) / summary.totalUsers).toFixed(0)\n              : 0\n          }% (${summary.correctUsers}/${summary.totalUsers})`,\n        },\n        // Time in ms\n        { title: \"Avg. Time Taken\", value: getFormattedTime(summary.avgTime) },\n        {\n          title: \"Avg. Score\",\n          value: Number.isInteger(summary.avgScore)\n            ? summary.avgScore\n            : summary.avgScore.toFixed(2),\n        },\n      ]\n    : [\n        { title: \"Your rank\", value: peerEntry?.position || \"-\" },\n        { title: \"Points\", value: peerEntry?.score || 0 },\n        // Time in ms\n        { title: \"Time Taken\", value: getFormattedTime(peerEntry?.duration) },\n        {\n          title: \"Correct Answers\",\n          value: peerEntry?.totalResponses\n            ? `${peerEntry?.correctResponses}/${peerEntry.totalResponses}`\n            : \"-\",\n        },\n      ];\n\n  return (\n    <Box>\n      <Text css={{ fontWeight: \"$semiBold\", my: \"$8\" }}>\n        Participation Summary\n      </Text>\n      <Box css={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: \"$4\" }}>\n        {boxes.map((box) => (\n          <StatisticBox key={box.title} title={box.title} value={box.value} />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { selectPollByID, useHMSStore } from \"@100mslive/react-sdk\";\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  CrossIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../../Layout\";\nimport { Loading } from \"../../../../Loading\";\nimport { Text } from \"../../../../Text\";\n// @ts-ignore\nimport { Container } from \"../../Streaming/Common\";\nimport { LeaderboardEntry } from \"./LeaderboardEntry\";\nimport { PeerParticipationSummary } from \"./PeerParticipationSummary\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../../AppData/useSidepane\";\n// @ts-ignore\nimport { usePollViewState } from \"../../AppData/useUISettings\";\nimport { useQuizSummary } from \"./useQuizSummary\";\n// @ts-ignore\nimport { StatusIndicator } from \"../common/StatusIndicator\";\nimport { POLL_VIEWS } from \"../../../common/constants\";\n\nexport const LeaderboardSummary = ({ pollID }: { pollID: string }) => {\n  const quiz = useHMSStore(selectPollByID(pollID));\n  const { quizLeaderboard, maxPossibleScore } = useQuizSummary(pollID);\n  const [viewAllEntries, setViewAllEntries] = useState(false);\n  const { setPollView } = usePollViewState();\n  const toggleSidepane = useSidepaneToggle();\n\n  if (!quiz || !quizLeaderboard)\n    return (\n      <Flex align=\"center\" justify=\"center\" css={{ size: \"100%\" }}>\n        <Loading />\n      </Flex>\n    );\n\n  const questionCount = quiz.questions?.length || 0;\n\n  return (\n    <Container rounded>\n      <Flex direction=\"column\" css={{ size: \"100%\", p: \"$8\" }}>\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{ pb: \"$6\", borderBottom: \"1px solid $border_bright\", mb: \"$8\" }}\n        >\n          <Flex align=\"center\" css={{ gap: \"$4\" }}>\n            <Flex\n              css={{\n                color: \"$on_surface_medium\",\n                \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n              }}\n              onClick={() => setPollView(POLL_VIEWS.VOTE)}\n            >\n              <ChevronLeftIcon />\n            </Flex>\n            <Text variant=\"lg\" css={{ fontWeight: \"$semiBold\" }}>\n              {quiz.title}\n            </Text>\n            <StatusIndicator status={quiz.state} />\n          </Flex>\n          <Flex\n            css={{\n              color: \"$on_surface_medium\",\n              \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n            }}\n            onClick={toggleSidepane}\n          >\n            <CrossIcon />\n          </Flex>\n        </Flex>\n        <Box css={{ overflowY: \"auto\", mr: \"-$4\", pr: \"$4\" }}>\n          {!viewAllEntries ? <PeerParticipationSummary quiz={quiz} /> : null}\n\n          <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\", mt: \"$4\" }}>\n            Leaderboard\n          </Text>\n          <Text variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n            Based on score and time taken to cast the correct answer\n          </Text>\n          <Box\n            css={{\n              mt: \"$8\",\n              overflowY: \"auto\",\n              flex: viewAllEntries ? \"1 1 0\" : \"unset\",\n              mr: viewAllEntries ? \"-$6\" : \"unset\",\n              px: viewAllEntries ? \"0\" : \"$4\",\n              pr: viewAllEntries ? \"$6\" : \"$4\",\n              backgroundColor: viewAllEntries ? \"\" : \"$surface_default\",\n              borderRadius: \"$1\",\n            }}\n          >\n            {quizLeaderboard?.entries &&\n              quizLeaderboard.entries\n                .slice(0, viewAllEntries ? undefined : 5)\n                .map((question) => (\n                  <LeaderboardEntry\n                    key={question.position}\n                    position={question.position}\n                    score={question.score}\n                    questionCount={questionCount}\n                    correctResponses={question.correctResponses}\n                    userName={question.peer.username || \"\"}\n                    maxPossibleScore={maxPossibleScore}\n                    duration={question.duration}\n                  />\n                ))}\n            {quizLeaderboard?.entries?.length > 5 && !viewAllEntries ? (\n              <Flex\n                align=\"center\"\n                justify=\"end\"\n                css={{\n                  w: \"100%\",\n                  borderTop: \"1px solid $border_bright\",\n                  cursor: \"pointer\",\n                  color: \"$on_surface_high\",\n                  p: \"$6 $2\",\n                }}\n                onClick={() => setViewAllEntries(true)}\n              >\n                <Text variant=\"sm\">View All</Text> <ChevronRightIcon />\n              </Flex>\n            ) : null}\n          </Box>\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n", "// @ts-check\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectLocalPeer,\n  selectLocalPeerRoleName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  CheckCircleIcon,\n  ChevronDownIcon,\n  CrossCircleIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Button, Flex, Text } from \"../../../../\";\nimport { checkCorrectAnswer } from \"../../../common/utils\";\nimport { MultipleChoiceOptions } from \"../common/MultipleChoiceOptions\";\nimport { SingleChoiceOptions } from \"../common/SingleChoiceOptions\";\nimport { QUESTION_TYPE } from \"../../../common/constants\";\n\nexport const QuestionCard = ({\n  pollID,\n  isQuiz,\n  startedBy,\n  pollState,\n  index,\n  totalQuestions,\n  result,\n  type,\n  text,\n  options = [],\n  answer,\n  localPeerResponse,\n  updateSavedResponses,\n  rolesThatCanViewResponses,\n}) => {\n  const actions = useHMSActions();\n  const localPeer = useHMSStore(selectLocalPeer);\n\n  const isLocalPeerCreator = localPeer?.id === startedBy;\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  const roleCanViewResponse =\n    !rolesThatCanViewResponses ||\n    rolesThatCanViewResponses.length === 0 ||\n    rolesThatCanViewResponses.includes(localPeerRoleName || \"\");\n  const [localPeerChoice, setLocalPeerChoice] = useState(localPeerResponse);\n\n  useEffect(() => {\n    setLocalPeerChoice(localPeerResponse);\n  }, [localPeerResponse]);\n\n  const showVoteCount =\n    roleCanViewResponse &&\n    (localPeerChoice || (isLocalPeerCreator && pollState === \"stopped\")) &&\n    !isQuiz;\n\n  const isLive = pollState === \"started\";\n  const pollEnded = pollState === \"stopped\";\n  const canRespond = isLive && !localPeerChoice;\n  const startTime = useRef(Date.now());\n  const isCorrectAnswer = checkCorrectAnswer(answer, localPeerChoice, type);\n\n  const [singleOptionAnswer, setSingleOptionAnswer] = useState();\n  const [multipleOptionAnswer, setMultipleOptionAnswer] = useState(new Set());\n  const [showOptions, setShowOptions] = useState(true);\n\n  const respondedToQuiz = isQuiz && localPeerChoice && !localPeerChoice.skipped;\n\n  const isValidVote = useMemo(() => {\n    if (type === QUESTION_TYPE.SINGLE_CHOICE) {\n      return singleOptionAnswer !== undefined;\n    } else if (type === QUESTION_TYPE.MULTIPLE_CHOICE) {\n      return multipleOptionAnswer.size > 0;\n    }\n  }, [singleOptionAnswer, multipleOptionAnswer, type]);\n\n  const handleVote = useCallback(async () => {\n    if (!isValidVote) {\n      return;\n    }\n    const submittedResponse = {\n      questionIndex: index,\n      option: singleOptionAnswer,\n      options: Array.from(multipleOptionAnswer),\n      duration: Date.now() - startTime.current,\n    };\n    await actions.interactivityCenter.addResponsesToPoll(pollID, [\n      submittedResponse,\n    ]);\n    updateSavedResponses((prev) => {\n      const prevCopy = { ...prev };\n      prevCopy[index] = {\n        option: singleOptionAnswer,\n        options: Array.from(multipleOptionAnswer),\n      };\n      return prevCopy;\n    });\n    startTime.current = Date.now();\n  }, [\n    isValidVote,\n    index,\n    singleOptionAnswer,\n    multipleOptionAnswer,\n    actions.interactivityCenter,\n    pollID,\n    updateSavedResponses,\n  ]);\n\n  return (\n    <Box\n      css={{\n        backgroundColor: \"$surface_bright\",\n        borderRadius: \"$1\",\n        p: \"$md\",\n        mt: \"$md\",\n        border:\n          respondedToQuiz && !isLive\n            ? `1px solid ${\n                isCorrectAnswer ? \"$alert_success\" : \"$alert_error_default\"\n              }`\n            : \"none\",\n      }}\n    >\n      <Flex align=\"center\" justify=\"between\">\n        <Text\n          variant=\"caption\"\n          css={{\n            color: match({ respondedToQuiz, isLive, isCorrectAnswer })\n              .when(\n                ({ respondedToQuiz, isLive }) => respondedToQuiz && !isLive,\n                ({ isCorrectAnswer }) =>\n                  isCorrectAnswer ? \"$alert_success\" : \"$alert_error_default\"\n              )\n              .otherwise(() => \"$on_surface_low\"),\n            fontWeight: \"$semiBold\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$4\",\n          }}\n        >\n          {match({ respondedToQuiz, pollEnded, isCorrectAnswer })\n            .when(\n              ({ respondedToQuiz, pollEnded }) => respondedToQuiz && pollEnded,\n              ({ isCorrectAnswer }) => {\n                return isCorrectAnswer ? (\n                  <CheckCircleIcon height={16} width={16} />\n                ) : (\n                  <CrossCircleIcon height={16} width={16} />\n                );\n              }\n            )\n            .otherwise(() => null)}\n          QUESTION {index} OF {totalQuestions}: {type.toUpperCase()}\n        </Text>\n      </Flex>\n\n      <Flex justify=\"between\" css={{ my: \"$md\" }}>\n        <Text css={{ color: \"$on_surface_high\" }}>{text}</Text>\n        <Box\n          css={{\n            color: \"$on_surface_medium\",\n            \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n          }}\n          onClick={() => setShowOptions((prev) => !prev)}\n        >\n          <ChevronDownIcon\n            style={{\n              transform: showOptions ? \"rotate(180deg)\" : \"rotate(0deg)\",\n              transition: \"transform 0.3s ease\",\n            }}\n          />\n        </Box>\n      </Flex>\n\n      <Box\n        css={{\n          maxHeight: showOptions ? \"$80\" : \"0\",\n          transition: \"max-height 0.3s ease\",\n          overflowY: \"auto\",\n          mb: \"$4\",\n        }}\n      >\n        {type === QUESTION_TYPE.SINGLE_CHOICE ? (\n          <SingleChoiceOptions\n            key={index}\n            questionIndex={index}\n            isQuiz={isQuiz}\n            canRespond={canRespond}\n            correctOptionIndex={answer?.option}\n            options={options}\n            setAnswer={setSingleOptionAnswer}\n            totalResponses={result?.totalResponses}\n            showVoteCount={showVoteCount}\n            localPeerResponse={localPeerChoice}\n            isStopped={pollState === \"stopped\"}\n          />\n        ) : null}\n\n        {type === QUESTION_TYPE.MULTIPLE_CHOICE ? (\n          <MultipleChoiceOptions\n            questionIndex={index}\n            isQuiz={isQuiz}\n            canRespond={canRespond}\n            correctOptionIndexes={answer?.options}\n            options={options}\n            selectedOptions={multipleOptionAnswer}\n            setSelectedOptions={setMultipleOptionAnswer}\n            totalResponses={result?.totalResponses}\n            showVoteCount={showVoteCount}\n            localPeerResponse={localPeerChoice}\n            isStopped={pollState === \"stopped\"}\n          />\n        ) : null}\n      </Box>\n      {isLive && (\n        <QuestionActions\n          isValidVote={isValidVote}\n          onVote={handleVote}\n          response={localPeerChoice}\n          isQuiz={isQuiz}\n        />\n      )}\n    </Box>\n  );\n};\n\nconst QuestionActions = ({ isValidVote, response, isQuiz, onVote }) => {\n  return (\n    <Flex align=\"center\" justify=\"end\" css={{ gap: \"$4\", w: \"100%\" }}>\n      {response ? (\n        <Text css={{ fontWeight: \"$semiBold\", color: \"$on_surface_medium\" }}>\n          {response.skipped ? \"Skipped\" : null}\n          {isQuiz && !response.skipped ? \"Answered\" : null}\n          {!isQuiz && !response.skipped ? \"Voted\" : null}\n        </Text>\n      ) : (\n        <Button\n          css={{ p: \"$xs $10\", fontWeight: \"$semiBold\" }}\n          disabled={!isValidVote}\n          onClick={onVote}\n        >\n          {isQuiz ? \"Answer\" : \"Vote\"}\n        </Button>\n      )}\n    </Flex>\n  );\n};\n", "import React, { Dispatch, SetStateAction } from \"react\";\nimport { HMSPoll } from \"@100mslive/react-sdk\";\nimport { PeerParticipationSummary } from \"./PeerParticipationSummary\";\n// @ts-ignore\nimport { QuestionCard } from \"./QuestionCard\";\n\nexport const StandardView = ({\n  poll,\n  localPeerResponses,\n  updateSavedResponses,\n}: {\n  poll: HMSPoll;\n  localPeerResponses: Record<number, number | number[] | undefined>;\n  updateSavedResponses: Dispatch<SetStateAction<Record<any, any>>>;\n}) => {\n  if (!poll?.questions) {\n    return null;\n  }\n\n  const isQuiz = poll.type === \"quiz\";\n  const isStopped = poll.state === \"stopped\";\n\n  return (\n    <>\n      {isQuiz && isStopped ? <PeerParticipationSummary quiz={poll} /> : null}\n      {poll.questions?.map((question, index) => (\n        <QuestionCard\n          pollID={poll.id}\n          isQuiz={isQuiz}\n          startedBy={poll.startedBy}\n          pollState={poll.state}\n          key={`${question.text}-${index}`}\n          index={question.index}\n          text={question.text}\n          type={question.type}\n          result={question.result}\n          totalQuestions={poll.questions?.length || 0}\n          options={question.options}\n          localPeerResponse={localPeerResponses?.[question.index]}\n          answer={question.answer}\n          updateSavedResponses={updateSavedResponses}\n          rolesThatCanViewResponses={poll.rolesThatCanViewResponses}\n        />\n      ))}\n    </>\n  );\n};\n", "import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { HMSPoll } from \"@100mslive/react-sdk\";\n// @ts-ignore\nimport { QuestionCard } from \"./QuestionCard\";\n// @ts-ignore\nimport { getIndexToShow } from \"../../../common/utils\";\n\nexport const TimedView = ({\n  poll,\n  localPeerResponses,\n  updateSavedResponses,\n}: {\n  poll: HMSPoll;\n  localPeerResponses?: Record<number, number | number[] | undefined>;\n  updateSavedResponses: Dispatch<SetStateAction<Record<any, any>>>;\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(\n    getIndexToShow(localPeerResponses)\n  );\n  const activeQuestion = poll.questions?.find(\n    (question) => question.index === currentIndex\n  );\n  const attemptedAll = (poll.questions?.length || 0) < currentIndex;\n\n  // Handles increments so only one question is shown at a time in quiz\n  useEffect(() => {\n    setCurrentIndex(getIndexToShow(localPeerResponses));\n  }, [localPeerResponses]);\n\n  if ((!activeQuestion && !attemptedAll) || !poll.questions?.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {poll.questions.map((question) => {\n        return attemptedAll || activeQuestion?.index === question.index ? (\n          <QuestionCard\n            key={question.index}\n            pollID={poll.id}\n            isQuiz={poll.type === \"quiz\"}\n            startedBy={poll.startedBy}\n            pollState={poll.state}\n            index={question.index}\n            text={question.text}\n            type={question.type}\n            result={question?.result}\n            totalQuestions={poll.questions?.length || 0}\n            options={question.options}\n            localPeerResponse={localPeerResponses?.[question.index]}\n            answer={question.answer}\n            rolesThatCanViewResponses={poll.rolesThatCanViewResponses}\n            updateSavedResponses={updateSavedResponses}\n          />\n        ) : null;\n      })}\n    </>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  selectLocalPeer,\n  selectPeerNameByID,\n  selectPermissions,\n  selectPollByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChevronLeftIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Box, Button, Flex, Text } from \"../../../..\";\n// @ts-ignore\nimport { Container } from \"../../Streaming/Common\";\nimport { StandardView } from \"./StandardVoting\";\nimport { TimedView } from \"./TimedVoting\";\n// @ts-ignore\nimport { usePollViewState } from \"../../AppData/useUISettings\";\n// @ts-ignore\nimport { getPeerResponses } from \"../../../common/utils\";\nimport { StatusIndicator } from \"../common/StatusIndicator\";\nimport { POLL_VIEWS } from \"../../../common/constants\";\n\nexport const Voting = ({\n  id,\n  toggleVoting,\n}: {\n  id: string;\n  toggleVoting: () => void;\n}) => {\n  const actions = useHMSActions();\n  const poll = useHMSStore(selectPollByID(id));\n  const pollCreatorName = useHMSStore(selectPeerNameByID(poll?.createdBy));\n  const permissions = useHMSStore(selectPermissions);\n  const canEndActivity = !!permissions?.pollWrite;\n  const { setPollView } = usePollViewState();\n  // Sets view - linear or vertical, toggles timer indicator\n  const showSingleView = poll?.type === \"quiz\" && poll.state === \"started\";\n  const fetchedInitialResponses = useRef(false);\n  const [savedResponses, setSavedResponses] = useState<Record<any, any>>({});\n  const localPeer = useHMSStore(selectLocalPeer);\n  const localPeerId = localPeer?.id;\n  const customerUserId = localPeer?.customerUserId;\n\n  // To reset whenever a different poll is opened\n  useEffect(() => {\n    fetchedInitialResponses.current = false;\n    setSavedResponses({});\n  }, [id, setSavedResponses]);\n\n  useEffect(() => {\n    const getResponses = async () => {\n      if (\n        poll &&\n        actions.interactivityCenter &&\n        !fetchedInitialResponses.current\n      ) {\n        await actions.interactivityCenter.getPollResponses(poll, true);\n        fetchedInitialResponses.current = true;\n      }\n    };\n    getResponses();\n  }, [poll, actions.interactivityCenter]);\n\n  useEffect(() => {\n    if (poll?.questions) {\n      const localPeerResponses = getPeerResponses(\n        poll.questions,\n        localPeerId,\n        customerUserId\n      );\n      // @ts-ignore\n      localPeerResponses?.forEach((response) => {\n        if (response) {\n          setSavedResponses((prev) => {\n            const prevCopy = { ...prev };\n            prevCopy[response[0]?.questionIndex] = {\n              option: response[0]?.option,\n              options: response[0]?.options,\n            };\n            return prevCopy;\n          });\n        }\n      });\n    }\n  }, [localPeerId, poll?.questions, id, customerUserId]);\n\n  if (!poll) {\n    return null;\n  }\n\n  const canViewLeaderboard =\n    poll.type === \"quiz\" && poll.state === \"stopped\" && !poll.anonymous;\n\n  return (\n    <Container rounded>\n      <Flex\n        align=\"center\"\n        css={{\n          gap: \"$4\",\n          py: \"$6\",\n          px: \"$8\",\n          my: \"$4\",\n          w: \"100%\",\n          color: \"$on_surface_high\",\n          borderBottom: \"1px solid $border_default\",\n        }}\n      >\n        <Flex\n          onClick={() => setPollView(POLL_VIEWS.CREATE_POLL_QUIZ)}\n          css={{\n            cursor: \"pointer\",\n            c: \"$on_surface_medium\",\n            \"&:hover\": { color: \"$on_surface_high\" },\n          }}\n        >\n          <ChevronLeftIcon />\n        </Flex>\n        <Text variant=\"h6\">{poll.title}</Text>\n        <StatusIndicator status={poll.state} />\n        <Box\n          css={{\n            marginLeft: \"auto\",\n            cursor: \"pointer\",\n            \"&:hover\": { opacity: \"0.8\" },\n            height: \"fit-content\",\n          }}\n        >\n          <CrossIcon onClick={toggleVoting} />\n        </Box>\n      </Flex>\n\n      <Flex\n        direction=\"column\"\n        css={{ p: \"$8 $10\", flex: \"1 1 0\", overflowY: \"auto\" }}\n      >\n        {poll.state === \"started\" ? (\n          <Text css={{ color: \"$on_surface_medium\", fontWeight: \"$semiBold\" }}>\n            {pollCreatorName || \"Participant\"} started a {poll.type}\n          </Text>\n        ) : null}\n\n        {showSingleView ? (\n          <TimedView\n            poll={poll}\n            localPeerResponses={savedResponses}\n            updateSavedResponses={setSavedResponses}\n          />\n        ) : (\n          <StandardView\n            poll={poll}\n            localPeerResponses={savedResponses}\n            updateSavedResponses={setSavedResponses}\n          />\n        )}\n      </Flex>\n      <Flex\n        css={{\n          w: \"100%\",\n          justifyContent: \"end\",\n          alignItems: \"center\",\n          p: \"$8\",\n          borderTop: \"1px solid $border_bright\",\n        }}\n      >\n        {poll.state === \"started\" && canEndActivity && (\n          <Button\n            variant=\"danger\"\n            css={{ fontWeight: \"$semiBold\", w: \"max-content\" }}\n            onClick={() => actions.interactivityCenter.stopPoll(id)}\n          >\n            End {poll.type}\n          </Button>\n        )}\n        {canViewLeaderboard ? (\n          <Button\n            css={{ fontWeight: \"$semiBold\", w: \"max-content\" }}\n            onClick={() => setPollView(POLL_VIEWS.RESULTS)}\n          >\n            View Leaderboard\n          </Button>\n        ) : null}\n      </Flex>\n    </Container>\n  );\n};\n", "import React from \"react\";\n// @ts-ignore: No implicit Any\nimport { PollsQuizMenu } from \"./CreatePollQuiz/PollsQuizMenu\";\n// @ts-ignore: No implicit Any\nimport { CreateQuestions } from \"./CreateQuestions/CreateQuestions\";\nimport { LeaderboardSummary } from \"./Voting/LeaderboardSummary\";\n// @ts-ignore: No implicit Any\nimport { Voting } from \"./Voting/Voting\";\n// @ts-ignore: No implicit Any\nimport { usePollViewToggle } from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { usePollViewState } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { POLL_VIEWS } from \"../../common/constants\";\n\nexport const Polls = () => {\n  const togglePollView = usePollViewToggle();\n  const { pollInView: pollID, view } = usePollViewState();\n\n  if (view === POLL_VIEWS.CREATE_POLL_QUIZ) {\n    return <PollsQuizMenu />;\n  } else if (view === POLL_VIEWS.CREATE_QUESTIONS) {\n    return <CreateQuestions />;\n  } else if (view === POLL_VIEWS.VOTE) {\n    return <Voting toggleVoting={togglePollView} id={pollID} />;\n  } else if (view === POLL_VIEWS.RESULTS) {\n    return <LeaderboardSummary pollID={pollID} />;\n  } else {\n    return null;\n  }\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { selectDominantSpeaker, useHMSStore } from \"@100mslive/react-sdk\";\nimport { VolumeOneIcon } from \"@100mslive/react-icons\";\nimport { Flex, styled, Text, textEllipsis } from \"../../../\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\n\nexport const SpeakerTag = () => {\n  const dominantSpeaker = useHMSStore(selectDominantSpeaker);\n  return (\n    dominantSpeaker &&\n    dominantSpeaker.name && (\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        css={{\n          flex: \"1 1 0\",\n          color: \"$on_surface_high\",\n          \"@md\": { display: \"none\" },\n        }}\n      >\n        <VolumeOneIcon />\n        <Text\n          variant=\"sm\"\n          css={{ ...textEllipsis(200), ml: \"$2\" }}\n          title={dominantSpeaker.name}\n        >\n          {dominantSpeaker.name}\n        </Text>\n      </Flex>\n    )\n  );\n};\n\nconst LogoImg = styled(\"img\", {\n  maxHeight: \"$14\",\n  w: \"auto\",\n  objectFit: \"contain\",\n  \"@md\": {\n    maxHeight: \"$12\",\n  },\n});\n\nexport const Logo = () => {\n  const roomLayout = useRoomLayout();\n  const logo = roomLayout?.logo?.url;\n  const [hideImage, setHideImage] = useState(false);\n  // Hide logo for now as there is not enough space\n  useEffect(() => {\n    if (hideImage) {\n      setHideImage(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [logo]);\n\n  return logo && !hideImage ? (\n    <LogoImg\n      src={logo}\n      alt=\"Brand Logo\"\n      onError={(e) => {\n        e.target.onerror = null;\n        setHideImage(true);\n      }}\n    />\n  ) : null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { getFormattedTime } from \"../Polls/common/utils\";\n\nexport const Duration = ({ timestamp }: { timestamp: Date }) => {\n  const [elapsedTime, setElapsedTime] = useState(\n    getFormattedTime(Date.now() - timestamp.getTime(), false)\n  );\n\n  useEffect(() => {\n    const timerAdded = setInterval(() => {\n      setElapsedTime(getFormattedTime(Date.now() - timestamp.getTime(), false));\n    }, 1000);\n\n    return () => {\n      clearInterval(timerAdded);\n    };\n  }, [timestamp]);\n\n  return (\n    <Flex css={{ color: \"$on_surface_medium\" }}>\n      <Text variant=\"xs\" css={{ color: \"inherit\" }}>\n        Started {elapsedTime} ago\n      </Text>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { Duration } from \"./Duration\";\n\nexport const RoomDetailsRow = ({ details }: { details: (string | Date)[] }) => {\n  return (\n    <Flex align=\"center\" css={{ w: \"100%\" }}>\n      {details.map((detail, index) => (\n        <React.Fragment key={detail.toString()}>\n          {index > 0 && (\n            <Box\n              css={{\n                h: \"$2\",\n                w: \"$2\",\n                r: \"$round\",\n                bg: \"$on_surface_medium\",\n                m: \"0 $2\",\n              }}\n            />\n          )}\n          {typeof detail !== \"string\" ? (\n            <Duration timestamp={detail} />\n          ) : (\n            <Text variant=\"xs\" css={{ c: \"$on_surface_medium\" }}>\n              {detail}\n            </Text>\n          )}\n        </React.Fragment>\n      ))}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit any\nimport { Logo } from \"../Header/HeaderComponents\";\nimport { RoomDetailsRow } from \"./RoomDetailsRow\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../AppData/useSidepane\";\nimport { useMobileHLSStream } from \"../../common/hooks\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const RoomDetailsPane = () => {\n  const { description } = useRoomLayoutHeader();\n  const isMwebHLSStream = useMobileHLSStream();\n  return (\n    <Box css={{ flex: \"1 1 0\", position: \"relative\" }}>\n      {isMwebHLSStream ? (\n        <Flex direction=\"row\" align=\"center\" gap=\"2\">\n          <Logo />\n          <ShowRoomDetailHeader />\n        </Flex>\n      ) : (\n        <ShowRoomDetailHeader />\n      )}\n      <Box css={{ mt: \"$10\" }}>\n        <Text\n          css={{\n            color: \"$on_surface_high\",\n            fontWeight: \"$semiBold\",\n            display: isMwebHLSStream ? \"none\" : \"\",\n          }}\n        >\n          Description\n        </Text>\n        <Text variant=\"sm\" css={{ c: \"$on_surface_medium\" }}>\n          {description}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nconst ShowRoomDetailHeader = () => {\n  const { title, details } = useRoomLayoutHeader();\n  const toggleDetailsPane = useSidepaneToggle(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n  const isMwebHLSStream = useMobileHLSStream();\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ position: \"sticky\", top: 0, bg: \"$surface_dim\" }}\n    >\n      <Flex justify=\"between\" align=\"center\" css={{ w: \"100%\" }}>\n        <Text variant=\"h6\">{title}</Text>\n        {!isMwebHLSStream && (\n          <Flex\n            onClick={toggleDetailsPane}\n            css={{\n              color: \"$on_surface_high\",\n              cursor: \"pointer\",\n              \"&:hover\": { opacity: \"0.8\" },\n            }}\n          >\n            <CrossIcon />\n          </Flex>\n        )}\n      </Flex>\n      <RoomDetailsRow details={details} />\n    </Flex>\n  );\n};\n", "import React, { useMemo, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSPeer,\n  HMSPeerType,\n  selectMessagesUnreadCountByPeerID,\n  selectMessagesUnreadCountByRole,\n  selectRemotePeers,\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { CheckIcon, PeopleIcon } from \"@100mslive/react-icons\";\nimport {\n  Box,\n  CSS,\n  Dropdown,\n  Flex,\n  HorizontalDivider,\n  Text,\n  Tooltip,\n} from \"../../..\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { ParticipantSearch } from \"../Footer/ParticipantList\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSetSubscribedChatSelector } from \"../AppData/useUISettings\";\nimport { useFilteredRoles } from \"../../common/hooks\";\nimport { CHAT_SELECTOR } from \"../../common/constants\";\n\nconst ChatDotIcon = () => {\n  return (\n    <Box css={{ size: \"$6\", bg: \"$primary_default\", mx: \"$2\", r: \"$round\" }} />\n  );\n};\n\nconst SelectorItem = ({\n  value,\n  active,\n  onClick,\n  unreadCount,\n  icon = undefined,\n}: {\n  value: string;\n  active: boolean;\n  onClick: () => void;\n  unreadCount: number;\n  icon?: React.JSX.Element;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const Root = !isMobile\n    ? Dropdown.Item\n    : ({ children, ...rest }: { children: React.ReactNode; css: CSS }) => (\n        <Flex {...rest} css={{ p: \"$6 $8\", ...rest.css }}>\n          {children}\n        </Flex>\n      );\n  return (\n    <Root\n      data-testid=\"chat_members\"\n      css={{ align: \"center\", px: \"$10\", py: \"$4\", bg: \"$surface_default\" }}\n      onClick={onClick}\n    >\n      <Text\n        variant=\"sm\"\n        css={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"$4\",\n          fontWeight: \"$semiBold\",\n          color: \"$on_surface_high\",\n        }}\n      >\n        {icon}\n        {value}\n      </Text>\n      <Flex align=\"center\" css={{ ml: \"auto\", color: \"$on_primary_high\" }}>\n        {unreadCount > 0 && (\n          <Tooltip title={`${unreadCount} unread`}>\n            <Box css={{ mr: active ? \"$3\" : 0 }}>\n              <ChatDotIcon />\n            </Box>\n          </Tooltip>\n        )}\n        {active && <CheckIcon width={16} height={16} />}\n      </Flex>\n    </Root>\n  );\n};\n\nconst SelectorHeader = React.memo(\n  ({\n    isHorizontalDivider = true,\n    children,\n  }: {\n    isHorizontalDivider?: boolean;\n    children: React.ReactNode;\n  }) => {\n    return (\n      <Box css={{ flexShrink: 0 }}>\n        {isHorizontalDivider && <HorizontalDivider space={4} />}\n        <Text\n          variant=\"overline\"\n          css={{\n            p: \"$4 $10\",\n            fontWeight: \"$semiBold\",\n            textTransform: \"uppercase\",\n            color: \"$on_surface_medium\",\n          }}\n        >\n          {children}\n        </Text>\n      </Box>\n    );\n  }\n);\n\nconst Everyone = React.memo(({ active }: { active: boolean }) => {\n  const unreadCount: number = useHMSStore(selectUnreadHMSMessagesCount);\n  const [, setPeerSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.PEER);\n  const [, setRoleSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.ROLE);\n  return (\n    <SelectorItem\n      value=\"Everyone\"\n      icon={<PeopleIcon />}\n      active={active}\n      unreadCount={unreadCount}\n      onClick={() => {\n        setPeerSelector({});\n        setRoleSelector(\"\");\n      }}\n    />\n  );\n});\n\nconst RoleItem = React.memo(\n  ({ role, active }: { role: string; active: boolean }) => {\n    const unreadCount: number = useHMSStore(\n      selectMessagesUnreadCountByRole(role)\n    );\n    const [, setPeerSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.PEER\n    );\n    const [, setRoleSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.ROLE\n    );\n    return (\n      <SelectorItem\n        value={role}\n        active={active}\n        unreadCount={unreadCount}\n        onClick={() => {\n          setPeerSelector({});\n          setRoleSelector(role);\n        }}\n      />\n    );\n  }\n);\n\nconst PeerItem = ({\n  peerId,\n  name,\n  active,\n}: {\n  name: string;\n  peerId: string;\n  active: boolean;\n}) => {\n  const unreadCount: number = useHMSStore(\n    selectMessagesUnreadCountByPeerID(peerId)\n  );\n  const [, setPeerSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.PEER);\n  const [, setRoleSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.ROLE);\n\n  return (\n    <SelectorItem\n      value={name}\n      active={active}\n      unreadCount={unreadCount}\n      onClick={() => {\n        setPeerSelector({ id: peerId, name });\n        setRoleSelector(\"\");\n      }}\n    />\n  );\n};\n\nconst VirtualizedSelectItemList = ({\n  peers,\n  selectedRole,\n  selectedPeerId,\n  searchValue,\n  isPublicChatEnabled,\n}: {\n  peers: HMSPeer[];\n  selectedRole: string;\n  selectedPeerId: string;\n  searchValue: string;\n  isPublicChatEnabled: boolean;\n}) => {\n  const roles = useFilteredRoles();\n  const filteredPeers = useMemo(\n    () =>\n      peers.filter(\n        // search should be empty or search phrase should be included in name\n        (peer) =>\n          (!searchValue ||\n            peer.name.toLowerCase().includes(searchValue.toLowerCase())) &&\n          peer.type !== HMSPeerType.SIP\n      ),\n    [peers, searchValue]\n  );\n\n  const listItems = useMemo(() => {\n    let selectItems: React.ReactNode[] = [];\n    if (isPublicChatEnabled && !searchValue) {\n      selectItems = [<Everyone active={!selectedRole && !selectedPeerId} />];\n    }\n    if (roles.length > 0 && !searchValue) {\n      selectItems.push(\n        <SelectorHeader isHorizontalDivider={isPublicChatEnabled}>\n          Roles\n        </SelectorHeader>\n      );\n      roles.forEach((userRole) =>\n        selectItems.push(\n          <RoleItem\n            key={userRole}\n            active={selectedRole === userRole}\n            role={userRole}\n          />\n        )\n      );\n    }\n\n    if (filteredPeers.length > 0) {\n      selectItems.push(\n        <SelectorHeader\n          isHorizontalDivider={isPublicChatEnabled || roles.length > 0}\n        >\n          Participants\n        </SelectorHeader>\n      );\n    }\n    filteredPeers.forEach((peer) =>\n      selectItems.push(\n        <PeerItem\n          key={peer.id}\n          name={peer.name}\n          peerId={peer.id}\n          active={peer.id === selectedPeerId}\n        />\n      )\n    );\n\n    return selectItems;\n  }, [\n    isPublicChatEnabled,\n    searchValue,\n    selectedRole,\n    selectedPeerId,\n    roles,\n    filteredPeers,\n  ]);\n\n  return (\n    <Dropdown.Group\n      css={{ overflowY: \"auto\", maxHeight: \"$64\", bg: \"$surface_default\" }}\n    >\n      {listItems.map((item, index) => (\n        <Box key={index}>{item}</Box>\n      ))}\n    </Dropdown.Group>\n  );\n};\n\nexport const ChatSelector = ({\n  role,\n  peerId,\n}: {\n  role: string;\n  peerId: string;\n}) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const peers = useHMSStore(selectRemotePeers);\n  const [search, setSearch] = useState(\"\");\n\n  const isPrivateChatEnabled = !!elements?.chat?.private_chat_enabled;\n  const isPublicChatEnabled = !!elements?.chat?.public_chat_enabled;\n\n  return (\n    <>\n      {peers.length > 0 && isPrivateChatEnabled && (\n        <Box css={{ px: \"$4\" }}>\n          <ParticipantSearch\n            onSearch={setSearch}\n            placeholder=\"Search for participants\"\n          />\n        </Box>\n      )}\n      <VirtualizedSelectItemList\n        selectedRole={role}\n        selectedPeerId={peerId}\n        peers={isPrivateChatEnabled ? peers : []}\n        isPublicChatEnabled={isPublicChatEnabled}\n        searchValue={search}\n      />\n    </>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  CrossIcon,\n  GroupIcon,\n  PersonIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { ChatSelector } from \"./ChatSelector\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSubscribeChatSelector } from \"../AppData/useUISettings\";\nimport { useDefaultChatSelection, useFilteredRoles } from \"../../common/hooks\";\nimport { CHAT_SELECTOR } from \"../../common/constants\";\n\nexport const ChatSelectorContainer = () => {\n  const [open, setOpen] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  const { elements } = useRoomLayoutConferencingScreen();\n  const isPrivateChatEnabled = !!elements?.chat?.private_chat_enabled;\n  const isPublicChatEnabled = !!elements?.chat?.public_chat_enabled;\n  const roles = useFilteredRoles();\n  const selectedPeer = useSubscribeChatSelector(CHAT_SELECTOR.PEER);\n  const selectedRole = useSubscribeChatSelector(CHAT_SELECTOR.ROLE);\n  const defaultSelection = useDefaultChatSelection();\n  const selection = selectedPeer.name || selectedRole || defaultSelection;\n\n  if (\n    !(isPrivateChatEnabled || isPublicChatEnabled || roles.length > 0) &&\n    !isPrivateChatEnabled &&\n    !selection\n  ) {\n    return null;\n  }\n  return (\n    <>\n      <Flex align=\"center\" css={{ mb: \"$8\", flex: \"1 1 0\", pl: \"$2\" }}>\n        <Text variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n          {selection ? \"To\" : \"Choose Participant\"}\n        </Text>\n\n        {isMobile ? (\n          <Flex\n            align=\"center\"\n            css={{\n              c: \"$on_surface_medium\",\n              border: \"1px solid $border_bright\",\n              r: \"$0\",\n              p: \"$1 $2\",\n              ml: \"$6\",\n            }}\n            gap=\"1\"\n            onClick={(e) => {\n              setOpen((value) => !value);\n              e.stopPropagation();\n            }}\n          >\n            <Text\n              variant=\"caption\"\n              css={{\n                c: \"$on_surface_high\",\n                pr: \"$2\",\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"$1\",\n                textTransform:\n                  selection !== selectedPeer.name ? \"capitalize\" : undefined,\n              }}\n            >\n              {selection === CHAT_SELECTOR.EVERYONE ? (\n                <GroupIcon width={16} height={16} />\n              ) : (\n                <PersonIcon width={16} height={16} />\n              )}\n              {selection || \"Search\"}\n            </Text>\n            {selection &&\n              (open ? (\n                <ChevronUpIcon width={16} height={16} />\n              ) : (\n                <ChevronDownIcon width={16} height={16} />\n              ))}\n          </Flex>\n        ) : (\n          <Dropdown.Root open={open} onOpenChange={(value) => setOpen(value)}>\n            <Dropdown.Trigger\n              asChild\n              data-testid=\"participant_list_filter\"\n              css={{\n                background: \"$primary_default\",\n                r: \"$0\",\n                p: \"$1 $2\",\n                ml: \"$6\",\n              }}\n              tabIndex={0}\n            >\n              <Flex align=\"center\" css={{ c: \"$on_surface_medium\" }} gap=\"1\">\n                <Text\n                  variant=\"caption\"\n                  css={{\n                    c: \"$on_surface_high\",\n                    pr: \"$2\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"$1\",\n                    textTransform:\n                      selection !== selectedPeer.name\n                        ? \"capitalize\"\n                        : undefined,\n                  }}\n                >\n                  {selection === CHAT_SELECTOR.EVERYONE ? (\n                    <GroupIcon width={16} height={16} />\n                  ) : (\n                    <PersonIcon width={16} height={16} />\n                  )}\n                  {selection || \"Search\"}\n                </Text>\n                {selection && (\n                  <ChevronDownIcon\n                    style={{\n                      transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                      transition: \"transform 150ms ease\",\n                    }}\n                    width={12}\n                    height={12}\n                  />\n                )}\n              </Flex>\n            </Dropdown.Trigger>\n\n            <Dropdown.Content\n              css={{\n                w: \"$64\",\n                overflow: \"hidden\",\n                maxHeight: \"unset\",\n                bg: \"$surface_default\",\n              }}\n              align=\"start\"\n              sideOffset={8}\n            >\n              <ChatSelector role={selectedRole} peerId={selectedPeer.id} />\n            </Dropdown.Content>\n          </Dropdown.Root>\n        )}\n      </Flex>\n      {isMobile ? (\n        <Sheet.Root open={open} onOpenChange={(value) => setOpen(value)}>\n          <Sheet.Content css={{ pt: \"$8\" }}>\n            <Sheet.Title\n              css={{\n                display: \"flex\",\n                w: \"100%\",\n                justifyContent: \"space-between\",\n                px: \"$10\",\n                pb: \"$4\",\n                mb: \"$8\",\n                borderBottom: \"1px solid $border_bright\",\n              }}\n            >\n              <Text\n                css={{ color: \"$on_surface_medium\", fontWeight: \"$semiBold\" }}\n              >\n                Chat with\n              </Text>\n              <Sheet.Close css={{ color: \"$on_surface_medium\" }}>\n                <CrossIcon />\n              </Sheet.Close>\n            </Sheet.Title>\n            <Box\n              onClick={() => {\n                setOpen(false);\n              }}\n            >\n              <ChatSelector role={selectedRole} peerId={selectedPeer.id} />\n            </Box>\n          </Sheet.Content>\n        </Sheet.Root>\n      ) : null}\n    </>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectAppData,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useChatDraftMessage = () => {\n  const hmsActions = useHMSActions();\n  let chatDraftMessage = useHMSStore(selectAppData(APP_DATA.chatDraft));\n  if (chatDraftMessage === undefined || chatDraftMessage === null) {\n    chatDraftMessage = \"\";\n  }\n  const setDraftMessage = useCallback(\n    (message) => {\n      hmsActions.setAppData(APP_DATA.chatDraft, message, true);\n    },\n    [hmsActions]\n  );\n  return [chatDraftMessage, setDraftMessage];\n};\n", "import { useEffect, useRef } from \"react\";\n\nexport const useEmojiPickerStyles = (showing) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    if (showing) {\n      setTimeout(() => {\n        const root = ref.current?.querySelector(\"em-emoji-picker\")?.shadowRoot;\n        const style = document.createElement(\"style\");\n        style.textContent = `\n          #root {\n            --em-rgb-color: var(--hms-ui-colors-on_surface_high);\n            --em-rgb-input: var(--hms-ui-colors-on_primary_high);\n            --em-color-border: var(--hms-ui-colors-surface_bright);\n            --color-b: var(--hms-ui-colors-on_surface_high);\n            --rgb-background: transparent;\n            color: var(--hms-ui-colors-on_surface_high);\n            font-family: var(--hms-ui-fonts-sans);\n          }\n          .sticky {\n            top: 0.25rem;\n            background-color: var(--hms-ui-colors-surface_bright);\n            margin-top: 0.5rem;\n          }\n        `;\n        root?.appendChild(style);\n      }, 0);\n    }\n  }, [showing]);\n\n  return ref;\n};\n", "import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useMedia } from \"react-use\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport {\n  HMSException,\n  selectLocalPeer,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  EmojiIcon,\n  PauseCircleIcon,\n  SendIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  config as cssConfig,\n  Flex,\n  IconButton as BaseIconButton,\n  Popover,\n  styled,\n  Text,\n} from \"../../..\";\nimport { IconButton } from \"../../../IconButton\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { RaiseHand } from \"../RaiseHand\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { ChatSelectorContainer } from \"./ChatSelectorContainer\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit any\nimport { useChatDraftMessage } from \"../AppData/useChatState\";\n// @ts-ignore: No implicit any\nimport {\n  useSetSubscribedChatSelector,\n  useSubscribeChatSelector,\n} from \"../AppData/useUISettings\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\n// @ts-ignore: No implicit any\nimport { useEmojiPickerStyles } from \"./useEmojiPickerStyles\";\nimport {\n  useDefaultChatSelection,\n  useLandscapeHLSStream,\n  useMobileHLSStream,\n} from \"../../common/hooks\";\nimport { CHAT_MESSAGE_LIMIT } from \"./utils\";\nimport { CHAT_SELECTOR, SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst TextArea = styled(\"textarea\", {\n  width: \"100%\",\n  bg: \"transparent\",\n  color: \"$on_primary_high\",\n  resize: \"none\",\n  lineHeight: \"1rem\",\n  position: \"relative\",\n  fontFamily: \"$sans\",\n  fontSize: \"100%\",\n  margin: 0,\n  padding: 0,\n  top: \"$3\",\n  \"&:focus\": {\n    boxShadow: \"none\",\n    outline: \"none\",\n  },\n});\n\nfunction EmojiPicker({ onSelect }: { onSelect: (emoji: any) => void }) {\n  const [showEmoji, setShowEmoji] = useState(false);\n  const ref = useEmojiPickerStyles(showEmoji);\n  return (\n    <Popover.Root open={showEmoji} onOpenChange={setShowEmoji}>\n      <Popover.Trigger asChild css={{ appearance: \"none\" }}>\n        <BaseIconButton as=\"div\">\n          <EmojiIcon />\n        </BaseIconButton>\n      </Popover.Trigger>\n      <Popover.Portal>\n        <Popover.Content\n          alignOffset={-40}\n          sideOffset={16}\n          align=\"end\"\n          css={{\n            p: 0,\n          }}\n        >\n          <Box\n            css={{\n              minWidth: 352,\n              minHeight: 435,\n            }}\n            ref={ref}\n          >\n            <Picker\n              onEmojiSelect={onSelect}\n              data={data}\n              previewPosition=\"none\"\n              skinPosition=\"search\"\n            />\n          </Box>\n        </Popover.Content>\n      </Popover.Portal>\n    </Popover.Root>\n  );\n}\n\nexport const ChatFooter = ({\n  onSend,\n  children,\n}: {\n  onSend: (count: number) => void;\n  children?: ReactNode;\n}) => {\n  const hmsActions = useHMSActions();\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const [draftMessage, setDraftMessage] = useChatDraftMessage();\n  const isMobile = useMedia(cssConfig.media.md);\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const message_placeholder =\n    elements?.chat?.message_placeholder || \"Send a message\";\n  const localPeer = useHMSStore(selectLocalPeer);\n  const isOverlayChat = elements?.chat?.is_overlay;\n  const canDisableChat = !!elements?.chat?.real_time_controls?.can_disable_chat;\n  const selectedPeer = useSubscribeChatSelector(CHAT_SELECTOR.PEER);\n  const [selectedRole, setRoleSelector] = useSetSubscribedChatSelector(\n    CHAT_SELECTOR.ROLE\n  );\n  const defaultSelection = useDefaultChatSelection();\n  const selection = selectedPeer.name || selectedRole || defaultSelection;\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  const isMwebHLSStream = useMobileHLSStream();\n  const [messageLengthExceeded, setMessageLengthExceeded] = useState(false);\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  useEffect(() => {\n    if (\n      !selectedPeer.id &&\n      !selectedRole &&\n      ![\"Everyone\", \"\"].includes(defaultSelection)\n    ) {\n      setRoleSelector(defaultSelection);\n    } else {\n      // @ts-ignore\n      if (\n        !(isMobile || isLandscapeHLSStream) &&\n        !elements?.chat?.disable_autofocus\n      ) {\n        inputRef.current?.focus();\n      }\n    }\n  }, [\n    defaultSelection,\n    selectedPeer,\n    selectedRole,\n    setRoleSelector,\n    isMobile,\n    isLandscapeHLSStream,\n    elements?.chat,\n  ]);\n\n  const resetInputHeight = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = `${Math.max(\n        32,\n        inputRef.current.value\n          ? Math.min(inputRef.current.scrollHeight, 24 * 4)\n          : 0\n      )}px`;\n    }\n  }, []);\n\n  const updateInputHeight = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = `${Math.max(\n        32,\n        Math.min(inputRef.current.scrollHeight, 24 * 4)\n      )}px`;\n    }\n  }, []);\n\n  const sendMessage = useCallback(async () => {\n    const message = inputRef?.current?.value;\n    if (!message || !message.trim().length) {\n      return;\n    }\n    try {\n      if (selectedRole) {\n        await hmsActions.sendGroupMessage(message, [selectedRole]);\n      } else if (selectedPeer.id) {\n        await hmsActions.sendDirectMessage(message, selectedPeer.id);\n      } else {\n        await hmsActions.sendBroadcastMessage(message);\n      }\n      inputRef.current.value = \"\";\n      resetInputHeight();\n      setTimeout(() => {\n        onSend(1);\n      }, 0);\n    } catch (error) {\n      const err = error as HMSException;\n      ToastManager.addToast({\n        title: err.message.startsWith(\"Invalid peer\")\n          ? `${selectedPeer.name} is not in this room`\n          : err.message,\n      });\n    }\n  }, [selectedRole, selectedPeer, hmsActions, onSend]);\n\n  useEffect(() => {\n    const messageElement = inputRef.current;\n    if (messageElement) {\n      messageElement.value = draftMessage;\n      updateInputHeight();\n      setMessageLengthExceeded(draftMessage.length > CHAT_MESSAGE_LIMIT);\n    }\n  }, [draftMessage]);\n\n  useEffect(() => {\n    const messageElement = inputRef.current;\n    return () => {\n      setDraftMessage(messageElement?.value || \"\");\n    };\n  }, [setDraftMessage]);\n\n  if (isLocalPeerBlacklisted) {\n    return null;\n  }\n\n  return (\n    <Box css={{ position: \"relative\" }}>\n      <Flex>\n        <ChatSelectorContainer />\n        {canDisableChat && isMobile && isOverlayChat ? (\n          <Flex\n            align=\"center\"\n            justify=\"end\"\n            css={{ mb: \"$4\" }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <Popover.Root>\n              <Popover.Trigger asChild>\n                <IconButton css={{ border: \"1px solid $border_bright\" }}>\n                  <VerticalMenuIcon height=\"16\" width=\"16\" />\n                </IconButton>\n              </Popover.Trigger>\n              <Popover.Portal>\n                <Popover.Content\n                  align=\"end\"\n                  side=\"top\"\n                  onClick={() => {\n                    const chatState = {\n                      enabled: false,\n                      updatedBy: {\n                        peerId: localPeer?.id,\n                        userId: localPeer?.customerUserId,\n                        userName: localPeer?.name,\n                      },\n                      updatedAt: Date.now(),\n                    };\n                    hmsActions.sessionStore.set(\n                      SESSION_STORE_KEY.CHAT_STATE,\n                      chatState\n                    );\n                  }}\n                  css={{\n                    backgroundColor: \"$surface_default\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"$4\",\n                    borderRadius: \"$1\",\n                    color: \"$on_surface_high\",\n                    cursor: \"pointer\",\n                    \"&:hover\": { backgroundColor: \"$surface_dim\" },\n                  }}\n                >\n                  <PauseCircleIcon />\n                  <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\" }}>\n                    Pause Chat\n                  </Text>\n                </Popover.Content>\n              </Popover.Portal>\n            </Popover.Root>\n          </Flex>\n        ) : null}\n      </Flex>\n      {selection && (\n        <Flex\n          align={inputRef.current?.scrollHeight === 32 ? \"center\" : \"end\"}\n          css={{ gap: \"$4\", w: \"100%\" }}\n        >\n          <Flex\n            align=\"end\"\n            css={{\n              bg:\n                isOverlayChat && isMobile ? \"$surface_dim\" : \"$surface_default\",\n              minHeight: \"$16\",\n              position: \"relative\",\n              py: isOverlayChat && isMobile ? \"$2\" : \"$6\",\n              pl: \"$8\",\n              flexGrow: 1,\n              r: \"$1\",\n              \"@md\": {\n                minHeight: \"$14\",\n                boxSizing: \"border-box\",\n              },\n              ...(isLandscapeHLSStream ? { minHeight: \"$14\", py: 0 } : {}),\n            }}\n          >\n            {children}\n            <TextArea\n              maxLength={CHAT_MESSAGE_LIMIT + 10}\n              css={{\n                c: \"$on_surface_high\",\n                \"&:valid ~ .send-msg\": { color: \"$on_surface_high\" },\n                \"& ~ .send-msg\": { color: \"$on_surface_low\" },\n                \"&::placeholder\": { color: \"$on_surface_medium\" },\n                border: \"none\",\n              }}\n              placeholder={message_placeholder}\n              ref={inputRef}\n              required\n              autoFocus={!(isMobile || isLandscapeHLSStream)}\n              onKeyPress={async (event) => {\n                if (event.key === \"Enter\") {\n                  if (!event.shiftKey && !messageLengthExceeded) {\n                    event.preventDefault();\n                    await sendMessage();\n                  }\n                }\n              }}\n              autoComplete=\"off\"\n              aria-autocomplete=\"none\"\n              onChange={(e) => {\n                updateInputHeight();\n                setMessageLengthExceeded(\n                  e.target.value.length > CHAT_MESSAGE_LIMIT\n                );\n              }}\n              onBlur={resetInputHeight}\n              onPaste={(e) => e.stopPropagation()}\n              onCut={(e) => e.stopPropagation()}\n              onCopy={(e) => e.stopPropagation()}\n            />\n            {!isMobile && !isLandscapeHLSStream ? (\n              <EmojiPicker\n                onSelect={(emoji) => {\n                  if (inputRef.current) {\n                    inputRef.current.value += ` ${emoji.native} `;\n                  }\n                }}\n              />\n            ) : null}\n            <BaseIconButton\n              className=\"send-msg\"\n              onClick={sendMessage}\n              disabled={messageLengthExceeded}\n              css={{\n                ml: \"auto\",\n                height: \"max-content\",\n                mr: \"$4\",\n                \"&:hover\": { c: isMobile ? \"\" : \"$on_surface_medium\" },\n              }}\n              data-testid=\"send_msg_btn\"\n            >\n              <SendIcon />\n            </BaseIconButton>\n          </Flex>\n          {(isMwebHLSStream || isLandscapeHLSStream) && (\n            <>\n              <Flex\n                css={{\n                  alignItems: \"center\",\n                }}\n                gap=\"2\"\n              >\n                <RaiseHand css={{ bg: \"$surface_default\" }} />\n                <MoreSettings elements={elements} screenType={screenType} />\n              </Flex>\n            </>\n          )}\n        </Flex>\n      )}\n      {messageLengthExceeded && (\n        <Text\n          variant=\"xs\"\n          css={{\n            color: \"$alert_error_default\",\n            fontWeight: \"$semiBold\",\n            mt: \"$1\",\n            ml: \"$7\",\n          }}\n        >\n          Message cannot exceed 2000 characters\n        </Text>\n      )}\n    </Box>\n  );\n};\n", "import React, { useCallback } from \"react\";\nimport {\n  selectLocalPeer,\n  selectSessionStore,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const ChatPaused = () => {\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const can_disable_chat =\n    !!elements?.chat?.real_time_controls?.can_disable_chat;\n  const { enabled: isChatEnabled = true, updatedBy: chatStateUpdatedBy = \"\" } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n\n  const localPeer = useHMSStore(selectLocalPeer);\n\n  const unPauseChat = useCallback(\n    async () =>\n      await hmsActions.sessionStore.set(SESSION_STORE_KEY.CHAT_STATE, {\n        enabled: true,\n        updatedBy: {\n          userName: localPeer?.name,\n          userId: localPeer?.customerUserId,\n          peerId: localPeer?.id,\n        },\n        updatedAt: Date.now(),\n      }),\n    [hmsActions, localPeer]\n  );\n\n  return isChatEnabled ? null : (\n    <Flex\n      align=\"center\"\n      justify=\"between\"\n      css={{\n        borderRadius: \"$1\",\n        bg: \"$surface_default\",\n        p: \"$2 $4 $2 $8\",\n        w: \"100%\",\n      }}\n    >\n      <Box>\n        <Text\n          variant=\"sm\"\n          css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}\n        >\n          Chat paused\n        </Text>\n        <Text\n          variant=\"xs\"\n          css={{\n            color: \"$on_surface_medium\",\n            maxWidth: \"100%\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n          }}\n        >\n          Chat has been paused by{\" \"}\n          {chatStateUpdatedBy?.peerId === localPeer?.id\n            ? \"you\"\n            : chatStateUpdatedBy?.userName}\n        </Text>\n      </Box>\n      {can_disable_chat ? (\n        <Button\n          css={{ fontWeight: \"$semiBold\", fontSize: \"$sm\", borderRadius: \"$2\" }}\n          onClick={unPauseChat}\n        >\n          Resume\n        </Button>\n      ) : (\n        <></>\n      )}\n    </Flex>\n  );\n};\n\nexport const ChatBlocked = () => {\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  if (!isLocalPeerBlacklisted) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"between\"\n      css={{\n        borderRadius: \"$1\",\n        bg: \"$surface_default\",\n        p: \"$4 $4 $4 $8\",\n        w: \"100%\",\n      }}\n    >\n      <Text\n        variant=\"sm\"\n        css={{ color: \"$on_surface_medium\", textAlign: \"center\", w: \"100%\" }}\n      >\n        You've been blocked from sending messages\n      </Text>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\n\nexport const ArrowNavigation = ({\n  total,\n  index,\n  showPrevious,\n  showNext,\n}: {\n  total: number;\n  index: number;\n  showPrevious: () => void;\n  showNext: () => void;\n}) => {\n  if (total < 2) {\n    return null;\n  }\n\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$1\" }}>\n      <Flex\n        onClick={showPrevious}\n        css={\n          index === 0\n            ? { cursor: \"not-allowed\", color: \"$on_surface_low\" }\n            : { cursor: \"pointer\", color: \"$on_surface_medium\" }\n        }\n      >\n        <ChevronUpIcon height={20} width={20} />\n      </Flex>\n      <Flex\n        onClick={showNext}\n        css={\n          index === total - 1\n            ? { cursor: \"not-allowed\", color: \"$on_surface_low\" }\n            : { cursor: \"pointer\", color: \"$on_surface_medium\" }\n        }\n      >\n        <ChevronDownIcon height={20} width={20} />\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\n\nexport const StickIndicator = ({\n  total,\n  index,\n}: {\n  total: number;\n  index: number;\n}) => {\n  const sticksCount = Math.min(3, total);\n\n  if (total < 2) {\n    return null;\n  }\n\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$1\" }}>\n      {[...Array(sticksCount)].map((_, i) => (\n        <Box\n          css={{\n            borderLeft: \"2px solid\",\n            height: \"$4\",\n            borderColor: i === index ? \"$on_surface_high\" : \"$on_surface_low\",\n          }}\n        />\n      ))}\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { useMedia } from \"react-use\";\nimport { selectSessionStore, useHMSStore } from \"@100mslive/react-sdk\";\nimport { PinIcon, UnpinIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { ArrowNavigation } from \"./ArrowNavigation\";\n// @ts-ignore\nimport { AnnotisedMessage } from \"./ChatBody\";\nimport { StickIndicator } from \"./StickIndicator\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { usePinnedMessages } from \"../hooks/usePinnedMessages\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst PINNED_MESSAGE_LENGTH = 75;\n\nexport const PinnedMessage = () => {\n  const pinnedMessages = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n  );\n  const [pinnedMessageIndex, setPinnedMessageIndex] = useState(0);\n  const { removePinnedMessage } = usePinnedMessages();\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const { elements } = useRoomLayoutConferencingScreen();\n  const canUnpinMessage = !!elements?.chat?.allow_pinning_messages;\n\n  const [hideOverflow, setHideOverflow] = useState(true);\n  const currentPinnedMessage = pinnedMessages?.[pinnedMessageIndex]?.text || \"\";\n  const canOverflow = currentPinnedMessage.length > PINNED_MESSAGE_LENGTH;\n\n  const showPreviousPinnedMessage = () => {\n    const previousIndex = Math.max(pinnedMessageIndex - 1, 0);\n    setHideOverflow(\n      pinnedMessages[previousIndex].text.length > PINNED_MESSAGE_LENGTH\n    );\n    setPinnedMessageIndex(previousIndex);\n  };\n\n  const showNextPinnedMessage = () => {\n    const nextIndex = Math.min(\n      pinnedMessageIndex + 1,\n      pinnedMessages.length - 1\n    );\n    setHideOverflow(\n      pinnedMessages[nextIndex].text.length > PINNED_MESSAGE_LENGTH\n    );\n    setPinnedMessageIndex(nextIndex);\n  };\n\n  const swipeHandlers = useSwipeable({\n    onSwipedUp: () => showNextPinnedMessage(),\n    onSwipedDown: () => showPreviousPinnedMessage(),\n  });\n\n  // Scenario: User is on a particular index but an earlier message is removed by another peer\n  useEffect(() => {\n    const count = pinnedMessages?.length || 1;\n    if (pinnedMessageIndex >= count) {\n      setPinnedMessageIndex(count - 1);\n    }\n  }, [pinnedMessageIndex, pinnedMessages]);\n\n  if (!pinnedMessages || pinnedMessages.length === 0) {\n    return null;\n  }\n\n  return (\n    <Flex align=\"center\" css={{ w: \"100%\", gap: \"$4\" }}>\n      {!isMobile ? (\n        <ArrowNavigation\n          index={pinnedMessageIndex}\n          total={pinnedMessages.length}\n          showPrevious={showPreviousPinnedMessage}\n          showNext={showNextPinnedMessage}\n        />\n      ) : null}\n      <Flex\n        css={{\n          p: \"$4\",\n          color: \"$on_surface_high\",\n          bg:\n            isMobile && elements?.chat?.is_overlay\n              ? \"rgba(0, 0, 0, 0.64)\"\n              : \"$surface_brighter\",\n          r: \"$1\",\n          gap: \"$4\",\n          mb: \"$8\",\n          mt: \"$8\",\n          flexGrow: 1,\n          border: \"1px solid $border_bright\",\n        }}\n        align=\"center\"\n        justify=\"between\"\n      >\n        {isMobile ? (\n          <StickIndicator\n            index={pinnedMessageIndex}\n            total={pinnedMessages.length}\n          />\n        ) : null}\n\n        <Box\n          css={{\n            w: \"100%\",\n            maxHeight: \"$18\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            wordBreak: \"break-word\",\n            \"& p span\": {\n              color: \"$primary_default\",\n            },\n          }}\n        >\n          <Text\n            variant=\"sm\"\n            css={{ color: \"$on_surface_high\" }}\n            {...swipeHandlers}\n            title={pinnedMessages[pinnedMessageIndex]?.text}\n          >\n            <AnnotisedMessage\n              message={currentPinnedMessage}\n              length={\n                hideOverflow\n                  ? PINNED_MESSAGE_LENGTH\n                  : currentPinnedMessage.length\n              }\n            />\n            {canOverflow ? (\n              <span\n                style={{ cursor: \"pointer\" }}\n                onClick={() => setHideOverflow((prev) => !prev)}\n              >\n                &nbsp;{hideOverflow ? \"... See more\" : \"Collapse\"}\n              </span>\n            ) : null}\n          </Text>\n        </Box>\n\n        {canUnpinMessage ? (\n          <Flex\n            onClick={() => {\n              removePinnedMessage(pinnedMessageIndex);\n              setPinnedMessageIndex(Math.max(0, pinnedMessageIndex - 1));\n            }}\n            css={{\n              cursor: \"pointer\",\n              color: \"$on_surface_medium\",\n              \"&:hover\": { color: \"$on_surface_high\" },\n              \"&:hover .hide-on-hover\": { display: \"none !important\" },\n              \"&:hover .show-on-hover\": { display: \"block !important\" },\n            }}\n            title=\"Unpin Message\"\n          >\n            <UnpinIcon\n              className=\"show-on-hover\"\n              style={{ display: \"none\" }}\n              height={20}\n              width={20}\n            />\n            <PinIcon\n              className=\"hide-on-hover\"\n              style={{ display: \"block\" }}\n              height={20}\n              width={20}\n            />\n          </Flex>\n        ) : null}\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { MutableRefObject, useCallback, useRef } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { VariableSizeList } from \"react-window\";\nimport {\n  selectSessionStore,\n  selectUnreadHMSMessagesCount,\n} from \"@100mslive/hms-video-store\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectHMSMessagesCount,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { ChevronDownIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\n// @ts-ignore: No implicit any\nimport { EmojiReaction } from \"../EmojiReaction\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { RaiseHand } from \"../RaiseHand\";\nimport { ChatBody } from \"./ChatBody\";\nimport { ChatFooter } from \"./ChatFooter\";\nimport { ChatBlocked, ChatPaused } from \"./ChatStates\";\nimport { PinnedMessage } from \"./PinnedMessage\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useSidepaneResetOnLayoutUpdate } from \"../AppData/useSidepaneResetOnLayoutUpdate\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\nimport { SESSION_STORE_KEY, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const Chat = () => {\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const listRef = useRef<VariableSizeList | null>(null);\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const { enabled: isChatEnabled = true } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n  const isMobile = useMedia(cssConfig.media.md);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeStream = useLandscapeHLSStream();\n  useSidepaneResetOnLayoutUpdate(\"chat\", SIDE_PANE_OPTIONS.CHAT);\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n\n  const scrollToBottom = useCallback(\n    (unreadCount = 0) => {\n      if (listRef.current && listRef.current.scrollToItem && unreadCount > 0) {\n        const messagesCount = vanillaStore.getState(selectHMSMessagesCount);\n        listRef.current?.scrollToItem(messagesCount, \"end\");\n        requestAnimationFrame(() => {\n          listRef.current?.scrollToItem(messagesCount, \"end\");\n        });\n        hmsActions.setMessageRead(true);\n      }\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  const streaming = isMobileHLSStream || isLandscapeStream;\n\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"end\"\n      css={{\n        size: \"100%\",\n        gap: \"$4\",\n      }}\n    >\n      {isMobile && elements?.chat?.is_overlay && !streaming ? null : (\n        <PinnedMessage />\n      )}\n      <ChatBody ref={listRef} scrollToBottom={scrollToBottom} />\n      <Flex align=\"center\" css={{ w: \"100%\", gap: \"$2\" }}>\n        <ChatPaused />\n        <ChatBlocked />\n        {streaming && (!isChatEnabled || isLocalPeerBlacklisted) && (\n          <>\n            <RaiseHand css={{ bg: \"$surface_default\" }} />\n            <MoreSettings elements={elements} screenType={screenType} />\n          </>\n        )}\n      </Flex>\n      {isMobile && elements?.chat?.is_overlay && !streaming ? (\n        <PinnedMessage />\n      ) : null}\n      {isChatEnabled ? (\n        <ChatFooter onSend={scrollToBottom}>\n          <NewMessageIndicator\n            scrollToBottom={scrollToBottom}\n            listRef={listRef}\n          />\n        </ChatFooter>\n      ) : null}\n      {streaming && (\n        <Box\n          css={{\n            position: \"absolute\",\n            ...match({\n              isLandscapeStream,\n              isMobileHLSStream,\n              isChatEnabled,\n              isLocalPeerBlacklisted,\n            })\n              .with(\n                {\n                  isLandscapeStream: true,\n                  isChatEnabled: true,\n                },\n                () => ({ bottom: \"$19\", right: \"$10\" })\n              )\n              .with(\n                {\n                  isLandscapeStream: true,\n                  isChatEnabled: false,\n                },\n                () => ({ bottom: \"$20\", right: \"$10\" })\n              )\n              .with(\n                {\n                  isMobileHLSStream: true,\n                  isChatEnabled: false,\n                },\n                () => ({ bottom: \"$19\", right: \"$8\" })\n              )\n              .with(\n                {\n                  isMobileHLSStream: true,\n                  isChatEnabled: true,\n                  isLocalPeerBlacklisted: false,\n                },\n                () => ({ bottom: \"$17\", right: \"$8\" })\n              )\n              .with(\n                {\n                  isLandscapeStream: false,\n                  isChatEnabled: true,\n                  isLocalPeerBlacklisted: true,\n                },\n                () => ({ bottom: \"$18\", right: \"$8\" })\n              )\n              .with(\n                {\n                  isMobileHLSStream: true,\n                  isLocalPeerBlacklisted: true,\n                },\n                () => ({ bottom: \"$20\", right: \"$8\" })\n              )\n              .otherwise(() => ({})),\n          }}\n        >\n          <EmojiReaction />\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nconst NewMessageIndicator = ({\n  scrollToBottom,\n  listRef,\n}: {\n  scrollToBottom: (count: number) => void;\n  listRef: MutableRefObject<VariableSizeList | null>;\n}) => {\n  const unreadCount = useHMSStore(selectUnreadHMSMessagesCount);\n  if (!unreadCount || !listRef.current) {\n    return null;\n  }\n  // @ts-ignore\n  const outerElement = listRef.current._outerRef;\n  if (\n    outerElement &&\n    outerElement.clientHeight +\n      outerElement.scrollTop +\n      outerElement.offsetTop >=\n      outerElement.scrollHeight\n  ) {\n    return null;\n  }\n\n  return (\n    <Flex\n      justify=\"center\"\n      css={{\n        width: \"100%\",\n        left: 0,\n        bottom: \"$28\",\n        position: \"absolute\",\n      }}\n    >\n      <Button\n        variant=\"standard\"\n        onClick={() => {\n          scrollToBottom(unreadCount);\n        }}\n        icon\n        css={{\n          p: \"$3 $4\",\n          pl: \"$6\",\n          \"& > svg\": { ml: \"$4\" },\n          borderRadius: \"$round\",\n          fontSize: \"$xs\",\n          fontWeight: \"$semiBold\",\n          c: \"$on_secondary_high\",\n        }}\n      >\n        New {unreadCount === 1 ? \"message\" : \"messages\"}\n        <ChevronDownIcon height={16} width={16} />\n      </Button>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useMeasure } from \"react-use\";\nimport { VariableSizeList } from \"react-window\";\nimport {\n  selectIsConnectedToRoom,\n  useHMSStore,\n  usePaginatedParticipants,\n} from \"@100mslive/react-sdk\";\nimport { ChevronLeftIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Loading } from \"../../../Loading\";\nimport { Text } from \"../../../Text\";\nimport { Participant, ParticipantSearch } from \"./ParticipantList\";\nimport { ItemData, itemKey, ROW_HEIGHT } from \"./RoleAccordion\";\n// @ts-ignore: No implicit Any\nimport { useSidepaneReset } from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../../common/utils\";\n\nconst LoadMoreParticipants = ({\n  hasNext,\n  loadMore,\n  style,\n}: {\n  hasNext: boolean;\n  loadMore: () => Promise<void>;\n  style: React.CSSProperties;\n}) => {\n  const { ref, inView } = useInView();\n  const [inProgress, setInProgress] = useState(false);\n\n  useEffect(() => {\n    if (hasNext && inView && !inProgress) {\n      setInProgress(true);\n      loadMore()\n        .catch(console.error)\n        .finally(() => setInProgress(false));\n    }\n  }, [hasNext, loadMore, inView, inProgress]);\n  return (\n    <Flex ref={ref} style={style} align=\"center\" justify=\"center\">\n      {inProgress ? <Loading size={16} /> : null}\n    </Flex>\n  );\n};\n\nconst VirtualizedParticipantItem = React.memo(\n  ({\n    index,\n    data,\n    style,\n  }: {\n    index: number;\n    data: ItemData & { hasNext: boolean; loadMorePeers: () => Promise<void> };\n    style: React.CSSProperties;\n  }) => {\n    if (!data.peerList[index]) {\n      return (\n        <LoadMoreParticipants\n          hasNext={data.hasNext}\n          loadMore={data.loadMorePeers}\n          style={style}\n        />\n      );\n    }\n    return (\n      <Participant\n        key={data.peerList[index].id}\n        peer={data.peerList[index]}\n        isConnected={data.isConnected}\n        style={style}\n      />\n    );\n  }\n);\n\nexport const PaginatedParticipants = ({\n  roleName,\n  onBack,\n}: {\n  roleName: string;\n  onBack: () => void;\n}) => {\n  const { peers, total, hasNext, loadPeers, loadMorePeers } =\n    usePaginatedParticipants({ role: roleName, limit: 20 });\n  const [search, setSearch] = useState<string>(\"\");\n  const filteredPeers = peers.filter((p) =>\n    p.name?.toLowerCase().includes(search?.toLowerCase())\n  );\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n  const height = ROW_HEIGHT * (filteredPeers.length + 1);\n  const resetSidePane = useSidepaneReset();\n\n  useEffect(() => {\n    loadPeers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Flex ref={ref} direction=\"column\" css={{ size: \"100%\", gap: \"$4\" }}>\n      <Flex align=\"center\">\n        <Flex\n          align=\"center\"\n          css={{ flex: \"1 1 0\", cursor: \"pointer\" }}\n          onClick={onBack}\n        >\n          <ChevronLeftIcon />\n          <Text variant=\"lg\" css={{ flex: \"1 1 0\" }}>\n            Participants\n          </Text>\n        </Flex>\n        <IconButton\n          onClick={(e) => {\n            e.stopPropagation();\n            resetSidePane();\n          }}\n          data-testid=\"close_sidepane\"\n        >\n          <CrossIcon />\n        </IconButton>\n      </Flex>\n      <ParticipantSearch\n        onSearch={(search: string) => setSearch(search)}\n        placeholder={`Search for ${roleName}`}\n      />\n      <Flex\n        direction=\"column\"\n        css={{\n          border: \"1px solid $border_default\",\n          borderRadius: \"$1\",\n          flex: \"1 1 0\",\n        }}\n      >\n        <Flex\n          align=\"center\"\n          css={{\n            height: ROW_HEIGHT,\n            borderBottom: \"1px solid $border_default\",\n            px: \"$8\",\n          }}\n        >\n          <Text css={{ fontSize: \"$space$7\" }}>\n            {roleName}({getFormattedCount(peers.length)}/\n            {getFormattedCount(total)})\n          </Text>\n        </Flex>\n        <Box\n          css={{\n            flex: \"1 1 0\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            mr: \"-$10\",\n          }}\n        >\n          <VariableSizeList\n            itemSize={(index) =>\n              index === filteredPeers.length + 1 ? 16 : ROW_HEIGHT\n            }\n            itemData={{\n              peerList: filteredPeers,\n              hasNext: hasNext(),\n              loadMorePeers,\n              isConnected: isConnected === true,\n            }}\n            itemKey={itemKey}\n            itemCount={filteredPeers.length + 1}\n            width={width}\n            height={height}\n          >\n            {VirtualizedParticipantItem}\n          </VariableSizeList>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectLocalPeer,\n  selectSessionStore,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PauseCircleIcon, SettingsIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../Layout\";\nimport { Popover } from \"../../Popover\";\nimport { Text } from \"../../Text\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { SESSION_STORE_KEY } from \"../common/constants\";\n\nexport const ChatSettings = () => {\n  const hmsActions = useHMSActions();\n  const localPeer = useHMSStore(selectLocalPeer);\n  const { elements } = useRoomLayoutConferencingScreen();\n  const canPauseChat = !!elements?.chat?.real_time_controls?.can_disable_chat;\n  const { enabled: isChatEnabled = true } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n  const showPause = canPauseChat && isChatEnabled;\n\n  if (!showPause) {\n    return null;\n  }\n\n  return (\n    <Popover.Root>\n      <Popover.Trigger asChild css={{ px: \"$4\" }}>\n        <Flex\n          align=\"center\"\n          css={{\n            color: \"$on_surface_medium\",\n            \"&:hover\": { color: \"$on_surface_high\" },\n            cursor: \"pointer\",\n          }}\n        >\n          <SettingsIcon />\n        </Flex>\n      </Popover.Trigger>\n      <Popover.Portal>\n        <Popover.Content\n          align=\"end\"\n          side=\"bottom\"\n          sideOffset={2}\n          onClick={() => {\n            const chatState = {\n              enabled: false,\n              updatedBy: {\n                peerId: localPeer?.id,\n                userId: localPeer?.customerUserId,\n                userName: localPeer?.name,\n              },\n              updatedAt: Date.now(),\n            };\n            hmsActions.sessionStore.set(\n              SESSION_STORE_KEY.CHAT_STATE,\n              chatState\n            );\n          }}\n          css={{\n            backgroundColor: \"$surface_default\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$4\",\n            borderRadius: \"$1\",\n            color: \"$on_surface_high\",\n            cursor: \"pointer\",\n            \"&:hover\": { backgroundColor: \"$surface_dim\" },\n          }}\n        >\n          <PauseCircleIcon />\n          <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\" }}>\n            Pause Chat\n          </Text>\n        </Popover.Content>\n      </Popover.Portal>\n    </Popover.Root>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport { selectPeerCount, useHMSStore } from \"@100mslive/react-sdk\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Chat } from \"./Chat/Chat\";\nimport { PaginatedParticipants } from \"./Footer/PaginatedParticipants\";\nimport { ParticipantList } from \"./Footer/ParticipantList\";\nimport { Box, config as cssConfig, Flex, IconButton, Tabs, Text } from \"../..\";\nimport { Tooltip } from \"../../Tooltip\";\nimport { ChatSettings } from \"./ChatSettings\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneReset,\n  useSidepaneToggle,\n} from \"./AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../common/utils\";\nimport { SIDE_PANE_OPTIONS } from \"../common/constants\";\n\nconst tabTriggerCSS = {\n  color: \"$on_surface_low\",\n  p: \"$4\",\n  fontWeight: \"$semiBold\",\n  fontSize: \"$sm\",\n  w: \"100%\",\n  justifyContent: \"center\",\n  '&[data-state=\"active\"]': {\n    color: \"$on_surface_high\",\n  },\n};\n\nconst ParticipantCount = ({ count }: { count: number }) => {\n  return count < 1000 ? (\n    <span>({count})</span>\n  ) : (\n    <Tooltip title={count}>\n      <span>({getFormattedCount(count)})</span>\n    </Tooltip>\n  );\n};\n\nexport const SidePaneTabs = React.memo<{\n  active: \"Participants | Chat\";\n  hideTab?: boolean;\n}>(({ active = SIDE_PANE_OPTIONS.CHAT, hideTab = false }) => {\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const toggleParticipants = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n  const resetSidePane = useSidepaneReset();\n  const [activeTab, setActiveTab] = useState(active);\n  const [activeRole, setActiveRole] = useState(\"\");\n  const peerCount = useHMSStore(selectPeerCount);\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const chat_title = elements?.chat?.chat_title || \"Chat\";\n  const showChat = !!elements?.chat;\n  const showParticipants = !!elements?.participant_list;\n  const hideTabs = !(showChat && showParticipants) || hideTab;\n  const isMobile = useMedia(cssConfig.media.md);\n  const isOverlayChat = !!elements?.chat?.is_overlay && isMobile;\n  const { off_stage_roles = [] } =\n    (elements as DefaultConferencingScreen_Elements)?.on_stage_exp || {};\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const showChatSettings =\n    showChat && isChatOpen && (!isMobile || !isOverlayChat);\n\n  useEffect(() => {\n    match({ activeTab, showChat, showParticipants })\n      .with(\n        {\n          activeTab: SIDE_PANE_OPTIONS.CHAT,\n          showChat: false,\n          showParticipants: true,\n        },\n        () => {\n          setActiveTab(SIDE_PANE_OPTIONS.PARTICIPANTS);\n        }\n      )\n      .with(\n        {\n          activeTab: SIDE_PANE_OPTIONS.PARTICIPANTS,\n          showChat: true,\n          showParticipants: false,\n        },\n        () => {\n          setActiveTab(SIDE_PANE_OPTIONS.CHAT);\n        }\n      )\n      .with({ showChat: false, showParticipants: false }, () => {\n        resetSidePane();\n      });\n  }, [showChat, activeTab, showParticipants, resetSidePane]);\n\n  useEffect(() => {\n    setActiveTab(active);\n  }, [active]);\n\n  if (activeRole) {\n    return (\n      <Flex\n        direction=\"column\"\n        css={{\n          color: \"$on_primary_high\",\n          h: \"100%\",\n          transition: \"margin 0.3s ease-in-out\",\n          position: \"relative\",\n        }}\n      >\n        <Box\n          css={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            size: \"100%\",\n            zIndex: 21,\n            bg: \"$surface_dim\",\n          }}\n        >\n          <PaginatedParticipants\n            roleName={activeRole}\n            onBack={() => setActiveRole(\"\")}\n          />\n        </Box>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        color: \"$on_primary_high\",\n        h: \"100%\",\n        transition: \"margin 0.3s ease-in-out\",\n      }}\n    >\n      {match({ isOverlayChat, isChatOpen, showChat, hideTabs })\n        .with({ isOverlayChat: true, isChatOpen: true, showChat: true }, () => (\n          <Chat />\n        ))\n        .with({ hideTabs: true }, () => {\n          return (\n            <>\n              <Flex\n                justify=\"between\"\n                css={{ w: \"100%\", \"&:empty\": { display: \"none\" } }}\n              >\n                <Text\n                  variant=\"sm\"\n                  css={{\n                    fontWeight: \"$semiBold\",\n                    p: \"$4\",\n                    c: \"$on_surface_high\",\n                    pr: \"$12\",\n                    \"&:empty\": { display: \"none\" },\n                  }}\n                >\n                  {activeTab === SIDE_PANE_OPTIONS.CHAT ? (\n                    screenType !== \"hls_live_streaming\" && chat_title\n                  ) : (\n                    <span>\n                      Participants&nbsp;\n                      <ParticipantCount count={peerCount} />\n                    </span>\n                  )}\n                </Text>\n                <Flex>\n                  {showChatSettings ? <ChatSettings /> : null}\n                  {isOverlayChat && isChatOpen ? null : (\n                    <IconButton\n                      css={{\n                        my: \"$1\",\n                        color: \"$on_surface_medium\",\n                        \"&:hover\": { color: \"$on_surface_high\" },\n                        \"&:empty\": { display: \"none\" },\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (activeTab === SIDE_PANE_OPTIONS.CHAT) {\n                          toggleChat();\n                        } else {\n                          toggleParticipants();\n                        }\n                      }}\n                      data-testid=\"close_chat\"\n                    >\n                      {screenType === \"hls_live_streaming\" &&\n                      isChatOpen ? null : (\n                        <CrossIcon />\n                      )}\n                    </IconButton>\n                  )}\n                </Flex>\n              </Flex>\n              {activeTab === SIDE_PANE_OPTIONS.CHAT ? (\n                <Chat />\n              ) : (\n                <ParticipantList\n                  offStageRoles={off_stage_roles}\n                  onActive={setActiveRole}\n                />\n              )}\n            </>\n          );\n        })\n        .otherwise(() => {\n          return (\n            <Tabs.Root\n              value={activeTab}\n              onValueChange={setActiveTab}\n              css={{\n                flexDirection: \"column\",\n                size: \"100%\",\n              }}\n            >\n              <Flex css={{ w: \"100%\" }}>\n                <Tabs.List\n                  css={{\n                    flexGrow: 1,\n                    borderRadius: \"$2\",\n                    bg: \"$surface_default\",\n                  }}\n                >\n                  <Tabs.Trigger\n                    value={SIDE_PANE_OPTIONS.CHAT}\n                    onClick={toggleChat}\n                    css={tabTriggerCSS}\n                  >\n                    {chat_title}\n                  </Tabs.Trigger>\n                  <Tabs.Trigger\n                    value={SIDE_PANE_OPTIONS.PARTICIPANTS}\n                    onClick={toggleParticipants}\n                    css={tabTriggerCSS}\n                  >\n                    Participants&nbsp;\n                    <ParticipantCount count={peerCount} />\n                  </Tabs.Trigger>\n                </Tabs.List>\n                {showChatSettings ? <ChatSettings /> : null}\n                {isOverlayChat && isChatOpen ? null : (\n                  <IconButton\n                    css={{\n                      my: \"$1\",\n                      color: \"$on_surface_medium\",\n                      \"&:hover\": { color: \"$on_surface_high\" },\n                    }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (activeTab === SIDE_PANE_OPTIONS.CHAT) {\n                        toggleChat();\n                      } else {\n                        toggleParticipants();\n                      }\n                    }}\n                    data-testid=\"close_chat\"\n                  >\n                    <CrossIcon />\n                  </IconButton>\n                )}\n              </Flex>\n              <Tabs.Content\n                value={SIDE_PANE_OPTIONS.PARTICIPANTS}\n                css={{ p: 0 }}\n              >\n                <ParticipantList\n                  offStageRoles={off_stage_roles}\n                  onActive={setActiveRole}\n                />\n              </Tabs.Content>\n              <Tabs.Content value={SIDE_PANE_OPTIONS.CHAT} css={{ p: 0 }}>\n                <Chat />\n              </Tabs.Content>\n            </Tabs.Root>\n          );\n        })}\n    </Flex>\n  );\n});\n", "import React from \"react\";\nimport {\n  HMSPeerType,\n  selectPeerTypeByID,\n  selectScreenShareByPeerID,\n  selectSessionStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  CallIcon,\n  PinIcon,\n  ShareScreenIcon,\n  SpotlightIcon,\n} from \"@100mslive/react-icons\";\nimport { Flex, styled, Text, textEllipsis } from \"../../..\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst TileConnection = ({\n  name,\n  peerId,\n  hideLabel,\n  width,\n  pinned,\n}: {\n  name: string;\n  peerId: string;\n  hideLabel: boolean;\n  width?: string | number;\n  pinned?: boolean;\n}) => {\n  const spotlighted =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)) === peerId;\n  const isPeerScreenSharing = !!useHMSStore(selectScreenShareByPeerID(peerId));\n  const peerType = useHMSStore(selectPeerTypeByID(peerId));\n  return (\n    <Wrapper>\n      {!hideLabel ? (\n        <>\n          {name ? (\n            <Flex align=\"center\">\n              {peerType === HMSPeerType.SIP && (\n                <IconWrapper>\n                  <CallIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              {isPeerScreenSharing && (\n                <IconWrapper>\n                  <ShareScreenIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              {pinned && (\n                <IconWrapper>\n                  <PinIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              {spotlighted && (\n                <IconWrapper>\n                  <SpotlightIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              <Text\n                css={{\n                  c: \"$on_surface_high\",\n                  verticalAlign: \"baseline\",\n                  ...(width ? textEllipsis((width as number) - 60) : {}),\n                }}\n                variant=\"xs\"\n              >\n                {name}\n              </Text>\n            </Flex>\n          ) : null}\n          <ConnectionIndicator isTile peerId={peerId} hideBg />\n        </>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nconst IconWrapper = styled(\"div\", {\n  c: \"$on_surface_high\",\n  ml: \"$3\",\n  mt: \"$1\",\n  display: \"flex\",\n});\n\nconst Wrapper = styled(\"div\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  position: \"absolute\",\n  bottom: \"$2\",\n  left: \"$2\",\n  backgroundColor: \"$background_dim\",\n  borderRadius: \"$1\",\n  maxWidth: \"85%\",\n  zIndex: 1,\n  \"& p,span\": {\n    p: \"$2 $3\",\n  },\n});\n\nexport default TileConnection;\n", "/**\n * Add __cancel-drag-event for the menu to open on touch devices on the draggdable element\n *\n */\nexport const getDragClassName = () => {\n  return navigator?.maxTouchPoints > 0 ? \"__cancel-drag-event\" : \"\";\n};\n", "import React, { Fragment } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSException,\n  HMSSimulcastLayerDefinition,\n  HMSTrackID,\n  HMSVideoTrack,\n  selectAvailableRoleNames,\n  selectPermissions,\n  selectSessionStore,\n  selectTrackByID,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport {\n  MicOffIcon,\n  MicOnIcon,\n  PencilIcon,\n  PersonSettingsIcon,\n  PinIcon,\n  RemoveUserIcon,\n  ShareScreenIcon,\n  ShrinkIcon,\n  SpeakerIcon,\n  StarIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Slider } from \"../../../Slider\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { StyledMenuTile } from \"../../../TileMenu\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\n// @ts-ignore\nimport { useDropdownSelection } from \"../hooks/useDropdownSelection\";\nimport { getDragClassName } from \"./utils\";\nimport {\n  APP_DATA,\n  REMOTE_STOP_SCREENSHARE_TYPE,\n  SESSION_STORE_KEY,\n} from \"../../common/constants\";\n\nexport const isSameTile = ({\n  trackId,\n  videoTrackID,\n  audioTrackID,\n}: {\n  trackId: HMSTrackID;\n  videoTrackID?: string;\n  audioTrackID?: string;\n}) =>\n  !!trackId &&\n  ((!!videoTrackID && videoTrackID === trackId) ||\n    (!!audioTrackID && audioTrackID === trackId));\n\nconst spacingCSS = {\n  \"@md\": { my: \"$8\", fontWeight: \"$semiBold\", fontSize: \"sm\" },\n};\n\nconst SpotlightActions = ({\n  peerId,\n  onSpotLightClick = () => {\n    return;\n  },\n}: {\n  peerId: string;\n  onSpotLightClick: () => void;\n}) => {\n  const hmsActions = useHMSActions();\n  const spotlightPeerId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const isTileSpotlighted = spotlightPeerId === peerId;\n  const dragClassName = getDragClassName();\n\n  const setSpotlightPeerId = (peerIdToSpotlight?: string) =>\n    hmsActions.sessionStore\n      .set(SESSION_STORE_KEY.SPOTLIGHT, peerIdToSpotlight)\n      .catch((err: HMSException) =>\n        ToastManager.addToast({ title: err.description })\n      );\n\n  return (\n    <StyledMenuTile.ItemButton\n      className={dragClassName}\n      css={spacingCSS}\n      onClick={() => {\n        if (isTileSpotlighted) {\n          setSpotlightPeerId();\n        } else {\n          setSpotlightPeerId(peerId);\n        }\n        onSpotLightClick();\n      }}\n    >\n      <StarIcon height={20} width={20} />\n      <span>\n        {isTileSpotlighted\n          ? \"Remove from Spotlight\"\n          : \"Spotlight Tile for everyone\"}\n      </span>\n    </StyledMenuTile.ItemButton>\n  );\n};\n\nconst PinActions = ({\n  audioTrackID,\n  videoTrackID,\n}: {\n  videoTrackID: string;\n  audioTrackID: string;\n}) => {\n  const [pinnedTrackId, setPinnedTrackId] = useSetAppDataByKey(\n    APP_DATA.pinnedTrackId\n  );\n  const dragClassName = getDragClassName();\n\n  const isTilePinned = isSameTile({\n    trackId: pinnedTrackId,\n    videoTrackID,\n    audioTrackID,\n  });\n\n  return (\n    <>\n      <StyledMenuTile.ItemButton\n        className={dragClassName}\n        css={spacingCSS}\n        onClick={() =>\n          isTilePinned\n            ? setPinnedTrackId()\n            : setPinnedTrackId(videoTrackID || audioTrackID)\n        }\n      >\n        <PinIcon height={20} width={20} />\n        <span>{isTilePinned ? \"Unpin\" : \"Pin\"} Tile for myself</span>\n      </StyledMenuTile.ItemButton>\n    </>\n  );\n};\n\nconst MinimiseInset = () => {\n  const [minimised, setMinimised] = useSetAppDataByKey(APP_DATA.minimiseInset);\n  const dragClassName = getDragClassName();\n\n  return (\n    <>\n      <StyledMenuTile.ItemButton\n        className={dragClassName}\n        css={spacingCSS}\n        onClick={() => setMinimised(!minimised)}\n      >\n        <ShrinkIcon height={20} width={20} />\n        <span>{minimised ? \"Show\" : \"Minimise\"} your video</span>\n      </StyledMenuTile.ItemButton>\n    </>\n  );\n};\n\nconst SimulcastLayers = ({ trackId }: { trackId: HMSTrackID }) => {\n  const track: HMSVideoTrack = useHMSStore(\n    selectTrackByID(trackId)\n  ) as HMSVideoTrack;\n  const actions = useHMSActions();\n  const bg = useDropdownSelection();\n  if (!track?.layerDefinitions?.length || track.degraded || !track.enabled) {\n    return null;\n  }\n  const currentLayer = track.layerDefinitions.find(\n    (layer: HMSSimulcastLayerDefinition) => layer.layer === track.layer\n  );\n  const dragClassName = getDragClassName();\n  return (\n    <Fragment>\n      <StyledMenuTile.ItemButton\n        className={dragClassName}\n        css={{ color: \"$on_surface_medium\", cursor: \"default\" }}\n      >\n        Select maximum resolution\n      </StyledMenuTile.ItemButton>\n      {track.layerDefinitions.map((layer: HMSSimulcastLayerDefinition) => {\n        return (\n          <StyledMenuTile.ItemButton\n            className={dragClassName}\n            key={layer.layer}\n            onClick={async () => {\n              await actions.setPreferredLayer(trackId, layer.layer);\n            }}\n            css={{\n              justifyContent: \"space-between\",\n              bg: track.preferredLayer === layer.layer ? bg : undefined,\n              \"&:hover\": {\n                bg: track.preferredLayer === layer.layer ? bg : undefined,\n              },\n            }}\n          >\n            <Text\n              as=\"span\"\n              css={{\n                textTransform: \"capitalize\",\n                mr: \"$2\",\n                fontWeight:\n                  track.preferredLayer === layer.layer\n                    ? \"$semiBold\"\n                    : \"$regular\",\n                color:\n                  track.preferredLayer === layer.layer\n                    ? \"$on_primary_high\"\n                    : \"$on_surface_high\",\n              }}\n            >\n              {layer.layer}\n            </Text>\n            <Text\n              as=\"span\"\n              variant=\"xs\"\n              css={{\n                color:\n                  track.preferredLayer === layer.layer\n                    ? \"$on_primary_high\"\n                    : \"$on_surface_high\",\n              }}\n            >\n              {layer.resolution.width}x{layer.resolution.height}\n            </Text>\n          </StyledMenuTile.ItemButton>\n        );\n      })}\n      <StyledMenuTile.ItemButton className={dragClassName}>\n        <Text as=\"span\" variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n          Currently streaming:\n          <Text\n            as=\"span\"\n            variant=\"xs\"\n            css={{\n              fontWeight: \"$semiBold\",\n              textTransform: \"capitalize\",\n              color: \"$on_surface_medium\",\n              ml: \"$2\",\n            }}\n          >\n            {currentLayer ? (\n              <>\n                {track.layer} ({currentLayer.resolution.width}x\n                {currentLayer.resolution.height})\n              </>\n            ) : (\n              \"-\"\n            )}\n          </Text>\n        </Text>\n      </StyledMenuTile.ItemButton>\n    </Fragment>\n  );\n};\n\nexport const TileMenuContent = ({\n  videoTrackID,\n  audioTrackID,\n  isLocal,\n  isScreenshare,\n  showSpotlight,\n  showPinAction,\n  peerID,\n  canMinimise,\n  closeSheetOnClick = () => {\n    return;\n  },\n  openNameChangeModal = () => {\n    return;\n  },\n  openRoleChangeModal = () => {\n    return;\n  },\n}: {\n  videoTrackID: string;\n  audioTrackID: string;\n  isLocal: boolean;\n  isScreenshare: boolean;\n  showSpotlight: boolean;\n  showPinAction: boolean;\n  peerID: string;\n  canMinimise?: boolean;\n  closeSheetOnClick?: () => void;\n  openNameChangeModal?: () => void;\n  openRoleChangeModal?: () => void;\n}) => {\n  const actions = useHMSActions();\n  const dragClassName = getDragClassName();\n  const permissions = useHMSStore(selectPermissions);\n  const canChangeRole = !!permissions?.changeRole;\n  const removeOthers = !!permissions?.removeOthers;\n  const { userName } = useHMSPrebuiltContext();\n  const roles = useHMSStore(selectAvailableRoleNames);\n\n  const {\n    isAudioEnabled,\n    isVideoEnabled,\n    setVolume,\n    toggleAudio,\n    toggleVideo,\n    volume,\n  } = useRemoteAVToggle(audioTrackID, videoTrackID);\n\n  const { sendEvent } = useCustomEvent({\n    type: REMOTE_STOP_SCREENSHARE_TYPE,\n  });\n\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (isLocal) {\n    return showPinAction || canMinimise || !userName || showSpotlight ? (\n      <>\n        {showPinAction && (\n          <PinActions audioTrackID={audioTrackID} videoTrackID={videoTrackID} />\n        )}\n        {showSpotlight && (\n          <SpotlightActions\n            peerId={peerID}\n            onSpotLightClick={() => closeSheetOnClick()}\n          />\n        )}\n        {canMinimise && <MinimiseInset />}\n        {!userName && (\n          <StyledMenuTile.ItemButton\n            className={dragClassName}\n            onClick={() => {\n              openNameChangeModal();\n              closeSheetOnClick();\n            }}\n          >\n            <PencilIcon height={20} width={20} />\n            <Text\n              variant=\"sm\"\n              css={{\n                \"@md\": { fontWeight: \"$semiBold\" },\n                c: \"$on_surface_high\",\n              }}\n            >\n              Change Name\n            </Text>\n          </StyledMenuTile.ItemButton>\n        )}\n      </>\n    ) : null;\n  }\n\n  return (\n    <>\n      {toggleVideo ? (\n        <StyledMenuTile.ItemButton\n          className={dragClassName}\n          css={spacingCSS}\n          onClick={() => {\n            toggleVideo();\n            closeSheetOnClick();\n          }}\n          data-testid={\n            isVideoEnabled\n              ? \"mute_video_participant_btn\"\n              : \"unmute_video_participant_btn\"\n          }\n        >\n          {isVideoEnabled ? (\n            <VideoOnIcon height={20} width={20} />\n          ) : (\n            <VideoOffIcon height={20} width={20} />\n          )}\n          <span>\n            {isVideoEnabled ? \"Mute Video\" : \"Request to Unmute Video\"}\n          </span>\n        </StyledMenuTile.ItemButton>\n      ) : null}\n\n      {toggleAudio ? (\n        <StyledMenuTile.ItemButton\n          css={spacingCSS}\n          className={dragClassName}\n          onClick={() => {\n            toggleAudio();\n            closeSheetOnClick();\n          }}\n          data-testid={\n            isAudioEnabled\n              ? \"mute_audio_participant_btn\"\n              : \"unmute_audio_participant_btn\"\n          }\n        >\n          {isAudioEnabled ? (\n            <MicOnIcon height={20} width={20} />\n          ) : (\n            <MicOffIcon height={20} width={20} />\n          )}\n          <span>\n            {isAudioEnabled ? \"Mute Audio\" : \"Request to Unmute Audio\"}\n          </span>\n        </StyledMenuTile.ItemButton>\n      ) : null}\n\n      {canChangeRole && roles.length > 1 ? (\n        <StyledMenuTile.ItemButton\n          className={dragClassName}\n          css={spacingCSS}\n          onClick={() => {\n            openRoleChangeModal();\n            closeSheetOnClick();\n          }}\n          data-testid=\"change_role_btn\"\n        >\n          <PersonSettingsIcon height={20} width={20} />\n          <span>Switch Role</span>\n        </StyledMenuTile.ItemButton>\n      ) : null}\n\n      {audioTrackID ? (\n        <StyledMenuTile.VolumeItem\n          data-testid=\"participant_volume_slider\"\n          css={{ ...spacingCSS, mb: \"$0\" }}\n        >\n          <Flex align=\"center\" gap={1}>\n            <SpeakerIcon height={20} width={20} />\n            <Box as=\"span\" css={{ ml: \"$4\" }}>\n              Volume ({volume})\n            </Box>\n          </Flex>\n          <Slider\n            css={{ my: \"0.5rem\" }}\n            step={5}\n            value={[typeof volume === \"number\" ? volume : 100]}\n            onValueChange={(e) => setVolume?.(e[0])}\n          />\n        </StyledMenuTile.VolumeItem>\n      ) : null}\n\n      {showPinAction && (\n        <>\n          <PinActions audioTrackID={audioTrackID} videoTrackID={videoTrackID} />\n          {showSpotlight && (\n            <SpotlightActions\n              peerId={peerID}\n              onSpotLightClick={() => closeSheetOnClick()}\n            />\n          )}\n        </>\n      )}\n\n      {isMobile ? null : <SimulcastLayers trackId={videoTrackID} />}\n\n      {removeOthers ? (\n        <StyledMenuTile.RemoveItem\n          css={{ ...spacingCSS, borderTop: \"none\" }}\n          onClick={async () => {\n            try {\n              await actions.removePeer(peerID, \"\");\n            } catch (error) {\n              // TODO: Toast here\n            }\n            closeSheetOnClick();\n          }}\n          data-testid=\"remove_participant_btn\"\n        >\n          <RemoveUserIcon height={20} width={20} />\n          <span>Remove Participant</span>\n        </StyledMenuTile.RemoveItem>\n      ) : null}\n\n      {removeOthers && isScreenshare ? (\n        <StyledMenuTile.RemoveItem\n          onClick={() => {\n            sendEvent({});\n            closeSheetOnClick();\n          }}\n          css={spacingCSS}\n        >\n          <ShareScreenIcon height={20} width={20} />\n          <span>Stop Screenshare</span>\n        </StyledMenuTile.RemoveItem>\n      ) : null}\n    </>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSVideoTrack,\n  selectLocalPeerID,\n  selectPeerByID,\n  selectPermissions,\n  selectTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport { CrossIcon, VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig, useTheme } from \"../../../Theme\";\nimport { StyledMenuTile } from \"../../../TileMenu\";\nimport { ChangeNameModal } from \"../MoreSettings/ChangeNameModal\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport { TileMenuContent } from \"./TileMenuContent\";\nimport { useDropdownList } from \"../hooks/useDropdownList\";\nimport { getDragClassName } from \"./utils\";\n\n/**\n * Taking peerID as peer won't necesarilly have tracks\n */\nconst TileMenu = ({\n  audioTrackID,\n  videoTrackID,\n  peerID,\n  isScreenshare = false,\n  canMinimise,\n  enableSpotlightingPeer = true,\n}: {\n  audioTrackID: string;\n  videoTrackID: string;\n  peerID: string;\n  isScreenshare?: boolean;\n  canMinimise?: boolean;\n  enableSpotlightingPeer?: boolean;\n}) => {\n  const [open, setOpen] = useState(false);\n  const { theme } = useTheme();\n\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isLocal = localPeerID === peerID;\n  const { removeOthers } = useHMSStore(selectPermissions) || {};\n  const { setVolume, toggleAudio, toggleVideo } = useRemoteAVToggle(\n    audioTrackID,\n    videoTrackID\n  );\n  const showSpotlight = enableSpotlightingPeer;\n\n  const isPrimaryVideoTrack =\n    useHMSStore(selectVideoTrackByPeerID(peerID))?.id === videoTrackID;\n  const showPinAction = !!(\n    audioTrackID ||\n    (videoTrackID && isPrimaryVideoTrack)\n  );\n\n  const track = useHMSStore(selectTrackByID(videoTrackID)) as HMSVideoTrack;\n  const hideSimulcastLayers =\n    !track?.layerDefinitions?.length || track.degraded || !track.enabled;\n  const isMobile = useMedia(cssConfig.media.md);\n  const peer = useHMSStore(selectPeerByID(peerID));\n  const [showNameChangeModal, setShowNameChangeModal] = useState(false);\n  const [showRoleChangeModal, setShowRoleChangeModal] = useState(false);\n  useDropdownList({ open, name: \"TileMenu\" });\n  const dragClassName = getDragClassName();\n\n  if (\n    !(\n      removeOthers ||\n      toggleAudio ||\n      toggleVideo ||\n      setVolume ||\n      showPinAction\n    ) &&\n    hideSimulcastLayers\n  ) {\n    return null;\n  }\n\n  const openNameChangeModal = () => setShowNameChangeModal(true);\n  const openRoleChangeModal = () => setShowRoleChangeModal(true);\n\n  const props = {\n    isLocal,\n    isScreenshare,\n    audioTrackID,\n    videoTrackID,\n    peerID,\n    isPrimaryVideoTrack,\n    showSpotlight,\n    showPinAction,\n    canMinimise,\n    openNameChangeModal,\n    openRoleChangeModal,\n  };\n\n  return (\n    <>\n      <StyledMenuTile.Root open={open} onOpenChange={setOpen}>\n        <StyledMenuTile.Trigger\n          data-testid=\"participant_menu_btn\"\n          css={{\n            bg: `${theme.colors.background_dim.value}A3`,\n            p: \"$2\",\n            w: \"unset\",\n            h: \"unset\",\n          }}\n          onClick={(e) => e.stopPropagation()}\n          className={dragClassName}\n        >\n          <VerticalMenuIcon width={20} height={20} />\n        </StyledMenuTile.Trigger>\n\n        {isMobile ? (\n          <Sheet.Root open={open} onOpenChange={setOpen}>\n            <Sheet.Content css={{ bg: \"$surface_dim\", pt: \"$8\" }}>\n              <Flex\n                css={{\n                  color: \"$on_surface_high\",\n                  display: \"flex\",\n                  w: \"100%\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  px: \"$10\",\n                  pb: \"$8\",\n                  borderBottom: \"1px solid $border_default\",\n                }}\n              >\n                <Box>\n                  <Text\n                    css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n                  >\n                    {peer?.name}\n                    {isLocal ? ` (You)` : null}\n                  </Text>\n                  {peer?.roleName ? (\n                    <Text\n                      variant=\"xs\"\n                      css={{ color: \"$on_surface_low\", mt: \"$2\" }}\n                    >\n                      {peer.roleName}\n                    </Text>\n                  ) : null}\n                </Box>\n\n                <Sheet.Close css={{ color: \"inherit\" }}>\n                  <CrossIcon />\n                </Sheet.Close>\n              </Flex>\n              <Box\n                css={{\n                  px: \"$8\",\n                  pb: \"$8\",\n                  maxHeight: \"80vh\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <TileMenuContent\n                  {...props}\n                  closeSheetOnClick={() => setOpen(false)}\n                />\n              </Box>\n            </Sheet.Content>\n          </Sheet.Root>\n        ) : (\n          <StyledMenuTile.Content\n            side=\"top\"\n            align=\"end\"\n            css={{ maxHeight: \"$80\", overflowY: \"auto\" }}\n          >\n            <TileMenuContent {...props} />\n          </StyledMenuTile.Content>\n        )}\n      </StyledMenuTile.Root>\n      {showNameChangeModal && (\n        <ChangeNameModal onOpenChange={setShowNameChangeModal} />\n      )}\n      {showRoleChangeModal && (\n        <RoleChangeModal\n          peerId={peerID}\n          onOpenChange={setShowRoleChangeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport { isSameTile } from \"./TileMenuContent\";\n\nexport default TileMenu;\n", "const PEER_NAME_PLACEHOLDER = \"peerName\";\nconst labelMap = new Map([\n  [[true, \"screen\"].toString(), \"Your Screen\"],\n  [[true, \"regular\"].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, \"screen\"].toString(), `${PEER_NAME_PLACEHOLDER}'s Screen`],\n  [[false, \"regular\"].toString(), PEER_NAME_PLACEHOLDER],\n  [[true, undefined].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, undefined].toString(), `${PEER_NAME_PLACEHOLDER}`],\n]);\n\nexport const getVideoTileLabel = ({ peerName, isLocal, track }) => {\n  const isPeerPresent = peerName !== undefined;\n  if (!isPeerPresent || !track) {\n    // for peers with only audio track\n    return isPeerPresent\n      ? labelMap\n          .get([isLocal, undefined].toString())\n          .replace(PEER_NAME_PLACEHOLDER, peerName)\n      : \"\";\n  }\n  const isLocallyMuted = track.volume === 0;\n  // Map [isLocal, videoSource] to the label to be displayed.\n  let label = labelMap.get([isLocal, track.source].toString());\n  if (label) {\n    label = label.replace(PEER_NAME_PLACEHOLDER, peerName);\n  } else {\n    label = `${peerName} ${track.source}`;\n  }\n  // label = `${label}${track.degraded ? '(Degraded)' : ''}`;\n  return `${label}${isLocallyMuted ? \" (Muted for you)\" : \"\"}`;\n};\n", "import React, { useCallback, useMemo, useState } from \"react\";\nimport { useMeasure } from \"react-use\";\nimport {\n  selectAudioTrackByPeerID,\n  selectHasPeerHandRaised,\n  selectIsPeerAudioEnabled,\n  selectLocalPeerID,\n  selectPeerMetadata,\n  selectPeerNameByID,\n  selectVideoTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { BrbTileIcon, HandIcon, MicOffIcon } from \"@100mslive/react-icons\";\nimport TileConnection from \"./Connection/TileConnection\";\nimport TileMenu, { isSameTile } from \"./TileMenu/TileMenu\";\nimport { AudioLevel } from \"../../AudioLevel\";\nimport { Avatar } from \"../../Avatar\";\nimport { VideoTileStats } from \"../../Stats\";\nimport { CSS } from \"../../Theme\";\nimport { Video } from \"../../Video\";\nimport { StyledVideoTile } from \"../../VideoTile\";\n// @ts-ignore: No implicit Any\nimport { getVideoTileLabel } from \"./peerTileUtils\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey, useUISettings } from \"./AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { calculateAvatarAndAttribBoxSize } from \"../common/utils\";\nimport { APP_DATA, UI_SETTINGS } from \"../common/constants\";\n\nconst PeerMetadata = ({\n  peerId,\n  size,\n}: {\n  peerId: string;\n  size?: \"medium\" | \"small\";\n}) => {\n  const metaData = useHMSStore(selectPeerMetadata(peerId));\n  const isBRB = metaData?.isBRBOn || false;\n  const isHandRaised = useHMSStore(selectHasPeerHandRaised(peerId));\n\n  return (\n    <>\n      {isHandRaised ? (\n        <StyledVideoTile.AttributeBox\n          size={size}\n          data-testid=\"raiseHand_icon_onTile\"\n        >\n          <HandIcon width={24} height={24} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n      {isBRB ? (\n        <StyledVideoTile.AttributeBox size={size} data-testid=\"brb_icon_onTile\">\n          <BrbTileIcon width={22} height={22} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n    </>\n  );\n};\n\nconst Tile = ({\n  peerId = \"\",\n  trackId = \"\",\n  width,\n  height,\n  objectFit = \"cover\",\n  canMinimise = false,\n  isDragabble = false,\n  rootCSS = {},\n  containerCSS = {},\n  enableSpotlightingPeer = true,\n  hideParticipantNameOnTile = false,\n  roundedVideoTile = true,\n  hideAudioMuteOnTile = false,\n  hideMetadataOnTile = false,\n}: {\n  peerId?: string;\n  trackId?: string;\n  width?: string | number;\n  height?: string | number;\n  objectFit?: string;\n  canMinimise?: boolean;\n  isDragabble?: boolean;\n  rootCSS?: CSS;\n  containerCSS?: CSS;\n  enableSpotlightingPeer?: boolean;\n  hideParticipantNameOnTile?: boolean;\n  roundedVideoTile?: boolean;\n  hideAudioMuteOnTile?: boolean;\n  hideMetadataOnTile?: boolean;\n}) => {\n  const trackSelector = trackId\n    ? selectVideoTrackByID(trackId)\n    : selectVideoTrackByPeerID(peerId);\n  const track = useHMSStore(trackSelector);\n  const peerName = useHMSStore(selectPeerNameByID(peerId));\n  const audioTrack = useHMSStore(selectAudioTrackByPeerID(peerId));\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n  const isVideoMuted = !track?.enabled;\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const isVideoDegraded = track?.degraded;\n  const isLocal = localPeerID === peerId;\n  const [pinnedTrackId] = useSetAppDataByKey(APP_DATA.pinnedTrackId);\n  const pinned = isSameTile({\n    trackId: pinnedTrackId,\n    videoTrackID: track?.id,\n    audioTrackID: audioTrack?.id,\n  });\n  const label = getVideoTileLabel({\n    peerName,\n    track,\n    isLocal,\n  });\n  const onHoverHandler = useCallback((event: React.MouseEvent) => {\n    setIsMouseHovered(event.type === \"mouseenter\");\n  }, []);\n\n  const [ref, { width: calculatedWidth, height: calculatedHeight }] =\n    useMeasure<HTMLDivElement>();\n\n  const isTileBigEnoughToShowStats =\n    calculatedHeight >= 180 && calculatedWidth >= 180;\n\n  const [avatarSize, attribBoxSize] = useMemo(\n    () => calculateAvatarAndAttribBoxSize(calculatedWidth, calculatedHeight),\n    [calculatedWidth, calculatedHeight]\n  );\n\n  return (\n    <StyledVideoTile.Root\n      ref={ref}\n      css={{\n        width,\n        height,\n        ...rootCSS,\n      }}\n      data-testid={`participant_tile_${peerName}`}\n    >\n      {peerName !== undefined ? (\n        <StyledVideoTile.Container\n          onMouseEnter={onHoverHandler}\n          onMouseLeave={onHoverHandler}\n          noRadius={!roundedVideoTile}\n          css={containerCSS}\n        >\n          {showStatsOnTiles && isTileBigEnoughToShowStats ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n              peerID={peerId}\n              isLocal={isLocal}\n            />\n          ) : null}\n\n          <Video\n            trackId={track?.id}\n            attach={isLocal ? undefined : !isAudioOnly}\n            mirror={\n              mirrorLocalVideo &&\n              peerId === localPeerID &&\n              track?.source === \"regular\" &&\n              track?.facingMode !== \"environment\"\n            }\n            noRadius={!roundedVideoTile}\n            data-testid=\"participant_video_tile\"\n            css={{\n              objectFit,\n              filter: isVideoDegraded ? \"blur($space$2)\" : undefined,\n              bg: \"transparent\",\n            }}\n          />\n          {calculatedWidth > 0 && calculatedHeight > 0 ? (\n            <>\n              {isVideoMuted || (!isLocal && isAudioOnly) ? (\n                <StyledVideoTile.AvatarContainer>\n                  <Avatar\n                    name={peerName || \"\"}\n                    data-testid=\"participant_avatar_icon\"\n                    size={avatarSize}\n                  />\n                </StyledVideoTile.AvatarContainer>\n              ) : null}\n              {!hideAudioMuteOnTile && isAudioMuted ? (\n                <StyledVideoTile.AudioIndicator\n                  data-testid=\"participant_audio_mute_icon\"\n                  size={attribBoxSize}\n                >\n                  <MicOffIcon />\n                </StyledVideoTile.AudioIndicator>\n              ) : null}\n              {!hideAudioMuteOnTile && !isAudioMuted ? (\n                <StyledVideoTile.AudioIndicator size={attribBoxSize}>\n                  <AudioLevel trackId={audioTrack?.id} size={attribBoxSize} />\n                </StyledVideoTile.AudioIndicator>\n              ) : null}\n              {!hideMetadataOnTile && (\n                <PeerMetadata peerId={peerId} size={attribBoxSize} />\n              )}\n            </>\n          ) : null}\n          {isMouseHovered || (isDragabble && navigator.maxTouchPoints > 0) ? (\n            <TileMenu\n              peerID={peerId}\n              audioTrackID={audioTrack?.id || \"\"}\n              videoTrackID={track?.id || \"\"}\n              canMinimise={canMinimise}\n              enableSpotlightingPeer={enableSpotlightingPeer}\n            />\n          ) : null}\n\n          <TileConnection\n            hideLabel={hideParticipantNameOnTile}\n            name={label}\n            peerId={peerId}\n            width={width}\n            pinned={pinned}\n          />\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst VideoTile = React.memo(Tile);\n\nexport default VideoTile;\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nconst Root = ({\n  onClick,\n  mediaURL,\n  isActive,\n  children,\n  testid = \"\",\n}: {\n  onClick?: () => Promise<void>;\n  mediaURL?: string;\n  isActive: boolean;\n  children?: React.JSX.Element[];\n  testid: string;\n}) => (\n  <Flex\n    data-testid={testid}\n    direction=\"column\"\n    align=\"center\"\n    css={{\n      p: \"$5\",\n      borderRadius: \"$1\",\n      bg: \"$surface_bright\",\n      border: `4px solid ${isActive ? \"$primary_default\" : \"$surface_dim\"}`,\n      cursor: \"pointer\",\n      \"&:hover\": { border: \"4px solid $primary_dim\" },\n      ...(mediaURL\n        ? {\n            height: \"$20\",\n            backgroundImage: `url(\"${mediaURL}\")`,\n            backgroundSize: \"cover\",\n          }\n        : {}),\n    }}\n    onClick={async () => {\n      await onClick?.();\n    }}\n  >\n    {children}\n  </Flex>\n);\n\nconst Title = ({ children }: { children?: string }) => {\n  return children ? (\n    <Text variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n      {children}\n    </Text>\n  ) : null;\n};\n\nconst Icon = ({ children }: { children?: React.JSX.Element }) => {\n  return children ? (\n    <Box css={{ color: \"$on_surface_high\" }}>{children}</Box>\n  ) : null;\n};\n\nexport const VBOption = {\n  Root,\n  Title,\n  Icon,\n};\n", "import React from \"react\";\n// Open issue with eslint-plugin-import https://github.com/import-js/eslint-plugin-import/issues/1810\n// eslint-disable-next-line\nimport { HMSVirtualBackgroundTypes } from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport { Box } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { VBOption } from \"./VBOption\";\n\nexport const VBCollection = ({\n  options,\n  title,\n  activeBackground = \"\",\n}: {\n  options: {\n    title?: string;\n    icon?: React.JSX.Element;\n    onClick?: () => Promise<void>;\n    mediaURL?: string;\n    value: string | HMSVirtualBackgroundTypes;\n    supported?: boolean;\n  }[];\n  title: string;\n  activeBackground: string;\n}) => {\n  if (options.length === 0) {\n    return null;\n  }\n  return (\n    <Box css={{ mt: \"$10\" }}>\n      <Text\n        variant=\"sm\"\n        css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n      >\n        {title}\n      </Text>\n      <Box\n        css={{\n          py: \"$4\",\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          gap: \"$8\",\n        }}\n      >\n        {options.map((option, index) =>\n          option.supported ? (\n            <VBOption.Root\n              key={option.value}\n              testid={\n                option.value === HMSVirtualBackgroundTypes.IMAGE\n                  ? `virtual_bg_option-${index}`\n                  : option.value\n              }\n              {...option}\n              isActive={activeBackground === option.value}\n            >\n              <VBOption.Icon>{option?.icon}</VBOption.Icon>\n              <VBOption.Title>{option?.title}</VBOption.Title>\n            </VBOption.Root>\n          ) : (\n            \"\"\n          )\n        )}\n      </Box>\n    </Box>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSMediaStreamPlugin,\n  selectAppData,\n  selectEffectsKey,\n  selectIsEffectsEnabled,\n  selectLocalPeerRole,\n} from \"@100mslive/hms-video-store\";\n// Open issue with eslint-plugin-import https://github.com/import-js/eslint-plugin-import/issues/1810\n// eslint-disable-next-line\nimport {\n  HMSVBPlugin,\n  HMSVirtualBackgroundTypes,\n} from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport { VirtualBackgroundMedia } from \"@100mslive/types-prebuilt/elements/virtual_background\";\nimport {\n  HMSRoomState,\n  selectIsLargeRoom,\n  selectIsLocalVideoEnabled,\n  selectIsLocalVideoPluginPresent,\n  selectLocalPeer,\n  selectRoomState,\n  selectVideoTrackByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BlurPersonHighIcon,\n  CrossCircleIcon,\n  CrossIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  config as cssConfig,\n  Flex,\n  Loading,\n  Slider,\n  Video,\n} from \"../../../index\";\nimport { Text } from \"../../../Text\";\nimport { VBCollection } from \"./VBCollection\";\nimport { VBHandler } from \"./VBHandler\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../AppData/useSidepane\";\nimport { useSidepaneResetOnLayoutUpdate } from \"../AppData/useSidepaneResetOnLayoutUpdate\";\n// @ts-ignore\nimport { useSetAppDataByKey, useUISettings } from \"../AppData/useUISettings\";\nimport {\n  APP_DATA,\n  SIDE_PANE_OPTIONS,\n  UI_SETTINGS,\n} from \"../../common/constants\";\n\nconst iconDims = { height: \"40px\", width: \"40px\" };\n\nexport const VBPicker = ({\n  backgroundMedia = [],\n}: {\n  backgroundMedia: VirtualBackgroundMedia[];\n}) => {\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const hmsActions = useHMSActions();\n  const localPeer = useHMSStore(selectLocalPeer);\n  const role = useHMSStore(selectLocalPeerRole);\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const trackSelector = selectVideoTrackByID(localPeer?.videoTrack);\n  const track = useHMSStore(trackSelector);\n  const [blurAmount, setBlurAmount] = useState(\n    VBHandler.getBlurAmount() || 0.5\n  );\n  const roomState = useHMSStore(selectRoomState);\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n  const isEffectsSupported = VBHandler.isEffectsSupported();\n  const isEffectsEnabled = useHMSStore(selectIsEffectsEnabled);\n  const effectsKey = useHMSStore(selectEffectsKey);\n  const isMobile = useMedia(cssConfig.media.md);\n  const [loadingEffects, setLoadingEffects] = useSetAppDataByKey(\n    APP_DATA.loadingEffects\n  );\n  const isPluginAdded = useHMSStore(\n    selectIsLocalVideoPluginPresent(VBHandler?.getName() || \"\")\n  );\n  const background = useHMSStore(selectAppData(APP_DATA.background));\n  const mediaList = backgroundMedia.map(\n    (media: VirtualBackgroundMedia) => media.url || \"\"\n  );\n  const pluginLoadingRef = useRef(false);\n\n  const inPreview = roomState === HMSRoomState.Preview;\n  // Hidden in preview as the effect will be visible in the preview tile\n  const showVideoTile = isVideoOn && isLargeRoom && !inPreview;\n\n  useEffect(() => {\n    const addHMSVBPlugin = async () => {\n      setLoadingEffects(false);\n      if (!role) {\n        return;\n      }\n      await VBHandler.initialisePlugin();\n      await hmsActions.addPluginToVideoTrack(\n        VBHandler.getVBObject() as HMSVBPlugin,\n        Math.floor(role.publishParams.video.frameRate / 2)\n      );\n    };\n    const initializeVirtualBackground = async () => {\n      if (!track?.id || pluginLoadingRef.current || isPluginAdded) {\n        return;\n      }\n\n      try {\n        pluginLoadingRef.current = true;\n        if (isEffectsEnabled && isEffectsSupported && effectsKey) {\n          setLoadingEffects(true);\n          await VBHandler.initialisePlugin(effectsKey, () => {\n            setLoadingEffects(false);\n          });\n          const vbInstance = VBHandler.getVBObject();\n          if (vbInstance.getName() === \"HMSEffects\") {\n            hmsActions.addPluginsToVideoStream([\n              VBHandler.getVBObject() as HMSMediaStreamPlugin,\n            ]);\n          } else {\n            await addHMSVBPlugin();\n          }\n        } else {\n          await addHMSVBPlugin();\n        }\n\n        const handleDefaultBackground = async () => {\n          switch (background) {\n            case HMSVirtualBackgroundTypes.NONE:\n              break;\n            case HMSVirtualBackgroundTypes.BLUR:\n              await VBHandler.setBlur(blurAmount);\n              break;\n            default:\n              await VBHandler.setBackground(background);\n          }\n        };\n\n        await handleDefaultBackground();\n      } catch (error) {\n        console.error(\"Error initializing virtual background:\", error);\n        setLoadingEffects(false);\n      }\n    };\n\n    initializeVirtualBackground();\n  }, [\n    hmsActions,\n    role,\n    isPluginAdded,\n    isEffectsEnabled,\n    isEffectsSupported,\n    effectsKey,\n    track?.id,\n    background,\n    blurAmount,\n    setLoadingEffects,\n  ]);\n\n  useEffect(() => {\n    if (!isVideoOn) {\n      toggleVB();\n    }\n    return () => setLoadingEffects(false);\n  }, [isVideoOn, setLoadingEffects, toggleVB]);\n\n  useSidepaneResetOnLayoutUpdate(\"virtual_background\", SIDE_PANE_OPTIONS.VB);\n\n  return (\n    <Flex css={{ pr: \"$6\", size: \"100%\" }} direction=\"column\">\n      <Flex\n        align=\"center\"\n        justify=\"between\"\n        css={{ w: \"100%\", background: \"$surface_dim\", pb: \"$4\" }}\n      >\n        <Text\n          variant=\"h6\"\n          css={{\n            color: \"$on_surface_high\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          Virtual Background{\" \"}\n          {isMobile && loadingEffects ? (\n            <Loading size={18} style={{ marginLeft: \"0.5rem\" }} />\n          ) : (\n            \"\"\n          )}\n        </Text>\n        <Box\n          css={{\n            color: \"$on_surface_high\",\n            \"&:hover\": { color: \"$on_surface_medium\" },\n            cursor: \"pointer\",\n          }}\n          onClick={toggleVB}\n        >\n          <CrossIcon />\n        </Box>\n      </Flex>\n\n      {showVideoTile ? (\n        <Video\n          mirror={track?.facingMode !== \"environment\" && mirrorLocalVideo}\n          trackId={localPeer?.videoTrack}\n          data-testid=\"preview_tile\"\n          css={{ width: \"100%\", height: \"16rem\" }}\n        />\n      ) : null}\n      <Box\n        css={{\n          mt: \"$4\",\n          overflowY: \"auto\",\n          flex: \"1 1 0\",\n          mr: \"-$10\",\n          pr: \"$10\",\n        }}\n      >\n        <VBCollection\n          title=\"Effects\"\n          options={[\n            {\n              title: \"No effect\",\n              icon: <CrossCircleIcon style={iconDims} />,\n              value: HMSVirtualBackgroundTypes.NONE,\n              onClick: async () => {\n                await VBHandler.removeEffects();\n                hmsActions.setAppData(\n                  APP_DATA.background,\n                  HMSVirtualBackgroundTypes.NONE\n                );\n              },\n              supported: true,\n            },\n            {\n              title: \"Blur\",\n              icon: <BlurPersonHighIcon style={iconDims} />,\n              value: HMSVirtualBackgroundTypes.BLUR,\n              onClick: async () => {\n                await VBHandler?.setBlur(blurAmount);\n                hmsActions.setAppData(\n                  APP_DATA.background,\n                  HMSVirtualBackgroundTypes.BLUR\n                );\n              },\n              supported: isEffectsSupported && isEffectsEnabled,\n            },\n          ]}\n          activeBackground={background}\n        />\n\n        {/* Slider */}\n        <Flex direction=\"column\" css={{ w: \"100%\", gap: \"$8\", mt: \"$8\" }}>\n          {background === HMSVirtualBackgroundTypes.BLUR &&\n          isEffectsEnabled &&\n          effectsKey ? (\n            <Box>\n              <Text\n                variant=\"sm\"\n                css={{\n                  color: \"$on_surface_high\",\n                  fontWeight: \"$semiBold\",\n                  mb: \"$4\",\n                }}\n              >\n                Blur intensity\n              </Text>\n              <Flex\n                css={{\n                  w: \"100%\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  gap: \"$4\",\n                }}\n              >\n                <Text\n                  variant=\"caption\"\n                  css={{ fontWeight: \"$medium\", color: \"$on_surface_medium\" }}\n                >\n                  Low\n                </Text>\n                <Slider\n                  showTooltip={false}\n                  value={[blurAmount]}\n                  onValueChange={async (e) => {\n                    setBlurAmount(e[0]);\n                    await VBHandler.setBlur(e[0]);\n                  }}\n                  step={0.1}\n                  min={0.1}\n                  max={1}\n                />\n                <Text\n                  variant=\"caption\"\n                  css={{ fontWeight: \"$medium\", color: \"$on_surface_medium\" }}\n                >\n                  High\n                </Text>\n              </Flex>\n            </Box>\n          ) : null}\n        </Flex>\n\n        <VBCollection\n          title=\"Backgrounds\"\n          options={mediaList.map((mediaURL) => ({\n            mediaURL,\n            value: mediaURL,\n            onClick: async () => {\n              await VBHandler?.setBackground(mediaURL);\n              hmsActions.setAppData(APP_DATA.background, mediaURL);\n            },\n            supported: true,\n          }))}\n          activeBackground={background}\n        />\n      </Box>\n    </Flex>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectAppData,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Polls } from \"../components/Polls/Polls\";\nimport { RoomDetailsPane } from \"../components/RoomDetails/RoomDetailsPane\";\nimport { LayoutMode } from \"../components/Settings/LayoutSettings\";\nimport { SidePaneTabs } from \"../components/SidePaneTabs\";\nimport { TileCustomisationProps } from \"../components/VideoLayouts/GridLayout\";\nimport VideoTile from \"../components/VideoTile\";\nimport { VBPicker } from \"../components/VirtualBackground/VBPicker\";\nimport { Flex } from \"../../Layout\";\nimport { config as cssConfig, styled } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport { useSidepaneReset } from \"../components/AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"../components/AppData/useUISettings\";\nimport {\n  useRoomLayoutConferencingScreen,\n  useRoomLayoutPreviewScreen,\n} from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../common/hooks\";\nimport { translateAcross } from \"../../utils\";\nimport { APP_DATA, SIDE_PANE_OPTIONS, UI_SETTINGS } from \"../common/constants\";\n\nconst Wrapper = styled(\"div\", {\n  w: \"$100\",\n  h: \"100%\",\n  p: \"$10\",\n  flex: \"1 1 0\",\n  background: \"$surface_dim\",\n  r: \"$1\",\n  position: \"relative\",\n  \"@lg\": {\n    w: \"100%\",\n    h: \"100%\",\n    ml: 0,\n    right: 0,\n    position: \"fixed\",\n    bottom: 0,\n    borderRadius: 0,\n    zIndex: 10,\n  },\n  \"@md\": {\n    p: \"$6 $8\",\n    animation: `${translateAcross({\n      yFrom: \"100%\",\n    })} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n  },\n  variants: {\n    landscapeStream: {\n      true: {\n        \"@lg\": {\n          position: \"unset\",\n          minHeight: \"100%\",\n        },\n      },\n    },\n    mobileStream: {\n      true: {\n        \"@md\": {\n          position: \"unset\",\n        },\n      },\n    },\n    overlayChat: {\n      true: {\n        \"@lg\": {\n          maxHeight: \"300px\",\n          background:\n            \"linear-gradient(180deg, rgba(0, 0, 0, 0.00) 35.94%, rgba(0, 0, 0, 0.64) 100%)\",\n          position: \"fixed\",\n          zIndex: 12,\n          bottom: 0,\n        },\n      },\n    },\n    roomDescription: {\n      true: {\n        overflowY: \"auto\",\n      },\n    },\n    hideControls: {\n      true: {},\n    },\n    virtualBackground: {\n      true: {\n        maxHeight: \"100%\",\n        background: \"$surface_dim\",\n      },\n    },\n  },\n  compoundVariants: [\n    {\n      landscapeStream: true,\n      overlayChat: true,\n      css: {\n        position: \"unset\",\n        height: \"100%\",\n        maxHeight: \"unset\",\n        \"@md\": {\n          pb: 0,\n        },\n      },\n    },\n    {\n      mobileStream: true,\n      overlayChat: true,\n      css: {\n        position: \"unset\",\n        height: \"100%\",\n        maxHeight: \"unset\",\n      },\n    },\n    {\n      hideControls: false,\n      overlayChat: true,\n      css: {\n        pb: \"$17\",\n      },\n    },\n  ],\n});\n\nconst SidePane = ({\n  tileProps,\n  hideControls = false,\n}: {\n  tileProps?: TileCustomisationProps;\n  hideControls?: boolean;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const activeScreensharePeerId = useHMSStore(\n    selectAppData(APP_DATA.activeScreensharePeerId)\n  );\n  const trackId = useHMSStore(\n    selectVideoTrackByPeerID(activeScreensharePeerId)\n  )?.id;\n  const { elements } = useRoomLayoutConferencingScreen();\n  const { elements: preview_elements } = useRoomLayoutPreviewScreen();\n  const layoutMode = useUISettings(UI_SETTINGS.layoutMode);\n\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const isMobileHLSStream = useMobileHLSStream();\n\n  const backgroundMedia = preview_elements?.virtual_background?.background_media\n    ?.length\n    ? preview_elements?.virtual_background?.background_media\n    : elements?.virtual_background?.background_media || [];\n\n  const tileLayout = {\n    hideParticipantNameOnTile: tileProps?.hide_participant_name_on_tile,\n    roundedVideoTile: tileProps?.rounded_video_tile,\n    hideAudioMuteOnTile: tileProps?.hide_audio_mute_on_tile,\n    hideMetadataOnTile: tileProps?.hide_metadata_on_tile,\n    objectFit: tileProps?.video_object_fit,\n  };\n  const mwebStreamingChat =\n    isMobile &&\n    sidepane === SIDE_PANE_OPTIONS.CHAT &&\n    elements?.chat?.is_overlay;\n  const commonProps = {\n    landscapeStream: isLandscapeHLSStream,\n    mobileStream: isMobileHLSStream,\n    hideControls,\n    overlayChat: !!elements?.chat?.is_overlay,\n    roomDescription: sidepane === SIDE_PANE_OPTIONS.ROOM_DETAILS,\n    virtualBackground: sidepane === SIDE_PANE_OPTIONS.VB,\n  };\n\n  const SidepaneComponent = match(sidepane)\n    .with(SIDE_PANE_OPTIONS.POLLS, () => (\n      <Wrapper\n        css={{\n          \"@md\": {\n            borderTopLeftRadius: \"$2\",\n            borderTopRightRadius: \"$2\",\n          },\n        }}\n        {...commonProps}\n      >\n        <Polls />\n      </Wrapper>\n    ))\n    .with(SIDE_PANE_OPTIONS.VB, () => (\n      <Wrapper css={{ p: \"$10 $6 $10 $10\" }} {...commonProps}>\n        <VBPicker backgroundMedia={backgroundMedia} />\n      </Wrapper>\n    ))\n    .with(SIDE_PANE_OPTIONS.CHAT, SIDE_PANE_OPTIONS.PARTICIPANTS, () => (\n      <Wrapper {...commonProps} overlayChat={mwebStreamingChat}>\n        <SidePaneTabs\n          active={sidepane}\n          hideTab={isMobileHLSStream || isLandscapeHLSStream}\n        />\n      </Wrapper>\n    ))\n    .with(SIDE_PANE_OPTIONS.ROOM_DETAILS, () => (\n      <Wrapper {...commonProps}>\n        <RoomDetailsPane />\n      </Wrapper>\n    ))\n    .otherwise(() => {\n      return null;\n    });\n\n  const resetSidePane = useSidepaneReset();\n\n  useEffect(() => {\n    return () => {\n      resetSidePane();\n    };\n  }, [resetSidePane]);\n\n  if (!SidepaneComponent && !trackId) {\n    return null;\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"center\"\n      css={{\n        w: match({ isMobileHLSStream, isLandscapeHLSStream })\n          .with({ isLandscapeHLSStream: true }, () => \"340px\")\n          .with({ isMobileHLSStream: true }, () => \"100%\")\n          .otherwise(() => \"$100\"),\n        h: \"100%\",\n        flexShrink: 0,\n        gap: \"$4\",\n        position: \"relative\",\n        \"&:empty\": { display: \"none\" },\n        \"@md\": {\n          position: \"absolute\",\n          zIndex: 12,\n        },\n      }}\n    >\n      {trackId && layoutMode === LayoutMode.GALLERY && (\n        <VideoTile\n          peerId={activeScreensharePeerId}\n          trackId={trackId}\n          width=\"100%\"\n          height={225}\n          rootCSS={{ p: 0, alignSelf: \"start\", flexShrink: 0 }}\n          {...tileLayout}\n        />\n      )}\n      {SidepaneComponent}\n    </Flex>\n  );\n};\n\nexport default SidePane;\n", "import React from \"react\";\nimport { Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { CSS } from \"../../Theme\";\n\nconst Chip = ({\n  icon = <></>,\n  content = \"\",\n  backgroundColor = \"$surface_default\",\n  textColor = \"$on_surface_high\",\n  hideIfNoContent = false,\n  onClick,\n  css = {},\n}: {\n  icon?: React.JSX.Element;\n  content: string;\n  backgroundColor?: string;\n  textColor?: string;\n  hideIfNoContent?: boolean;\n  onClick?: () => void | Promise<void>;\n  css?: CSS;\n}) => {\n  if (hideIfNoContent && !content) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        backgroundColor,\n        p: \"$4 $6\",\n        gap: \"$2\",\n        borderRadius: \"$4\",\n        ...css,\n      }}\n      onClick={() => onClick?.()}\n    >\n      {icon}\n      <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\", color: textColor }}>\n        {content}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default Chip;\n", "import React from \"react\";\nimport { Flex } from \"../../Layout\";\nimport { Loading } from \"../../Loading\";\nimport { Text } from \"../../Text\";\nimport { CSS } from \"../../Theme\";\n\nconst FullPageProgress = ({\n  loaderColor = \"$primary_default\",\n  text = \"\",\n  css = {},\n}: {\n  loaderColor?: string;\n  text?: string;\n  css?: CSS;\n}) => (\n  <Flex\n    direction=\"column\"\n    justify=\"center\"\n    align=\"center\"\n    css={{ size: \"100%\", color: loaderColor, ...css }}\n  >\n    <Loading color=\"currentColor\" size={100} />\n    {text ? (\n      <Text css={{ mt: \"$10\", color: \"$on_surface_high\" }}>{text}</Text>\n    ) : null}\n  </Flex>\n);\n\nexport default FullPageProgress;\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { JoinForm_JoinBtnType } from \"@100mslive/types-prebuilt/elements/join_form\";\nimport { useRecordingStreaming } from \"@100mslive/react-sdk\";\nimport { GoLiveIcon } from \"@100mslive/react-icons\";\nimport { Button, config as cssConfig, Flex, Input, styled } from \"../../..\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\n// @ts-ignore: No implicit Any\nimport { PreviewSettings } from \"./PreviewJoin\";\n\nconst PreviewForm = ({\n  name,\n  disabled,\n  onChange,\n  onJoin,\n  enableJoin,\n  cannotPublishVideo = false,\n  cannotPublishAudio = false,\n}: {\n  name: string;\n  disabled?: boolean;\n  onChange: (name: string) => void;\n  onJoin: () => void;\n  enableJoin: boolean;\n  cannotPublishVideo: boolean;\n  cannotPublishAudio: boolean;\n}) => {\n  const formSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n  };\n  const isMobile = useMedia(cssConfig.media.md);\n  const {\n    isHLSRunning,\n    isRTMPRunning,\n    isHLSRecordingOn,\n    isBrowserRecordingOn,\n  } = useRecordingStreaming();\n\n  const layout = useRoomLayout();\n  const { join_form: joinForm = {} } =\n    layout?.screens?.preview?.default?.elements || {};\n\n  const showGoLive =\n    joinForm?.join_btn_type ===\n      JoinForm_JoinBtnType.JOIN_BTN_TYPE_JOIN_AND_GO_LIVE &&\n    !isHLSRunning &&\n    !isRTMPRunning &&\n    !isHLSRecordingOn &&\n    !isBrowserRecordingOn;\n\n  return (\n    <Form\n      css={{\n        flexDirection: cannotPublishVideo ? \"column\" : \"row\",\n        \"@md\": { flexDirection: \"row\" },\n      }}\n      onSubmit={formSubmit}\n    >\n      <Flex align=\"center\" css={{ gap: \"$8\", w: \"100%\" }}>\n        <Input\n          required\n          id=\"name\"\n          disabled={disabled}\n          css={{ w: \"100%\", boxSizing: \"border-box\" }}\n          value={name}\n          onChange={(e) => onChange(e.target.value.trimStart())}\n          placeholder=\"Enter name\"\n          autoFocus\n          autoComplete=\"name\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && name.trim().length > 0) {\n              e.preventDefault();\n              if (isMobile) {\n                return;\n              }\n              onJoin();\n            }\n          }}\n        />\n        {cannotPublishAudio && cannotPublishVideo && !isMobile ? (\n          <PreviewSettings />\n        ) : null}\n      </Flex>\n\n      <Button\n        type=\"submit\"\n        icon\n        disabled={!name || !enableJoin}\n        onClick={onJoin}\n      >\n        {/* Conditions to show go live: The first broadcaster joins a streaming kit that is not live */}\n        {showGoLive ? <GoLiveIcon height={18} width={18} /> : null}\n        {showGoLive ? joinForm.go_live_btn_label : joinForm.join_btn_label}\n      </Button>\n    </Form>\n  );\n};\n\nconst Form = styled(\"form\", {\n  width: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"$8\",\n  mt: \"$10\",\n  mb: \"$10\",\n  \"@md\": {\n    gap: \"$4\",\n  },\n});\n\nexport default PreviewForm;\n", "import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useMeasure, useMedia } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectAppData,\n  selectIsLocalVideoEnabled,\n  selectIsVBEnabled,\n  selectLocalPeer,\n  selectRoomState,\n  selectVideoTrackByID,\n  useAVToggle,\n  useAwayNotifications,\n  useHMSStore,\n  useParticipants,\n  usePreviewJoin,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { MicOffIcon, SettingsIcon } from \"@100mslive/react-icons\";\nimport {\n  Avatar,\n  Box,\n  config as cssConfig,\n  Flex,\n  flexCenter,\n  styled,\n  StyledVideoTile,\n  Text,\n  Video,\n} from \"../../..\";\nimport { AudioLevel } from \"../../../AudioLevel\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\nimport IconButton from \"../../IconButton\";\nimport SidePane from \"../../layouts/SidePane\";\nimport { AudioVideoToggle, NoiseCancellation } from \"../AudioVideoToggle\";\nimport Chip from \"../Chip\";\nimport TileConnection from \"../Connection/TileConnection\";\nimport FullPageProgress from \"../FullPageProgress\";\n// @ts-ignore: No implicit Any\nimport { Logo } from \"../Header/HeaderComponents\";\n// @ts-ignore: No implicit Any\nimport SettingsModal from \"../Settings/SettingsModal\";\nimport { VBToggle } from \"../VirtualBackground/VBToggle\";\nimport PreviewForm from \"./PreviewForm\";\nimport { useRoomLayoutPreviewScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport {\n  useAuthToken,\n  useUISettings,\n  // @ts-ignore: No implicit Any\n} from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport {\n  defaultPreviewPreference,\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n// @ts-ignore: No implicit Any\nimport {\n  calculateAvatarAndAttribBoxSize,\n  getFormattedCount,\n} from \"../../common/utils\";\nimport { APP_DATA, UI_SETTINGS } from \"../../common/constants\";\n\nconst getParticipantChipContent = (peerCount = 0) => {\n  if (peerCount === 0) {\n    return \"You are the first to join\";\n  }\n  const formattedNum = getFormattedCount(peerCount);\n  return `${formattedNum} other${\n    parseInt(formattedNum) === 1 ? \"\" : \"s\"\n  } in the session`;\n};\n\nconst useLocalTileAspectRatio = () => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const videoTrack = useHMSStore(selectVideoTrackByID(localPeer?.videoTrack));\n  const isMobile = useMedia(cssConfig.media.md);\n  let aspectRatio = 0;\n  if (videoTrack?.width && videoTrack?.height) {\n    aspectRatio = videoTrack.width / videoTrack.height;\n  } else {\n    aspectRatio = isMobile ? 9 / 16 : 16 / 9;\n  }\n  return aspectRatio;\n};\n\nconst PreviewJoin = ({\n  skipPreview,\n  initialName,\n  asRole,\n}: {\n  skipPreview?: boolean;\n  initialName?: string;\n  asRole?: string;\n}) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW,\n    defaultPreviewPreference\n  );\n  const { isStreamingOn } = useRecordingStreaming();\n  const authToken = useAuthToken();\n  const [name, setName] = useState(initialName || previewPreference.name);\n  const { toggleAudio, toggleVideo } = useAVToggle();\n  const [previewError, setPreviewError] = useState(false);\n  const { endpoints } = useHMSPrebuiltContext();\n  const { peerCount } = useParticipants();\n  const loadingEffects = useHMSStore(selectAppData(APP_DATA.loadingEffects));\n  const { enableJoin, preview, join } = usePreviewJoin({\n    name,\n    token: authToken,\n    initEndpoint: endpoints?.init,\n    initialSettings: {\n      isAudioMuted: skipPreview || previewPreference.isAudioMuted,\n      isVideoMuted: skipPreview || previewPreference.isVideoMuted,\n      speakerAutoSelectionBlacklist: [\"Yeti Stereo Microphone\"],\n    },\n    captureNetworkQualityInPreview: true,\n    handleError: (_, method) => {\n      if (method === \"preview\") {\n        setPreviewError(true);\n      }\n    },\n    asRole,\n  });\n  const { requestPermission } = useAwayNotifications();\n  const roomState = useHMSStore(selectRoomState);\n  const savePreferenceAndJoin = useCallback(() => {\n    setPreviewPreference({\n      name,\n    });\n    join();\n  }, [join, name, setPreviewPreference]);\n  const { elements = {} } = useRoomLayoutPreviewScreen();\n  const { preview_header: previewHeader = {}, virtual_background } =\n    elements || {};\n  const aspectRatio = useLocalTileAspectRatio();\n  useEffect(() => {\n    if (authToken) {\n      if (skipPreview) {\n        savePreferenceAndJoin();\n      } else {\n        preview().then(() => requestPermission());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authToken, skipPreview]);\n\n  useEffect(() => {\n    if (initialName) {\n      setName(initialName);\n    }\n  }, [initialName]);\n\n  return roomState === HMSRoomState.Preview ? (\n    <Flex justify=\"center\" css={{ size: \"100%\", position: \"relative\" }}>\n      <Container\n        css={{\n          h: \"100%\",\n          pt: \"$6\",\n          \"@md\": { justifyContent: \"space-between\", pt: \"$10\" },\n        }}\n      >\n        {toggleVideo ? null : <Box />}\n        <Flex\n          direction=\"column\"\n          justify=\"center\"\n          css={{ w: \"100%\", maxWidth: \"600px\", gap: \"$8\" }}\n        >\n          <Logo />\n          <Text\n            variant=\"h4\"\n            css={{ wordBreak: \"break-word\", textAlign: \"center\" }}\n          >\n            {previewHeader.title}\n          </Text>\n          <Text\n            css={{\n              c: \"$on_surface_medium\",\n              textAlign: \"center\",\n              maxWidth: \"100%\",\n              wordWrap: \"break-word\",\n            }}\n            variant=\"sm\"\n          >\n            {previewHeader.sub_title}\n          </Text>\n          <Flex justify=\"center\" css={{ gap: \"$4\" }}>\n            {isStreamingOn ? (\n              <Chip\n                content=\"LIVE\"\n                backgroundColor=\"$alert_error_default\"\n                textColor=\"#FFF\"\n                icon={\n                  <Box\n                    css={{\n                      h: \"$sm\",\n                      w: \"$sm\",\n                      backgroundColor: \"$on_primary_high\",\n                      borderRadius: \"$round\",\n                    }}\n                  />\n                }\n              />\n            ) : null}\n            <Chip\n              content={getParticipantChipContent(peerCount)}\n              hideIfNoContent\n            />\n          </Flex>\n        </Flex>\n        {toggleVideo ? <PreviewTile name={name} error={previewError} /> : null}\n        <Box\n          css={{ w: \"100%\", maxWidth: `${Math.max(aspectRatio, 1) * 340}px` }}\n        >\n          <PreviewControls\n            hideSettings={!toggleVideo && !toggleAudio}\n            vbEnabled={!!virtual_background}\n          />\n          <PreviewForm\n            name={name}\n            disabled={!!initialName}\n            onChange={setName}\n            enableJoin={enableJoin && !loadingEffects}\n            onJoin={savePreferenceAndJoin}\n            cannotPublishVideo={!toggleVideo}\n            cannotPublishAudio={!toggleAudio}\n          />\n        </Box>\n      </Container>\n      <Box\n        css={{\n          position: \"absolute\",\n          right: \"0\",\n          top: 0,\n          height: \"100%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <SidePane />\n      </Box>\n    </Flex>\n  ) : (\n    <FullPageProgress />\n  );\n};\n\nconst Container = styled(\"div\", {\n  width: \"100%\",\n  ...flexCenter,\n  flexDirection: \"column\",\n  px: \"$10\",\n});\n\nexport const PreviewTile = ({\n  name,\n  error,\n}: {\n  name: string;\n  error?: boolean;\n}) => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const { isLocalAudioEnabled, toggleAudio } = useAVToggle();\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const trackSelector = selectVideoTrackByID(localPeer?.videoTrack);\n  const track = useHMSStore(trackSelector);\n  const showMuteIcon = !isLocalAudioEnabled || !toggleAudio;\n  const aspectRatio = useLocalTileAspectRatio();\n  const [ref, { width: calculatedWidth, height: calculatedHeight }] =\n    useMeasure<HTMLDivElement>();\n  const [avatarSize, attribBoxSize] = useMemo(\n    () => calculateAvatarAndAttribBoxSize(calculatedWidth, calculatedHeight),\n    [calculatedWidth, calculatedHeight]\n  );\n\n  return (\n    <StyledVideoTile.Container\n      ref={ref}\n      css={{\n        bg: \"$surface_default\",\n        aspectRatio,\n        height: \"min(340px, 70vh)\",\n        width: \"auto\",\n        maxWidth: \"600px\",\n        overflow: \"clip\",\n        mt: \"$10\",\n        \"@md\": {\n          mt: 0,\n          width: \"min(220px, 70vw)\",\n          maxWidth: \"100%\",\n          my: \"$4\",\n        },\n      }}\n    >\n      {localPeer ? (\n        <>\n          <TileConnection name=\"\" peerId={localPeer.id} hideLabel={false} />\n          <Video\n            mirror={track?.facingMode !== \"environment\" && mirrorLocalVideo}\n            trackId={localPeer.videoTrack}\n            data-testid=\"preview_tile\"\n          />\n\n          {!isVideoOn ? (\n            <StyledVideoTile.AvatarContainer>\n              <Avatar\n                name={name}\n                data-testid=\"preview_avatar_tile\"\n                size={avatarSize}\n              />\n            </StyledVideoTile.AvatarContainer>\n          ) : null}\n        </>\n      ) : null}\n      {!localPeer && !error ? <FullPageProgress /> : null}\n\n      {showMuteIcon ? (\n        <StyledVideoTile.AudioIndicator size={attribBoxSize}>\n          <MicOffIcon />\n        </StyledVideoTile.AudioIndicator>\n      ) : (\n        <StyledVideoTile.AudioIndicator size={attribBoxSize}>\n          <AudioLevel trackId={localPeer?.audioTrack} />\n        </StyledVideoTile.AudioIndicator>\n      )}\n    </StyledVideoTile.Container>\n  );\n};\n\nexport const PreviewControls = ({\n  hideSettings,\n  vbEnabled,\n}: {\n  hideSettings: boolean;\n  vbEnabled: boolean;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isVBEnabledForUser = useHMSStore(selectIsVBEnabled);\n  return (\n    <Flex\n      justify={hideSettings && isMobile ? \"center\" : \"between\"}\n      css={{\n        width: \"100%\",\n        mt: \"$6\",\n      }}\n    >\n      <Flex css={{ gap: \"$4\" }}>\n        <AudioVideoToggle />\n        {vbEnabled && isVBEnabledForUser ? <VBToggle /> : null}\n      </Flex>\n      <Flex align=\"center\" gap=\"1\">\n        {isMobile && <NoiseCancellation iconOnly />}\n        {!hideSettings ? <PreviewSettings /> : null}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const PreviewSettings = React.memo(() => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Fragment>\n      <IconButton\n        data-testid=\"preview_setting_btn\"\n        css={{ flexShrink: 0 }}\n        onClick={() => setOpen((value) => !value)}\n      >\n        <SettingsIcon />\n      </IconButton>\n      {open && <SettingsModal open={open} onOpenChange={setOpen} />}\n    </Fragment>\n  );\n});\n\nexport default PreviewJoin;\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, Button, config as cssConfig, Dialog, Flex, Text } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n\nexport const RequestPrompt = ({\n  open = true,\n  onOpenChange,\n  title,\n  body,\n  actionText = \"Accept\",\n  onAction,\n  disableActions = false,\n}: {\n  open?: boolean;\n  onOpenChange: (value: boolean) => void;\n  title: string;\n  body: React.ReactNode;\n  actionText?: string;\n  onAction: () => void;\n  disableActions?: boolean;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (isMobile) {\n    return (\n      <Sheet.Root open={open} onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ py: \"$8\" }}>\n          <Text\n            css={{\n              fontWeight: \"$semiBold\",\n              c: \"$on_surface_high\",\n              \"@md\": { px: \"$8\" },\n            }}\n          >\n            {title}\n          </Text>\n          {body}\n          <RequestActions\n            actionText={actionText}\n            onAction={onAction}\n            disabled={disableActions}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root open={open} modal={false} onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Content\n          css={{ p: \"$10\" }}\n          onInteractOutside={(e) => e.preventDefault()}\n        >\n          <Dialog.Title\n            css={{\n              p: 0,\n              display: \"flex\",\n              flexDirection: \"row\",\n              gap: \"$md\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text variant=\"h6\">{title}</Text>\n          </Dialog.Title>\n          <Box css={{ mt: \"$4\", mb: \"$10\" }}>{body}</Box>\n          <RequestActions\n            actionText={actionText}\n            onAction={onAction}\n            disabled={disableActions}\n          />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst RequestActions = ({\n  onAction,\n  actionText,\n  disabled = false,\n}: {\n  actionText?: string;\n  onAction: () => void;\n  disabled?: boolean;\n}) => (\n  <Flex\n    justify=\"center\"\n    align=\"center\"\n    css={{ width: \"100%\", gap: \"$md\", \"@md\": { mt: \"$8\", px: \"$8\" } }}\n  >\n    <Box css={{ width: \"50%\" }}>\n      <Dialog.Close css={{ width: \"100%\", height: \"100%\" }} asChild>\n        <Button\n          variant=\"standard\"\n          outlined\n          css={{ width: \"100%\", p: \"$4 $8\" }}\n          disabled={disabled}\n        >\n          Decline\n        </Button>\n      </Dialog.Close>\n    </Box>\n    <Box css={{ width: \"50%\" }}>\n      <Button\n        variant=\"primary\"\n        css={{ width: \"100%\" }}\n        onClick={onAction}\n        disabled={disabled}\n      >\n        {actionText}\n      </Button>\n    </Box>\n  </Flex>\n);\n", "import React, { useEffect } from \"react\";\nimport {\n  selectIsInPreview,\n  selectLocalPeerName,\n  selectLocalPeerRoleName,\n  selectRoleChangeRequest,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex, Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { PreviewControls, PreviewTile } from \"../Preview/PreviewJoin\";\nimport { RequestPrompt } from \"./RequestPrompt\";\nimport { useRoomLayoutPreviewScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useMyMetadata } from \"../hooks/useMetadata\";\n// @ts-ignore: No implicit Any\nimport { ROLE_CHANGE_DECLINED } from \"../../common/constants\";\n\nexport const RoleChangeRequestModal = () => {\n  const hmsActions = useHMSActions();\n  const { updateMetaData } = useMyMetadata();\n  const isPreview = useHMSStore(selectIsInPreview);\n  const currentRole = useHMSStore(selectLocalPeerRoleName);\n  const roleChangeRequest = useHMSStore(selectRoleChangeRequest);\n  const name = useHMSStore(selectLocalPeerName);\n  const { sendEvent } = useCustomEvent({ type: ROLE_CHANGE_DECLINED });\n  const { elements = {} } = useRoomLayoutPreviewScreen();\n  const { virtual_background } = elements || {};\n\n  useEffect(() => {\n    if (!roleChangeRequest?.role) {\n      return;\n    }\n    (async () => {\n      await hmsActions.preview({ asRole: roleChangeRequest.role.name });\n    })();\n  }, [hmsActions, roleChangeRequest, currentRole, updateMetaData]);\n\n  if (!roleChangeRequest?.role) {\n    return null;\n  }\n\n  const body = (\n    <>\n      <Text\n        variant=\"xs\"\n        css={{\n          c: \"$on_surface_medium\",\n          textAlign: \"center\",\n          \"@md\": {\n            textAlign: \"left\",\n            borderBottom: \"1px solid $border_bright\",\n            pb: \"$4\",\n            px: \"$8\",\n          },\n        }}\n      >\n        Setup your audio and video before joining\n      </Text>\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        css={{\n          \"@sm\": { width: \"100%\" },\n          flexDirection: \"column\",\n          mt: \"$6\",\n          \"@md\": { px: \"$8\" },\n        }}\n      >\n        <PreviewTile name={name || \"\"} />\n\n        <PreviewControls hideSettings={true} vbEnabled={!!virtual_background} />\n      </Flex>\n    </>\n  );\n\n  return (\n    <RequestPrompt\n      title=\"You're invited to join the stage\"\n      onOpenChange={async (value) => {\n        if (!value) {\n          hmsActions.rejectChangeRole(roleChangeRequest);\n          sendEvent(\n            { ...roleChangeRequest, peerName: name },\n            { peerId: roleChangeRequest.requestedBy?.id }\n          );\n          await hmsActions.cancelMidCallPreview();\n          await hmsActions.lowerLocalPeerHand();\n        }\n      }}\n      body={body}\n      onAction={async () => {\n        await hmsActions.acceptChangeRole(roleChangeRequest);\n        await updateMetaData({ prevRole: currentRole });\n        await hmsActions.lowerLocalPeerHand();\n      }}\n      actionText=\"Accept\"\n      disableActions={!isPreview}\n    />\n  );\n};\n", "import React from \"react\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\n\nexport const WaitingView = React.memo(\n  ({\n    icon,\n    title,\n    subtitle,\n  }: {\n    icon: React.ReactNode;\n    title: string;\n    subtitle: string;\n  }) => {\n    return (\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          textAlign: \"center\",\n          margin: \"auto\",\n          h: \"100%\",\n          justifyContent: \"center\",\n          gap: \"$8\",\n        }}\n      >\n        <Box\n          css={{\n            backgroundColor: \"$surface_default\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$4\",\n            size: \"$20\",\n            r: \"$round\",\n            justifyContent: \"center\",\n          }}\n        >\n          {icon}\n        </Box>\n        <Flex\n          direction=\"column\"\n          css={{\n            p: \"$1\",\n            gap: \"$4\",\n          }}\n        >\n          <Text\n            variant=\"h4\"\n            css={{ \"@md\": { fontSize: \"$md\", color: \"$on_surface_high\" } }}\n          >\n            {title}\n          </Text>\n          <Text\n            variant=\"body1\"\n            css={{\n              fontWeight: \"$regular\",\n              color: \"$on_surface_medium\",\n              \"@md\": { fontSize: \"$sm\" },\n            }}\n          >\n            {subtitle}\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n);\n", "import React, { useContext } from \"react\";\n\ntype TileContextType = {\n  enableSpotlightingPeer: boolean;\n  hideParticipantNameOnTile?: boolean;\n  roundedVideoTile?: boolean;\n  hideAudioMuteOnTile?: boolean;\n  hideAudioLevelOnTile?: boolean;\n  objectFit?: \"cover\" | \"contain\";\n  hideMetadataOnTile?: boolean;\n};\n\nexport const VideoTileContext = React.createContext<TileContextType>({\n  enableSpotlightingPeer: true,\n  hideParticipantNameOnTile: false,\n  roundedVideoTile: true,\n  hideAudioMuteOnTile: false,\n  hideAudioLevelOnTile: false,\n  objectFit: \"contain\",\n  hideMetadataOnTile: false,\n});\n\nexport const useVideoTileContext = () => {\n  const context = useContext(VideoTileContext);\n  return context;\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectIsAllowedToPublish,\n  selectLocalPeer,\n  selectPeerByID,\n  selectVideoTrackByID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../IconButton\";\n// @ts-ignore: No implicit Any\nimport { AudioVideoToggle } from \"./AudioVideoToggle\";\n// @ts-ignore: No implicit Any\nimport VideoTile from \"./VideoTile\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"./AppData/useUISettings\";\nimport { useVideoTileContext } from \"./hooks/useVideoTileLayout\";\n// @ts-ignore: No implicit Any\nimport { APP_DATA } from \"../common/constants\";\n\nconst MinimisedTile = ({\n  setMinimised,\n}: {\n  setMinimised: (value: boolean) => void;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        gap: \"$6\",\n        r: \"$1\",\n        bg: \"$surface_default\",\n        p: \"$4\",\n        color: \"$on_surface_high\",\n      }}\n    >\n      <AudioVideoToggle hideOptions={true} />\n      <Text>You</Text>\n      <IconButton\n        className=\"__cancel-drag-event\"\n        onClick={() => setMinimised(false)}\n        css={{ bg: \"transparent\", border: \"transparent\" }}\n      >\n        <ExpandIcon />\n      </IconButton>\n    </Flex>\n  );\n};\n\nconst insetHeightPx = 180;\nconst insetMaxWidthPx = 240;\nconst defaultMobileAspectRatio = 9 / 16;\nconst desktopAspectRatio = 1 / defaultMobileAspectRatio;\n\nexport const InsetTile = ({ peerId }: { peerId?: string }) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const selector = peerId ? selectPeerByID(peerId) : selectLocalPeer;\n  const peer = useHMSStore(selector);\n  const [minimised, setMinimised] = useSetAppDataByKey(APP_DATA.minimiseInset);\n  const videoTrack = useHMSStore(selectVideoTrackByID(peer?.videoTrack));\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const videoTileProps = useVideoTileContext();\n  let aspectRatio = isMobile ? defaultMobileAspectRatio : desktopAspectRatio;\n  if (videoTrack?.width && videoTrack?.height && !isMobile) {\n    aspectRatio = videoTrack.width / videoTrack.height;\n  }\n  let height = insetHeightPx;\n  let width = height * aspectRatio;\n  // Convert to 16/9 in landscape mode with a max width of 240\n  if (isLandscape && width > insetMaxWidthPx) {\n    width = 240;\n    height = width / aspectRatio;\n  }\n\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const node = nodeRef.current;\n    if (!node || !window.ResizeObserver) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.target === node.parentElement) {\n          // reset to original position on resize\n          node.style.transform = `translate(0,0)`;\n        }\n      });\n    });\n    node.parentElement && resizeObserver.observe(node.parentElement);\n    return () => {\n      node?.parentElement && resizeObserver?.unobserve(node.parentElement);\n      resizeObserver?.disconnect();\n    };\n  }, []);\n\n  if (!isAllowedToPublish.video && !isAllowedToPublish.audio) {\n    return null;\n  }\n\n  return (\n    <Draggable bounds=\"parent\" nodeRef={nodeRef} cancel=\".__cancel-drag-event\">\n      <Box\n        ref={nodeRef}\n        css={{\n          position: \"absolute\",\n          bottom: 0,\n          right: 0,\n          zIndex: 10,\n          boxShadow: \"0 0 8px 0 rgba(0,0,0,0.3)\",\n          r: \"$2\",\n          ...(!minimised\n            ? {\n                aspectRatio: aspectRatio,\n                h: height,\n              }\n            : {}),\n        }}\n      >\n        {minimised ? (\n          <MinimisedTile setMinimised={setMinimised} />\n        ) : (\n          <VideoTile\n            peerId={peer?.id}\n            trackId={peer?.videoTrack}\n            rootCSS={{\n              size: \"100%\",\n              padding: 0,\n            }}\n            width={width}\n            height={height}\n            containerCSS={{ background: \"$surface_default\" }}\n            canMinimise\n            isDragabble\n            {...videoTileProps}\n            hideParticipantNameOnTile\n          />\n        )}\n      </Box>\n    </Draggable>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@100mslive/react-icons\";\nimport { StyledPagination } from \"../../Pagination\";\n\nexport const Pagination = ({\n  page,\n  onPageChange,\n  numPages,\n}: {\n  page: number;\n  onPageChange: (page: number) => void;\n  numPages: number;\n}) => {\n  const disableLeft = page === 0;\n  const disableRight = page === numPages - 1;\n  const nextPage = (e: React.SyntheticEvent) => {\n    e.stopPropagation();\n    onPageChange(Math.min(page + 1, numPages - 1));\n  };\n  const prevPage = (e: React.SyntheticEvent) => {\n    e.stopPropagation();\n    onPageChange(Math.max(page - 1, 0));\n  };\n\n  useEffect(() => {\n    // currentPageIndex should not exceed pages length\n    if (page >= numPages) {\n      onPageChange(Math.max(0, numPages - 1));\n    }\n  }, [numPages, onPageChange, page]);\n\n  if (numPages <= 1) {\n    return null;\n  }\n\n  return (\n    <StyledPagination.Root css={{ flexShrink: 0 }}>\n      <StyledPagination.Chevron disabled={disableLeft} onClick={prevPage}>\n        <ChevronLeftIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableLeft ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n      {numPages <= 5 ? (\n        <StyledPagination.Dots>\n          {[...Array(numPages)].map((_, i) => (\n            <StyledPagination.Dot\n              key={i}\n              active={page === i}\n              onClick={(e) => {\n                e.stopPropagation();\n                onPageChange(i);\n              }}\n            />\n          ))}\n        </StyledPagination.Dots>\n      ) : null}\n      <StyledPagination.Chevron disabled={disableRight} onClick={nextPage}>\n        <ChevronRightIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableRight ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n    </StyledPagination.Root>\n  );\n};\n", "import React from \"react\";\nimport { TrackWithPeerAndDimensions } from \"@100mslive/react-sdk\";\nimport { Box } from \"../../../Layout\";\n// @ts-ignore: No implicit Any\nimport VideoTile from \"../VideoTile\";\nimport { useVideoTileContext } from \"../hooks/useVideoTileLayout\";\n\nexport const Grid = React.forwardRef<\n  HTMLDivElement,\n  { tiles: TrackWithPeerAndDimensions[]; edgeToEdge?: boolean }\n>(({ tiles, edgeToEdge }, ref) => {\n  const videoTileProps = useVideoTileContext();\n  return (\n    <Box\n      ref={ref}\n      css={{\n        flex: \"1 1 0\",\n        gap: \"$4\",\n        display: \"flex\",\n        placeContent: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: \"row wrap\",\n        minHeight: 0,\n        \"@md\": { gap: edgeToEdge ? 0 : \"$4\" },\n      }}\n    >\n      {tiles?.map((tile) => {\n        return (\n          <VideoTile\n            key={tile.track?.id || tile.peer?.id}\n            width={tile.width}\n            height={tile.height}\n            peerId={tile.peer?.id}\n            trackId={tile.track?.id}\n            rootCSS={{ padding: 0 }}\n            objectFit=\"contain\"\n            {...videoTileProps}\n          />\n        );\n      })}\n    </Box>\n  );\n});\n", "import { useEffect, useMemo, useState } from \"react\";\nimport { useMeasure, useMedia } from \"react-use\";\nimport {\n  getPeersWithTiles,\n  HMSPeer,\n  selectTracksMap,\n  TrackWithPeerAndDimensions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\n\nconst aspectRatioConfig = {\n  default: [1 / 1, 4 / 3, 16 / 9],\n  mobile: [1 / 1, 3 / 4, 9 / 16],\n};\n\nexport const usePagesWithTiles = ({\n  peers,\n  maxTileCount,\n}: {\n  peers: HMSPeer[];\n  maxTileCount: number;\n}) => {\n  const vanillaStore = useHMSVanillaStore();\n  const tracksMap = vanillaStore.getState(selectTracksMap);\n  const peersWithTiles = useMemo(\n    () =>\n      getPeersWithTiles(\n        peers,\n        tracksMap,\n        () => false\n      ) as TrackWithPeerAndDimensions[],\n    [peers, tracksMap]\n  );\n  const noOfPages = Math.ceil(peersWithTiles.length / maxTileCount);\n  const pagesList = useMemo(() => {\n    let sliceStart = 0;\n    let remaining = peersWithTiles.length;\n    const list = [];\n    // split into pages\n    for (let i = 0; i < noOfPages; i++) {\n      const count = Math.min(remaining, maxTileCount);\n      list.push(peersWithTiles.slice(sliceStart, sliceStart + count));\n      remaining = remaining - count;\n      sliceStart += count;\n    }\n    return list;\n  }, [peersWithTiles, noOfPages, maxTileCount]);\n  return pagesList;\n};\n\nexport const useTileLayout = ({\n  pageList,\n  maxTileCount,\n  edgeToEdge = false,\n}: {\n  pageList: TrackWithPeerAndDimensions[][];\n  maxTileCount: number;\n  edgeToEdge?: boolean;\n}) => {\n  const vanillaStore = useHMSVanillaStore();\n  const [ref, { width, height }] = useMeasure<HTMLDivElement>();\n  const isMobile = useMedia(cssConfig.media.lg);\n  const [pagesWithTiles, setPagesWithTiles] = useState<\n    TrackWithPeerAndDimensions[][]\n  >([]);\n\n  useEffect(() => {\n    if (width === 0 || height === 0) {\n      return;\n    }\n    // calculate dimesions for each page\n    for (const page of pageList) {\n      const noOfTilesInPage = page.length;\n      let maxCols =\n        noOfTilesInPage > 2 && noOfTilesInPage < 9\n          ? Math.ceil(noOfTilesInPage / 2)\n          : Math.ceil(Math.sqrt(noOfTilesInPage));\n      if (isMobile) {\n        maxCols = noOfTilesInPage < 4 ? 1 : Math.min(maxCols, 2);\n      }\n      const maxRows = Math.ceil(noOfTilesInPage / maxCols);\n      let index = 0;\n      // convert the current page to a matrix(grid)\n      const matrix = new Array(maxRows).fill(null).map((_, i) => {\n        const numCols = Math.min(maxCols, noOfTilesInPage - i * maxCols);\n        const rowElements = [];\n        for (let j = 0; j < numCols; j++) {\n          if (index < page.length) {\n            rowElements.push(page[index++]);\n          }\n        }\n        return rowElements;\n      });\n\n      const gap = edgeToEdge && isMobile ? 0 : 8; // gap between flex items\n      const maxHeight = height - (maxRows - 1) * gap;\n      const maxRowHeight = maxHeight / matrix.length;\n      const aspectRatios =\n        isMobile && (noOfTilesInPage === 1 || noOfTilesInPage > 3)\n          ? aspectRatioConfig.mobile\n          : aspectRatioConfig.default;\n      // calculate height and width of each tile in a row\n      for (const row of matrix) {\n        let tileWidth = (width - (row.length - 1) * gap) / row.length;\n        let tileHeight = 0;\n        if (edgeToEdge) {\n          tileHeight = maxRowHeight;\n        } else {\n          const calcHeights = aspectRatios.map((aR) => tileWidth / aR);\n          for (const h of calcHeights) {\n            if (h < maxRowHeight) {\n              if (tileHeight < h) {\n                tileHeight = h;\n              }\n            }\n          }\n\n          // tileHeight is not calculated as it could be exceeding the max possible height\n          // find the max possible width instead\n          if (tileHeight === 0) {\n            tileHeight = maxRowHeight;\n            const calcWidths = aspectRatios.map((aR) => tileHeight * aR);\n            tileWidth = 0;\n            for (const w of calcWidths) {\n              if (w < width) {\n                if (tileWidth < w) {\n                  tileWidth = w;\n                }\n              }\n            }\n          }\n        }\n        for (let i = 0; i < row.length; i++) {\n          row[i].width = tileWidth;\n          row[i].height = tileHeight;\n        }\n      }\n    }\n    setPagesWithTiles([...pageList]);\n  }, [\n    width,\n    height,\n    maxTileCount,\n    pageList,\n    vanillaStore,\n    isMobile,\n    edgeToEdge,\n  ]);\n  return { pagesWithTiles, ref };\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { PeopleAddIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { WaitingView } from \"../../layouts/WaitingView\";\nimport { InsetTile } from \"../InsetTile\";\nimport { Pagination } from \"../Pagination\";\nimport { Grid } from \"./Grid\";\nimport { LayoutProps } from \"./interface\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { usePagesWithTiles, useTileLayout } from \"../hooks/useTileLayout\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport function EqualProminence({\n  isInsetEnabled = false,\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) {\n  const isMobile = useMedia(cssConfig.media.md);\n  let maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  maxTileCount = isMobile ? Math.min(maxTileCount, 6) : maxTileCount;\n  const pageList = usePagesWithTiles({\n    peers,\n    maxTileCount,\n  });\n\n  const { ref, pagesWithTiles } = useTileLayout({\n    pageList,\n    maxTileCount,\n    edgeToEdge,\n  });\n  const [page, setPage] = useState(0);\n  const pageSize = pagesWithTiles[0]?.length || 0;\n\n  useEffect(() => {\n    if (pageSize > 0) {\n      onPageSize?.(pageSize);\n    }\n  }, [pageSize, onPageSize]);\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ flex: \"1 1 0\", h: \"100%\", position: \"relative\", minWidth: 0 }}\n    >\n      <Grid tiles={pagesWithTiles[page]} ref={ref} edgeToEdge={edgeToEdge} />\n      {!edgeToEdge && (\n        <Pagination\n          page={page}\n          onPageChange={(page) => {\n            setPage(page);\n            onPageChange?.(page);\n          }}\n          numPages={pagesWithTiles.length}\n        />\n      )}\n      {pageList.length === 0 ? (\n        <WaitingView\n          title=\"You're the first to join\"\n          subtitle=\"Sit back and relax till others join\"\n          icon={\n            <PeopleAddIcon\n              width=\"56px\"\n              height=\"56px\"\n              style={{ color: \"white\" }}\n            />\n          }\n        />\n      ) : null}\n      {isInsetEnabled && <InsetTile />}\n    </Flex>\n  );\n}\n", "import React from \"react\";\nimport { TrackWithPeerAndDimensions } from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { CSS } from \"../../../Theme\";\n// @ts-ignore: No implicit Any\nimport VideoTile from \"../VideoTile\";\nimport { useVideoTileContext } from \"../hooks/useVideoTileLayout\";\n\nconst Root = ({\n  children,\n  edgeToEdge,\n  hasSidebar,\n}: React.PropsWithChildren<{ edgeToEdge?: boolean; hasSidebar?: boolean }>) => {\n  return (\n    <Flex\n      direction={hasSidebar ? \"row\" : \"column\"}\n      css={{\n        h: \"100%\",\n        flex: \"1 1 0\",\n        minWidth: 0,\n        gap: \"$6\",\n        \"@md\": { gap: edgeToEdge ? 0 : \"$6\" },\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nconst ProminentSection = ({\n  children,\n  css = {},\n}: React.PropsWithChildren<{ css?: CSS }>) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ flex: \"1 1 0\", gap: \"$2\", minHeight: 0, ...css }}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nconst SecondarySection = ({\n  tiles,\n  children,\n  edgeToEdge,\n  hasSidebar,\n}: React.PropsWithChildren<{\n  tiles: TrackWithPeerAndDimensions[];\n  edgeToEdge?: boolean;\n  hasSidebar?: boolean;\n}>) => {\n  const tileLayoutProps = useVideoTileContext();\n  if (!tiles?.length) {\n    return null;\n  }\n  const gridStyles = hasSidebar\n    ? {\n        gridTemplateColumns: \"1fr\",\n        gridTemplateRows: `repeat(${tiles.length}, minmax(0, 1fr))`,\n        maxHeight: \"100%\",\n        width: 240,\n      }\n    : {\n        gridTemplateRows:\n          React.Children.count(children) > 0 ? \"136px auto\" : \"154px\",\n        gridTemplateColumns: `repeat(${tiles.length}, minmax(0, 1fr))`,\n      };\n  return (\n    <Box\n      css={{\n        display: \"grid\",\n        margin: \"auto\",\n        gap: hasSidebar ? \"$8\" : \"$2 $4\",\n        placeItems: \"center\",\n        ...gridStyles,\n        \"@md\": { gap: edgeToEdge ? 0 : \"$4\" },\n      }}\n    >\n      {tiles.map((tile) => {\n        return (\n          <VideoTile\n            key={tile.track?.id || tile.peer?.id}\n            peerId={tile.peer?.id}\n            trackId={tile.track?.id}\n            rootCSS={{\n              padding: 0,\n              maxWidth: 240,\n              aspectRatio: 16 / 9,\n              ...(hasSidebar ? { w: \"100%\" } : { h: \"100%\" }),\n              \"@md\": { aspectRatio: 1 },\n            }}\n            objectFit=\"contain\"\n            {...tileLayoutProps}\n          />\n        );\n      })}\n      {children && (\n        <Box css={{ gridColumn: hasSidebar ? 1 : `1/span ${tiles.length}` }}>\n          {children}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport const ProminenceLayout = {\n  Root,\n  ProminentSection,\n  SecondarySection,\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectAppData,\n  selectSessionStore,\n  selectTrackByID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { LayoutProps } from \"./VideoLayouts/interface\";\nimport { ProminenceLayout } from \"./VideoLayouts/ProminenceLayout\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { Pagination } from \"./Pagination\";\nimport { usePagesWithTiles } from \"./hooks/useTileLayout\";\nimport { APP_DATA, SESSION_STORE_KEY } from \"../common/constants\";\n\nexport const SecondaryTiles = ({\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n  hasSidebar,\n}: LayoutProps) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const maxTileCount = isMobile ? 2 : 4;\n  const [page, setPage] = useState(0);\n  const pinnedTrackId = useHMSStore(selectAppData(APP_DATA.pinnedTrackId));\n  const spotlightPeerId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const activeScreensharePeerId = useHMSStore(\n    selectAppData(APP_DATA.activeScreensharePeerId)\n  );\n  const pinnedPeer = useHMSStore(selectTrackByID(pinnedTrackId))?.peerId;\n  const pageChangedAfterPinning = useRef(false);\n  const pagesWithTiles = usePagesWithTiles({\n    peers:\n      spotlightPeerId || pinnedPeer\n        ? [...peers].sort((p1, p2) => {\n            if (activeScreensharePeerId === p1.id) {\n              return -1;\n            }\n            if (activeScreensharePeerId === p2.id) {\n              return 1;\n            }\n            const peerIdList = [pinnedPeer, spotlightPeerId];\n            // put active screenshare peer, pinned peer, spotlight peer at first\n            if (peerIdList.includes(p1.id)) {\n              return -1;\n            }\n            if (peerIdList.includes(p2.id)) {\n              return 1;\n            }\n            return 0;\n          })\n        : peers,\n    maxTileCount,\n  });\n  const pageSize = pagesWithTiles[0]?.length || 0;\n\n  // Handles final peer leaving from the last page\n  useEffect(() => {\n    if (peers.length > 0 && !pagesWithTiles[page]?.length) {\n      setPage(Math.max(0, page - 1));\n    }\n  }, [peers, page, pagesWithTiles]);\n\n  useEffect(() => {\n    if (pageSize > 0) {\n      onPageSize?.(pageSize);\n    }\n  }, [pageSize, onPageSize]);\n\n  useEffect(() => {\n    if (\n      (pinnedPeer || spotlightPeerId) &&\n      page !== 0 &&\n      !pageChangedAfterPinning.current\n    ) {\n      setPage(0);\n      pageChangedAfterPinning.current = true;\n    } else if (!pinnedPeer && !spotlightPeerId) {\n      pageChangedAfterPinning.current = false;\n    }\n  }, [pinnedPeer, spotlightPeerId, page]);\n\n  return (\n    <ProminenceLayout.SecondarySection\n      tiles={pagesWithTiles[page]}\n      edgeToEdge={edgeToEdge}\n      hasSidebar={hasSidebar}\n    >\n      {!edgeToEdge && (\n        <Pagination\n          page={page}\n          onPageChange={(page) => {\n            setPage(page);\n            onPageChange?.(page);\n          }}\n          numPages={pagesWithTiles.length}\n        />\n      )}\n    </ProminenceLayout.SecondarySection>\n  );\n};\n", "import { useMemo } from \"react\";\nimport { HMSPeer } from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { usePinnedTrack } from \"../AppData/useUISettings\";\n\nexport const useRoleProminencePeers = (\n  prominentRoles: string[],\n  peers: HMSPeer[],\n  isInsetEnabled: boolean\n) => {\n  const pinnedTrack = usePinnedTrack();\n\n  const [prominentPeers, secondaryPeers] = useMemo(() => {\n    return peers.reduce<[HMSPeer[], HMSPeer[]]>(\n      (acc, peer) => {\n        if (pinnedTrack) {\n          if (pinnedTrack.peerId === peer.id) {\n            acc[0].push(peer);\n          } else if (!(isInsetEnabled && peer.isLocal)) {\n            acc[1].push(peer);\n          }\n          return acc;\n        }\n        if (\n          peer.isLocal &&\n          isInsetEnabled &&\n          !prominentRoles?.includes(peer.roleName || \"\")\n        ) {\n          return acc;\n        }\n        if (prominentRoles?.includes(peer.roleName || \"\")) {\n          acc[0].push(peer);\n        } else {\n          acc[1].push(peer);\n        }\n\n        return acc;\n      },\n      [[], []]\n    );\n  }, [peers, isInsetEnabled, prominentRoles, pinnedTrack]);\n\n  return {\n    prominentPeers,\n    secondaryPeers,\n  };\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { selectLocalPeer, useHMSStore } from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { InsetTile } from \"../InsetTile\";\nimport { Pagination } from \"../Pagination\";\nimport { SecondaryTiles } from \"../SecondaryTiles\";\nimport { Grid } from \"./Grid\";\nimport { LayoutProps } from \"./interface\";\nimport { ProminenceLayout } from \"./ProminenceLayout\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { useRoleProminencePeers } from \"../hooks/useRoleProminencePeers\";\nimport { usePagesWithTiles, useTileLayout } from \"../hooks/useTileLayout\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport function RoleProminence({\n  isInsetEnabled = false,\n  prominentRoles = [],\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) {\n  const { prominentPeers, secondaryPeers } = useRoleProminencePeers(\n    prominentRoles,\n    peers,\n    isInsetEnabled\n  );\n  const localPeer = useHMSStore(selectLocalPeer);\n  const isMobile = useMedia(cssConfig.media.md);\n  let maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  maxTileCount = isMobile ? 4 : maxTileCount;\n  const pageList = usePagesWithTiles({\n    peers: prominentPeers,\n    maxTileCount,\n  });\n  const { ref, pagesWithTiles } = useTileLayout({\n    pageList,\n    maxTileCount,\n  });\n  const [page, setPage] = useState(0);\n  const pageSize = pagesWithTiles[0]?.length || 0;\n\n  useEffect(() => {\n    if (pageSize > 0) {\n      onPageSize?.(pageSize);\n    }\n  }, [pageSize, onPageSize]);\n\n  return (\n    <ProminenceLayout.Root>\n      <ProminenceLayout.ProminentSection>\n        <Grid ref={ref} tiles={pagesWithTiles[page]} />\n      </ProminenceLayout.ProminentSection>\n      {!edgeToEdge && (\n        <Pagination\n          page={page}\n          onPageChange={(page) => {\n            setPage(page);\n            onPageChange?.(page);\n          }}\n          numPages={pagesWithTiles.length}\n        />\n      )}\n      <SecondaryTiles\n        peers={secondaryPeers}\n        isInsetEnabled={isInsetEnabled}\n        edgeToEdge={edgeToEdge}\n      />\n      {isInsetEnabled &&\n        localPeer &&\n        prominentPeers.length > 0 &&\n        !prominentPeers.includes(localPeer) && <InsetTile />}\n    </ProminenceLayout.Root>\n  );\n}\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  LayoutMode,\n  LayoutModeIconMapping,\n  LayoutModeKeys,\n} from \"./Settings/LayoutSettings\";\nimport { Flex } from \"../../Layout\";\nimport { Popover } from \"../../Popover\";\nimport { Text } from \"../../Text\";\n// @ts-ignore: No implicit Any\nimport { useSetUiSettings } from \"../components/AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const LayoutModeSelector = () => {\n  const [open, setOpen] = useState(false);\n  const [layoutMode, setLayoutMode] = useSetUiSettings(UI_SETTINGS.layoutMode);\n  const updateLayoutMode = useCallback(\n    (value: string) => {\n      setLayoutMode(value);\n      setOpen(false);\n    },\n    [setLayoutMode, setOpen]\n  );\n  return (\n    <Popover.Root open={open} onOpenChange={setOpen}>\n      <Popover.Trigger asChild>\n        <Flex\n          align=\"center\"\n          css={{\n            gap: \"$4\",\n            color: open ? \"$on_surface_low\" : \"$on_surface_medium\",\n            r: \"$1\",\n            p: \"$2 $4\",\n            height: \"100%\",\n          }}\n        >\n          <Flex\n            align=\"center\"\n            justify=\"center\"\n            css={{\n              color: \"inherit\",\n              \"& > svg\": {\n                w: \"$9\",\n                h: \"$9\",\n              },\n            }}\n          >\n            {LayoutModeIconMapping[layoutMode as LayoutModeKeys]}\n          </Flex>\n          <Text variant=\"caption\" css={{ color: \"inherit\", lineHeight: \"$sm\" }}>\n            {layoutMode}\n          </Text>\n          {open ? (\n            <ChevronUpIcon width={16} height={16} />\n          ) : (\n            <ChevronDownIcon width={16} height={16} />\n          )}\n        </Flex>\n      </Popover.Trigger>\n      <Popover.Content\n        css={{\n          w: \"10.75rem\",\n          r: \"$1\",\n          py: \"$4\",\n          px: 0,\n          backgroundColor: \"$surface_default\",\n          overflowY: \"auto\",\n          boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n          fontFamily: \"$sans\",\n          color: \"$on_surface_high\",\n        }}\n        side=\"bottom\"\n        sideOffset={8}\n        align=\"end\"\n      >\n        {Object.keys(LayoutMode).map((key) => {\n          const value = LayoutMode[key as LayoutModeKeys];\n          return (\n            <Flex\n              key={key}\n              onClick={() => updateLayoutMode(value)}\n              align=\"center\"\n              css={{\n                gap: \"$4\",\n                borderBottom: \"1px solid $border_bright\",\n                p: \"$8\",\n                \"&:hover\": {\n                  cursor: \"pointer\",\n                  bg: \"$surface_bright\",\n                },\n                \"&:focus-visible\": {\n                  bg: \"$surface_bright\",\n                },\n              }}\n            >\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  color: \"$on_surface_medium\",\n                  \"& > svg\": {\n                    w: \"$9\",\n                    h: \"$9\",\n                  },\n                }}\n              >\n                {LayoutModeIconMapping[value]}\n              </Flex>\n              <Text variant=\"caption\" css={{ lineHeight: \"$sm\" }}>\n                {value}\n              </Text>\n              {value === layoutMode ? (\n                <CheckIcon\n                  width={20}\n                  height={20}\n                  style={{ marginLeft: \"auto\" }}\n                />\n              ) : null}\n            </Flex>\n          );\n        })}\n      </Popover.Content>\n    </Popover.Root>\n  );\n};\n", "import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CrossIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\n\nexport const ScreenshareDisplay = () => {\n  const hmsActions = useHMSActions();\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        size: \"100%\",\n        bg: \"$background_default\",\n        color: \"$on_surface_high\",\n      }}\n    >\n      <ShareScreenIcon width={48} height={48} />\n      <Text variant=\"h5\" css={{ m: \"$8 0\" }}>\n        You are sharing your screen\n      </Text>\n      <Button\n        variant=\"danger\"\n        css={{ fontWeight: \"$semiBold\" }}\n        onClick={async () => {\n          await hmsActions.setScreenShareEnabled(false);\n        }}\n        data-testid=\"stop_screen_share_btn\"\n      >\n        <CrossIcon width={18} height={18} />\n        &nbsp; Stop screen share\n      </Button>\n    </Flex>\n  );\n};\n", "import React, { useRef, useState } from \"react\";\nimport { useFullscreen, useMedia } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectLocalPeerID,\n  selectPeerByID,\n  selectScreenShareAudioByPeerID,\n  selectScreenShareByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport TileMenu from \"./TileMenu/TileMenu\";\nimport { Box } from \"../../Layout\";\nimport { VideoTileStats } from \"../../Stats\";\nimport { config as cssConfig, useTheme } from \"../../Theme\";\nimport { Video } from \"../../Video\";\nimport { StyledVideoTile } from \"../../VideoTile\";\nimport { LayoutModeSelector } from \"./LayoutModeSelector\";\n// @ts-ignore: No implicit Any\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport { ScreenshareDisplay } from \"./ScreenshareDisplay\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst labelStyles = {\n  position: \"unset\",\n  width: \"100%\",\n  textAlign: \"center\",\n  c: \"$on_surface_high\",\n  transform: \"none\",\n  flexShrink: 0,\n};\n\nconst Tile = ({\n  peerId,\n  width = \"100%\",\n  height = \"100%\",\n}: {\n  peerId: string;\n  width?: string;\n  height?: string;\n}) => {\n  const isLocal = useHMSStore(selectLocalPeerID) === peerId;\n  const track = useHMSStore(selectScreenShareByPeerID(peerId));\n  const { theme } = useTheme();\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const fullscreenRef = useRef<HTMLDivElement | null>(null);\n  // fullscreen is for desired state\n  const [fullscreen, setFullscreen] = useState(false);\n  // isFullscreen is for true state\n  const isFullscreen = useFullscreen(fullscreenRef, fullscreen, {\n    onClose: () => setFullscreen(false),\n  });\n  const isFullScreenSupported = screenfull.isEnabled;\n  const audioTrack = useHMSStore(selectScreenShareAudioByPeerID(peer?.id));\n\n  if (\n    isLocal &&\n    track?.displaySurface &&\n    ![\"browser\", \"window\", \"application\"].includes(track.displaySurface)\n  ) {\n    return <ScreenshareDisplay />;\n  }\n\n  if (!peer) {\n    return null;\n  }\n\n  const label = getVideoTileLabel({\n    peerName: peer?.name,\n    isLocal: false,\n    track,\n  });\n\n  return (\n    <StyledVideoTile.Root\n      css={{\n        width,\n        height,\n        p: 0,\n        minHeight: 0,\n      }}\n      data-testid=\"screenshare_tile\"\n    >\n      <StyledVideoTile.Container\n        transparentBg\n        ref={fullscreenRef}\n        css={{ flexDirection: \"column\", gap: \"$2\" }}\n        onMouseEnter={() => setIsMouseHovered(true)}\n        onMouseLeave={() => {\n          setIsMouseHovered(false);\n        }}\n      >\n        {showStatsOnTiles ? (\n          <VideoTileStats\n            audioTrackID={audioTrack?.id}\n            videoTrackID={track?.id}\n            peerID={peerId}\n            isLocal={isLocal}\n          />\n        ) : null}\n        {isFullScreenSupported && isMouseHovered ? (\n          <StyledVideoTile.FullScreenButton\n            css={{ bg: `${theme.colors.background_dim.value}A3` }}\n            onClick={() => setFullscreen(!fullscreen)}\n          >\n            {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n          </StyledVideoTile.FullScreenButton>\n        ) : null}\n        {!isMobile && isMouseHovered && !isFullscreen && (\n          <Box\n            css={{\n              position: \"absolute\",\n              top: \"$2\",\n              r: \"$1\",\n              h: \"$14\",\n              right: isFullScreenSupported ? \"$17\" : \"$2\",\n              zIndex: 5,\n              bg: `${theme.colors.background_dim.value}A3`,\n            }}\n          >\n            <LayoutModeSelector />\n          </Box>\n        )}\n\n        {track ? (\n          <Video\n            screenShare={true}\n            mirror={false}\n            attach={!isAudioOnly}\n            trackId={track.id}\n            css={{ minHeight: 0 }}\n          />\n        ) : null}\n        <StyledVideoTile.Info css={labelStyles}>{label}</StyledVideoTile.Info>\n        {isMouseHovered && !peer.isLocal ? (\n          <TileMenu\n            isScreenshare\n            peerID={peer.id}\n            audioTrackID={audioTrack?.id}\n            videoTrackID={track?.id}\n            enableSpotlightingPeer={false}\n          />\n        ) : null}\n      </StyledVideoTile.Container>\n    </StyledVideoTile.Root>\n  );\n};\n\nconst ScreenshareTile = React.memo(Tile);\n\nexport default ScreenshareTile;\n", "import React, { useEffect, useMemo, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { selectPeersScreenSharing, useHMSStore } from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { InsetTile } from \"../InsetTile\";\nimport { Pagination } from \"../Pagination\";\n// @ts-ignore: No implicit Any\nimport ScreenshareTile from \"../ScreenshareTile\";\nimport { SecondaryTiles } from \"../SecondaryTiles\";\nimport { LayoutMode } from \"../Settings/LayoutSettings\";\nimport { LayoutProps } from \"./interface\";\nimport { ProminenceLayout } from \"./ProminenceLayout\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey, useSetUiSettings } from \"../AppData/useUISettings\";\nimport { APP_DATA, UI_SETTINGS } from \"../../common/constants\";\n\nexport const ScreenshareLayout = ({\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) => {\n  const peersSharing = useHMSStore(selectPeersScreenSharing);\n  const [, setActiveScreenSharePeer] = useSetAppDataByKey(\n    APP_DATA.activeScreensharePeerId\n  );\n  const [page, setPage] = useState(0);\n  const [layoutMode, setLayoutMode] = useSetUiSettings(UI_SETTINGS.layoutMode);\n  const activeSharePeer = peersSharing[page];\n  const isMobile = useMedia(cssConfig.media.md);\n  const hasSidebar = !isMobile && layoutMode === LayoutMode.SIDEBAR;\n  const secondaryPeers = useMemo(() => {\n    if (layoutMode === LayoutMode.SPOTLIGHT) {\n      return [];\n    }\n    if (isMobile || layoutMode === LayoutMode.SIDEBAR) {\n      return activeSharePeer\n        ? [\n            activeSharePeer,\n            ...peers.filter((p) => p.id !== activeSharePeer?.id),\n          ] //keep active sharing peer as first tile\n        : peers;\n    }\n    return peers.filter((p) => p.id !== activeSharePeer?.id);\n  }, [activeSharePeer, peers, isMobile, layoutMode]);\n\n  useEffect(() => {\n    if (isMobile) {\n      setLayoutMode(LayoutMode.GALLERY);\n      return;\n    }\n    if (layoutMode === LayoutMode.SIDEBAR) {\n      return;\n    }\n    setLayoutMode(LayoutMode.SIDEBAR);\n    return () => {\n      // reset to gallery once screenshare is stopped\n      setLayoutMode(LayoutMode.GALLERY);\n    };\n  }, [isMobile]); // eslint-disable-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    setActiveScreenSharePeer(activeSharePeer?.id);\n    return () => {\n      setActiveScreenSharePeer(\"\");\n    };\n  }, [activeSharePeer?.id, setActiveScreenSharePeer]);\n\n  return (\n    <ProminenceLayout.Root edgeToEdge={edgeToEdge} hasSidebar={hasSidebar}>\n      <ProminenceLayout.ProminentSection>\n        <ScreenshareTile peerId={peersSharing[page]?.id} />\n        {!edgeToEdge && (\n          <Pagination\n            page={page}\n            onPageChange={setPage}\n            numPages={peersSharing.length}\n          />\n        )}\n      </ProminenceLayout.ProminentSection>\n      <SecondaryTiles\n        peers={secondaryPeers}\n        onPageChange={onPageChange}\n        onPageSize={onPageSize}\n        edgeToEdge={edgeToEdge}\n        hasSidebar={hasSidebar}\n      />\n      {layoutMode === LayoutMode.SPOTLIGHT && activeSharePeer && (\n        <InsetTile peerId={activeSharePeer?.id} />\n      )}\n    </ProminenceLayout.Root>\n  );\n};\n", "export default \"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap');\\n@import url('@tldraw/tldraw/tldraw.css');\\n\\n.tlui-navigation-zone,\\n.tlui-navigation-panel {\\n  display: none;\\n}\\n\\n.transparent-canvas {\\n  --color-background: rgba(0, 0, 0, 0);\\n}\\n\\n.tl-container {\\n  --layer-background: 4; /* 100 */\\n  --layer-grid: 5; /* 150 */\\n  --layer-canvas: 6; /* 200 */\\n  --layer-shapes: 7; /* 300 */\\n  --layer-overlays: 8; /* 400 */\\n  --layer-following-indicator: 12; /* 1000 */\\n\\n  --layer-panels: 7;\\n  --layer-menus: 8;\\n  --layer-overlays: 9;\\n  --layer-toasts: 10;\\n  --layer-cursor: 11;\\n}\\n\";", "import React, { useEffect, useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Whiteboard } from \"@100mslive/hms-whiteboard\";\nimport {\n  selectPeerByCondition,\n  selectWhiteboard,\n  useHMSStore,\n  useWhiteboard,\n} from \"@100mslive/react-sdk\";\nimport { Box } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { InsetTile } from \"../InsetTile\";\nimport { SecondaryTiles } from \"../SecondaryTiles\";\nimport { LayoutMode } from \"../Settings/LayoutSettings\";\nimport { LayoutProps } from \"./interface\";\nimport { ProminenceLayout } from \"./ProminenceLayout\";\n// @ts-ignore: No implicit Any\nimport { useSetUiSettings } from \"../AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n// eslint-disable-next-line import/no-unresolved\nimport \"@100mslive/hms-whiteboard/index.css\";\n\nconst WhiteboardEmbed = () => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const { token, endpoint, zoomToContent } = useWhiteboard(isMobile);\n\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <Box\n      css={{\n        mx: \"$8\",\n        flex: \"3 1 0\",\n        \"@lg\": {\n          flex: \"2 1 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <Box css={{ size: \"100%\" }}>\n        <Whiteboard\n          token={token}\n          endpoint={`https://${endpoint}`}\n          zoomToContent={zoomToContent}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport const WhiteboardLayout = ({\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) => {\n  const whiteboard = useHMSStore(selectWhiteboard);\n  const whiteboardOwner = useHMSStore(\n    selectPeerByCondition((peer) => peer.customerUserId === whiteboard?.owner)\n  );\n  const [layoutMode, setLayoutMode] = useSetUiSettings(UI_SETTINGS.layoutMode);\n  const isMobile = useMedia(cssConfig.media.md);\n  const hasSidebar = !isMobile && layoutMode === LayoutMode.SIDEBAR;\n  const secondaryPeers = useMemo(() => {\n    if (layoutMode === LayoutMode.SPOTLIGHT) {\n      return [];\n    }\n    if (isMobile || layoutMode === LayoutMode.SIDEBAR) {\n      return whiteboardOwner\n        ? [\n            whiteboardOwner,\n            ...peers.filter((p) => p.id !== whiteboardOwner?.id),\n          ] //keep active sharing peer as first tile\n        : peers;\n    }\n    return peers.filter((p) => p.id !== whiteboardOwner?.id);\n  }, [whiteboardOwner, peers, isMobile, layoutMode]);\n\n  useEffect(() => {\n    if (isMobile) {\n      setLayoutMode(LayoutMode.GALLERY);\n      return;\n    }\n    if (layoutMode === LayoutMode.SIDEBAR) {\n      return;\n    }\n    setLayoutMode(LayoutMode.SIDEBAR);\n    return () => {\n      // reset to gallery once whiteboard is stopped\n      setLayoutMode(LayoutMode.GALLERY);\n    };\n  }, [isMobile]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <ProminenceLayout.Root edgeToEdge={edgeToEdge} hasSidebar={hasSidebar}>\n      <ProminenceLayout.ProminentSection>\n        <WhiteboardEmbed />\n      </ProminenceLayout.ProminentSection>\n      <SecondaryTiles\n        peers={secondaryPeers}\n        onPageChange={onPageChange}\n        onPageSize={onPageSize}\n        edgeToEdge={edgeToEdge}\n        hasSidebar={hasSidebar}\n      />\n      {layoutMode === LayoutMode.SPOTLIGHT && whiteboardOwner && (\n        <InsetTile peerId={whiteboardOwner?.id} />\n      )}\n    </ProminenceLayout.Root>\n  );\n};\n", "import {\n  HMSPeer,\n  HMSPeerID,\n  IStoreReadOnly,\n  selectDominantSpeaker,\n} from \"@100mslive/react-sdk\";\n\nclass PeersSorter {\n  storeUnsubscribe: undefined | (() => void) = undefined;\n  store: IStoreReadOnly<any>;\n  peers: Map<string, HMSPeer>;\n  lruPeers: Set<HMSPeerID>;\n  tilesPerPage!: number;\n  speaker?: HMSPeer;\n  listeners: Set<(peers: HMSPeer[]) => void>;\n\n  constructor(store: IStoreReadOnly<any>) {\n    this.store = store;\n    this.peers = new Map();\n    this.lruPeers = new Set();\n    this.speaker = undefined;\n    this.listeners = new Set();\n  }\n\n  setPeersAndTilesPerPage = ({\n    peers,\n    tilesPerPage,\n  }: {\n    peers: HMSPeer[];\n    tilesPerPage: number;\n  }) => {\n    this.speaker = undefined;\n    this.tilesPerPage = tilesPerPage;\n    const peerIds = new Set(peers.map((peer) => peer.id));\n    // remove existing peers which are no longer provided\n    this.peers.forEach((_, key) => {\n      if (!peerIds.has(key)) {\n        this.peers.delete(key);\n      }\n    });\n    this.lruPeers = new Set(\n      [...this.lruPeers].filter((peerId) => peerIds.has(peerId))\n    );\n    peers.forEach((peer) => {\n      this.peers.set(peer.id, peer);\n      if (this.lruPeers.size < tilesPerPage) {\n        this.lruPeers.add(peer.id);\n      }\n    });\n    if (!this.storeUnsubscribe) {\n      this.storeUnsubscribe = this.store.subscribe(\n        this.onDominantSpeakerChange,\n        selectDominantSpeaker\n      );\n    }\n    this.moveSpeakerToFront(this.speaker);\n  };\n\n  onUpdate = (cb: (peers: HMSPeer[]) => void) => {\n    this.listeners.add(cb);\n  };\n\n  stop = () => {\n    this.updateListeners();\n    this.listeners.clear();\n    this.storeUnsubscribe?.();\n    this.storeUnsubscribe = undefined;\n    this.speaker = undefined;\n  };\n\n  moveSpeakerToFront = (speaker?: HMSPeer) => {\n    if (!speaker) {\n      this.maintainLruSize(this.tilesPerPage);\n      this.updateListeners();\n      return;\n    }\n    if (\n      this.lruPeers.has(speaker.id) &&\n      this.lruPeers.size <= this.tilesPerPage\n    ) {\n      this.updateListeners();\n      return;\n    }\n    // delete to insert at beginning\n    this.lruPeers.delete(speaker.id);\n    // - 1 as we are going to insert the new speaker\n    this.maintainLruSize(this.tilesPerPage - 1);\n    this.lruPeers = new Set([speaker.id, ...this.lruPeers]);\n    this.updateListeners();\n  };\n\n  onDominantSpeakerChange = (speaker: HMSPeer | null) => {\n    // no speaker or is current speaker do nothing\n    if (!speaker || speaker.id === this.speaker?.id) {\n      return;\n    }\n    // if the active speaker is not from the peers passed ignore\n    if (!this.peers.has(speaker.id)) {\n      return;\n    }\n    this.speaker = speaker;\n    this.moveSpeakerToFront(speaker);\n  };\n\n  updateListeners = () => {\n    const orderedPeers: HMSPeer[] = [];\n    this.lruPeers.forEach((key) => {\n      const peer = this.peers.get(key);\n      if (peer) {\n        orderedPeers.push(peer);\n      }\n    });\n    this.peers.forEach((peer) => {\n      if (!this.lruPeers.has(peer.id) && peer) {\n        orderedPeers.push(peer);\n      }\n    });\n    this.listeners.forEach((listener) => listener?.(orderedPeers));\n  };\n\n  private maintainLruSize = (size: number) => {\n    const lruPeerArray = Array.from(this.lruPeers);\n    while (lruPeerArray.length > size && lruPeerArray.length) {\n      lruPeerArray.pop();\n    }\n    this.lruPeers = new Set(lruPeerArray);\n  };\n}\n\nexport default PeersSorter;\n", "import React, { useEffect, useMemo, useState } from \"react\";\nimport { GridVideoTileLayout } from \"@100mslive/types-prebuilt/elements/video_tile_layout\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPeers,\n  selectPeerScreenSharing,\n  selectWhiteboard,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { EqualProminence } from \"./EqualProminence\";\nimport { RoleProminence } from \"./RoleProminence\";\nimport { ScreenshareLayout } from \"./ScreenshareLayout\";\nimport { WhiteboardLayout } from \"./WhiteboardLayout\";\n// @ts-ignore: No implicit Any\nimport { usePinnedTrack, useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { VideoTileContext } from \"../hooks/useVideoTileLayout\";\nimport PeersSorter from \"../../common/PeersSorter\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport type TileCustomisationProps = {\n  hide_participant_name_on_tile: boolean;\n  rounded_video_tile: boolean;\n  hide_audio_mute_on_tile: boolean;\n  video_object_fit: \"contain\" | \"cover\";\n  edge_to_edge: boolean;\n  hide_metadata_on_tile: boolean;\n};\n\nexport type GridLayoutProps = GridVideoTileLayout & TileCustomisationProps;\n\nexport const GridLayout = ({\n  enable_local_tile_inset: isInsetEnabled = false,\n  prominent_roles: prominentRoles = [],\n  enable_spotlighting_peer = false,\n  hide_participant_name_on_tile = false,\n  rounded_video_tile = true,\n  hide_audio_mute_on_tile = false,\n  video_object_fit = \"contain\",\n  edge_to_edge = false,\n  hide_metadata_on_tile = false,\n}: GridLayoutProps) => {\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const whiteboard = useHMSStore(selectWhiteboard);\n  const pinnedTrack = usePinnedTrack();\n  const peers = useHMSStore(selectPeers);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n\n  const [activeScreensharePeerId] = useSetAppDataByKey(\n    APP_DATA.activeScreensharePeerId\n  );\n  const isRoleProminence =\n    (prominentRoles.length &&\n      peers.some(\n        (peer) =>\n          peer.roleName &&\n          prominentRoles.includes(peer.roleName) &&\n          (peer.videoTrack || peer.audioTrack)\n      )) ||\n    pinnedTrack;\n  const updatedPeers = useMemo(() => {\n    // remove screenshare/whiteboard peer from active speaker sorting\n    if (activeScreensharePeerId || whiteboard?.open) {\n      return peers.filter(\n        (peer) =>\n          peer.id !== activeScreensharePeerId ||\n          peer.customerUserId !== whiteboard?.owner\n      );\n    }\n    if (isInsetEnabled) {\n      const isLocalPeerPinned = localPeerID === pinnedTrack?.peerId;\n      // if localPeer role is prominent role, it shows up in the center or local peer is pinned, so allow it in active speaker sorting\n      if (\n        (localPeerRole && prominentRoles.includes(localPeerRole)) ||\n        isLocalPeerPinned\n      ) {\n        return peers;\n      } else {\n        return peers.filter((peer) => !peer.isLocal);\n      }\n    }\n    return peers;\n  }, [\n    isInsetEnabled,\n    whiteboard,\n    activeScreensharePeerId,\n    localPeerRole,\n    localPeerID,\n    prominentRoles,\n    peers,\n    pinnedTrack,\n  ]);\n  const vanillaStore = useHMSVanillaStore();\n  const [sortedPeers, setSortedPeers] = useState(updatedPeers);\n  const peersSorter = useMemo(\n    () => new PeersSorter(vanillaStore),\n    [vanillaStore]\n  );\n  const [pageSize, setPageSize] = useState(0);\n  const [mainPage, setMainPage] = useState(0);\n  const tileLayout = {\n    enableSpotlightingPeer: enable_spotlighting_peer,\n    hideParticipantNameOnTile: hide_participant_name_on_tile,\n    roundedVideoTile: rounded_video_tile,\n    hideAudioMuteOnTile: hide_audio_mute_on_tile,\n    hideMetadataOnTile: hide_metadata_on_tile,\n    objectFit: video_object_fit,\n  };\n\n  useEffect(() => {\n    if (mainPage !== 0) {\n      return;\n    }\n    peersSorter.setPeersAndTilesPerPage({\n      peers: updatedPeers,\n      tilesPerPage: pageSize,\n    });\n    peersSorter.onUpdate(setSortedPeers);\n  }, [mainPage, peersSorter, updatedPeers, pageSize]);\n\n  if (peerSharing) {\n    return (\n      <VideoTileContext.Provider value={tileLayout}>\n        <ScreenshareLayout\n          peers={sortedPeers}\n          onPageSize={setPageSize}\n          onPageChange={setMainPage}\n          edgeToEdge={edge_to_edge}\n        />\n      </VideoTileContext.Provider>\n    );\n  } else if (whiteboard?.open) {\n    return (\n      <VideoTileContext.Provider value={tileLayout}>\n        <WhiteboardLayout\n          peers={sortedPeers}\n          onPageSize={setPageSize}\n          onPageChange={setMainPage}\n          edgeToEdge={edge_to_edge}\n        />\n      </VideoTileContext.Provider>\n    );\n  } else if (isRoleProminence) {\n    return (\n      <VideoTileContext.Provider value={tileLayout}>\n        <RoleProminence\n          peers={sortedPeers}\n          onPageSize={setPageSize}\n          onPageChange={setMainPage}\n          prominentRoles={prominentRoles}\n          isInsetEnabled={isInsetEnabled}\n          edgeToEdge={edge_to_edge}\n        />\n      </VideoTileContext.Provider>\n    );\n  }\n  return (\n    <VideoTileContext.Provider value={tileLayout}>\n      <EqualProminence\n        peers={sortedPeers}\n        onPageSize={setPageSize}\n        onPageChange={setMainPage}\n        isInsetEnabled={isInsetEnabled}\n        edgeToEdge={edge_to_edge}\n      />\n    </VideoTileContext.Provider>\n  );\n};\n", "import React, { useEffect, useMemo } from \"react\";\nimport {\n  selectAppData,\n  selectPeers,\n  selectPeerScreenSharing,\n  useEmbedShare,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { SecondaryTiles } from \"../components/SecondaryTiles\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { ProminenceLayout } from \"../components/VideoLayouts/ProminenceLayout\";\nimport { Box } from \"../../Layout\";\nimport {\n  useResetEmbedConfig,\n  useSetAppDataByKey,\n} from \"../components/AppData/useUISettings\";\nimport { APP_DATA } from \"../common/constants\";\n\nexport const EmbedView = () => {\n  return (\n    <EmbedScreenShareView>\n      <EmbedComponent />\n    </EmbedScreenShareView>\n  );\n};\n\nexport const EmbedScreenShareView = ({ children }) => {\n  const peers = useHMSStore(selectPeers);\n\n  const peerPresenting = useHMSStore(selectPeerScreenSharing);\n  const [, setActiveScreenSharePeer] = useSetAppDataByKey(\n    APP_DATA.activeScreensharePeerId\n  );\n\n  const smallTilePeers = useMemo(() => {\n    const smallTilePeers = peers.filter(\n      (peer) => peer.id !== peerPresenting?.id\n    );\n    return smallTilePeers;\n  }, [peers, peerPresenting]);\n\n  useEffect(() => {\n    setActiveScreenSharePeer(peerPresenting?.id);\n    return () => {\n      setActiveScreenSharePeer(\"\");\n    };\n  }, [peerPresenting?.id, setActiveScreenSharePeer]);\n  return (\n    <ProminenceLayout.Root>\n      <ProminenceLayout.ProminentSection>\n        {children}\n      </ProminenceLayout.ProminentSection>\n      <SecondaryTiles peers={smallTilePeers} />\n    </ProminenceLayout.Root>\n  );\n};\n/**\n * EmbedView is responsible for rendering the iframe and managing the screen sharing functionality.\n */\nconst EmbedComponent = () => {\n  const embedConfig = useHMSStore(selectAppData(APP_DATA.embedConfig));\n  const resetConfig = useResetEmbedConfig();\n\n  // need to send resetConfig to clear configuration, if stop screenshare occurs.\n  const { iframeRef, startEmbedShare, isEmbedShareInProgress } =\n    useEmbedShare(resetConfig);\n\n  useEffect(() => {\n    (async () => {\n      if (embedConfig && !isEmbedShareInProgress) {\n        try {\n          await startEmbedShare(embedConfig);\n        } catch (err) {\n          resetConfig();\n          ToastManager.addToast({\n            title: `Error while sharing embed url ${err.message || \"\"}`,\n            variant: \"error\",\n          });\n        }\n      }\n    })();\n  }, [isEmbedShareInProgress, embedConfig, startEmbedShare, resetConfig]);\n\n  return (\n    <Box\n      css={{\n        mx: \"$8\",\n        flex: \"3 1 0\",\n        \"@lg\": {\n          flex: \"2 1 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <iframe\n        title=\"Embed View\"\n        ref={iframeRef}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          border: 0,\n          borderRadius: \"0.75rem\",\n        }}\n        allow=\"autoplay; clipboard-write;\"\n        referrerPolicy=\"no-referrer\"\n      />\n    </Box>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { usePDFShare } from \"@100mslive/react-sdk\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { Box } from \"../../Layout\";\nimport { EmbedScreenShareView } from \"./EmbedView\";\nimport {\n  usePDFConfig,\n  useResetPDFConfig,\n} from \"../components/AppData/useUISettings\";\n\n/**\n * PDFView is responsible for rendering the PDF iframe and managing the screen sharing functionality.\n */\nexport const PDFView = () => {\n  const pdfConfig = usePDFConfig();\n  const resetConfig = useResetPDFConfig();\n  // need to send resetConfig to clear configuration, if stop screenshare occurs.\n  const { iframeRef, startPDFShare, isPDFShareInProgress } =\n    usePDFShare(resetConfig);\n\n  useEffect(() => {\n    // no working in other useEffect, as return is called multiple time on state change\n    return () => {\n      resetConfig();\n    };\n  }, []);\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!isPDFShareInProgress && pdfConfig) {\n          await startPDFShare(pdfConfig);\n        }\n      } catch (err) {\n        resetConfig();\n        ToastManager.addToast({\n          title: `Error while sharing annotator ${err.message || \"\"}`,\n          variant: \"error\",\n        });\n      }\n    })();\n  }, [isPDFShareInProgress, pdfConfig, resetConfig, startPDFShare]);\n  return (\n    <EmbedScreenShareView>\n      <Box\n        css={{\n          mx: \"$8\",\n          flex: \"3 1 0\",\n          \"@lg\": {\n            flex: \"2 1 0\",\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n        }}\n      >\n        <iframe\n          title=\"Embed View\"\n          ref={iframeRef}\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            border: 0,\n            borderRadius: \"0.75rem\",\n          }}\n          allow=\"autoplay; clipboard-write;\"\n          referrerPolicy=\"no-referrer\"\n        />\n      </Box>\n    </EmbedScreenShareView>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport Draggable, { ControlPosition } from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSTranscript,\n  selectIsTranscriptionEnabled,\n  selectPeerNameByID,\n  useHMSStore,\n  useTranscript,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { config } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport { useIsSidepaneTypeOpen } from \"../components/AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { useIsCaptionEnabled } from \"../components/AppData/useUISettings\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { SIDE_PANE_OPTIONS } from \"../common/constants\";\ninterface CaptionQueueData extends HMSTranscript {\n  transcriptQueue: SimpleQueue;\n}\n\ninterface TranscriptData extends HMSTranscript {\n  timeout?: NodeJS.Timeout | undefined;\n}\nclass SimpleQueue {\n  private storage: TranscriptData[] = [];\n  constructor(\n    private capacity: number = 3,\n    private MAX_STORAGE_TIME: number = 5000\n  ) {}\n  enqueue(data: TranscriptData): void {\n    if (!data.transcript.trim()) {\n      return;\n    }\n    if (this.size() === this.capacity && this.storage[this.size() - 1].final) {\n      this.dequeue(this.storage[this.size() - 1]);\n    }\n    if (this.size() === 0) {\n      this.storage.push(data);\n      this.addTimeout(this.storage[this.size() - 1], data.final);\n      return;\n    }\n    if (this.size() > 0 && this.storage[this.size() - 1]?.final === true) {\n      this.storage.push(data);\n      this.addTimeout(this.storage[this.size() - 1], data.final);\n      return;\n    }\n    this.storage[this.size() - 1].transcript = data.transcript;\n    this.storage[this.size() - 1].final = data.final;\n    this.storage[this.size() - 1].end = data.end;\n    this.addTimeout(this.storage[this.size() - 1], data.final);\n  }\n  addTimeout(item: TranscriptData, isFinal: boolean) {\n    if (!isFinal) {\n      return;\n    }\n    item.timeout = setTimeout(() => {\n      this.dequeue(item);\n    }, this.MAX_STORAGE_TIME);\n  }\n  dequeue(item: TranscriptData): TranscriptData | undefined {\n    const index = this.storage.indexOf(item);\n    if (index === -1) {\n      return undefined;\n    }\n    const removedItem = this.storage.splice(index, 1);\n    if (removedItem.length <= 0) {\n      return undefined;\n    }\n    this.clearTimeout(removedItem[0]);\n    return item;\n  }\n  clearTimeout(item: TranscriptData) {\n    if (!item.timeout) {\n      return;\n    }\n    clearTimeout(item.timeout);\n  }\n  peek(): TranscriptData | undefined {\n    if (this.size() <= 0) {\n      return undefined;\n    }\n    return this.storage[0];\n  }\n  getTranscription(): string {\n    let script = \"\";\n    this.storage.forEach(\n      (value: TranscriptData) => (script += value.transcript + \" \")\n    );\n    return script;\n  }\n  reset() {\n    this.storage.length = 0;\n  }\n  size(): number {\n    return this.storage.length;\n  }\n}\nclass Queue {\n  private storage: Record<string, CaptionQueueData> = {};\n  constructor(private capacity: number = 3) {}\n\n  enqueue(data: HMSTranscript): void {\n    if (this.size() === this.capacity) {\n      this.dequeue();\n    }\n    if (!this.storage[data.peer_id]) {\n      this.storage[data.peer_id] = {\n        peer_id: data.peer_id,\n        transcript: data.transcript,\n        final: data.final,\n        transcriptQueue: new SimpleQueue(),\n        start: data.start,\n        end: data.end,\n      };\n      this.storage[data.peer_id].transcriptQueue.enqueue(\n        data as TranscriptData\n      );\n      return;\n    }\n    this.storage[data.peer_id].transcriptQueue.enqueue(data as TranscriptData);\n  }\n  dequeue(): CaptionQueueData {\n    const key: string = Object.keys(this.storage).shift() || \"\";\n    const captionData = this.storage[key];\n    captionData.transcriptQueue.reset();\n    delete this.storage[key];\n    return captionData;\n  }\n\n  peek(): CaptionQueueData | undefined {\n    if (this.size() <= 0) return undefined;\n    const key: string = Object.keys(this.storage).shift() || \"\";\n    return this.storage[key];\n  }\n\n  findPeerData(): { [key: string]: string }[] {\n    const keys = Object.keys(this.storage);\n    const data = keys.map((key: string) => {\n      const data = this.storage[key];\n      const word = data.transcriptQueue.getTranscription();\n      return { [key]: word };\n    });\n    return data;\n  }\n  size(): number {\n    return Object.keys(this.storage).length;\n  }\n}\n\nclass CaptionMaintainerQueue {\n  captionData: Queue;\n  constructor() {\n    this.captionData = new Queue();\n  }\n  push(data: HMSTranscript[] = []) {\n    data.forEach((value: HMSTranscript) => {\n      this.captionData.enqueue(value);\n    });\n  }\n}\nconst TranscriptView = ({\n  peer_id,\n  data,\n}: {\n  peer_id: string;\n  data: string;\n}) => {\n  const peerName = useHMSStore(selectPeerNameByID(peer_id)) || \"Participant\";\n  data = data.trim();\n  if (!data) return null;\n  return (\n    <Text\n      variant=\"body2\"\n      css={{\n        fontWeight: \"$normal\",\n      }}\n    >\n      <b>{peerName}: </b>\n      {data}\n    </Text>\n  );\n};\n\nexport const CaptionsViewer = ({\n  defaultPosition,\n  setDefaultPosition,\n}: {\n  defaultPosition: ControlPosition;\n  setDefaultPosition: (position: ControlPosition) => void;\n}) => {\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const isMobile = useMedia(config.media.md);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n\n  const showCaptionAtTop = elements?.chat?.is_overlay && isChatOpen && isMobile;\n\n  const [captionQueue] = useState<CaptionMaintainerQueue>(\n    new CaptionMaintainerQueue()\n  );\n  const [currentData, setCurrentData] = useState<{ [key: string]: string }[]>(\n    []\n  );\n\n  const isCaptionEnabled = useIsCaptionEnabled();\n\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      if (!captionQueue) {\n        return;\n      }\n      const data = captionQueue.captionData?.findPeerData();\n      setCurrentData(data);\n    }, 1000);\n    return () => clearInterval(timeInterval);\n  }, [captionQueue]);\n\n  useTranscript({\n    onTranscript: (data: HMSTranscript[]) => {\n      captionQueue && captionQueue.push(data as HMSTranscript[]);\n    },\n  });\n  const dataToShow = currentData.filter((data: { [key: string]: string }) => {\n    const key = Object.keys(data)[0];\n    if (data[key]) {\n      return true;\n    }\n    return false;\n  });\n  if (\n    dataToShow.length <= 0 ||\n    screenType === \"hls_live_streaming\" ||\n    !isCaptionEnabled ||\n    !isTranscriptionEnabled\n  ) {\n    return null;\n  }\n  return (\n    <Draggable\n      bounds=\"parent\"\n      nodeRef={nodeRef}\n      defaultPosition={defaultPosition}\n      onStop={(_, data) => {\n        setDefaultPosition({ x: data.lastX, y: data.lastY });\n      }}\n    >\n      <Box\n        ref={nodeRef}\n        css={{\n          position: \"absolute\",\n          w: isMobile ? \"100%\" : \"40%\",\n          bottom: showCaptionAtTop ? \"\" : \"0\",\n          top: showCaptionAtTop ? \"0\" : \"\",\n          left: isMobile ? 0 : \"50%\",\n          transform: isMobile ? \"\" : \"translateX(-50%)\",\n          background: \"#000000A3\",\n          overflow: \"clip\",\n          zIndex: 10,\n          height: \"fit-content\",\n          r: \"$1\",\n          p: \"$6\",\n          transition: \"bottom 0.3s ease-in-out\",\n          \"&:empty\": { display: \"none\" },\n        }}\n      >\n        <Flex direction=\"column\">\n          {dataToShow.map((data: { [key: string]: string }, index: number) => {\n            const key = Object.keys(data)[0];\n            return (\n              <TranscriptView key={index} peer_id={key} data={data[key]} />\n            );\n          })}\n        </Flex>\n      </Box>\n    </Draggable>\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  selectPeerScreenSharing,\n  useHMSStore,\n  useWhiteboard,\n} from \"@100mslive/react-sdk\";\n\n/**\n * close existing whiteboard when a screen is shared\n */\nexport const useCloseScreenshareWhiteboard = () => {\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const { isOwner: isWhiteboardOwner, toggle: toggleWhiteboard } =\n    useWhiteboard();\n\n  // if both screenshare and whiteboard are open, close the whiteboard\n  useEffect(() => {\n    if (isWhiteboardOwner && peerSharing) {\n      toggleWhiteboard?.();\n    }\n  }, [isWhiteboardOwner, toggleWhiteboard, peerSharing]);\n};\n", "import React, { memo } from \"react\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport IconButton from \"../IconButton\";\n\nexport function HlsStatsOverlay({ hlsStatsState, onClose }) {\n  return (\n    <Flex\n      css={{\n        position: \"absolute\",\n        width: \"$80\",\n        marginLeft: \"$8\",\n        padding: \"$8 $8 $10\",\n        zIndex: 10,\n        backgroundColor: \"$surface_brighter\",\n        borderRadius: \"$1\",\n      }}\n      direction=\"column\"\n    >\n      <IconButton\n        css={{ position: \"absolute\", top: \"$2\", right: \"$2\" }}\n        onClick={onClose}\n      >\n        <CrossIcon />\n      </IconButton>\n      <HlsStatsRow label=\"URL\">\n        <Flex align=\"center\">\n          <a\n            style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\n            href={hlsStatsState?.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Stream url\n          </a>\n        </Flex>\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Video size\">\n        {` ${hlsStatsState?.videoSize?.width}x${hlsStatsState?.videoSize?.height}`}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Buffer duration\">\n        {hlsStatsState?.bufferedDuration?.toFixed(2)}{\" \"}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Connection speed\">\n        {`${(hlsStatsState?.bandwidthEstimate / (1000 * 1000)).toFixed(\n          2\n        )} Mbps`}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Bitrate\">{`${(\n        hlsStatsState?.bitrate /\n        (1000 * 1000)\n      ).toFixed(2)} Mbps`}</HlsStatsRow>\n      <HlsStatsRow label=\"distance from live\">\n        {getDurationFromSeconds(hlsStatsState.distanceFromLive / 1000)}\n      </HlsStatsRow>\n      <HlsStatsRow label=\"Dropped frames\">\n        {hlsStatsState?.droppedFrames}\n      </HlsStatsRow>\n    </Flex>\n  );\n}\n\n/**\n * Extracted from HLS new Player PR.\n * TODO: remove this and use HMSVideoUtils.js\n * when that code is merged\n */\nexport function getDurationFromSeconds(timeInSeconds) {\n  let time = Math.floor(timeInSeconds);\n  const hours = Math.floor(time / 3600);\n  time = time - hours * 3600;\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time - minutes * 60);\n\n  const prefixedMinutes = `${minutes < 10 ? \"0\" + minutes : minutes}`;\n  const prefixedSeconds = `${seconds < 10 ? \"0\" + seconds : seconds}`;\n\n  let videoTimeStr = `${prefixedMinutes}:${prefixedSeconds}`;\n  if (hours) {\n    const prefixedHours = `${hours < 10 ? \"0\" + hours : hours}`;\n    videoTimeStr = `${prefixedHours}:${prefixedMinutes}:${prefixedSeconds}`;\n  }\n  return videoTimeStr;\n}\n\nconst HlsStatsRow = memo(({ label, children }) => {\n  return (\n    <Flex gap={4} justify=\"center\" css={{ width: \"100%\" }}>\n      <Text\n        css={{\n          width: \"50%\",\n          \"@md\": { fontSize: \"$md\" },\n          \"@sm\": { fontSize: \"$sm\" },\n          // textAlign: \"right\",\n        }}\n      >\n        {label}\n      </Text>\n      <Text\n        css={{\n          \"@md\": { fontSize: \"$md\" },\n          \"@sm\": { fontSize: \"$sm\" },\n          width: \"50%\",\n          overflowWrap: \"break-word\",\n          // textAlign: \"left\",\n        }}\n      >\n        {children}\n      </Text>\n    </Flex>\n  );\n});\n", "import { Flex, styled } from \"../../..\";\n\nexport const VideoControls = styled(Flex, {\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  alignSelf: \"stretch\",\n  width: \"100%\",\n  gap: \"$2\",\n});\n\nexport const LeftControls = styled(Flex, {\n  justifyContent: \"flex-start\",\n  alignItems: \"center\",\n  width: \"100%\",\n  gap: \"$4\",\n});\nexport const RightControls = styled(Flex, {\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  width: \"100%\",\n  gap: \"$4\",\n});\n", "import React, { forwardRef } from \"react\";\nimport { Flex } from \"../../../Layout\";\n\nexport const HMSVideo = forwardRef(({ children, ...props }, videoRef) => {\n  return (\n    <Flex\n      data-testid=\"hms-video\"\n      css={{\n        size: \"100%\",\n        position: \"relative\",\n        justifyContent: \"center\",\n        transition: \"all 0.3s ease-in-out\",\n        \"@md\": {\n          height: \"auto\",\n          \"& video\": {\n            height: \"$60 !important\",\n          },\n        },\n        \"& video::cue\": {\n          // default for on-surface-high\n          color: \"#EFF0FA\",\n          whiteSpace: \"pre-line\",\n          fontSize: \"$sm\",\n          fontStyle: \"normal\",\n          fontWeight: \"$regular\",\n          lineHeight: \"$sm\",\n          letterSpacing: \"0.25px\",\n        },\n        \"& video::-webkit-media-text-track-display\": {\n          padding: \"0 $4\",\n          boxShadow: \"0px 1px 3px 0px #000000A3\",\n        },\n        \"& video::-webkit-media-text-track-container\": {\n          fontSize: \"$space$10 !important\",\n        },\n      }}\n      direction=\"column\"\n      {...props}\n    >\n      <video\n        style={{\n          margin: \"0 auto\",\n          objectFit: \"contain\",\n          width: \"auto\",\n          height: \"100%\",\n          maxWidth: \"100%\",\n        }}\n        ref={videoRef}\n        playsInline\n        disablePictureInPicture\n      />\n      {children}\n    </Flex>\n  );\n});\n", "import React, { useContext } from \"react\";\nimport { HMSHLSPlayer } from \"@100mslive/hls-player\";\n\ntype IHMSPlayerContext = {\n  hlsPlayer?: HMSHLSPlayer;\n};\n\nexport const HMSPlayerContext = React.createContext<IHMSPlayerContext>({\n  hlsPlayer: undefined,\n});\n\nexport const useHMSPlayerContext = () => {\n  const context = useContext(HMSPlayerContext);\n  return context;\n};\n", "import React, { MouseEvent } from \"react\";\nimport { PauseIcon, PlayIcon } from \"@100mslive/react-icons\";\nimport { IconButton, Tooltip } from \"../../..\";\nimport { useHMSPlayerContext } from \"./PlayerContext\";\n\nexport const PlayPauseButton = ({\n  isPaused,\n  width = 20,\n  height = 20,\n}: {\n  isPaused: boolean;\n  width?: number;\n  height?: number;\n}) => {\n  const { hlsPlayer } = useHMSPlayerContext();\n  const onClick = async (event: MouseEvent) => {\n    event?.stopPropagation();\n    isPaused ? await hlsPlayer?.play() : hlsPlayer?.pause();\n  };\n  return (\n    <Tooltip title={isPaused ? \"Play\" : \"Pause\"} side=\"top\">\n      <IconButton onClick={onClick} data-testid=\"play_pause_btn\">\n        {isPaused ? (\n          <PlayIcon width={width} height={height} />\n        ) : (\n          <PauseIcon width={width} height={height} />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React, { MouseEventHandler } from \"react\";\nimport { IconButton, Tooltip } from \"../../..\";\n\nexport const SeekControl = ({\n  title,\n  onClick,\n  children,\n  css,\n}: {\n  title: string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  css?: any;\n  children: React.ReactNode;\n}) => {\n  return (\n    <Tooltip title={title} side=\"top\">\n      <IconButton\n        onClick={onClick}\n        data-testid=\"backward_forward_arrow_btn\"\n        css={css}\n      >\n        {children}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { BackwardArrowIcon, ForwardArrowIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config } from \"../../../Theme\";\nimport { PlayPauseButton } from \"./PlayPauseButton\";\nimport { SeekControl } from \"./SeekControl\";\nimport { useIsLandscape } from \"../../common/hooks\";\n\n// desktop buttons\nexport const PlayPauseSeekControls = ({\n  isPaused,\n  onSeekTo,\n}: {\n  isPaused: boolean;\n  onSeekTo: (value: number) => void;\n}) => {\n  return (\n    <>\n      <SeekControl\n        onClick={(e) => {\n          e.stopPropagation();\n          onSeekTo(-10);\n        }}\n        title=\"backward\"\n      >\n        <BackwardArrowIcon width={20} height={20} />\n      </SeekControl>\n      <PlayPauseButton isPaused={isPaused} />\n      <SeekControl\n        onClick={(e) => {\n          e.stopPropagation();\n          onSeekTo(10);\n        }}\n        title=\"forward\"\n      >\n        <ForwardArrowIcon width={20} height={20} />\n      </SeekControl>\n    </>\n  );\n};\n\n// overlay handlers\nexport const PlayPauseSeekOverlayControls = ({\n  isPaused,\n  showControls,\n  hoverControlsVisible,\n}: {\n  isPaused: boolean;\n  showControls: boolean;\n  hoverControlsVisible: {\n    seekBackward: boolean;\n    seekForward: boolean;\n    pausePlay: boolean;\n  };\n}) => {\n  const isMobile = useMedia(config.media.md);\n  const isLandscape = useIsLandscape();\n\n  if (!isMobile && !isLandscape) {\n    // show desktopOverflow icons\n    return (\n      <>\n        <Flex\n          css={{\n            bg: \"rgba(0, 0, 0, 0.6)\",\n            r: \"$round\",\n            size: \"$24\",\n            visibility: hoverControlsVisible.seekBackward ? `` : `hidden`,\n            opacity: hoverControlsVisible.seekBackward ? `1` : \"0\",\n          }}\n          direction=\"column\"\n          align=\"center\"\n        >\n          <SeekControl title=\"backward\">\n            <BackwardArrowIcon width={52} height={52} />\n          </SeekControl>\n          <Text variant=\"body2\" css={{ fontWeight: \"$regular\" }}>\n            10 secs\n          </Text>\n        </Flex>\n        <Box\n          css={{\n            bg: \"rgba(0, 0, 0, 0.6)\",\n            r: \"$round\",\n            visibility: hoverControlsVisible.pausePlay ? `` : `hidden`,\n            opacity: hoverControlsVisible.pausePlay ? `1` : \"0\",\n          }}\n        >\n          <PlayPauseButton isPaused={isPaused} width={48} height={48} />\n        </Box>\n        <Flex\n          css={{\n            bg: \"rgba(0, 0, 0, 0.6)\",\n            r: \"$round\",\n            size: \"$24\",\n            visibility: hoverControlsVisible.seekForward ? `` : `hidden`,\n            opacity: hoverControlsVisible.seekForward ? `1` : \"0\",\n          }}\n          direction=\"column\"\n          align=\"center\"\n        >\n          <SeekControl title=\"forward\">\n            <ForwardArrowIcon width={52} height={52} />\n          </SeekControl>\n          <Text variant=\"body2\" css={{ fontWeight: \"$regular\" }}>\n            10 secs\n          </Text>\n        </Flex>\n      </>\n    );\n  }\n\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        position: \"absolute\",\n        bg: \"#00000066\",\n        display: \"inline-flex\",\n        gap: \"$2\",\n        zIndex: 1,\n        size: \"100%\",\n        visibility: showControls ? `` : `hidden`,\n        opacity: showControls ? `1` : \"0\",\n      }}\n    >\n      <SeekControl\n        title=\"backward\"\n        css={{\n          visibility: hoverControlsVisible.seekBackward ? `` : `hidden`,\n          opacity: hoverControlsVisible.seekBackward ? `1` : \"0\",\n        }}\n      >\n        <BackwardArrowIcon width={32} height={32} />\n      </SeekControl>\n      <Box\n        css={{\n          bg: \"rgba(0, 0, 0, 0.6)\",\n          r: \"$round\",\n        }}\n      >\n        <PlayPauseButton isPaused={isPaused} width={48} height={48} />\n      </Box>\n      <SeekControl\n        title=\"forward\"\n        css={{\n          visibility: hoverControlsVisible.seekForward ? `` : `hidden`,\n          opacity: hoverControlsVisible.seekForward ? `1` : \"0\",\n        }}\n      >\n        <ForwardArrowIcon width={32} height={32} />\n      </SeekControl>\n    </Flex>\n  );\n};\n", "export function getPercentage(a: number, b: number) {\n  return (a / b) * 100;\n}\n\n/**\n * Take a time in seconds and return its equivalent time in hh:mm:ss format\n * @param {number} timeInSeconds if given as floating point value, it is floored.\n *\n * @returns a string representing timeInSeconds in HH:MM:SS format.\n */\nexport function getDurationFromSeconds(timeInSeconds: number) {\n  let time = Math.floor(timeInSeconds);\n  const hours = Math.floor(time / 3600);\n  time = time - hours * 3600;\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.floor(time - minutes * 60);\n\n  const prefixedMinutes = `${minutes < 10 ? `0${minutes}` : minutes}`;\n  const prefixedSeconds = `${seconds < 10 ? `0${seconds}` : seconds}`;\n\n  let videoTimeStr = `${prefixedMinutes}:${prefixedSeconds}`;\n  if (hours) {\n    const prefixedHours = `${hours < 10 ? `0${hours}` : hours}`;\n    videoTimeStr = `${prefixedHours}:${prefixedMinutes}:${prefixedSeconds}`;\n  }\n  return videoTimeStr;\n}\n\nexport function getDuration(videoEl: HTMLVideoElement): number {\n  if (isFinite(videoEl.duration)) {\n    return videoEl.duration;\n  }\n  if (videoEl.seekable.length > 0) {\n    return videoEl.seekable.end(0);\n  }\n  return 0;\n}\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport { Box, Flex, Slider } from \"../../..\";\nimport { useHMSPlayerContext } from \"./PlayerContext\";\nimport { getDuration, getPercentage } from \"./utils\";\n\nexport const VideoProgress = ({\n  seekProgress,\n  setSeekProgress,\n}: {\n  seekProgress: boolean;\n  setSeekProgress: (value: boolean) => void;\n}) => {\n  const { hlsPlayer } = useHMSPlayerContext();\n  const [videoProgress, setVideoProgress] = useState<number>(0);\n  const [bufferProgress, setBufferProgress] = useState(0);\n  const videoEl = hlsPlayer?.getVideoElement();\n\n  const setProgress = useCallback(() => {\n    if (!videoEl) {\n      return;\n    }\n    const duration = getDuration(videoEl);\n    const videoProgress = Math.floor(\n      getPercentage(videoEl.currentTime, duration)\n    );\n    let bufferProgress = 0;\n    if (videoEl.buffered.length > 0) {\n      bufferProgress = Math.floor(\n        getPercentage(videoEl.buffered?.end(0), duration)\n      );\n    }\n    if (!isNaN(videoProgress)) {\n      setVideoProgress(videoProgress);\n    }\n    if (!isNaN(bufferProgress)) {\n      setBufferProgress(bufferProgress);\n    }\n  }, [videoEl]);\n  const timeupdateHandler = useCallback(() => {\n    if (!videoEl || seekProgress) {\n      return;\n    }\n    setProgress();\n  }, [seekProgress, setProgress, videoEl]);\n  useEffect(() => {\n    if (!videoEl) {\n      return;\n    }\n    setProgress();\n    videoEl.addEventListener(\"timeupdate\", timeupdateHandler);\n    return function cleanup() {\n      videoEl?.removeEventListener(\"timeupdate\", timeupdateHandler);\n    };\n  }, [setProgress, timeupdateHandler, videoEl]);\n\n  const onProgress = (progress: number[]) => {\n    const progress1 = Math.floor(getPercentage(progress[0], 100));\n    const videoEl = hlsPlayer?.getVideoElement();\n    if (!videoEl) {\n      return;\n    }\n    const duration = isFinite(videoEl.duration)\n      ? videoEl.duration\n      : videoEl.seekable?.end(0) || 0;\n    const currentTime = (progress1 * duration) / 100;\n    hlsPlayer?.seekTo(currentTime);\n    setProgress();\n  };\n\n  if (!videoEl) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      css={{ cursor: \"pointer\", h: \"$2\", alignSelf: \"stretch\" }}\n    >\n      <Slider\n        id=\"video-actual-rest\"\n        css={{\n          cursor: \"pointer\",\n          h: \"$2\",\n          zIndex: 1,\n          transition: `all .2s ease .5s`,\n        }}\n        min={0}\n        max={100}\n        step={1}\n        value={[videoProgress]}\n        showTooltip={false}\n        onValueChange={onProgress}\n        onPointerDown={() => setSeekProgress(true)}\n        onPointerUp={() => setSeekProgress(false)}\n        thumbStyles={{ w: \"$6\", h: \"$6\" }}\n      />\n      <Box\n        id=\"video-buffer\"\n        css={{\n          h: \"$2\",\n          width: `${bufferProgress - videoProgress}%`,\n          background: \"$on_surface_high\",\n          position: \"absolute\",\n          left: `${videoProgress}%`,\n          opacity: \"25%\",\n        }}\n      />\n    </Flex>\n  );\n};\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport { HMSHLSPlayerEvents } from \"@100mslive/hls-player\";\nimport { Text } from \"../../../Text\";\nimport { useHMSPlayerContext } from \"./PlayerContext\";\nimport { getDuration, getDurationFromSeconds } from \"./utils\";\n\nexport const VideoTime = () => {\n  const { hlsPlayer } = useHMSPlayerContext();\n\n  const [videoTime, setVideoTime] = useState(getDurationFromSeconds(0));\n\n  const updateTime = useCallback(\n    (currentTime: number) => {\n      const videoEl = hlsPlayer?.getVideoElement();\n      if (videoEl) {\n        const duration = getDuration(videoEl);\n        setVideoTime(getDurationFromSeconds(duration - currentTime));\n      } else {\n        setVideoTime(getDurationFromSeconds(currentTime));\n      }\n    },\n    [hlsPlayer]\n  );\n  useEffect(() => {\n    const timeupdateHandler = (currentTime: number) => {\n      updateTime(currentTime);\n    };\n    if (hlsPlayer) {\n      hlsPlayer.on(HMSHLSPlayerEvents.CURRENT_TIME, timeupdateHandler);\n      const videoEl = hlsPlayer?.getVideoElement();\n      updateTime(videoEl.currentTime);\n    }\n    return function cleanup() {\n      hlsPlayer?.off(HMSHLSPlayerEvents.CURRENT_TIME, timeupdateHandler);\n    };\n  }, [hlsPlayer, updateTime]);\n\n  return hlsPlayer ? (\n    <Text\n      variant=\"body1\"\n      css={{\n        minWidth: \"$16\",\n        c: \"$on_surface_medium\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        fontWeight: \"$regular\",\n      }}\n    >\n      -{videoTime}\n    </Text>\n  ) : null;\n};\n", "import React, { useState } from \"react\";\nimport {\n  VolumeOneIcon,\n  VolumeTwoIcon,\n  VolumeZeroIcon,\n} from \"@100mslive/react-icons\";\nimport { Flex, Slider } from \"../../..\";\nimport { useHMSPlayerContext } from \"./PlayerContext\";\n\nexport const VolumeControl = () => {\n  const { hlsPlayer } = useHMSPlayerContext();\n  const [volume, setVolume] = useState(hlsPlayer?.volume ?? 100);\n  const [showSlider, setShowSlider] = useState(false);\n\n  return (\n    <Flex\n      align=\"center\"\n      css={{ color: \"$on_surface_high\" }}\n      onMouseOver={(event) => {\n        event.stopPropagation();\n        setShowSlider(true);\n      }}\n      onMouseLeave={(event) => {\n        event.stopPropagation();\n        setShowSlider(false);\n      }}\n    >\n      <VolumeIcon\n        volume={volume}\n        onClick={() => {\n          if (volume > 0) {\n            setVolume(0);\n            hlsPlayer?.setVolume(0);\n          } else {\n            setVolume(100);\n            hlsPlayer?.setVolume(100);\n          }\n        }}\n      />\n      <Slider\n        css={{\n          mx: \"$4\",\n          w: \"$20\",\n          cursor: \"pointer\",\n          \"@sm\": { w: \"$14\" },\n          \"@xs\": { w: \"$14\" },\n          opacity: showSlider ? \"1\" : \"0\",\n          display: showSlider ? \"\" : \"none\",\n          transition: `all .2s ease .5s`,\n        }}\n        min={0}\n        max={100}\n        step={1}\n        value={[volume]}\n        onValueChange={(volume) => {\n          hlsPlayer?.setVolume(volume[0]);\n          setVolume(volume[0]);\n        }}\n        thumbStyles={{ w: \"$6\", h: \"$6\" }}\n      />\n    </Flex>\n  );\n};\n\nconst VolumeIcon = ({\n  volume,\n  onClick,\n}: {\n  volume: number;\n  onClick: () => void;\n}) => {\n  if (volume === 0) {\n    return (\n      <VolumeZeroIcon\n        style={{ cursor: \"pointer\", transition: \"color 0.3s\" }}\n        onClick={onClick}\n      />\n    );\n  }\n  return volume < 50 ? (\n    <VolumeOneIcon\n      style={{ cursor: \"pointer\", transition: \"color 0.3s\" }}\n      onClick={onClick}\n    />\n  ) : (\n    <VolumeTwoIcon\n      style={{ cursor: \"pointer\", transition: \"color 0.3s\" }}\n      onClick={onClick}\n    />\n  );\n};\n", "// @ts-ignore\nimport { LeftControls, RightControls, VideoControls } from \"./Controls\";\n// @ts-ignore\nimport { HMSVideo } from \"./HMSVideo\";\nimport {\n  PlayPauseSeekControls,\n  PlayPauseSeekOverlayControls,\n} from \"./PlayPauseSeekControls\";\nimport { VideoProgress } from \"./VideoProgress\";\nimport { VideoTime } from \"./VideoTime\";\nimport { VolumeControl } from \"./VolumeControl\";\n\nexport const HMSVideoPlayer = {\n  Root: HMSVideo,\n  Progress: VideoProgress,\n  Duration: VideoTime,\n  Volume: VolumeControl,\n  Controls: {\n    Root: VideoControls,\n    Left: LeftControls,\n    Right: RightControls,\n  },\n  PlayPauseSeekControls: {\n    Overlay: PlayPauseSeekOverlayControls,\n    Button: PlayPauseSeekControls,\n  },\n};\n", "import React from \"react\";\nimport { ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport { Flex, IconButton, Tooltip } from \"../../..\";\n\nexport const FullScreenButton = ({\n  isFullScreen,\n  onToggle,\n}: {\n  isFullScreen: boolean;\n  onToggle: () => void;\n}) => {\n  return (\n    <Tooltip title={`${isFullScreen ? \"Exit\" : \"Go\"} fullscreen`} side=\"top\">\n      <IconButton\n        css={{ margin: \"0px\" }}\n        onClick={onToggle}\n        key=\"fullscreen_btn\"\n        data-testid=\"fullscreen_btn\"\n      >\n        <Flex>{isFullScreen ? <ShrinkIcon /> : <ExpandIcon />}</Flex>\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { VolumeTwoIcon } from \"@100mslive/react-icons\";\nimport { Button, config, Dialog, IconButton, Text } from \"../../..\";\n// @ts-ignore\nimport { DialogContent, DialogRow } from \"../../primitives/DialogContent\";\nimport { useIsLandscape } from \"../../common/hooks\";\n\nexport function HLSAutoplayBlockedPrompt({\n  open,\n  unblockAutoPlay,\n}: {\n  open: boolean;\n  unblockAutoPlay: () => Promise<void>;\n}) {\n  const isLandscape = useIsLandscape();\n  const isMobile = useMedia(config.media.md);\n  if ((isMobile || isLandscape) && open) {\n    return (\n      <IconButton\n        css={{\n          border: \"1px solid white\",\n          bg: \"white\",\n          color: \"#000\",\n          r: \"$2\",\n        }}\n        onClick={async () => await unblockAutoPlay()}\n      >\n        <VolumeTwoIcon width=\"32\" height=\"32\" />\n        <Text\n          variant=\"body1\"\n          css={{\n            fontWeight: \"$semiBold\",\n            px: \"$2\",\n            color: \"#000\",\n          }}\n        >\n          Tap To Unmute\n        </Text>\n      </IconButton>\n    );\n  }\n  return (\n    <Dialog.Root\n      open={open}\n      onOpenChange={async (value) => {\n        if (!value) {\n          await unblockAutoPlay();\n        }\n      }}\n    >\n      <DialogContent title=\"Attention\" closeable={false}>\n        <DialogRow>\n          <Text variant=\"md\">\n            The browser wants us to get a confirmation for playing the HLS\n            Stream. Please click \"play stream\" to proceed.\n          </Text>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={async () => {\n              await unblockAutoPlay();\n            }}\n          >\n            Play stream\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n}\n", "import React from \"react\";\nimport { ClosedCaptionIcon, OpenCaptionIcon } from \"@100mslive/react-icons\";\nimport { IconButton, Tooltip } from \"../../../\";\nimport { useHMSPlayerContext } from \"./PlayerContext\";\n\nexport function HLSCaptionSelector({ isEnabled }: { isEnabled: boolean }) {\n  const { hlsPlayer } = useHMSPlayerContext();\n  return (\n    <Tooltip title=\"Subtitles/closed captions\" side=\"top\">\n      <IconButton css={{ p: \"$2\" }} onClick={() => hlsPlayer?.toggleCaption()}>\n        {isEnabled ? (\n          <ClosedCaptionIcon width=\"20\" height=\"20px\" />\n        ) : (\n          <OpenCaptionIcon width=\"20\" height=\"20px\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n}\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { HMSHLSLayer } from \"@100mslive/hls-player\";\nimport { CheckIcon, CrossIcon, SettingsIcon } from \"@100mslive/react-icons\";\nimport { Box, Dropdown, Flex, Text, Tooltip } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\nimport { config } from \"../../../Theme\";\nimport { useIsLandscape } from \"../../common/hooks\";\n\nexport function HLSQualitySelector({\n  open,\n  onOpenChange,\n  layers,\n  onQualityChange,\n  selection,\n  isAuto,\n  containerRef,\n}: {\n  open: boolean;\n  onOpenChange: (value: boolean) => void;\n  layers: HMSHLSLayer[];\n  onQualityChange: (\n    quality: { [key: string]: string | number } | HMSHLSLayer\n  ) => void;\n  selection: HMSHLSLayer;\n  isAuto: boolean;\n  containerRef?: HTMLDivElement;\n}) {\n  const isMobile = useMedia(config.media.md);\n  const isLandscape = useIsLandscape();\n\n  if (layers.length === 0) {\n    return null;\n  }\n  if (isMobile || isLandscape) {\n    return (\n      <Sheet.Root open={open} onOpenChange={onOpenChange}>\n        <Sheet.Trigger asChild data-testid=\"quality_selector\">\n          <Flex\n            css={{\n              color: \"$on_primary_high\",\n              r: \"$1\",\n              cursor: \"pointer\",\n              p: \"$2\",\n            }}\n          >\n            <SettingsIcon />\n          </Flex>\n        </Sheet.Trigger>\n        <Sheet.Content\n          container={containerRef}\n          css={{ bg: \"$surface_default\", pb: \"$1\" }}\n          onClick={() => onOpenChange(false)}\n        >\n          <Sheet.Title\n            css={{\n              display: \"flex\",\n              color: \"$on_surface_high\",\n              w: \"100%\",\n              justifyContent: \"space-between\",\n              mt: \"$8\",\n              fontSize: \"$md\",\n              px: \"$10\",\n              pb: \"$8\",\n              borderBottom: \"1px solid $border_bright\",\n              alignItems: \"center\",\n            }}\n          >\n            Quality\n            <Sheet.Close\n              css={{ color: \"$on_surface_high\" }}\n              onClick={() => onOpenChange(false)}\n            >\n              <CrossIcon />\n            </Sheet.Close>\n          </Sheet.Title>\n          {layers.map((layer) => {\n            return (\n              <Flex\n                align=\"center\"\n                css={{\n                  w: \"100%\",\n                  bg: \"$surface_default\",\n                  \"&:hover\": {\n                    bg: \"$surface_brighter\",\n                  },\n                  cursor: \"pointer\",\n                  gap: \"$4\",\n                  py: \"$8\",\n                  px: \"$10\",\n                }}\n                key={layer.width}\n                onClick={() => onQualityChange(layer)}\n              >\n                <Text variant=\"caption\" css={{ fontWeight: \"$semiBold\" }}>\n                  {getQualityText(layer)}\n                </Text>\n                <Text\n                  variant=\"caption\"\n                  css={{ flex: \"1 1 0\", c: \"$on_surface_low\", pl: \"$2\" }}\n                >\n                  {getBitrateText(layer)}\n                </Text>\n                {!isAuto &&\n                  layer.width === selection?.width &&\n                  layer.height === selection?.height && (\n                    <CheckIcon width=\"16px\" height=\"16px\" />\n                  )}\n              </Flex>\n            );\n          })}\n          <Flex\n            align=\"center\"\n            css={{\n              w: \"100%\",\n              bg: \"$surface_default\",\n              \"&:hover\": {\n                bg: \"$surface_brighter\",\n              },\n              cursor: \"pointer\",\n              gap: \"$4\",\n              py: \"$8\",\n              px: \"$10\",\n            }}\n            key=\"auto\"\n            onClick={() => onQualityChange({ height: \"auto\" })}\n          >\n            <Text\n              variant=\"caption\"\n              css={{ fontWeight: \"$semiBold\", flex: \"1 1 0\" }}\n            >\n              Auto\n            </Text>\n            {isAuto && <CheckIcon width=\"16px\" height=\"16px\" />}\n          </Flex>\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n  return (\n    <Dropdown.Root\n      open={open}\n      onOpenChange={(value) => onOpenChange(value)}\n      modal={false}\n    >\n      <Dropdown.Trigger asChild data-testid=\"quality_selector\">\n        <Flex\n          css={{\n            color: \"$on_primary_high\",\n            r: \"$1\",\n            cursor: \"pointer\",\n            p: \"$2\",\n          }}\n        >\n          <Tooltip title=\"Select Quality\" side=\"top\">\n            <Flex align=\"center\">\n              <Box\n                css={{\n                  w: \"$9\",\n                  h: \"$9\",\n                  display: \"inline-flex\",\n                  alignItems: \"center\",\n                  c: \"$on_surface_high\",\n                }}\n              >\n                <SettingsIcon />\n              </Box>\n              <Text\n                variant={{\n                  \"@md\": \"sm\",\n                  \"@sm\": \"xs\",\n                  \"@xs\": \"tiny\",\n                }}\n                css={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  ml: \"$2\",\n                  c: \"$on_surface_medium\",\n                }}\n              >\n                {isAuto && (\n                  <>\n                    Auto\n                    <Box\n                      css={{\n                        mx: \"$2\",\n                        w: \"$2\",\n                        h: \"$2\",\n                        background: \"$on_surface_medium\",\n                        r: \"$1\",\n                      }}\n                    />\n                  </>\n                )}\n                {selection &&\n                  Math.min(selection.width || 0, selection.height || 0)}\n                p\n              </Text>\n            </Flex>\n          </Tooltip>\n        </Flex>\n      </Dropdown.Trigger>\n      <Dropdown.Portal container={containerRef}>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"end\"\n          css={{\n            height: \"auto\",\n            maxHeight: \"$52\",\n            w: \"$40\",\n            bg: \"$surface_bright\",\n            py: \"$4\",\n            gap: \"$4\",\n            display: \"grid\",\n          }}\n        >\n          {layers.map((layer) => {\n            return (\n              <Dropdown.Item\n                onClick={() => onQualityChange(layer)}\n                key={layer.width}\n                css={{\n                  bg:\n                    !isAuto &&\n                    layer.width === selection?.width &&\n                    layer.height === selection?.height\n                      ? \"$surface_default\"\n                      : \"$surface_bright\",\n                  \"&:hover\": {\n                    bg: \"$surface_brighter\",\n                  },\n                  p: \"$2 $4 $2 $8\",\n                  h: \"$12\",\n                  gap: \"$2\",\n                }}\n              >\n                <Text variant=\"caption\" css={{ fontWeight: \"$semiBold\" }}>\n                  {getQualityText(layer)}\n                </Text>\n                <Text\n                  variant=\"caption\"\n                  css={{ flex: \"1 1 0\", c: \"$on_surface_low\", pl: \"$2\" }}\n                >\n                  {getBitrateText(layer)}\n                </Text>\n                {!isAuto &&\n                  layer.width === selection?.width &&\n                  layer.height === selection?.height && (\n                    <CheckIcon width=\"16px\" height=\"16px\" />\n                  )}\n              </Dropdown.Item>\n            );\n          })}\n          <Dropdown.Item\n            onClick={() => onQualityChange({ height: \"auto\" })}\n            key=\"auto\"\n            css={{\n              bg: !isAuto ? \"$surface_bright\" : \"$surface_default\",\n              \"&:hover\": {\n                bg: \"$surface_brighter\",\n              },\n              p: \"$2 $4 $2 $8\",\n              h: \"$12\",\n              gap: \"$2\",\n            }}\n          >\n            <Text\n              variant=\"caption\"\n              css={{ fontWeight: \"$semiBold\", flex: \"1 1 0\" }}\n            >\n              Auto\n            </Text>\n            {isAuto && <CheckIcon width=\"16px\" height=\"16px\" />}\n          </Dropdown.Item>\n        </Dropdown.Content>\n      </Dropdown.Portal>\n    </Dropdown.Root>\n  );\n}\n\nconst getQualityText = (layer: HMSHLSLayer) =>\n  `${Math.min(layer.height || 0, layer.width || 0)}p `;\nconst getBitrateText = (layer: HMSHLSLayer) =>\n  `(${(Number(layer.bitrate / 1000) / 1000).toFixed(2)} Mbps)`;\n", "import React from \"react\";\nimport { ChevronDownIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit any\nimport { Logo } from \"../Header/HeaderComponents\";\nimport { RoomDetailsRow } from \"../RoomDetails/RoomDetailsRow\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\n/*\n\tplayer handler --> left -> go live with timer or live, right -> expand icon \n\tinbetween -> play pause icon, double tap to go back/forward\n\tseekbar\n\thalf page will have chat or participant view\n*/\nexport const HLSViewTitle = () => {\n  const { title, details, description } = useRoomLayoutHeader();\n  const toggleDetailsPane = useSidepaneToggle(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n  const isDetailSidepaneOpen = useIsSidepaneTypeOpen(\n    SIDE_PANE_OPTIONS.ROOM_DETAILS\n  );\n\n  if (isDetailSidepaneOpen) {\n    return (\n      <Flex\n        gap=\"4\"\n        align=\"center\"\n        justify=\"between\"\n        css={{\n          position: \"relative\",\n          h: \"fit-content\",\n          w: \"100%\",\n          borderBottom: \"1px solid $border_bright\",\n          p: \"$8\",\n          backgroundColor: \"$surface_dim\",\n        }}\n      >\n        <Text variant=\"sub2\" css={{ fontWeight: \"$semiBold\" }}>\n          About Session\n        </Text>\n        <Flex\n          onClick={toggleDetailsPane}\n          css={{\n            color: \"$on_surface_high\",\n            cursor: \"pointer\",\n            \"&:hover\": { opacity: \"0.8\" },\n          }}\n        >\n          <ChevronDownIcon />\n        </Flex>\n      </Flex>\n    );\n  }\n  return (\n    <Flex\n      gap=\"4\"\n      align=\"center\"\n      css={{\n        position: \"relative\",\n        h: \"fit-content\",\n        w: \"100%\",\n        borderBottom: \"1px solid $border_bright\",\n        p: \"$8\",\n        backgroundColor: \"$surface_dim\",\n      }}\n    >\n      <Logo />\n      <Flex direction=\"column\">\n        {title ? (\n          <Text variant=\"sub2\" css={{ fontWeight: \"$semiBold\" }}>\n            {title}\n          </Text>\n        ) : null}\n        <Flex>\n          <RoomDetailsRow details={details} />\n          {description ? (\n            <Text\n              variant=\"caption\"\n              css={{ color: \"$on_surface_medium\" }}\n              onClick={toggleDetailsPane}\n            >\n              &nbsp;...more\n            </Text>\n          ) : null}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useFullscreen, useMedia, usePrevious, useToggle } from \"react-use\";\nimport {\n  HLSPlaybackState,\n  HMSHLSPlayer,\n  HMSHLSPlayerEvents,\n} from \"@100mslive/hls-player\";\nimport screenfull from \"screenfull\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  HLSPlaylistType,\n  HMSNotificationTypes,\n  selectAppData,\n  selectHLSState,\n  selectPeerNameByID,\n  selectPollByID,\n  useHMSActions,\n  useHMSNotifications,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { ColoredHandIcon, GoLiveIcon } from \"@100mslive/react-icons\";\nimport { ChatToggle } from \"../components/Footer/ChatToggle\";\nimport { HlsStatsOverlay } from \"../components/HlsStatsOverlay\";\nimport { HMSVideoPlayer } from \"../components/HMSVideo\";\nimport { FullScreenButton } from \"../components/HMSVideo/FullscreenButton\";\nimport { HLSAutoplayBlockedPrompt } from \"../components/HMSVideo/HLSAutoplayBlockedPrompt\";\nimport { HLSCaptionSelector } from \"../components/HMSVideo/HLSCaptionSelector\";\nimport { HLSQualitySelector } from \"../components/HMSVideo/HLSQualitySelector\";\nimport { HLSViewTitle } from \"../components/HMSVideo/MwebHLSViewTitle\";\nimport { HMSPlayerContext } from \"../components/HMSVideo/PlayerContext\";\nimport { LeaveRoom } from \"../components/Leave/LeaveRoom\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { Button } from \"../../Button\";\nimport { IconButton } from \"../../IconButton\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Loading } from \"../../Loading\";\nimport { Text } from \"../../Text\";\nimport { config, theme, useTheme } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\nimport { WaitingView } from \"./WaitingView\";\nimport { useSidepaneToggle } from \"../components/AppData/useSidepane\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsLandscape, useKeyboardHandler } from \"../common/hooks\";\nimport {\n  APP_DATA,\n  EMOJI_REACTION_TYPE,\n  POLL_STATE,\n  POLL_VIEWS,\n  SIDE_PANE_OPTIONS,\n} from \"../common/constants\";\n\nlet hlsPlayer;\nconst toastMap = {};\n\nconst ToggleChat = ({ isFullScreen = false }) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const showChat = !!elements?.chat;\n  const isMobile = useMedia(config.media.md);\n  const hmsActions = useHMSActions();\n\n  useEffect(() => {\n    match({ sidepane, isMobile, showChat, isFullScreen })\n      .with({ isFullScreen: true }, () => {\n        hmsActions.setAppData(APP_DATA.sidePane, \"\");\n      })\n      .with(\n        { isMobile: true, showChat: true, sidepane: P.when((value) => !value) },\n        () => {\n          toggleChat();\n        }\n      )\n      .with(\n        { showChat: false, isMobile: true, sidepane: SIDE_PANE_OPTIONS.CHAT },\n        () => {\n          hmsActions.setAppData(APP_DATA.sidePane, \"\");\n        }\n      )\n      .otherwise(() => {\n        //do nothing\n      });\n  }, [sidepane, isMobile, toggleChat, showChat, hmsActions, isFullScreen]);\n  return null;\n};\nconst HLSView = () => {\n  const videoRef = useRef(null);\n  const hlsViewRef = useRef();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const hlsState = useHMSStore(selectHLSState);\n  const enablHlsStats = useHMSStore(selectAppData(APP_DATA.hlsStats));\n  const notification = useHMSNotifications(HMSNotificationTypes.POLL_STOPPED);\n  const hmsActions = useHMSActions();\n  const { themeType } = useTheme();\n  const [streamEnded, setStreamEnded] = useState(false);\n  let [hlsStatsState, setHlsStatsState] = useState(null);\n  const hlsUrl = hlsState.variants[0]?.url;\n  const [availableLayers, setAvailableLayers] = useState([]);\n  const [isVideoLive, setIsVideoLive] = useState(true);\n  const [isCaptionEnabled, setIsCaptionEnabled] = useState(true);\n  const [hasCaptions, setHasCaptions] = useState(false);\n  const [currentSelectedQuality, setCurrentSelectedQuality] = useState(null);\n  const [isHlsAutoplayBlocked, setIsHlsAutoplayBlocked] = useState(false);\n  const [hoverControlsVisible, setHoverControlsVisible] = useState({\n    seekForward: false,\n    pausePlay: false,\n    seekBackward: false,\n  });\n  const [isPaused, setIsPaused] = useState(false);\n  const [show, toggle] = useToggle(false);\n  const lastHlsUrl = usePrevious(hlsUrl);\n  const vanillaStore = useHMSVanillaStore();\n  const [controlsVisible, setControlsVisible] = useState(true);\n  const [isUserSelectedAuto, setIsUserSelectedAuto] = useState(true);\n  const [qualityDropDownOpen, setQualityDropDownOpen] = useState(false);\n  const controlsRef = useRef(null);\n  const controlsTimerRef = useRef();\n  const [seekProgress, setSeekProgress] = useState(false);\n  const isFullScreenSupported = screenfull.isEnabled;\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const showChat = !!elements?.chat;\n\n  const isMobile = useMedia(config.media.md);\n  const isLandscape = useIsLandscape();\n\n  const isFullScreen = useFullscreen(hlsViewRef, show, {\n    onClose: () => toggle(false),\n  });\n  const [showLoader, setShowLoader] = useState(false);\n\n  // FIXME: move this logic to player controller in next release\n  useEffect(() => {\n    /**\n     * @type {HTMLVideoElement} videoEl\n     */\n    const videoEl = videoRef.current;\n    const showLoader = () => setShowLoader(true);\n    const hideLoader = () => setShowLoader(false);\n    videoEl?.addEventListener(\"playing\", hideLoader);\n    videoEl?.addEventListener(\"waiting\", showLoader);\n    return () => {\n      videoEl?.removeEventListener(\"playing\", hideLoader);\n      videoEl?.removeEventListener(\"waiting\", showLoader);\n    };\n  }, []);\n  useEffect(() => {\n    if (streamEnded && lastHlsUrl !== hlsUrl) {\n      setStreamEnded(false);\n    }\n  }, [hlsUrl, streamEnded, lastHlsUrl]);\n\n  useEffect(() => {\n    if (!notification) return;\n    const toastID = toastMap?.[notification.data.id];\n    if (toastID) {\n      ToastManager.removeToast(toastMap[notification.data.id]);\n      delete toastMap[notification.data.id];\n    }\n  }, [notification]);\n\n  useEffect(() => {\n    const videoElem = videoRef.current;\n    const setStreamEndedCallback = () => {\n      setStreamEnded(true);\n      // no point keeping the callback attached once the streaming is ended\n      videoElem?.removeEventListener(\"ended\", setStreamEndedCallback);\n    };\n    videoElem?.addEventListener(\"ended\", setStreamEndedCallback);\n    return () => {\n      videoElem?.removeEventListener(\"ended\", setStreamEndedCallback);\n    };\n  }, [hlsUrl]);\n\n  const handleQuality = useCallback(\n    (quality) => {\n      if (hlsPlayer) {\n        setIsUserSelectedAuto(\n          quality.height?.toString().toLowerCase() === \"auto\"\n        );\n        hlsPlayer?.setLayer(quality);\n      }\n    },\n    [availableLayers] //eslint-disable-line\n  );\n  /**\n   * initialize HMSHLSPlayer and add event listeners.\n   */\n  useEffect(() => {\n    let videoEl = videoRef.current;\n    const manifestLoadedHandler = ({ layers }) => {\n      setAvailableLayers(layers);\n      setHasCaptions(hlsPlayer?.hasCaptions());\n    };\n    const layerUpdatedHandler = ({ layer }) => {\n      setCurrentSelectedQuality(layer);\n    };\n    const metadataLoadedHandler = ({ payload, ...rest }) => {\n      const parsePayload = (str) => {\n        try {\n          return JSON.parse(str);\n        } catch (e) {\n          return str;\n        }\n      };\n      const duration = rest.duration;\n      const parsedPayload = parsePayload(payload);\n      // check if poll happened\n      if (parsedPayload.startsWith(\"poll:\")) {\n        const pollId = parsedPayload.substr(parsedPayload.indexOf(\":\") + 1);\n        const poll = vanillaStore.getState(selectPollByID(pollId));\n        const pollStartedBy =\n          vanillaStore.getState(selectPeerNameByID(poll.startedBy)) ||\n          \"Participant\";\n        // launch poll\n        if (!toastMap[pollId]) {\n          const toastID = ToastManager.addToast({\n            title: `${pollStartedBy} started a ${poll.type}: ${poll.title}`,\n            action: (\n              <Button\n                onClick={() => {\n                  hmsActions.setAppData(APP_DATA.pollState, {\n                    [POLL_STATE.pollInView]: pollId,\n                    [POLL_STATE.view]: POLL_VIEWS.VOTE,\n                  });\n                  hmsActions.setAppData(\n                    APP_DATA.sidePane,\n                    SIDE_PANE_OPTIONS.POLLS\n                  );\n                }}\n                variant=\"standard\"\n                css={{\n                  backgroundColor: \"$surface_bright\",\n                  fontWeight: \"$semiBold\",\n                  color: \"$on_surface_high\",\n                  p: \"$xs $md\",\n                }}\n              >\n                {poll.type === \"quiz\" ? \"Answer\" : \"Vote\"}\n              </Button>\n            ),\n            duration: Infinity,\n          });\n          toastMap[pollId] = toastID;\n        }\n        return;\n      }\n      switch (parsedPayload.type) {\n        case EMOJI_REACTION_TYPE:\n          window.showFlyingEmoji?.({\n            emojiId: parsedPayload?.emojiId,\n            senderId: parsedPayload?.senderId,\n          });\n          break;\n        default: {\n          const toast = {\n            title: `Payload from timed Metadata ${parsedPayload}`,\n            duration: duration || 3000,\n          };\n          console.debug(\"Added toast \", JSON.stringify(toast));\n          ToastManager.addToast(toast);\n          break;\n        }\n      }\n    };\n    const handleError = (data) => {\n      console.error(\"[HLSView] error in hls\", `${data}`);\n    };\n    const handleNoLongerLive = ({ isLive }) => {\n      setIsVideoLive(isLive);\n    };\n\n    const playbackEventHandler = (data) => {\n      setIsPaused(data.state === HLSPlaybackState.paused);\n      setHoverControlsVisible({\n        ...hoverControlsVisible,\n        pausePlay: true,\n      });\n      setTimeout(() => {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          pausePlay: false,\n        });\n      }, 2000);\n    };\n    const captionEnabledEventHandler = (isCaptionEnabled) => {\n      setIsCaptionEnabled(isCaptionEnabled);\n    };\n\n    const handleAutoplayBlock = (data) => setIsHlsAutoplayBlocked(!!data);\n    if (videoEl && hlsUrl) {\n      hlsPlayer = new HMSHLSPlayer(hlsUrl, videoEl);\n      hlsPlayer.on(\n        HMSHLSPlayerEvents.SEEK_POS_BEHIND_LIVE_EDGE,\n        handleNoLongerLive\n      );\n      hlsPlayer.on(\n        HMSHLSPlayerEvents.TIMED_METADATA_LOADED,\n        metadataLoadedHandler\n      );\n      hlsPlayer.on(HMSHLSPlayerEvents.ERROR, handleError);\n      hlsPlayer.on(HMSHLSPlayerEvents.PLAYBACK_STATE, playbackEventHandler);\n      hlsPlayer.on(\n        HMSHLSPlayerEvents.CAPTION_ENABLED,\n        captionEnabledEventHandler\n      );\n      hlsPlayer.on(HMSHLSPlayerEvents.AUTOPLAY_BLOCKED, handleAutoplayBlock);\n\n      hlsPlayer.on(HMSHLSPlayerEvents.MANIFEST_LOADED, manifestLoadedHandler);\n      hlsPlayer.on(HMSHLSPlayerEvents.LAYER_UPDATED, layerUpdatedHandler);\n      return () => {\n        hlsPlayer.off(\n          HMSHLSPlayerEvents.SEEK_POS_BEHIND_LIVE_EDGE,\n          handleNoLongerLive\n        );\n        hlsPlayer.off(HMSHLSPlayerEvents.ERROR, handleError);\n        hlsPlayer.off(\n          HMSHLSPlayerEvents.TIMED_METADATA_LOADED,\n          metadataLoadedHandler\n        );\n        hlsPlayer.off(HMSHLSPlayerEvents.PLAYBACK_STATE, playbackEventHandler);\n        hlsPlayer.off(\n          HMSHLSPlayerEvents.CAPTION_ENABLED,\n          captionEnabledEventHandler\n        );\n\n        hlsPlayer.off(HMSHLSPlayerEvents.AUTOPLAY_BLOCKED, handleAutoplayBlock);\n        hlsPlayer.off(\n          HMSHLSPlayerEvents.MANIFEST_LOADED,\n          manifestLoadedHandler\n        );\n        hlsPlayer.off(HMSHLSPlayerEvents.LAYER_UPDATED, layerUpdatedHandler);\n        hlsPlayer.reset();\n      };\n    }\n  }, [hlsUrl, vanillaStore, hmsActions]);\n\n  /**\n   * initialize and subscribe to hlsState\n   */\n  useEffect(() => {\n    const onHLSStats = (state) => setHlsStatsState(state);\n    if (enablHlsStats) {\n      hlsPlayer?.on(HMSHLSPlayerEvents.STATS, onHLSStats);\n    } else {\n      hlsPlayer?.off(HMSHLSPlayerEvents.STATS, onHLSStats);\n    }\n    return () => {\n      hlsPlayer?.off(HMSHLSPlayerEvents.STATS, onHLSStats);\n    };\n  }, [enablHlsStats]);\n\n  const unblockAutoPlay = async () => {\n    try {\n      await hlsPlayer.play();\n      setIsHlsAutoplayBlocked(false);\n    } catch (error) {\n      console.error(\"Tried to unblock Autoplay failed with\", error.message);\n    }\n  };\n\n  const sfnOverlayClose = () => {\n    hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats);\n  };\n\n  useEffect(() => {\n    if (controlsVisible && isFullScreen && !qualityDropDownOpen) {\n      if (controlsTimerRef.current) {\n        clearTimeout(controlsTimerRef.current);\n      }\n    }\n    if (!isFullScreen && controlsTimerRef.current) {\n      clearTimeout(controlsTimerRef.current);\n    }\n    controlsTimerRef.current = setTimeout(() => {\n      if (!seekProgress) {\n        setControlsVisible(false);\n      }\n    }, 5000);\n    return () => {\n      if (controlsTimerRef.current) {\n        clearTimeout(controlsTimerRef.current);\n      }\n    };\n  }, [controlsVisible, isFullScreen, seekProgress, qualityDropDownOpen]);\n\n  const onSeekTo = useCallback(\n    (seek) => {\n      match({ isLandscape, isMobile, seek })\n        .with({ seek: -10, isMobile: false, isLandscape: false }, () => {\n          setHoverControlsVisible({\n            ...hoverControlsVisible,\n            seekBackward: true,\n          });\n          setTimeout(() => {\n            setHoverControlsVisible({\n              ...hoverControlsVisible,\n              seekBackward: false,\n            });\n          }, 1000);\n        })\n        .with({ seek: 10, isMobile: false, isLandscape: false }, () => {\n          setHoverControlsVisible({\n            ...hoverControlsVisible,\n            seekForward: true,\n          });\n          setTimeout(() => {\n            setHoverControlsVisible({\n              ...hoverControlsVisible,\n              seekForward: false,\n            });\n          }, 1000);\n        })\n        .otherwise(() => null);\n      hlsPlayer?.seekTo(videoRef.current?.currentTime + seek);\n    },\n    [hoverControlsVisible, isLandscape, isMobile]\n  );\n  const onDoubleClickHandler = useCallback(\n    (event) => {\n      if (\n        !(isMobile || isLandscape) ||\n        hlsState?.variants[0]?.playlist_type !== HLSPlaylistType.DVR\n      ) {\n        return;\n      }\n      const sidePercentage = (event.screenX * 100) / event.target.clientWidth;\n      // there is space for pause/unpause button\n      if (sidePercentage < 45) {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          seekBackward: true,\n        });\n        onSeekTo(-10);\n      } else {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          seekForward: true,\n        });\n        onSeekTo(10);\n      }\n      setTimeout(() => {\n        setHoverControlsVisible({\n          ...hoverControlsVisible,\n          seekForward: false,\n          seekBackward: false,\n        });\n      }, 1000);\n    },\n    [hlsState?.variants, hoverControlsVisible, isLandscape, isMobile, onSeekTo]\n  );\n\n  const onClickHandler = useCallback(async () => {\n    match({\n      isMobile,\n      isLandscape,\n      playlist_type: hlsState?.variants[0]?.playlist_type,\n    })\n      .with(\n        {\n          playlist_type: HLSPlaylistType.DVR,\n          isMobile: false,\n          isLandscape: false,\n        },\n        async () => {\n          if (isPaused) {\n            await hlsPlayer?.play();\n          } else {\n            hlsPlayer?.pause();\n          }\n        }\n      )\n      .when(\n        ({ isMobile, isLandscape }) => isMobile || isLandscape,\n        () => {\n          setControlsVisible((value) => !value);\n          if (controlsTimerRef.current) {\n            clearTimeout(controlsTimerRef.current);\n          }\n        }\n      )\n      .otherwise(() => null);\n  }, [hlsState?.variants, isLandscape, isMobile, isPaused]);\n\n  const onHoverHandler = useCallback(\n    (event) => {\n      event.preventDefault();\n      if (isMobile || isLandscape) {\n        return;\n      }\n      if (event.type === \"mouseenter\" || qualityDropDownOpen) {\n        setControlsVisible(true);\n        return;\n      }\n      if (event.type === \"mouseleave\" && !seekProgress) {\n        setControlsVisible(false);\n      } else if (!controlsVisible && event.type === \"mousemove\") {\n        setControlsVisible(true);\n        if (controlsTimerRef.current) {\n          clearTimeout(controlsTimerRef.current);\n        }\n      }\n    },\n    [controlsVisible, isLandscape, isMobile, qualityDropDownOpen, seekProgress]\n  );\n\n  const keyHandler = useKeyboardHandler(isPaused, hlsPlayer);\n\n  if (!hlsUrl || streamEnded) {\n    return (\n      <>\n        <ToggleChat />\n        {hlsViewRef.current && (isMobile || isLandscape) && (\n          <Box css={{ position: \"fixed\", left: \"$4\", top: \"$4\", zIndex: 11 }}>\n            <LeaveRoom\n              screenType=\"hls_live_streaming\"\n              container={hlsViewRef.current}\n            />\n          </Box>\n        )}\n        <Flex\n          key=\"hls-viewer\"\n          id={`hls-viewer-${themeType}`}\n          ref={hlsViewRef}\n          direction={isMobile || isLandscape ? \"column\" : \"row\"}\n          justify=\"center\"\n          css={{\n            flex: isLandscape ? \"2 1 0\" : \"1 1 0\",\n          }}\n        >\n          {streamEnded ? (\n            <WaitingView\n              icon={<ColoredHandIcon height={56} width={56} />}\n              title=\"Stream has ended\"\n              subtitle=\"Have a nice day!\"\n            />\n          ) : (\n            <WaitingView\n              icon={\n                <GoLiveIcon height={56} width={56} style={{ color: \"white\" }} />\n              }\n              title=\"Stream yet to start\"\n              subtitle=\"Sit back and relax\"\n            />\n          )}\n        </Flex>\n      </>\n    );\n  }\n  return (\n    <Flex\n      key=\"hls-viewer\"\n      id={`hls-viewer-${themeType}`}\n      ref={hlsViewRef}\n      direction={isMobile || isLandscape ? \"column\" : \"row\"}\n      justify=\"center\"\n      css={{\n        flex: isLandscape ? \"2 1 0\" : \"1 1 0\",\n        transition: \"all 0.3s ease-in-out\",\n        \"&:fullscreen\": {\n          \"& video\": {\n            height: \"unset !important\",\n          },\n        },\n      }}\n    >\n      {hlsViewRef.current && (isMobile || isLandscape) && (\n        <Box css={{ position: \"fixed\", left: \"$4\", top: \"$4\", zIndex: 11 }}>\n          <LeaveRoom\n            screenType=\"hls_live_streaming\"\n            container={hlsViewRef.current}\n          />\n        </Box>\n      )}\n\n      <HMSPlayerContext.Provider value={{ hlsPlayer }}>\n        {hlsStatsState?.url && enablHlsStats && !(isMobile || isLandscape) ? (\n          <HlsStatsOverlay\n            hlsStatsState={hlsStatsState}\n            onClose={sfnOverlayClose}\n          />\n        ) : null}\n        <Flex\n          id=\"hls-player-container\"\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            size: \"100%\",\n            margin: \"0 auto\",\n            \"@md\": {\n              height: \"auto\",\n            },\n            outline: \"none\",\n          }}\n          onKeyDown={async (event) => {\n            if (hlsState?.variants[0]?.playlist_type === HLSPlaylistType.DVR) {\n              await keyHandler(event);\n            }\n          }}\n          tabIndex=\"0\"\n        >\n          {!(isMobile || isLandscape) && (\n            <HLSAutoplayBlockedPrompt\n              open={isHlsAutoplayBlocked}\n              unblockAutoPlay={unblockAutoPlay}\n            />\n          )}\n          {showLoader && (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              css={{\n                position: \"absolute\",\n              }}\n            >\n              <Loading width={72} height={72} />\n            </Flex>\n          )}\n          <HMSVideoPlayer.Root\n            ref={videoRef}\n            onMouseEnter={onHoverHandler}\n            onMouseMove={onHoverHandler}\n            onMouseLeave={onHoverHandler}\n            onClick={onClickHandler}\n            onDoubleClick={(e) => {\n              onDoubleClickHandler(e);\n            }}\n          >\n            <>\n              {!(isMobile || isLandscape) && (\n                <Flex\n                  align=\"center\"\n                  justify=\"between\"\n                  css={{\n                    position: \"absolute\",\n                    bg: `${\n                      hoverControlsVisible.pausePlay ||\n                      hoverControlsVisible.seekBackward ||\n                      hoverControlsVisible.seekForward\n                        ? \"#00000066\"\n                        : \"\"\n                    }`,\n                    display: \"inline-flex\",\n                    gap: \"$2\",\n                    zIndex: 1,\n                    size: \"100%\",\n                  }}\n                >\n                  {!showLoader &&\n                    hlsState?.variants[0]?.playlist_type ===\n                      HLSPlaylistType.DVR && (\n                      <HMSVideoPlayer.PlayPauseSeekControls.Overlay\n                        isPaused={isPaused}\n                        showControls={controlsVisible}\n                        hoverControlsVisible={hoverControlsVisible}\n                      />\n                    )}\n                </Flex>\n              )}\n              {isMobile || isLandscape ? (\n                <>\n                  {!showLoader &&\n                    hlsState?.variants[0]?.playlist_type ===\n                      HLSPlaylistType.DVR && (\n                      <HMSVideoPlayer.PlayPauseSeekControls.Overlay\n                        isPaused={isPaused}\n                        showControls={controlsVisible}\n                        hoverControlsVisible={hoverControlsVisible}\n                      />\n                    )}\n                  <Flex\n                    ref={controlsRef}\n                    direction=\"column\"\n                    justify=\"start\"\n                    align=\"start\"\n                    css={{\n                      position: \"absolute\",\n                      top: \"0\",\n                      left: \"0\",\n                      width: \"100%\",\n                      flexShrink: 0,\n                      zIndex: 1,\n                      visibility: controlsVisible ? `` : `hidden`,\n                      opacity: controlsVisible ? `1` : \"0\",\n                    }}\n                  >\n                    <HMSVideoPlayer.Controls.Root\n                      css={{\n                        p: \"$4 $8\",\n                      }}\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      <HMSVideoPlayer.Controls.Right>\n                        {(isLandscape || (isMobile && isFullScreen)) &&\n                          showChat && (\n                            <ChatToggle\n                              onClick={() => {\n                                if (isFullScreen) {\n                                  toggle();\n                                }\n                                // toggle and closing fullscreen takes few ms, to make it synced we are calling settimeout\n                                setTimeout(() => {\n                                  toggleChat();\n                                }, 0);\n                              }}\n                            />\n                          )}\n                        {hasCaptions && !isHlsAutoplayBlocked && (\n                          <HLSCaptionSelector isEnabled={isCaptionEnabled} />\n                        )}\n                        {hlsViewRef.current &&\n                        availableLayers.length > 0 &&\n                        !isHlsAutoplayBlocked ? (\n                          <HLSQualitySelector\n                            layers={availableLayers}\n                            onOpenChange={setQualityDropDownOpen}\n                            open={qualityDropDownOpen}\n                            selection={currentSelectedQuality}\n                            onQualityChange={handleQuality}\n                            isAuto={isUserSelectedAuto}\n                            containerRef={hlsViewRef.current}\n                          />\n                        ) : null}\n                        <HLSAutoplayBlockedPrompt\n                          open={isHlsAutoplayBlocked}\n                          unblockAutoPlay={unblockAutoPlay}\n                        />\n                      </HMSVideoPlayer.Controls.Right>\n                    </HMSVideoPlayer.Controls.Root>\n                  </Flex>\n                </>\n              ) : null}\n              {controlsVisible && (\n                <Flex\n                  ref={controlsRef}\n                  direction={isMobile ? \"columnReverse\" : \"column\"}\n                  justify=\"end\"\n                  align=\"start\"\n                  css={{\n                    position: \"absolute\",\n                    bottom:\n                      isFullScreen &&\n                      hlsState?.variants[0]?.playlist_type ===\n                        HLSPlaylistType.DVR\n                        ? \"$8\"\n                        : \"0\",\n                    left: \"0\",\n                    zIndex: 1,\n                    background:\n                      isMobile || isLandscape\n                        ? \"\"\n                        : `linear-gradient(180deg, ${theme.colors.background_dim.value}00 29.46%, ${theme.colors.background_dim.value}A3 100%);`,\n                    width: \"100%\",\n                    pt: \"$8\",\n                    flexShrink: 0,\n                    transition: \"visibility 0s 0.5s, opacity 0.5s linear\",\n                  }}\n                >\n                  {hlsState?.variants[0]?.playlist_type ===\n                  HLSPlaylistType.DVR ? (\n                    <HMSVideoPlayer.Progress\n                      seekProgress={seekProgress}\n                      setSeekProgress={setSeekProgress}\n                    />\n                  ) : null}\n                  <HMSVideoPlayer.Controls.Root\n                    css={{\n                      p: \"$4 $8\",\n                    }}\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    <HMSVideoPlayer.Controls.Left>\n                      {!(isMobile || isLandscape) && (\n                        <>\n                          {hlsState?.variants[0]?.playlist_type ===\n                          HLSPlaylistType.DVR ? (\n                            <>\n                              <HMSVideoPlayer.PlayPauseSeekControls.Button\n                                isPaused={isPaused}\n                                onSeekTo={onSeekTo}\n                              />\n                              {!isVideoLive ? (\n                                <HMSVideoPlayer.Duration />\n                              ) : null}\n                            </>\n                          ) : null}\n                          <HMSVideoPlayer.Volume />\n                        </>\n                      )}\n                      <IconButton\n                        css={{ px: \"$2\" }}\n                        onClick={async (e) => {\n                          e.stopPropagation();\n                          await hlsPlayer?.seekToLivePosition();\n                          setIsVideoLive(true);\n                        }}\n                        key=\"jump-to-live_btn\"\n                        data-testid=\"jump-to-live_btn\"\n                      >\n                        <Tooltip\n                          title={isVideoLive ? \"Live\" : \"Go to Live\"}\n                          side=\"top\"\n                        >\n                          <Flex justify=\"center\" gap={2} align=\"center\">\n                            <Box\n                              css={{\n                                height: \"$4\",\n                                width: \"$4\",\n                                background: isVideoLive\n                                  ? \"$alert_error_default\"\n                                  : \"$on_primary_medium\",\n                                r: \"$1\",\n                              }}\n                            />\n                            <Text\n                              variant=\"$body1\"\n                              css={{\n                                c: isVideoLive\n                                  ? \"$on_surface_high\"\n                                  : \"$on_surface_medium\",\n                                fontWeight: \"$semiBold\",\n                              }}\n                            >\n                              {isVideoLive ? \"LIVE\" : \"GO LIVE\"}\n                            </Text>\n                          </Flex>\n                        </Tooltip>\n                      </IconButton>\n                      {(isMobile || isLandscape) &&\n                      !isVideoLive &&\n                      hlsState?.variants[0]?.playlist_type ===\n                        HLSPlaylistType.DVR ? (\n                        <HMSVideoPlayer.Duration />\n                      ) : null}\n                    </HMSVideoPlayer.Controls.Left>\n\n                    <HMSVideoPlayer.Controls.Right>\n                      {hasCaptions && !(isMobile || isLandscape) && (\n                        <HLSCaptionSelector isEnabled={isCaptionEnabled} />\n                      )}\n                      {availableLayers.length > 0 &&\n                      !(isMobile || isLandscape) ? (\n                        <HLSQualitySelector\n                          layers={availableLayers}\n                          onOpenChange={setQualityDropDownOpen}\n                          open={qualityDropDownOpen}\n                          selection={currentSelectedQuality}\n                          onQualityChange={handleQuality}\n                          isAuto={isUserSelectedAuto}\n                        />\n                      ) : null}\n                      {isFullScreenSupported ? (\n                        <FullScreenButton\n                          isFullScreen={isFullScreen}\n                          onToggle={toggle}\n                        />\n                      ) : null}\n                    </HMSVideoPlayer.Controls.Right>\n                  </HMSVideoPlayer.Controls.Root>\n                </Flex>\n              )}\n            </>\n          </HMSVideoPlayer.Root>\n        </Flex>\n      </HMSPlayerContext.Provider>\n      <ToggleChat isFullScreen={isFullScreen} />\n      {isMobile && !isFullScreen && <HLSViewTitle />}\n    </Flex>\n  );\n};\n\nexport default HLSView;\n", "import React, { Suspense, useEffect, useState } from \"react\";\nimport { ControlPosition } from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectIsConnectedToRoom,\n  selectIsLocalScreenShared,\n  selectLocalPeerRoleName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PeopleAddIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport FullPageProgress from \"../components/FullPageProgress\";\nimport { GridLayout } from \"../components/VideoLayouts/GridLayout\";\nimport { Box, Flex } from \"../../Layout\";\nimport { config } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport { EmbedView } from \"./EmbedView\";\n// @ts-ignore: No implicit Any\nimport { PDFView } from \"./PDFView\";\nimport SidePane from \"./SidePane\";\n// @ts-ignore: No implicit Any\nimport { WaitingView } from \"./WaitingView\";\nimport { CaptionsViewer } from \"../plugins/CaptionsViewer\";\n// @ts-ignore: No implicit Any\nimport {\n  usePDFConfig,\n  useUrlToEmbed,\n} from \"../components/AppData/useUISettings\";\nimport { useCloseScreenshareWhiteboard } from \"../components/hooks/useCloseScreenshareWhiteboard\";\nimport {\n  useLandscapeHLSStream,\n  useMobileHLSStream,\n  useWaitingRoomInfo,\n} from \"../common/hooks\";\nimport { SESSION_STORE_KEY } from \"../common/constants\";\n// @ts-ignore: No implicit Any\nconst HLSView = React.lazy(() => import(\"./HLSView\"));\n\nexport const VideoStreamingSection = ({\n  screenType,\n  elements,\n  hideControls = false,\n}: {\n  screenType: keyof ConferencingScreen;\n  elements:\n    | DefaultConferencingScreen_Elements\n    | HLSLiveStreamingScreen_Elements;\n  hideControls: boolean;\n}) => {\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const isSharingScreen = useHMSStore(selectIsLocalScreenShared);\n\n  const hmsActions = useHMSActions();\n  const urlToIframe = useUrlToEmbed();\n  const pdfAnnotatorActive = usePDFConfig();\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const isMobile = useMedia(config.media.md);\n  const [captionPosition, setCaptionPosition] = useState<ControlPosition>({\n    x: isMobile ? 0 : -200,\n    y: 0,\n  });\n  useCloseScreenshareWhiteboard();\n\n  const {\n    isNotAllowedToPublish,\n    isScreenOnlyPublishParams,\n    hasSubscribedRolePublishing,\n  } = useWaitingRoomInfo();\n\n  useEffect(() => {\n    if (!isConnected) {\n      return;\n    }\n    hmsActions.sessionStore.observe([\n      SESSION_STORE_KEY.PINNED_MESSAGES,\n      SESSION_STORE_KEY.SPOTLIGHT,\n      SESSION_STORE_KEY.CHAT_STATE,\n      SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST,\n      SESSION_STORE_KEY.CHAT_PEER_BLACKLIST,\n    ]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isConnected, hmsActions]);\n\n  if (!localPeerRoleName) {\n    // we don't know the role yet to decide how to render UI\n    return null;\n  }\n\n  return (\n    <Suspense fallback={<FullPageProgress />}>\n      <Flex\n        css={{\n          size: \"100%\",\n          position: \"relative\",\n          gap: isMobileHLSStream || isLandscapeHLSStream ? \"0\" : \"$4\",\n        }}\n        direction={match<Record<string, boolean>, \"row\" | \"column\">({\n          isLandscapeHLSStream,\n          isMobileHLSStream,\n        })\n          .with({ isLandscapeHLSStream: true }, () => \"row\")\n          .with({ isMobileHLSStream: true }, () => \"column\")\n          .otherwise(() => \"row\")}\n      >\n        {match({\n          screenType,\n          isNotAllowedToPublish,\n          isScreenOnlyPublishParams,\n          hasSubscribedRolePublishing,\n          isSharingScreen,\n          pdfAnnotatorActive,\n          urlToIframe,\n        })\n          .with(\n            {\n              screenType: \"hls_live_streaming\",\n            },\n            () => <HLSView />\n          )\n          .when(\n            ({ isNotAllowedToPublish, hasSubscribedRolePublishing }) =>\n              isNotAllowedToPublish && !hasSubscribedRolePublishing,\n            () => (\n              <WaitingView\n                title=\"Waiting for Host to join\"\n                subtitle=\"Sit back and relax\"\n                icon={\n                  <PeopleAddIcon\n                    width=\"56px\"\n                    height=\"56px\"\n                    style={{ color: \"white\" }}\n                  />\n                }\n              />\n            )\n          )\n          .when(\n            ({\n              isScreenOnlyPublishParams,\n              isSharingScreen,\n              hasSubscribedRolePublishing,\n            }) =>\n              isScreenOnlyPublishParams &&\n              !isSharingScreen &&\n              !hasSubscribedRolePublishing,\n            () => (\n              <WaitingView\n                title=\"Ready to present\"\n                subtitle=\"Select the Screenshare button to start presenting\"\n                icon={\n                  <ShareScreenIcon\n                    width=\"56px\"\n                    height=\"56px\"\n                    style={{ color: \"white\" }}\n                  />\n                }\n              />\n            )\n          )\n          .when(\n            ({ pdfAnnotatorActive }) => !!pdfAnnotatorActive,\n            () => <PDFView />\n          )\n          .when(\n            ({ urlToIframe }) => !!urlToIframe,\n            () => <EmbedView />\n          )\n\n          .otherwise(() => {\n            // @ts-ignore\n            return (\n              <GridLayout\n                {...(elements as DefaultConferencingScreen_Elements)\n                  ?.video_tile_layout?.grid}\n              />\n            );\n          })}\n        <CaptionsViewer\n          setDefaultPosition={setCaptionPosition}\n          defaultPosition={captionPosition}\n        />\n        <Box\n          css={{\n            flex: match({ isLandscapeHLSStream, isMobileHLSStream })\n              .with({ isLandscapeHLSStream: true }, () => \"1  1 0\")\n              .with({ isMobileHLSStream: true }, () => \"2 1 0\")\n              .otherwise(() => undefined),\n            position: \"relative\",\n            height: !isMobileHLSStream ? \"100%\" : undefined,\n            maxHeight: \"100%\",\n            \"&:empty\": { display: \"none\" },\n            overflowY: \"clip\",\n          }}\n        >\n          <SidePane\n            screenType={screenType}\n            // @ts-ignore\n            tileProps={\n              (elements as DefaultConferencingScreen_Elements)\n                ?.video_tile_layout?.grid\n            }\n            hideControls={hideControls}\n          />\n        </Box>\n      </Flex>\n    </Suspense>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { ChevronRightIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useSheetToggle } from \"../AppData/useSheet\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../AppData/useSidepane\";\nimport { SHEET_OPTIONS, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const RoomDetailsHeader = () => {\n  const { title, description } = useRoomLayoutHeader();\n  const isMobile = useMedia(cssConfig.media.md);\n  const clipLength = 30;\n  const toggleDetailsPane = useSidepaneToggle(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n  const toggleDetailsSheet = useSheetToggle(SHEET_OPTIONS.ROOM_DETAILS);\n\n  if ((!title && !description) || (isMobile && !title)) {\n    return null;\n  }\n\n  return (\n    <Flex\n      direction={isMobile ? \"row\" : \"column\"}\n      css={{ ml: \"$8\", alignItems: isMobile ? \"center\" : \"start\" }}\n    >\n      <Text\n        variant=\"sm\"\n        css={{ c: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n      >\n        {title}\n      </Text>\n      {!isMobile && (\n        <Flex align=\"end\" css={{ color: \"$on_surface_high\" }}>\n          <Text variant=\"xs\" css={{ c: \"$on_surface_medium\" }}>\n            {description.slice(0, clipLength)}\n          </Text>\n          {description.length > clipLength ? (\n            <span\n              style={{\n                fontWeight: \"600\",\n                fontSize: \"12px\",\n                cursor: \"pointer\",\n                lineHeight: \"1rem\",\n              }}\n              onClick={toggleDetailsPane}\n            >\n              &nbsp;...more\n            </span>\n          ) : null}\n        </Flex>\n      )}\n      {isMobile && description ? (\n        <Flex css={{ color: \"$on_surface_medium\" }}>\n          <ChevronRightIcon\n            height={16}\n            width={16}\n            onClick={toggleDetailsSheet}\n          />\n        </Flex>\n      ) : null}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport {\n  DeviceType,\n  selectIsLocalVideoEnabled,\n  selectLocalVideoTrackID,\n  selectVideoTrackByID,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BluetoothIcon,\n  CameraFlipIcon,\n  CheckIcon,\n  CrossIcon,\n  HeadphonesIcon,\n  SpeakerIcon,\n  TelePhoneIcon,\n} from \"@100mslive/react-icons\";\nimport { HorizontalDivider } from \"../../../Divider\";\nimport { Label } from \"../../../Label\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport IconButton from \"../../IconButton\";\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const CamaraFlipActions = () => {\n  const actions = useHMSActions();\n  const { allDevices } = useDevices();\n  const { videoInput } = allDevices;\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n\n  const videoTrackId = useHMSStore(selectLocalVideoTrackID);\n  const localVideoTrack = useHMSStore(selectVideoTrackByID(videoTrackId));\n  if (!videoInput || !videoInput?.length || !localVideoTrack?.facingMode) {\n    return null;\n  }\n  return (\n    <Box>\n      <IconButton\n        disabled={!isVideoOn}\n        onClick={async () => {\n          try {\n            await actions.switchCamera();\n          } catch (e) {\n            ToastManager.addToast({\n              title: `Error while flipping camera ${e.message || \"\"}`,\n              variant: \"error\",\n            });\n          }\n        }}\n      >\n        <CameraFlipIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\n// It will handle and show audio input devices in Mweb while audio output devices in desktop\nexport const AudioActions = () => {\n  const { allDevices, selectedDeviceIDs, updateDevice } = useDevices();\n\n  // don't show speaker selector where the API is not supported, and use\n  // a generic word(\"Audio\") for Mic. In some cases(Chrome Android for example) this changes both mic and speaker keeping them in sync.\n  const shouldShowAudioOutput = \"setSinkId\" in HTMLMediaElement.prototype;\n  const { audioInput, audioOutput } = allDevices;\n  let availableAudioDevices = audioInput;\n  let selectedAudio = selectedDeviceIDs.audioInput;\n  if (shouldShowAudioOutput) {\n    availableAudioDevices = audioOutput;\n    selectedAudio = selectedDeviceIDs.audioOutput;\n  }\n  const hmsActions = useHMSActions();\n  const audioFiltered = availableAudioDevices?.find((item) => !!item.label);\n  const currentSelection = availableAudioDevices?.find(\n    (item) => item.deviceId === selectedAudio\n  );\n\n  if (!audioFiltered) {\n    return null;\n  }\n  let AudioIcon = <SpeakerIcon />;\n  if (\n    currentSelection &&\n    currentSelection.label.toLowerCase().includes(\"bluetooth\")\n  ) {\n    AudioIcon = <BluetoothIcon />;\n  } else if (\n    currentSelection &&\n    currentSelection.label.toLowerCase().includes(\"wired\")\n  ) {\n    AudioIcon = <HeadphonesIcon />;\n  } else if (\n    currentSelection &&\n    currentSelection.label.toLowerCase().includes(\"earpiece\")\n  ) {\n    AudioIcon = <TelePhoneIcon />;\n  }\n  return (\n    <AudioSelectionSheet\n      audioDevices={availableAudioDevices}\n      audioSelected={selectedAudio}\n      onChange={async (deviceId) => {\n        try {\n          await updateDevice({\n            deviceId,\n            deviceType: shouldShowAudioOutput\n              ? DeviceType.audioOutput\n              : DeviceType.audioInput,\n          });\n        } catch (e) {\n          ToastManager.addToast({\n            title: `Error while changing audio device ${e.message || \"\"}`,\n            variant: \"error\",\n          });\n        }\n      }}\n    >\n      <Box\n        onClick={async () => {\n          // refresh device as `devicechange` listener won't work in mobile device\n          await hmsActions.refreshDevices();\n        }}\n      >\n        <IconButton>{AudioIcon} </IconButton>\n      </Box>\n    </AudioSelectionSheet>\n  );\n};\n\nconst AudioSelectionSheet = ({\n  audioDevices,\n  audioSelected,\n  onChange,\n  children,\n}) => {\n  return (\n    <Sheet.Root>\n      <Sheet.Trigger asChild>{children}</Sheet.Trigger>\n      <Sheet.Content>\n        <Sheet.Title css={{ py: \"$10\", px: \"$8\", alignItems: \"center\" }}>\n          <Flex direction=\"row\" justify=\"between\" css={{ w: \"100%\" }}>\n            <Text variant=\"h6\" css={{ display: \"flex\" }}>\n              Audio\n            </Text>\n            <Sheet.Close>\n              <IconButton as=\"div\" data-testid=\"dialog_cross_icon\">\n                <CrossIcon />\n              </IconButton>\n            </Sheet.Close>\n          </Flex>\n        </Sheet.Title>\n        <HorizontalDivider />\n        <Flex\n          direction=\"column\"\n          css={{\n            px: \"$8\",\n            maxHeight: \"80vh\",\n            overflowY: \"auto\",\n          }}\n        >\n          {audioDevices.map((audioDevice) => {\n            return (\n              <SelectWithLabel\n                key={audioDevice.deviceId}\n                label={audioDevice.label}\n                id={audioDevice.deviceId}\n                checked={audioDevice.deviceId === audioSelected}\n                onChange={() => onChange(audioDevice.deviceId)}\n              />\n            );\n          })}\n        </Flex>\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\n\nconst SelectWithLabel = ({ label, icon = <></>, checked, id, onChange }) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        my: \"$2\",\n        py: \"$8\",\n        w: \"100%\",\n        borderBottom: \"1px solid $border_default\",\n      }}\n      onClick={onChange}\n    >\n      <Label\n        htmlFor={id}\n        css={{\n          fontSize: \"$md\",\n          fontWeight: \"$semiBold\",\n          color: \"$on_surface_high\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"$8\",\n          flex: \"1 1 0\",\n        }}\n      >\n        {icon}\n        {label}\n      </Label>\n      {checked && <CheckIcon width={24} height={24} />}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectRoomState,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig, Flex } from \"../../..\";\n// @ts-ignore: No implicit any\nimport { Logo, SpeakerTag } from \"./HeaderComponents\";\n// @ts-ignore: No implicit any\nimport { RoomDetailsHeader } from \"./RoomDetailsHeader\";\nimport {\n  LiveStatus,\n  RecordingPauseStatus,\n  RecordingStatus,\n  StreamActions,\n} from \"./StreamActions\";\n// @ts-ignore: No implicit any\nimport { AudioActions, CamaraFlipActions } from \"./common\";\n\nexport const Header = () => {\n  const roomState = useHMSStore(selectRoomState);\n  const isMobile = useMedia(cssConfig.media.md);\n  // Header should be present only inside the call - not in preview, leave room states\n  if (roomState !== HMSRoomState.Connected) {\n    return <></>;\n  }\n  return (\n    <Flex\n      justify=\"between\"\n      align=\"center\"\n      css={{ position: \"relative\", height: \"100%\" }}\n    >\n      <Flex align=\"center\" gap=\"2\" css={{ position: \"absolute\", left: \"$10\" }}>\n        <Logo />\n        <RoomDetailsHeader />\n        <SpeakerTag />\n        {isMobile && (\n          <Flex align=\"center\" css={{ gap: \"$4\" }}>\n            <LiveStatus />\n            <RecordingStatus />\n            <RecordingPauseStatus />\n          </Flex>\n        )}\n      </Flex>\n      <Flex\n        align=\"center\"\n        css={{\n          position: \"absolute\",\n          right: \"$10\",\n          gap: \"$4\",\n        }}\n      >\n        <StreamActions />\n        {isMobile ? (\n          <>\n            <CamaraFlipActions />\n            <AudioActions />\n          </>\n        ) : null}\n      </Flex>\n    </Flex>\n  );\n};\n", "export { Header } from \"./Header\";\n", "import { useEffect } from \"react\";\nimport {\n  selectLocalPeerRoleName,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { useMyMetadata } from \"./hooks/useMetadata\";\n\nexport const PreviousRoleInMetadata = () => {\n  const vanillaStore = useHMSVanillaStore();\n  const { updateMetaData } = useMyMetadata();\n\n  useEffect(() => {\n    let previousRole = vanillaStore.getState(selectLocalPeerRoleName);\n    const unsubscribe = vanillaStore.subscribe((currentRole) => {\n      if (previousRole !== currentRole && currentRole) {\n        updateMetaData({ prevRole: previousRole });\n        previousRole = currentRole;\n      }\n    }, selectLocalPeerRoleName);\n    return unsubscribe;\n  }, [vanillaStore]); //eslint-disable-line\n  return null;\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  HMSRoomState,\n  selectAppData,\n  selectIsConnectedToRoom,\n  selectRoomState,\n  useAwayNotifications,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Footer } from \"./Footer/Footer\";\nimport { MoreSettings } from \"./MoreSettings/MoreSettings\";\nimport { HLSFailureModal } from \"./Notifications/HLSFailureModal\";\n// @ts-ignore: No implicit Any\nimport { ActivatedPIP } from \"./PIP/PIPComponent\";\n// @ts-ignore: No implicit Any\nimport { PictureInPicture } from \"./PIP/PIPManager\";\nimport { RoleChangeRequestModal } from \"./RoleChangeRequest/RoleChangeRequestModal\";\nimport { Box, Flex } from \"../../Layout\";\nimport { useHMSPrebuiltContext } from \"../AppContext\";\nimport { VideoStreamingSection } from \"../layouts/VideoStreamingSection\";\n// @ts-ignore: No implicit Any\nimport { EmojiReaction } from \"./EmojiReaction\";\nimport FullPageProgress from \"./FullPageProgress\";\nimport { Header } from \"./Header\";\nimport { PreviousRoleInMetadata } from \"./PreviousRoleInMetadata\";\nimport { RaiseHand } from \"./RaiseHand\";\nimport {\n  useRoomLayoutConferencingScreen,\n  useRoomLayoutPreviewScreen,\n} from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useAuthToken, useSetAppDataByKey } from \"./AppData/useUISettings\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../common/hooks\";\nimport { APP_DATA, isAndroid, isIOS, isIPadOS } from \"../common/constants\";\n\nexport const ConferenceScreen = () => {\n  const { userName, endpoints, onJoin: onJoinFunc } = useHMSPrebuiltContext();\n  const screenProps = useRoomLayoutConferencingScreen();\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const roomState = useHMSStore(selectRoomState);\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n  const [hideControls, setHideControls] = useState(false);\n  const dropdownList = useHMSStore(selectAppData(APP_DATA.dropdownList));\n  const authTokenInAppData = useAuthToken();\n  const headerRef = useRef<HTMLDivElement | null>(null);\n  const footerRef = useRef<HTMLDivElement | null>(null);\n  const isMobileDevice = isAndroid || isIOS || isIPadOS;\n  const dropdownListRef = useRef<string[]>();\n  const [isHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const { requestPermission } = useAwayNotifications();\n\n  // using it in hls stream to show action button when chat is disabled\n  const showChat = !!screenProps.elements?.chat;\n  const autoRoomJoined = useRef(isPreviewScreenEnabled);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const isMwebHLSStream = isMobileHLSStream || isLandscapeHLSStream;\n\n  const toggleControls = () => {\n    if (\n      dropdownListRef.current?.length === 0 &&\n      isMobileDevice &&\n      !isMwebHLSStream\n    ) {\n      setHideControls((value) => !value);\n    }\n  };\n\n  useEffect(() => {\n    let timeout: undefined | ReturnType<typeof setTimeout>;\n    dropdownListRef.current = dropdownList || [];\n    if (dropdownListRef.current && dropdownListRef.current.length === 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        if (dropdownListRef.current && dropdownListRef.current.length === 0) {\n          setHideControls(isMobileDevice);\n        }\n      }, 5000);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [dropdownList, hideControls, isMobileDevice]);\n\n  useEffect(() => {\n    if (\n      authTokenInAppData &&\n      !isConnectedToRoom &&\n      !isPreviewScreenEnabled &&\n      roomState !== HMSRoomState.Connecting &&\n      !autoRoomJoined.current\n    ) {\n      hmsActions\n        .join({\n          userName: userName || uuid(),\n          authToken: authTokenInAppData,\n          initEndpoint: endpoints?.init,\n          settings: {\n            isAudioMuted: !isPreviewScreenEnabled,\n            isVideoMuted: !isPreviewScreenEnabled,\n            speakerAutoSelectionBlacklist: [\"Yeti Stereo Microphone\"],\n          },\n        })\n        .then(() => requestPermission())\n        .catch(console.error);\n      autoRoomJoined.current = true;\n    }\n  }, [\n    authTokenInAppData,\n    endpoints?.init,\n    hmsActions,\n    isConnectedToRoom,\n    isPreviewScreenEnabled,\n    roomState,\n    userName,\n    requestPermission,\n  ]);\n\n  useEffect(() => {\n    onJoinFunc?.();\n    return () => {\n      PictureInPicture.stop().catch((error: unknown) =>\n        console.error(\"stopping pip\", (error as Error).message)\n      );\n    };\n  }, [onJoinFunc]);\n\n  if (\n    !isConnectedToRoom &&\n    ![HMSRoomState.Reconnecting, HMSRoomState.Disconnected].includes(roomState)\n  ) {\n    return (\n      <FullPageProgress\n        text={roomState === HMSRoomState.Connecting ? \"Joining...\" : \"\"}\n      />\n    );\n  }\n\n  const hideControlsForStreaming = isMwebHLSStream ? true : hideControls;\n\n  return (\n    <>\n      {isHLSStarted ? (\n        <Box\n          css={{\n            position: \"fixed\",\n            zIndex: 100,\n            w: \"100%\",\n            h: \"100%\",\n            left: 0,\n            top: 0,\n          }}\n        >\n          <FullPageProgress\n            text=\"Starting live stream...\"\n            css={{ opacity: 0.8, bg: \"$background_dim\" }}\n          />\n        </Box>\n      ) : null}\n      <Flex css={{ size: \"100%\", overflow: \"hidden\" }} direction=\"column\">\n        {!(screenProps.hideSections.includes(\"header\") || isMwebHLSStream) && (\n          <Box\n            ref={headerRef}\n            css={{\n              h: \"$18\",\n              transition: \"margin 0.3s ease-in-out\",\n              marginTop: hideControlsForStreaming\n                ? `-${headerRef.current?.clientHeight}px`\n                : \"none\",\n              \"@md\": {\n                h: \"$17\",\n              },\n            }}\n            data-testid=\"header\"\n          >\n            <Header />\n          </Box>\n        )}\n        <Box\n          css={{\n            w: \"100%\",\n            flex: \"1 1 0\",\n            minHeight: 0,\n            // @ts-ignore\n            px: (screenProps?.elements as DefaultConferencingScreen_Elements)\n              ?.video_tile_layout?.grid?.edge_to_edge\n              ? 0\n              : \"$10\", // TODO: padding to be controlled by section/element\n            paddingBottom: \"env(safe-area-inset-bottom)\",\n            \"@lg\": {\n              px: 0,\n            },\n          }}\n          id=\"conferencing\"\n          data-testid=\"conferencing\"\n          onClick={toggleControls}\n        >\n          {screenProps.elements ? (\n            <VideoStreamingSection\n              screenType={screenProps.screenType}\n              elements={screenProps.elements}\n              hideControls={hideControlsForStreaming}\n            />\n          ) : null}\n        </Box>\n        {!screenProps.hideSections.includes(\"footer\") &&\n          screenProps.elements &&\n          !isMwebHLSStream && (\n            <Box\n              ref={footerRef}\n              css={{\n                flexShrink: 0,\n                maxHeight: \"$24\",\n                transition: \"margin 0.3s ease-in-out\",\n                bg: \"$background_dim\",\n                marginBottom: hideControlsForStreaming\n                  ? `-${footerRef.current?.clientHeight}px`\n                  : undefined,\n                \"@md\": {\n                  maxHeight: \"unset\",\n                  bg:\n                    screenProps.screenType === \"hls_live_streaming\"\n                      ? \"transparent\"\n                      : \"$background_dim\",\n                },\n              }}\n              data-testid=\"footer\"\n            >\n              <Footer\n                elements={screenProps.elements}\n                screenType={screenProps.screenType}\n              />\n            </Box>\n          )}\n        {isMwebHLSStream && !showChat && (\n          <Flex\n            css={{\n              alignItems: \"center\",\n              pr: \"$4\",\n              pb: \"$4\",\n              position: \"relative\",\n            }}\n            justify=\"end\"\n            gap=\"2\"\n          >\n            <RaiseHand />\n            <MoreSettings\n              elements={screenProps.elements}\n              screenType={screenProps.screenType}\n            />\n            <Box\n              css={{\n                position: \"absolute\",\n                bottom: \"100%\",\n                mb: \"$4\",\n              }}\n            >\n              <EmojiReaction />\n            </Box>\n          </Flex>\n        )}\n        <RoleChangeRequestModal />\n        <HLSFailureModal />\n        <ActivatedPIP />\n        <PreviousRoleInMetadata />\n      </Flex>\n    </>\n  );\n};\n", "import React, { Component } from \"react\";\nimport { CopyIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { Tooltip } from \"../../Tooltip\";\n\nexport class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null, isErrorCopied: false };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(`react error boundary - ${error.message}`, error, errorInfo);\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error?.message,\n      errorInfo: errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            size: \"100%\",\n            height: \"100vh\",\n            width: \"100%\",\n            color: \"$on_primary_high\",\n            backgroundColor: \"$background_default\",\n          }}\n        >\n          <Box\n            css={{\n              position: \"relative\",\n              overflow: \"hidden\",\n              r: \"$3\",\n              height: \"100%\",\n              width: \"100%\",\n            }}\n          >\n            <Flex\n              direction=\"column\"\n              css={{\n                position: \"absolute\",\n                size: \"100%\",\n                top: \"33.33%\",\n                left: 0,\n              }}\n            >\n              <div style={{ margin: \"1.5rem\", width: \"100%\" }}>\n                <Text>Something went wrong</Text>\n                <Text>Message: ${this.state.error}</Text>\n                <br />\n                Please reload to see if it works. If you think this is a mistake\n                on our side, please reach out to us on\n                <a\n                  href=\"https://discord.com/invite/kGdmszyzq2\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              </div>\n              <Flex>\n                <Tooltip title=\"Reload page\">\n                  <Button\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                    css={{ mx: \"$8\" }}\n                    data-testid=\"join_again_btn\"\n                  >\n                    Reload\n                  </Button>\n                </Tooltip>\n                <Tooltip title=\"Copy error details to clipboard\">\n                  <Button\n                    onClick={() => {\n                      const { error, errorInfo } = this.state;\n                      navigator.clipboard.writeText(\n                        JSON.stringify({\n                          error,\n                          errorInfo,\n                        })\n                      );\n                      this.setState({ isErrorCopied: true });\n                    }}\n                    css={{ mx: \"$8\" }}\n                    data-testid=\"join_again_btn\"\n                  >\n                    <CopyIcon />{\" \"}\n                    {this.state.isErrorCopied ? \"Copied\" : \"Copy Details\"}\n                  </Button>\n                </Tooltip>\n              </Flex>\n\n              <details style={{ whiteSpace: \"pre-wrap\", margin: \"1.5rem\" }}>\n                <Text>{this.state.error && this.state.error.toString()}</Text>\n                <br />\n                <Text>{JSON.stringify(this.state.errorInfo)}</Text>\n              </details>\n            </Flex>\n          </Box>\n        </Flex>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n", "import { useEffect } from \"react\";\nimport { selectRoomID, useHMSStore } from \"@100mslive/react-sdk\";\n\nexport class FeatureFlags {\n  static enableTranscription =\n    process.env.REACT_APP_ENABLE_TRANSCRIPTION === \"true\";\n  static enableStatsForNerds =\n    process.env.REACT_APP_ENABLE_STATS_FOR_NERDS === \"true\";\n  static enableWhiteboard =\n    process.env.REACT_APP_ENABLE_WHITEBOARD &&\n    process.env.REACT_APP_PUSHER_APP_KEY &&\n    process.env.REACT_APP_PUSHER_AUTHENDPOINT;\n\n  static init(roomId) {\n    if (!window.HMS) {\n      window.HMS = {};\n    }\n    // some extra config to hls js to bring down latency\n    window.HMS.OPTIMISE_HLS_LATENCY = false;\n    // ask permissions in preview even if role doesn't have it\n    window.HMS.ALWAYS_REQUEST_PERMISSIONS = false;\n    window.HMS.SHOW_NS = process.env.REACT_APP_ENV !== \"prod\";\n\n    this.enableTranscription =\n      process.env.REACT_APP_TRANSCRIPTION_ROOM_ID === roomId;\n  }\n\n  static showNS() {\n    return window.HMS.SHOW_NS;\n  }\n\n  static optimiseHLSLatency() {\n    return window.HMS.OPTIMISE_HLS_LATENCY;\n  }\n\n  static alwaysRequestPermissions() {\n    return window.HMS.ALWAYS_REQUEST_PERMISSIONS;\n  }\n}\n\nexport function FeatureFlagsInit() {\n  const roomId = useHMSStore(selectRoomID);\n  useEffect(() => {\n    if (roomId) {\n      FeatureFlags.init(roomId);\n    }\n  }, [roomId]);\n  return null;\n}\n", "import React, { useEffect } from \"react\";\nimport { useTheme } from \"../../../\";\nimport { FeatureFlagsInit } from \"../../services/FeatureFlags\";\n\nconst Init = () => {\n  const { toggleTheme } = useTheme();\n\n  useEffect(() => {\n    window.toggleUiTheme = toggleTheme;\n  }, [toggleTheme]);\n\n  useEffect(() => {\n    function resetHeight() {\n      // reset the body height to that of the inner browser\n      // The window.innerHeight property returns integer values. When the actual height is in decimal, window.innerHeight returns a larger value than the actual value. This can cause a scrollbar to appear on some screens.\n      // Hence using window.visualViewport.height which returns a decimal value.\n      document.body.style.height = `${\n        window.visualViewport?.height || window.innerHeight\n      }px`;\n    }\n    // reset the height whenever the window's resized\n    window.addEventListener(\"resize\", resetHeight);\n    // called to initially set the height.\n    resetHeight();\n    return () => {\n      window.removeEventListener(\"resize\", resetHeight);\n    };\n  }, []);\n\n  return <FeatureFlagsInit />;\n};\n\nexport { Init };\n", "import { useEffect } from \"react\";\nimport {\n  selectAppData,\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n  useHMSActions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { APP_DATA, isMacOS } from \"../../common/constants\";\n\nlet isEvenListenersAttached = false;\nexport class KeyboardInputManager {\n  #actions;\n  #store;\n  constructor(store, actions) {\n    this.#actions = actions;\n    this.#store = store;\n  }\n  #toggleAudio = async () => {\n    const enabled = this.#store.getState(selectIsLocalAudioEnabled);\n    await this.#actions.setLocalAudioEnabled(!enabled);\n  };\n\n  #toggleVideo = async () => {\n    const enabled = this.#store.getState(selectIsLocalVideoEnabled);\n    await this.#actions.setLocalVideoEnabled(!enabled);\n  };\n\n  #hideSidepane = () => {\n    if (this.#store.getState(selectAppData(APP_DATA.sidePane))) {\n      this.#actions.setAppData(APP_DATA.sidePane, \"\");\n    }\n  };\n\n  #toggleStatsForNerds = () => {\n    const uiSettings = this.#store.getState(selectAppData(APP_DATA.uiSettings));\n    const statsEnabled = uiSettings.showStatsOnTiles;\n    this.#actions.setAppData(APP_DATA.uiSettings, {\n      ...uiSettings,\n      showStatsOnTiles: !statsEnabled,\n    });\n  };\n\n  #toggleHlsStats = () => {\n    this.#actions.setAppData(\n      APP_DATA.hlsStats,\n      !this.#store.getState(selectAppData(APP_DATA.hlsStats))\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  #keyDownHandler = async (e) => {\n    const CONTROL_KEY = isMacOS ? e.metaKey : e.ctrlKey;\n    const D_KEY = e.key === \"d\" || e.key === \"D\";\n    const E_KEY = e.key === \"e\" || e.key === \"E\";\n    const SNF_KEY = e.key === \"]\" || e.key === \"}\";\n\n    const SHORTCUT_TOGGLE_AUDIO = CONTROL_KEY && D_KEY;\n    const SHORTCUT_TOGGLE_VIDEO = CONTROL_KEY && E_KEY;\n    const SHORTCUT_SIDEPANE_CLOSE = e.key === \"Escape\";\n    const SHORTCUT_STATS_FOR_NERDS = CONTROL_KEY && SNF_KEY;\n\n    if (SHORTCUT_TOGGLE_AUDIO) {\n      e.preventDefault();\n      await this.#toggleAudio();\n    } else if (SHORTCUT_TOGGLE_VIDEO) {\n      e.preventDefault();\n      await this.#toggleVideo();\n    } else if (SHORTCUT_SIDEPANE_CLOSE) {\n      this.#hideSidepane();\n    } else if (SHORTCUT_STATS_FOR_NERDS) {\n      this.#toggleHlsStats();\n      this.#toggleStatsForNerds();\n    }\n  };\n\n  #bind = () => {\n    document.addEventListener(\"keydown\", this.#keyDownHandler, false);\n  };\n\n  #unbind = () => {\n    document.removeEventListener(\"keydown\", this.#keyDownHandler, false);\n  };\n\n  bindAllShortcuts = () => {\n    if (!isEvenListenersAttached) {\n      this.#bind();\n      isEvenListenersAttached = true;\n    }\n  };\n\n  unbindAllShortcuts = () => {\n    if (isEvenListenersAttached) {\n      this.#unbind();\n      isEvenListenersAttached = false;\n    }\n  };\n}\n\nexport const KeyboardHandler = () => {\n  const store = useHMSVanillaStore();\n  const actions = useHMSActions();\n\n  useEffect(() => {\n    const keyboardManager = new KeyboardInputManager(store, actions);\n    keyboardManager.bindAllShortcuts();\n    return keyboardManager.unbindAllShortcuts;\n  }, [actions, store]);\n  return null;\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Rating } from \"@100mslive/types-prebuilt/elements/feedback\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CheckIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Checkbox } from \"../../../Checkbox\";\nimport { Label } from \"../../../Label\";\nimport { Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { TextArea } from \"../../../TextArea\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\nimport { useRoomLayoutLeaveScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const FEEBACK_INDEX = {\n  THANK_YOU: -10,\n  INIT: -1,\n};\nexport const FeedbackModal = ({\n  ratings,\n  index,\n  setIndex,\n}: {\n  ratings: Rating[];\n  index: number;\n  setIndex: (index: number) => void;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const onOpenChange = () => {\n    setIndex(FEEBACK_INDEX.INIT);\n  };\n  const avoidDefaultDomBehavior = (e: Event) => {\n    e.preventDefault();\n  };\n  if (isMobile) {\n    return (\n      <Sheet.Root\n        open={index !== FEEBACK_INDEX.INIT}\n        onOpenChange={onOpenChange}\n      >\n        <Sheet.Content\n          css={{ bg: \"$surface_dim\", p: \"$10\", overflowY: \"auto\" }}\n          onPointerDownOutside={avoidDefaultDomBehavior}\n          onInteractOutside={avoidDefaultDomBehavior}\n        >\n          <FeedbackContent\n            ratings={ratings}\n            indexSelected={index}\n            setIndex={setIndex}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n  return (\n    <Dialog.Root\n      open={index !== FEEBACK_INDEX.INIT}\n      onOpenChange={onOpenChange}\n    >\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ bg: \"$surface_dim\", width: \"528px\", p: \"$12\" }}\n          onPointerDownOutside={avoidDefaultDomBehavior}\n          onInteractOutside={avoidDefaultDomBehavior}\n        >\n          <FeedbackContent\n            ratings={ratings}\n            indexSelected={index}\n            setIndex={setIndex}\n          />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nexport const FeedbackContent = ({\n  ratings,\n  indexSelected,\n  setIndex,\n}: {\n  ratings: Rating[];\n  indexSelected: number;\n  setIndex: (index: number) => void;\n}) => {\n  const { feedback } = useRoomLayoutLeaveScreen();\n  const { endpoints } = useHMSPrebuiltContext();\n  const isMobile = useMedia(cssConfig.media.md);\n  const hmsActions = useHMSActions();\n  const [comment, setComment] = useState(\"\");\n  const [selectedReasons, setSelectedReasons] = useState(new Set<number>());\n  const handleCheckedChange = (checked: boolean | string, index: number) => {\n    const newSelected = new Set(selectedReasons);\n    if (checked) {\n      newSelected.add(index);\n    } else {\n      newSelected.delete(index);\n    }\n    setSelectedReasons(newSelected);\n  };\n  const submitFeedback = async () => {\n    if (indexSelected < 0 || ratings.length <= indexSelected) {\n      return;\n    }\n    try {\n      const reasons = [...selectedReasons].map(\n        (value: number) => ratings[indexSelected]?.reasons?.[value] || \"\"\n      );\n      await hmsActions.submitSessionFeedback(\n        {\n          question: `${feedback?.title} | ${\n            ratings[indexSelected].question || \"\"\n          }`,\n          rating: ratings[indexSelected].value || 1,\n          min_rating: 1,\n          max_rating: ratings.length,\n          reasons: selectedReasons.size === 0 ? [] : reasons,\n          comment: comment,\n        },\n        endpoints?.event\n      );\n    } catch (e) {\n      console.error(e);\n    }\n    // always submit and take it to thankyou page\n    setIndex(FEEBACK_INDEX.THANK_YOU);\n  };\n  return (\n    <Flex\n      css={{\n        p: indexSelected === FEEBACK_INDEX.INIT ? \"$12 !important\" : \"0\",\n        bg: \"$surface_dim\",\n        r: \"$3\",\n        gap: \"$10\",\n      }}\n      direction=\"column\"\n    >\n      <FeedbackHeader\n        ratings={ratings}\n        indexSelected={indexSelected}\n        onEmojiClicked={(value: number) => {\n          setSelectedReasons(new Set<number>());\n          setIndex(value);\n        }}\n      />\n      <FeedbackForm\n        rating={ratings[indexSelected]}\n        comment={comment}\n        setComment={setComment}\n        selectedReasons={selectedReasons}\n        handleCheckedChange={handleCheckedChange}\n      />\n      <Button\n        type=\"submit\"\n        icon\n        css={{\n          alignSelf: isMobile ? \"\" : \"end\",\n        }}\n        onClick={submitFeedback}\n      >\n        {feedback?.submit_btn_label || \"Submit Feedback\"}\n      </Button>\n    </Flex>\n  );\n};\nexport const FeedbackHeader = ({\n  onEmojiClicked,\n  ratings,\n  indexSelected = FEEBACK_INDEX.INIT,\n}: {\n  onEmojiClicked: (index: number) => void;\n  ratings: Rating[];\n  indexSelected?: number;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const { feedback } = useRoomLayoutLeaveScreen();\n  return (\n    <>\n      <Flex align=\"center\">\n        <Flex\n          direction=\"column\"\n          css={{\n            flex: \"1 1 0\",\n          }}\n        >\n          <Text\n            variant={isMobile ? \"h6\" : \"h5\"}\n            css={{\n              c: \"$on_surface_high\",\n              fontStyle: \"normal\",\n            }}\n          >\n            {feedback?.title || \"How was your experience?\"}\n          </Text>\n          <Text\n            variant={isMobile ? \"body2\" : \"body1\"}\n            css={{\n              c: \"$on_surface_medium\",\n              opacity: 0.9,\n              fontWeight: \"$regular\",\n            }}\n          >\n            {feedback?.sub_title || \"Your answers help us improve the quality.\"}\n          </Text>\n        </Flex>\n        {indexSelected !== FEEBACK_INDEX.INIT ? (\n          <CrossIcon\n            width=\"24px\"\n            height=\"24px\"\n            color=\"white\"\n            onClick={() => onEmojiClicked(FEEBACK_INDEX.INIT)}\n          />\n        ) : null}\n      </Flex>\n      <Flex\n        justify=\"between\"\n        css={{\n          gap: \"$17\",\n          c: \"$on_surface_high\",\n          \"@md\": {\n            gap: \"0\",\n          },\n        }}\n      >\n        {ratings.map((element, index) => {\n          return (\n            <Flex\n              align=\"center\"\n              direction=\"column\"\n              css={{\n                c:\n                  indexSelected === index ||\n                  indexSelected === FEEBACK_INDEX.INIT\n                    ? \"$on_surface_high\"\n                    : \"$on_surface_default\",\n                gap: \"$4\",\n              }}\n              onClick={() => onEmojiClicked(index)}\n              key={`${index}`}\n            >\n              <Text\n                css={{\n                  fontWeight: \"$semiBold\",\n                  fontSize: \"$h4\",\n                  pb: \"$1\",\n                  cursor: \"pointer\",\n                  opacity:\n                    indexSelected === index ||\n                    indexSelected === FEEBACK_INDEX.INIT\n                      ? 1\n                      : 0.2,\n                  \"@md\": {\n                    fontSize: \"$h5\",\n                  },\n                }}\n              >\n                {element.emoji}\n              </Text>\n              <Text\n                variant={isMobile ? \"body2\" : \"body1\"}\n                css={{\n                  c:\n                    indexSelected === index ||\n                    indexSelected === FEEBACK_INDEX.INIT\n                      ? \"$on_surface_medium\"\n                      : \"$on_surface_low\",\n                  fontWeight: \"$regular\",\n                }}\n              >\n                {element.label}\n              </Text>\n            </Flex>\n          );\n        })}\n      </Flex>\n    </>\n  );\n};\nexport const FeedbackForm = ({\n  rating,\n  comment,\n  setComment,\n  selectedReasons,\n  handleCheckedChange,\n}: {\n  rating: Rating;\n  comment: string;\n  setComment: (value: string) => void;\n  selectedReasons: Set<number>;\n  handleCheckedChange: (checked: string | boolean, index: number) => void;\n}) => {\n  const { feedback } = useRoomLayoutLeaveScreen();\n  return (\n    <>\n      {rating.reasons && rating.reasons.length > 0 && (\n        <Flex\n          direction=\"column\"\n          css={{\n            gap: \"$4\",\n          }}\n        >\n          <Text\n            variant=\"sub2\"\n            css={{\n              c: \"$on_surface_high\",\n              fontWeight: \"$semiBold\",\n              fontSize: \"$sm\",\n              px: \"$2\",\n            }}\n          >\n            {rating.question || \"What do you like/dislike here?\"}\n          </Text>\n          <Flex\n            css={{\n              alignItems: \"flex-start\",\n              alignSelf: \"stretch\",\n              flexWrap: \"wrap\",\n              gap: \"$6\",\n              flex: \"1 1 calc(25% - 12px)\",\n              \"@md\": {\n                flex: \"1 1 calc(50% - 12px)\",\n              },\n              \"@sm\": {\n                flex: \"1 1 100%\",\n              },\n            }}\n          >\n            {rating.reasons.map((option: string, index: number) => {\n              return (\n                <Flex\n                  align=\"center\"\n                  gap=\"2\"\n                  key={index}\n                  css={{\n                    border: \"1px solid $border_bright\",\n                    r: \"$1\",\n                    p: \"$6\",\n                  }}\n                >\n                  <Checkbox.Root\n                    id={`${option}-${index}`}\n                    checked={selectedReasons.has(index)}\n                    onCheckedChange={(checked) =>\n                      handleCheckedChange(checked, index)\n                    }\n                    css={{\n                      cursor: \"pointer\",\n                      flexShrink: 0,\n                      bg: \"$on_secondary_low\",\n                      border: \"1px solid $border_bright\",\n                    }}\n                  >\n                    <Checkbox.Indicator>\n                      <CheckIcon width={12} height={12} />\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n                  <Label\n                    htmlFor={`${option}-${index}`}\n                    css={{\n                      color: \"$on_surface_high\",\n                      fontSize: \"$sm\",\n                      fontWeight: \"$regular\",\n                      lineHeight: \"20px\" /* 142.857% */,\n                    }}\n                  >\n                    {option}\n                  </Label>\n                </Flex>\n              );\n            })}\n          </Flex>\n        </Flex>\n      )}\n      {feedback?.comment && (\n        <Flex\n          direction=\"column\"\n          css={{\n            gap: \"$4\",\n          }}\n        >\n          <Text\n            variant=\"body2\"\n            css={{\n              c: \"$on_surface_high\",\n              fontWeight: \"$regular\",\n              fontSize: \"$sm\",\n            }}\n          >\n            {feedback?.comment.label || \"Additional comments (optional)\"}\n          </Text>\n          <TextArea\n            maxLength={1024}\n            placeholder={feedback?.comment.placeholder || \"Tell us more...\"}\n            css={{\n              backgroundColor: \"$surface_bright\",\n              border: \"1px solid $border_bright\",\n              resize: \"none\",\n              height: \"$36\",\n              display: \"flex\",\n            }}\n            value={comment}\n            onChange={(event) => setComment(event.target.value.trimStart())}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { UserMusicIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\n\nexport const ThankyouView = () => {\n  const isMobile = useMedia(cssConfig.media.md);\n  return (\n    <Flex\n      direction={isMobile ? \"column\" : \"row\"}\n      align=\"center\"\n      css={{\n        gap: \"$10\",\n        border: \"1px solid $border_default\",\n        borderRadius: !isMobile ? \"$3\" : \"$3 $3 0 0\",\n        bg: \"$surface_dim\",\n        w: !isMobile ? \"528px\" : \"410px\",\n        p: \"$12\",\n        pb: isMobile ? \"$16\" : \"$12\",\n        \"@md\": {\n          position: \"absolute\",\n          bottom: \"0\",\n        },\n      }}\n    >\n      <UserMusicIcon width=\"64px\" height=\"64px\" />\n      <Flex direction=\"column\" align={isMobile ? \"center\" : \"start\"}>\n        <Text variant=\"h5\">Thank you for your feedback</Text>\n        <Text\n          variant=\"body1\"\n          css={{\n            fontWeight: \"$regular\",\n            fontSize: \"$md\",\n            opacity: \"0.9\",\n          }}\n        >\n          Your answers help us improve.\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Flex } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { FEEBACK_INDEX, FeedbackHeader, FeedbackModal } from \"./FeedbackForm\";\nimport { ThankyouView } from \"./ThankyouView\";\nimport { useRoomLayoutLeaveScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const Feedback = () => {\n  const { feedback } = useRoomLayoutLeaveScreen();\n  const [index, setIndex] = useState(FEEBACK_INDEX.INIT);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (!feedback) {\n    return null;\n  }\n  const { ratings } = feedback;\n  if (!ratings) {\n    return null;\n  }\n  ratings.sort((a, b) => {\n    if (!a.value || !b.value) {\n      return 0;\n    }\n    return a.value - b.value;\n  });\n  // TO show thank ypu page\n  if (index === FEEBACK_INDEX.THANK_YOU) {\n    return (\n      <Flex\n        justify=\"center\"\n        css={{\n          pt: \"$16\",\n        }}\n      >\n        <ThankyouView />\n      </Flex>\n    );\n  }\n  return (\n    <Flex\n      justify=\"center\"\n      css={{\n        pt: \"$16\",\n        w: isMobile ? \"100%\" : \"528px\",\n      }}\n    >\n      {index === FEEBACK_INDEX.INIT ? (\n        <Flex\n          css={{\n            p: isMobile ? \"$10\" : \"$12\",\n            border: \"1px solid $border_default\",\n            bg: \"$surface_dim\",\n            borderRadius: !isMobile ? \"$3\" : \"$3 $3 0 0\",\n            gap: \"$10\",\n            \"@md\": {\n              position: \"absolute\",\n              bottom: \"0\",\n              w: \"100%\",\n            },\n          }}\n          direction=\"column\"\n        >\n          <FeedbackHeader ratings={ratings} onEmojiClicked={setIndex} />\n        </Flex>\n      ) : (\n        <FeedbackModal ratings={ratings} index={index} setIndex={setIndex} />\n      )}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { ExitIcon } from \"@100mslive/react-icons\";\nimport { Feedback } from \"./EndCallFeedback/Feedback\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { Button } from \"../../Button\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { useHMSAppStateContext } from \"../AppStateContext\";\nimport { Header } from \"./Header\";\n// @ts-ignore: No implicit Any\nimport {\n  defaultPreviewPreference,\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"./hooks/useUserPreferences\";\nimport { textEllipsis } from \"../../utils\";\n\nexport const LeaveScreen = () => {\n  const { rejoin } = useHMSAppStateContext();\n  const [previewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW,\n    defaultPreviewPreference\n  );\n  return (\n    <Flex direction=\"column\" css={{ size: \"100%\" }}>\n      <Box css={{ h: \"$18\", \"@md\": { h: \"$17\" } }} data-testid=\"header\">\n        <Header />\n      </Box>\n      <Flex\n        justify=\"center\"\n        direction=\"column\"\n        align=\"center\"\n        css={{ bg: \"$background_dim\", flex: \"1 1 0\", position: \"relative\" }}\n      >\n        <Text variant=\"h2\" css={{ fontWeight: \"$semiBold\" }}>\n          \uD83D\uDC4B\n        </Text>\n        <Text\n          variant=\"h4\"\n          css={{\n            color: \"$on_surface_high\",\n            fontWeight: \"$semiBold\",\n            mt: \"$12\",\n          }}\n        >\n          You left the room\n        </Text>\n        <Text\n          variant=\"body1\"\n          css={{\n            color: \"$on_surface_medium\",\n            mt: \"$8\",\n            fontWeight: \"$regular\",\n            textAlign: \"center\",\n          }}\n        >\n          Have a nice day\n          {previewPreference.name && (\n            <Box as=\"span\" css={{ ...textEllipsis(100) }}>\n              , {previewPreference.name}\n            </Box>\n          )}\n          !\n        </Text>\n        <Flex css={{ mt: \"$14\", gap: \"$10\", alignItems: \"center\" }}>\n          <Text\n            variant=\"body1\"\n            css={{ color: \"$on_surface_medium\", fontWeight: \"$regular\" }}\n          >\n            Left by mistake?\n          </Text>\n          <Button\n            onClick={() => {\n              rejoin();\n              ToastManager.clearAllToast();\n            }}\n            data-testid=\"join_again_btn\"\n          >\n            <ExitIcon />\n            <Text css={{ ml: \"$3\", fontWeight: \"$semiBold\", color: \"inherit\" }}>\n              Rejoin\n            </Text>\n          </Button>\n        </Flex>\n        <Feedback />\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { match, P } from \"ts-pattern\";\nimport { RefreshIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { useLandscapeHLSStream } from \"../common/hooks\";\n// @ts-ignore\nimport { isMobileUserAgent } from \"../common/utils\";\n\nexport const MwebLandscapePrompt = () => {\n  const [showMwebLandscapePrompt, setShowMwebLandscapePrompt] = useState(false);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  useEffect(() => {\n    if (!isMobileUserAgent) {\n      setShowMwebLandscapePrompt(false);\n      return;\n    }\n\n    if (!window.screen?.orientation) {\n      setShowMwebLandscapePrompt(isLandscape && !isLandscapeHLSStream);\n      return;\n    }\n    const handleRotation = () => {\n      const angle = window.screen.orientation.angle;\n      const type = window.screen.orientation.type || \"\";\n      // Angle check needed to diff bw mobile and desktop\n      setShowMwebLandscapePrompt(\n        match({ angle, isLandscapeHLSStream, isLandscape, type })\n          .with({ isLandscapeHLSStream: true }, () => false)\n          .with(\n            { angle: P.when((angle) => angle && angle >= 90) },\n            ({ type }) => type.includes(\"landscape\")\n          )\n          .otherwise(() => isLandscape)\n      );\n    };\n    handleRotation();\n    window.screen.orientation.addEventListener(\"change\", handleRotation);\n    return () => {\n      window.screen.orientation.removeEventListener(\"change\", handleRotation);\n    };\n  }, [isLandscape, isLandscapeHLSStream]);\n\n  if (isLandscapeHLSStream) {\n    return null;\n  }\n  return (\n    <Dialog.Root\n      open={showMwebLandscapePrompt}\n      onOpenChange={setShowMwebLandscapePrompt}\n    >\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ w: \"min(420px, 90%)\", p: \"$8\", bg: \"$surface_dim\" }}\n        >\n          <Box>\n            <Flex\n              css={{\n                color: \"$primary_default\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <RefreshIcon style={{ marginRight: \"0.5rem\" }} />\n              <Text\n                variant=\"lg\"\n                css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n              >\n                Please rotate your device\n              </Text>\n            </Flex>\n            <Text\n              variant=\"sm\"\n              css={{ color: \"$on_surface_medium\", mb: \"$8\", mt: \"$4\" }}\n            >\n              We do not support landscape mode as of now, please use the app in\n              portrait mode for the best experience.\n            </Text>\n            <Flex\n              align=\"center\"\n              justify=\"between\"\n              css={{ w: \"100%\", gap: \"$8\" }}\n            >\n              <Button\n                outlined\n                variant=\"standard\"\n                css={{ w: \"100%\" }}\n                onClick={() => setShowMwebLandscapePrompt(false)}\n              >\n                Continue anyway\n              </Button>\n            </Flex>\n          </Box>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport { useAutoplayError } from \"@100mslive/react-sdk\";\nimport { Button, Dialog, Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { DialogContent, DialogRow } from \"../../primitives/DialogContent\";\n\nexport function AutoplayBlockedModal() {\n  const { error, resetError, unblockAudio } = useAutoplayError();\n  return (\n    <Dialog.Root\n      open={!!error}\n      onOpenChange={(value) => {\n        if (!value) {\n          unblockAudio();\n        }\n        resetError();\n      }}\n    >\n      <DialogContent title=\"Permission Error\" closeable={false}>\n        <DialogRow>\n          <Text variant=\"md\">\n            The browser wants us to get a confirmation for playing the Audio.\n            Please allow audio to proceed.\n          </Text>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              unblockAudio();\n              resetError();\n            }}\n          >\n            Allow Audio\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n}\n", "import React, { useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  selectLocalPeerID,\n  selectSessionStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChatIcon, ChatUnreadIcon } from \"@100mslive/react-icons\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst NOTIFICATION_TIME_DIFFERENCE = 5000;\n\nexport const ChatNotifications = () => {\n  const chatState = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)\n  );\n  const localPeerId = useHMSStore(selectLocalPeerID);\n\n  useEffect(() => {\n    if (!chatState || chatState.updatedBy?.peerId === localPeerId) {\n      return;\n    }\n\n    const showToast =\n      Date.now() - chatState.updatedAt < NOTIFICATION_TIME_DIFFERENCE;\n\n    if (!showToast) {\n      return;\n    }\n\n    const notification = {\n      id: uuid(),\n      icon: chatState.enabled ? <ChatUnreadIcon /> : <ChatIcon />,\n      title: `Chat ${chatState.enabled ? \"resumed\" : \"paused\"} by ${\n        chatState.updatedBy?.userName\n      }`,\n    };\n    ToastManager.addToast(notification);\n  }, [chatState, localPeerId]);\n  return <></>;\n};\n", "import React, { useCallback } from \"react\";\nimport {\n  selectPeerByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  ChatUnreadIcon,\n  ConnectivityIcon,\n  HandIcon,\n  PeopleAddIcon,\n  PeopleRemoveIcon,\n  PoorConnectivityIcon,\n} from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nconst ChatAction = React.forwardRef((_, ref) => {\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n\n  if (isChatOpen) {\n    return null;\n  }\n\n  return (\n    <Button\n      outlined\n      as=\"div\"\n      variant=\"standard\"\n      css={{ w: \"max-content\" }}\n      onClick={toggleChat}\n      ref={ref}\n    >\n      Open Chat\n    </Button>\n  );\n});\n\nconst HandRaiseAction = React.forwardRef(\n  ({ id = \"\", isSingleHandRaise = true }, ref) => {\n    const hmsActions = useHMSActions();\n    const toggleSidepane = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n    const isParticipantsOpen = useIsSidepaneTypeOpen(\n      SIDE_PANE_OPTIONS.PARTICIPANTS\n    );\n    const peer = useHMSStore(selectPeerByID(id));\n    const layout = useRoomLayout();\n    const {\n      bring_to_stage_label,\n      on_stage_role,\n      off_stage_roles = [],\n      skip_preview_for_role_change = false,\n    } = layout?.screens?.conferencing?.default?.elements.on_stage_exp || {};\n\n    const onClickHandler = useCallback(async () => {\n      if (isSingleHandRaise) {\n        hmsActions.changeRoleOfPeer(\n          id,\n          on_stage_role,\n          skip_preview_for_role_change\n        );\n        if (skip_preview_for_role_change) {\n          await hmsActions.lowerRemotePeerHand(id);\n        }\n      } else {\n        !isParticipantsOpen && toggleSidepane();\n      }\n    }, [\n      hmsActions,\n      id,\n      isParticipantsOpen,\n      isSingleHandRaise,\n      on_stage_role,\n      toggleSidepane,\n      skip_preview_for_role_change,\n    ]);\n\n    // show nothing if handRaise is single and peer role is not hls\n    if (\n      isSingleHandRaise &&\n      (!peer || !off_stage_roles.includes(peer.roleName))\n    ) {\n      return null;\n    }\n    return (\n      <Button\n        outlined\n        as=\"div\"\n        variant=\"standard\"\n        css={{ w: \"max-content\" }}\n        onClick={onClickHandler}\n        ref={ref}\n      >\n        {isSingleHandRaise ? bring_to_stage_label : \"View\"}\n      </Button>\n    );\n  }\n);\n\nexport const ToastConfig = {\n  PEER_JOINED: {\n    single: function (notification) {\n      return {\n        title: `${notification.data?.name} joined`,\n        icon: <PeopleAddIcon />,\n      };\n    },\n    multiple: function (notifications) {\n      return {\n        title: `${notifications[notifications.length - 1].data.name} and ${\n          notifications.length - 1\n        } others joined`,\n        icon: <PeopleAddIcon />,\n      };\n    },\n  },\n  PEER_LEFT: {\n    single: function (notification) {\n      return {\n        title: `${notification.data?.name} left`,\n        icon: <PeopleRemoveIcon />,\n      };\n    },\n    multiple: function (notifications) {\n      return {\n        title: `${notifications[notifications.length - 1].data.name} and ${\n          notifications.length - 1\n        } others left`,\n        icon: <PeopleRemoveIcon />,\n      };\n    },\n  },\n  RAISE_HAND: {\n    single: (notification) => {\n      return {\n        title: `${notification.data?.name} raised hand`,\n        icon: <HandIcon />,\n      };\n    },\n    multiple: (notifications) => {\n      const count = new Set(\n        notifications.map((notification) => notification.data?.id)\n      ).size;\n      return {\n        title: `${notifications[notifications.length - 1].data?.name} ${\n          count > 1 ? `and ${count} others` : \"\"\n        } raised hand`,\n        icon: <HandIcon />,\n      };\n    },\n  },\n  RAISE_HAND_HLS: {\n    single: (notification) => {\n      return {\n        title: `${notification.data?.name} raised hand`,\n        icon: <HandIcon />,\n        action: <HandRaiseAction id={notification.data?.id} />,\n      };\n    },\n    multiple: (notifications) => {\n      const count = new Set(\n        notifications.map((notification) => notification.data?.id)\n      ).size;\n      return {\n        title: `${notifications[notifications.length - 1].data?.name} ${\n          count > 1 ? `and ${count} others` : \"\"\n        } raised hand`,\n        icon: <HandIcon />,\n        action: <HandRaiseAction isSingleHandRaise={false} />,\n      };\n    },\n  },\n  NEW_MESSAGE: {\n    single: (notification) => {\n      return {\n        title: `New message from ${notification.data?.senderName}`,\n        icon: <ChatUnreadIcon />,\n        action: <ChatAction />,\n      };\n    },\n    multiple: (notifications) => {\n      return {\n        title: `${notifications.length} new messages`,\n        icon: <ChatUnreadIcon />,\n        action: <ChatAction />,\n      };\n    },\n  },\n  RECONNECTED: {\n    single: (online) => {\n      return {\n        title: `You are now ${online ? \"online\" : \"connected\"}`,\n        icon: <ConnectivityIcon />,\n        variant: \"success\",\n        duration: 3000,\n      };\n    },\n  },\n  RECONNECTING: {\n    single: (message) => {\n      return {\n        title: `You are offline for now. while we try to reconnect, please check\n        your internet connection. ${message}.\n      `,\n        icon: <PoorConnectivityIcon />,\n        variant: \"warning\",\n        duration: 30000,\n      };\n    },\n  },\n};\n", "import { ToastConfig } from \"./ToastConfig\";\nimport { ToastManager } from \"./ToastManager\";\n\nexport const ToastBatcher = {\n  toastsType: new Map(),\n  toastCache: {},\n  showToastInternal({ notification, duration, type }) {\n    let notificationType = type;\n    if (!type) {\n      notificationType = notification.type;\n    }\n    const toastType = this.toastsType.has(notificationType);\n    if (toastType) {\n      let { notifications } = this.toastsType.get(notificationType);\n      const { id } = this.toastsType.get(notificationType);\n      notifications.push(notification);\n      const toastObject = ToastConfig[notificationType].multiple(notifications);\n      const toastId = ToastManager.replaceToast(id, {\n        ...toastObject,\n        duration: duration,\n      });\n      this.toastsType.set(notificationType, {\n        id: toastId,\n        notifications: notifications,\n        duration: duration,\n      });\n    } else {\n      const toastObject = ToastConfig[notificationType].single(notification);\n      const toastId = ToastManager.addToast({\n        ...toastObject,\n        duration: duration,\n      });\n      let notifications = [];\n      notifications.push(notification);\n      this.toastsType.set(notificationType, {\n        id: toastId,\n        notifications: [...notifications],\n        duration: duration,\n      });\n    }\n  },\n  showToast({ notification, duration = 3000, type }) {\n    try {\n      if (!this.toastCache[notification.id]) {\n        this.showToastInternal({ notification, duration, type });\n      }\n      this.toastCache[notification.id] = true;\n      if (Object.keys(this.toastCache).length > 100) {\n        this.toastCache = {};\n      }\n    } catch (err) {\n      console.debug(\"Notifications\", err);\n    }\n  },\n  syncUItoast(toastsDisplaying) {\n    for (const [toastType, toastInfo] of this.toastsType.entries()) {\n      if (!toastsDisplaying.find((toast) => toast.id === toastInfo.id)) {\n        this.toastsType.delete(toastType);\n      }\n    }\n  },\n};\n\nToastManager.addListener(ToastBatcher.syncUItoast.bind(ToastBatcher));\n", "import { useEffect } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport {\n  HMSNotificationTypes,\n  HMSRoomState,\n  selectHandRaisedPeers,\n  selectHasPeerHandRaised,\n  selectIsLocalScreenShared,\n  selectPeerByID,\n  selectRoomState,\n  useAwayNotifications,\n  useHMSNotifications,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\n// @ts-ignore: No implicit Any\nimport { ToastBatcher } from \"../Toast/ToastBatcher\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useSubscribedNotifications } from \"../AppData/useUISettings\";\nimport { SUBSCRIBED_NOTIFICATIONS } from \"../../common/constants\";\n\nexport const HandRaisedNotifications = () => {\n  const notification = useHMSNotifications(\n    HMSNotificationTypes.HAND_RAISE_CHANGED\n  );\n  const roomState = useHMSStore(selectRoomState);\n  const vanillaStore = useHMSVanillaStore();\n  const { on_stage_exp } = useRoomLayoutConferencingScreen().elements || {};\n  const isSubscribing = !!useSubscribedNotifications(\n    SUBSCRIBED_NOTIFICATIONS.METADATA_UPDATED\n  );\n  const amIScreenSharing = useHMSStore(selectIsLocalScreenShared);\n  const { showNotification } = useAwayNotifications();\n  const logoURL = useRoomLayout()?.logo?.url;\n\n  useEffect(() => {\n    if (!notification?.data) {\n      return;\n    }\n\n    // Don't show toast message in case of local peer.\n    if (\n      roomState !== HMSRoomState.Connected ||\n      notification.data.isLocal ||\n      !isSubscribing\n    ) {\n      return;\n    }\n\n    const hasPeerHandRaised = vanillaStore.getState(\n      selectHasPeerHandRaised(notification.data.id)\n    );\n    const peer = vanillaStore.getState(selectPeerByID(notification.data.id));\n    if (hasPeerHandRaised) {\n      const showCTA =\n        peer?.roleName &&\n        (on_stage_exp?.off_stage_roles || [])?.includes(peer.roleName);\n      ToastBatcher.showToast({\n        notification,\n        type: showCTA ? \"RAISE_HAND_HLS\" : \"RAISE_HAND\",\n      });\n      console.debug(\"Metadata updated\", notification.data);\n    }\n  }, [isSubscribing, notification, on_stage_exp, roomState, vanillaStore]);\n\n  useDebounce(\n    () => {\n      if (!notification?.data) {\n        return;\n      }\n\n      // Don't show toast message in case of local peer.\n      if (\n        roomState !== HMSRoomState.Connected ||\n        notification.data.isLocal ||\n        !isSubscribing\n      ) {\n        return;\n      }\n\n      const hasPeerHandRaised = vanillaStore.getState(\n        selectHasPeerHandRaised(notification.data.id)\n      );\n      const peer = vanillaStore.getState(selectPeerByID(notification.data.id));\n      const handRaisedPeers = vanillaStore.getState(selectHandRaisedPeers);\n      if (amIScreenSharing && hasPeerHandRaised) {\n        const title = `${peer?.name} ${\n          handRaisedPeers.length > 1\n            ? `and ${handRaisedPeers.length - 1} others`\n            : \"\"\n        } raised hand`;\n        showNotification(title, { icon: logoURL });\n      }\n    },\n    1000,\n    [isSubscribing, notification, roomState, vanillaStore, amIScreenSharing]\n  );\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { ErrorDialog } from \"../../primitives/DialogContent\";\n\nexport const InitErrorModal = () => {\n  const notification = useHMSNotifications(HMSNotificationTypes.ERROR);\n  const [showModal, setShowModal] = useState(false);\n  const [info, setInfo] = useState({ title: \"Init Error\", description: \"\" });\n\n  useEffect(() => {\n    const data = notification?.data;\n    if (!data || data.action !== \"INIT\") {\n      return;\n    }\n    let description;\n    let title;\n    if (data.description.includes(\"role is invalid\")) {\n      description =\n        \"This role does not exist for the given room. Try again with a valid role.\";\n      title = \"Invalid Role\";\n    } else if (data.description.includes(\"room is not active\")) {\n      title = \"Room is disabled\";\n      description =\n        \"This room is disabled and cannot be joined. To enable the room, use the 100ms dashboard or the API.\";\n    } else {\n      description = data.description;\n      title = \"Init Error\";\n    }\n    setInfo({ title, description });\n    setShowModal(true);\n  }, [notification]);\n\n  return (\n    <ErrorDialog\n      open={showModal}\n      onOpenChange={setShowModal}\n      title={info.title}\n    >\n      <Text variant=\"sm\" css={{ wordBreak: \"break-word\" }}>\n        {info.description} <br />\n        Current URL - {window.location.href}\n      </Text>\n    </ErrorDialog>\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { ToastBatcher } from \"../Toast/ToastBatcher\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetSubscribedChatSelector,\n  useSubscribedNotifications,\n} from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport {\n  CHAT_SELECTOR,\n  SUBSCRIBED_NOTIFICATIONS,\n} from \"../../common/constants\";\n\nconst notificationTypes = [\n  HMSNotificationTypes.PEER_JOINED,\n  HMSNotificationTypes.PEER_LEFT,\n];\n\nexport const PeerNotifications = () => {\n  const notification = useHMSNotifications(notificationTypes);\n  const isPeerJoinSubscribed = useSubscribedNotifications(\n    SUBSCRIBED_NOTIFICATIONS.PEER_JOINED\n  );\n  const isPeerLeftSubscribed = useSubscribedNotifications(\n    SUBSCRIBED_NOTIFICATIONS.PEER_LEFT\n  );\n  const [selectedPeer, setPeerSelector] = useSetSubscribedChatSelector(\n    CHAT_SELECTOR.PEER\n  );\n\n  useEffect(() => {\n    if (!notification?.data) {\n      return;\n    }\n\n    console.debug(`[${notification.type}]`, notification);\n    switch (notification.type) {\n      case HMSNotificationTypes.PEER_JOINED:\n        if (!isPeerJoinSubscribed) {\n          return;\n        }\n        break;\n      case HMSNotificationTypes.PEER_LEFT:\n        if (selectedPeer.id === notification.data.id) {\n          setPeerSelector({});\n        }\n        if (!isPeerLeftSubscribed) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    ToastBatcher.showToast({ notification });\n  }, [\n    notification,\n    isPeerJoinSubscribed,\n    isPeerLeftSubscribed,\n    selectedPeer.id,\n    setPeerSelector,\n  ]);\n\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSException,\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { Button, config as cssConfig, Dialog, Flex, Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport androidPermissionAlert from \"../../images/android-perm-1.png\";\n// @ts-ignore: No implicit Any\nimport iosPermissions from \"../../images/ios-perm-0.png\";\n// @ts-ignore: No implicit Any\nimport { isAndroid, isIOS } from \"../../common/constants\";\n\nexport function PermissionErrorNotificationModal() {\n  const notification = useHMSNotifications(HMSNotificationTypes.ERROR);\n  return <PermissionErrorModal error={notification?.data} />;\n}\n\nexport const PermissionErrorModal = ({ error }: { error?: HMSException }) => {\n  const [deviceType, setDeviceType] = useState(\"\");\n  const [isSystemError, setIsSystemError] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  useEffect(() => {\n    if (\n      !error ||\n      (error?.code !== 3001 && error?.code !== 3011) ||\n      (error?.code === 3001 && error?.message.includes(\"screen\"))\n    ) {\n      return;\n    }\n    const errorMessage = error?.message;\n    const hasAudio = errorMessage.includes(\"audio\");\n    const hasVideo = errorMessage.includes(\"video\");\n    const hasScreen = errorMessage.includes(\"screen\");\n    if (hasAudio && hasVideo) {\n      setDeviceType(\"camera and microphone\");\n    } else if (hasAudio) {\n      setDeviceType(\"microphone\");\n    } else if (hasVideo) {\n      setDeviceType(\"camera\");\n    } else if (hasScreen) {\n      setDeviceType(\"screen\");\n    }\n    setIsSystemError(error.code === 3011);\n  }, [error]);\n\n  return deviceType ? (\n    <Dialog.Root open={!!deviceType}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(380px, 90%)\",\n            p: \"$8\",\n            // overlay over Sheet.tsx\n            zIndex: 23,\n          }}\n        >\n          <Dialog.Title\n            css={{\n              borderBottom: \"1px solid $border_default\",\n            }}\n          >\n            {isMobile && isIOS ? (\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n                src={iosPermissions}\n                alt=\"iOS Permission flow\"\n              />\n            ) : null}\n\n            {/* Images for android */}\n            {isMobile && isAndroid ? (\n              <img\n                src={androidPermissionAlert}\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n                alt=\"Android Permission flow \"\n              />\n            ) : null}\n\n            <Text variant=\"h6\">We can't access your {deviceType}</Text>\n          </Dialog.Title>\n\n          <Text\n            variant=\"sm\"\n            css={{ pt: \"$4\", pb: \"$10\", color: \"$on_surface_medium\" }}\n          >\n            {/* IOS prompt text */}\n            {isMobile && isIOS\n              ? 'Enable permissions by reloading this page and clicking \"Allow\" on the pop-up, or change settings from the address bar.'\n              : null}\n\n            {/* Prompt for android devices */}\n            {isMobile && isAndroid\n              ? `To allow other users to see and hear you, click the blocked camera icon in your browser's address bar.`\n              : null}\n\n            {/* Prompt for desktops */}\n            {!isMobile ? `Access to ${deviceType} is required. ` : null}\n\n            {isSystemError && !isMobile\n              ? `Enable permissions for ${deviceType}${\n                  deviceType === \"screen\" ? \"share\" : \"\"\n                } from sytem settings`\n              : null}\n            {!isSystemError && !isMobile\n              ? `Enable permissions for ${deviceType}${\n                  deviceType === \"screen\" ? \"share\" : \"\"\n                } from address bar or browser settings.`\n              : null}\n          </Text>\n\n          {/* CTA section */}\n          {isMobile && isIOS ? (\n            <>\n              <Button\n                onClick={() => window.location.reload()}\n                css={{ w: \"100%\", mb: \"$6\" }}\n              >\n                Reload\n              </Button>\n              <Button\n                outlined\n                variant=\"standard\"\n                onClick={() => setDeviceType(\"\")}\n                css={{ w: \"100%\" }}\n              >\n                Continue anyway\n              </Button>\n            </>\n          ) : null}\n\n          {isMobile && isAndroid ? (\n            <>\n              <Button\n                onClick={() => setDeviceType(\"\")}\n                css={{ w: \"100%\", mb: \"$6\" }}\n              >\n                I've allowed access\n              </Button>\n              <Button\n                outlined\n                variant=\"standard\"\n                onClick={() => setDeviceType(\"\")}\n                css={{ w: \"100%\" }}\n              >\n                Continue anyway\n              </Button>\n            </>\n          ) : null}\n\n          {!isMobile ? (\n            <Flex justify=\"end\" css={{ w: \"100%\" }}>\n              <Button\n                outlined\n                variant=\"standard\"\n                onClick={() => setDeviceType(\"\")}\n              >\n                Dismiss\n              </Button>\n            </Flex>\n          ) : null}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  ) : null;\n};\n", "import { useEffect, useRef } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { ToastConfig } from \"../Toast/ToastConfig\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nconst notificationTypes = [\n  HMSNotificationTypes.RECONNECTED,\n  HMSNotificationTypes.RECONNECTING,\n  HMSNotificationTypes.ERROR,\n];\nlet notificationId: string | null = null;\n\nexport const ReconnectNotifications = () => {\n  const notification = useHMSNotifications(notificationTypes);\n  const prevErrorCode = useRef(0);\n  useEffect(() => {\n    if (!notification) {\n      return;\n    }\n    if (notification.type === HMSNotificationTypes.RECONNECTED) {\n      notificationId = ToastManager.replaceToast(\n        notificationId,\n        ToastConfig.RECONNECTED.single(\n          [4005, 4006].includes(prevErrorCode.current)\n        )\n      );\n    } else if (notification.type === HMSNotificationTypes.RECONNECTING) {\n      prevErrorCode.current = notification.data?.code || 0;\n      notificationId = ToastManager.replaceToast(\n        notificationId,\n        ToastConfig.RECONNECTING.single(notification.data?.message)\n      );\n    }\n  }, [notification]);\n\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSChangeMultiTrackStateRequest,\n  HMSNotificationTypes,\n  useHMSActions,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon } from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { RequestDialog } from \"../../primitives/DialogContent\";\n\nexport const TrackBulkUnmuteModal = () => {\n  const hmsActions = useHMSActions();\n  const [muteNotification, setMuteNotification] =\n    useState<HMSChangeMultiTrackStateRequest | null>(null);\n  const notification = useHMSNotifications([\n    HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST,\n    HMSNotificationTypes.ROOM_ENDED,\n    HMSNotificationTypes.REMOVED_FROM_ROOM,\n  ]);\n\n  useEffect(() => {\n    switch (notification?.type) {\n      case HMSNotificationTypes.REMOVED_FROM_ROOM:\n      case HMSNotificationTypes.ROOM_ENDED:\n        setMuteNotification(null);\n        break;\n      case HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST:\n        if (notification?.data.enabled) {\n          setMuteNotification(notification.data);\n        }\n        break;\n      default:\n        return;\n    }\n  }, [notification]);\n\n  if (!muteNotification) {\n    return null;\n  }\n\n  const { requestedBy: peer, tracks, enabled } = muteNotification;\n\n  const types = new Set(tracks.map((track) => track.type));\n\n  return (\n    <RequestDialog\n      title=\"Unmute request\"\n      body={`${peer?.name} is requesting you to unmute your ${Array.from(\n        types\n      ).join(\",\")}`}\n      onOpenChange={(value: boolean) => !value && setMuteNotification(null)}\n      onAction={() => {\n        tracks.forEach((track) => {\n          hmsActions.setEnabledTrack(track.id, enabled);\n        });\n        setMuteNotification(null);\n      }}\n      Icon={MicOnIcon}\n    />\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\n\nconst notificationTypes = [\n  HMSNotificationTypes.TRACK_ADDED,\n  HMSNotificationTypes.TRACK_REMOVED,\n  HMSNotificationTypes.TRACK_MUTED,\n  HMSNotificationTypes.TRACK_UNMUTED,\n];\nexport const TrackNotifications = () => {\n  const notification = useHMSNotifications(notificationTypes);\n  useEffect(() => {\n    if (notification) {\n      console.debug(`[${notification.type}]`, notification);\n    }\n  }, [notification]);\n\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSChangeTrackStateRequest,\n  HMSNotificationTypes,\n  useHMSActions,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon } from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { RequestDialog } from \"../../primitives/DialogContent\";\n\nexport const TrackUnmuteModal = () => {\n  const hmsActions = useHMSActions();\n  const notification = useHMSNotifications([\n    HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST,\n    HMSNotificationTypes.ROOM_ENDED,\n    HMSNotificationTypes.REMOVED_FROM_ROOM,\n  ]);\n  const [muteNotification, setMuteNotification] =\n    useState<HMSChangeTrackStateRequest | null>(null);\n\n  useEffect(() => {\n    switch (notification?.type) {\n      case HMSNotificationTypes.REMOVED_FROM_ROOM:\n      case HMSNotificationTypes.ROOM_ENDED:\n        setMuteNotification(null);\n        break;\n      case HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST:\n        if (notification?.data.enabled) {\n          setMuteNotification(notification.data);\n        }\n        break;\n      default:\n        return;\n    }\n  }, [notification]);\n\n  if (!muteNotification) {\n    return null;\n  }\n\n  const { requestedBy: peer, track, enabled } = muteNotification;\n\n  return (\n    <RequestDialog\n      title={`Unmute your ${track.type}?`}\n      onOpenChange={(value: boolean) => !value && setMuteNotification(null)}\n      body={`${peer?.name}is requesting you to unmute your ${track?.type}.`}\n      onAction={() => {\n        hmsActions.setEnabledTrack(track.id, enabled);\n        setMuteNotification(null);\n      }}\n      Icon={MicOnIcon}\n    />\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSNotificationTypes,\n  HMSTranscriptionState,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  ClosedCaptionIcon,\n  OpenCaptionIcon,\n} from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { CAPTION_TOAST } from \"../../common/constants\";\n\nexport const TranscriptionNotifications = () => {\n  const notification = useHMSNotifications(\n    HMSNotificationTypes.TRANSCRIPTION_STATE_UPDATED\n  );\n  const [toastId, setToastId] = useSetAppDataByKey(CAPTION_TOAST.captionToast);\n\n  useEffect(() => {\n    if (!notification?.data) {\n      return;\n    }\n\n    console.debug(`[${notification.type}]`, notification);\n    const transcriptionStates = notification.data;\n    if (transcriptionStates.length > 0) {\n      let id = \"\";\n      match({\n        state: transcriptionStates[0].state,\n        error: transcriptionStates[0].error,\n      })\n        .when(\n          ({ error }) => !!error,\n          () => {\n            id = ToastManager.replaceToast(toastId, {\n              title: `Failed to enable Closed Caption`,\n              variant: \"error\",\n              icon: <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />,\n            });\n          }\n        )\n        .with({ state: HMSTranscriptionState.STARTED }, () => {\n          id = ToastManager.replaceToast(toastId, {\n            title: `Closed Captioning enabled for everyone`,\n            variant: \"standard\",\n            duration: 2000,\n            icon: <ClosedCaptionIcon style={{ marginRight: \"0.5rem\" }} />,\n          });\n        })\n        .with({ state: HMSTranscriptionState.STOPPED }, () => {\n          id = ToastManager.replaceToast(toastId, {\n            title: `Closed Captioning disabled for everyone`,\n            variant: \"standard\",\n            duration: 2000,\n            icon: <OpenCaptionIcon style={{ marginRight: \"0.5rem\" }} />,\n          });\n        })\n        .otherwise(() => null);\n      setToastId(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [notification, setToastId]);\n\n  return null;\n};\n", "/* eslint-disable no-case-declarations */\nimport React, { useCallback, useEffect } from \"react\";\nimport {\n  HMSNotificationTypes,\n  HMSRoleChangeRequest,\n  HMSRoomState,\n  selectIsLocalScreenShared,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  selectRoomState,\n  useAwayNotifications,\n  useCustomEvent,\n  useHMSNotifications,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { GroupIcon } from \"@100mslive/react-icons\";\nimport { Box, Button } from \"../../..\";\nimport {\n  useRoomLayout,\n  useUpdateRoomLayout,\n} from \"../../provider/roomLayoutProvider\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { AutoplayBlockedModal } from \"./AutoplayBlockedModal\";\nimport { ChatNotifications } from \"./ChatNotifications\";\nimport { HandRaisedNotifications } from \"./HandRaisedNotifications\";\nimport { InitErrorModal } from \"./InitErrorModal\";\nimport { PeerNotifications } from \"./PeerNotifications\";\nimport { PermissionErrorNotificationModal } from \"./PermissionErrorModal\";\nimport { ReconnectNotifications } from \"./ReconnectNotifications\";\nimport { TrackBulkUnmuteModal } from \"./TrackBulkUnmuteModal\";\nimport { TrackNotifications } from \"./TrackNotifications\";\nimport { TrackUnmuteModal } from \"./TrackUnmuteModal\";\nimport { TranscriptionNotifications } from \"./TranscriptionNotifications\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { usePollViewToggle } from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsNotificationDisabled,\n  useSubscribedNotifications,\n} from \"../AppData/useUISettings\";\nimport { usePIPWindow } from \"../PIP/usePIPWindow\";\nimport { ROLE_CHANGE_DECLINED } from \"../../common/constants\";\n\nconst pollToastKey: Record<string, string> = {};\n\nexport function Notifications() {\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const notification = useHMSNotifications();\n  const subscribedNotifications = useSubscribedNotifications() || {};\n  const roomState = useHMSStore(selectRoomState);\n  const updateRoomLayoutForRole = useUpdateRoomLayout();\n  const isNotificationDisabled = useIsNotificationDisabled();\n  const screenProps = useRoomLayoutConferencingScreen();\n  const vanillaStore = useHMSVanillaStore();\n  const togglePollView = usePollViewToggle();\n  const { showNotification } = useAwayNotifications();\n  const amIScreenSharing = useHMSStore(selectIsLocalScreenShared);\n  const logoURL = useRoomLayout()?.logo?.url;\n  const { pipWindow } = usePIPWindow();\n\n  const handleRoleChangeDenied = useCallback(\n    (request: HMSRoleChangeRequest & { peerName: string }) => {\n      ToastManager.addToast({\n        title: `${request.peerName} denied your request to join the ${request.role.name} role`,\n        variant: \"error\",\n      });\n    },\n    []\n  );\n\n  useCustomEvent({\n    type: ROLE_CHANGE_DECLINED,\n    onEvent: handleRoleChangeDenied,\n  });\n\n  useEffect(() => {\n    if (!notification || isNotificationDisabled) {\n      return;\n    }\n    switch (notification.type) {\n      case HMSNotificationTypes.NAME_UPDATED:\n        console.log(\n          notification.data.id +\n            \" changed their name to \" +\n            notification.data.name\n        );\n        break;\n      case HMSNotificationTypes.ERROR:\n        if (\n          notification.data?.isTerminal &&\n          notification.data?.action !== \"INIT\"\n        ) {\n          if ([500, 6008].includes(notification.data?.code)) {\n            ToastManager.addToast({\n              title: `Error: ${notification.data?.message}`,\n            });\n          } else if (notification.data?.message === \"role limit reached\") {\n            ToastManager.addToast({\n              title: \"The room is currently full, try joining later\",\n              close: true,\n              icon: (\n                <Box css={{ color: \"$alert_error_default\" }}>\n                  <GroupIcon />\n                </Box>\n              ),\n            });\n          } else {\n            ToastManager.addToast({\n              title:\n                notification.data?.message ||\n                \"We couldn\u2019t reconnect you. When you\u2019re back online, try joining the room.\",\n              close: false,\n            });\n          }\n          return;\n        }\n        // Autoplay error or user denied screen share (cancelled browser pop-up)\n        if (\n          notification.data?.code === 3008 ||\n          notification.data?.code === 3001 ||\n          notification.data?.code === 3011\n        ) {\n          return;\n        }\n        if (notification.data?.action === \"INIT\") {\n          return;\n        }\n        if (!subscribedNotifications.ERROR) return;\n        ToastManager.addToast({\n          title: `Error: ${notification.data?.message} - ${notification.data?.description}`,\n        });\n        break;\n      case HMSNotificationTypes.ROLE_UPDATED: {\n        if (notification.data?.isLocal && notification.data?.roleName) {\n          ToastManager.addToast({\n            title: `You are now a ${notification.data.roleName}`,\n          });\n          updateRoomLayoutForRole?.(notification.data.roleName);\n        }\n        break;\n      }\n      case HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST:\n        const track = notification.data?.track;\n        if (!notification.data.enabled) {\n          ToastManager.addToast({\n            title: `Your ${track.source} ${track.type} was muted by\n                ${notification.data.requestedBy?.name}.`,\n          });\n        }\n        break;\n      case HMSNotificationTypes.REMOVED_FROM_ROOM:\n      case HMSNotificationTypes.ROOM_ENDED:\n        ToastManager.addToast({\n          title: `${notification.message}. \n              ${\n                notification.data.reason &&\n                `Reason: ${notification.data.reason}`\n              }`,\n        });\n        break;\n      case HMSNotificationTypes.DEVICE_CHANGE_UPDATE:\n        ToastManager.addToast({\n          title: notification.message,\n        });\n        break;\n\n      case HMSNotificationTypes.POLL_STARTED:\n        if (\n          notification.data.startedBy !== localPeerID &&\n          screenProps.screenType !== \"hls_live_streaming\"\n        ) {\n          const pollStartedBy =\n            vanillaStore.getState(\n              selectPeerNameByID(notification.data.startedBy)\n            ) || \"Participant\";\n\n          const pollToastID = ToastManager.addToast({\n            title: `${pollStartedBy} started a ${notification.data.type}: ${notification.data.title}`,\n            action: (\n              <Button\n                onClick={() => togglePollView(notification.data.id)}\n                variant=\"standard\"\n                css={{\n                  backgroundColor: \"$surface_bright\",\n                  fontWeight: \"$semiBold\",\n                  color: \"$on_surface_high\",\n                  p: \"$xs $md\",\n                }}\n              >\n                {notification.data.type === \"quiz\" ? \"Answer\" : \"Vote\"}\n              </Button>\n            ),\n            duration: Infinity,\n          });\n          pollToastKey[notification.data.id] = pollToastID;\n        }\n        break;\n      case HMSNotificationTypes.POLL_STOPPED:\n        const pollID = notification?.data.id;\n        if (pollID && pollToastKey?.[pollID]) {\n          ToastManager.removeToast(pollToastKey?.[notification.data.id]);\n          delete pollToastKey[notification?.data.id];\n        }\n        break;\n      case HMSNotificationTypes.NEW_MESSAGE:\n        if (amIScreenSharing && !notification.data?.ignored && !pipWindow) {\n          showNotification(`New message from ${notification.data.senderName}`, {\n            body: notification.data.message,\n            icon: logoURL,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    notification,\n    subscribedNotifications.ERROR,\n    subscribedNotifications.METADATA_UPDATED,\n  ]);\n\n  if (isNotificationDisabled) {\n    return null;\n  }\n\n  return (\n    <>\n      <TrackUnmuteModal />\n      <TrackBulkUnmuteModal />\n      <TrackNotifications />\n      {roomState === HMSRoomState.Connected ? <PeerNotifications /> : null}\n      <ReconnectNotifications />\n      <AutoplayBlockedModal />\n      <PermissionErrorNotificationModal />\n      <InitErrorModal />\n      <ChatNotifications />\n      <HandRaisedNotifications />\n      <TranscriptionNotifications />\n    </>\n  );\n}\n", "export { Notifications } from \"./Notifications\";\n", "import React, { useCallback, useMemo, useState } from \"react\";\nimport { PIPContext } from \"./context\";\n\ntype PIPProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const PIPProvider = ({ children }: PIPProviderProps) => {\n  // Detect if the feature is available.\n  const isSupported = \"documentPictureInPicture\" in window;\n\n  // Expose pipWindow that is currently active\n  const [pipWindow, setPipWindow] = useState<Window | null>(null);\n\n  // Close pipWidnow programmatically\n  const closePipWindow = useCallback(() => {\n    if (pipWindow != null) {\n      pipWindow.close();\n      setPipWindow(null);\n    }\n  }, [pipWindow]);\n\n  // Open new pipWindow\n  const requestPipWindow = useCallback(\n    async (width: number, height: number) => {\n      // We don't want to allow multiple requests.\n      if (pipWindow != null) {\n        return;\n      }\n      // @ts-ignore for documentPIP\n      const pip = await window.documentPictureInPicture.requestWindow({\n        width,\n        height,\n      });\n\n      // Detect when window is closed by user\n      pip.addEventListener(\"pagehide\", () => {\n        setPipWindow(null);\n      });\n\n      setPipWindow(pip);\n    },\n    [pipWindow]\n  );\n\n  const value = useMemo(() => {\n    return {\n      isSupported,\n      pipWindow,\n      requestPipWindow,\n      closePipWindow,\n    };\n  }, [closePipWindow, isSupported, pipWindow, requestPipWindow]);\n\n  return <PIPContext.Provider value={value}>{children}</PIPContext.Provider>;\n};\n", "import React from \"react\";\nimport { useSearchParam } from \"react-use\";\nimport { Flex } from \"../../..\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\nimport FullPageProgress from \"../FullPageProgress\";\nimport PreviewJoin from \"./PreviewJoin\";\nimport { useRoomLayoutPreviewScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useAuthToken } from \"../AppData/useUISettings\";\nimport { QUERY_PARAM_PREVIEW_AS_ROLE } from \"../../common/constants\";\n\nexport const PreviewScreen = () => {\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const skipPreview = !isPreviewScreenEnabled;\n  const previewAsRole = useSearchParam(QUERY_PARAM_PREVIEW_AS_ROLE);\n  const { userName } = useHMSPrebuiltContext();\n  const initialName = userName || (skipPreview ? \"Beam\" : \"\");\n  const authToken = useAuthToken();\n  const roomLayout = useRoomLayout();\n  const { preview_header: previewHeader = {} } =\n    roomLayout?.screens?.preview?.default?.elements || {};\n\n  return (\n    <Flex direction=\"column\" css={{ size: \"100%\" }}>\n      <Flex\n        css={{\n          flex: \"1 1 0\",\n          position: \"relative\",\n          overflowY: \"auto\",\n          color: \"$primary_default\",\n        }}\n        justify=\"center\"\n        align=\"center\"\n      >\n        {authToken && Object.keys(previewHeader).length > 0 ? (\n          <PreviewJoin\n            initialName={initialName}\n            skipPreview={skipPreview}\n            asRole={previewAsRole ?? undefined}\n          />\n        ) : (\n          <FullPageProgress />\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Toast as ToastPrimitive } from \"../../../Toast\";\n\nexport const Toast = ({\n  title,\n  description,\n  close = true,\n  open,\n  duration,\n  onOpenChange,\n  icon,\n  ...props\n}) => {\n  return (\n    <ToastPrimitive.HMSToast\n      title={title}\n      description={description}\n      open={open}\n      isClosable={close}\n      onOpenChange={onOpenChange}\n      duration={!close ? 600000 : duration}\n      icon={icon}\n      {...props}\n    />\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { selectIsConnectedToRoom, useHMSStore } from \"@100mslive/react-sdk\";\nimport { Toast as ToastPrimitive } from \"../../../Toast\";\nimport { Toast } from \"./Toast\";\nimport { ToastManager } from \"./ToastManager\";\nimport { MAX_TOASTS } from \"../../common/constants\";\n\nexport const ToastContainer = () => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const [toasts, setToast] = useState([]);\n  useEffect(() => {\n    ToastManager.addListener(setToast);\n    return () => {\n      ToastManager.removeListener(setToast);\n    };\n  }, []);\n  return (\n    <ToastPrimitive.Provider swipeDirection=\"left\" duration={3000}>\n      {toasts.slice(0, MAX_TOASTS).map((toast) => {\n        return (\n          <Toast\n            key={toast.id}\n            {...toast}\n            onOpenChange={(value) =>\n              !value && ToastManager.removeToast(toast.id)\n            }\n          />\n        );\n      })}\n      <ToastPrimitive.Viewport\n        css={{\n          position: \"absolute\",\n          ...(!isConnected ? {} : { bottom: \"$24\" }),\n        }}\n      />\n    </ToastPrimitive.Provider>\n  );\n};\n", "import React from \"react\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore\nimport { Logo } from \"../Header/HeaderComponents\";\nimport { RoomDetailsRow } from \"./RoomDetailsRow\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsSheetTypeOpen, useSheetToggle } from \"../AppData/useSheet\";\nimport { SHEET_OPTIONS } from \"../../common/constants\";\n\nexport const RoomDetailsSheet = () => {\n  const { title, description, details } = useRoomLayoutHeader();\n  const toggleSheet = useSheetToggle(SHEET_OPTIONS.ROOM_DETAILS);\n  const showRoomDetailsSheet = useIsSheetTypeOpen(SHEET_OPTIONS.ROOM_DETAILS);\n  return (\n    <Sheet.Root open={showRoomDetailsSheet} onOpenChange={toggleSheet}>\n      <Sheet.Content css={{ py: \"$8\", pb: \"$12\" }}>\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            w: \"100%\",\n            borderBottom: \"1px solid $border_bright\",\n            pb: \"$4\",\n            mb: \"$4\",\n            px: \"$8\",\n          }}\n        >\n          <Text css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}>\n            Description\n          </Text>\n          <Sheet.Close css={{ color: \"$on_surface_high\" }}>\n            <CrossIcon />\n          </Sheet.Close>\n        </Flex>\n        <Flex align=\"center\" css={{ w: \"100%\", gap: \"$4\", pb: \"$8\", px: \"$8\" }}>\n          <Logo />\n          <Box>\n            <Text\n              variant=\"sm\"\n              css={{ c: \"$on_secondary_high\", fontWeight: \"$semiBold\" }}\n            >\n              {title}\n            </Text>\n            <RoomDetailsRow details={details} />\n          </Box>\n        </Flex>\n        <Text variant=\"sm\" css={{ color: \"$on_surface_medium\", px: \"$8\" }}>\n          {description}\n        </Text>\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\n", "import React from \"react\";\nimport { selectAppData, useHMSStore } from \"@100mslive/react-sdk\";\nimport { RoomDetailsSheet } from \"../components/RoomDetails/RoomDetailsSheet\";\nimport { Box } from \"../../Layout\";\nimport { APP_DATA, SHEET_OPTIONS } from \"../common/constants\";\n\nexport const Sheet = () => {\n  const sheet = useHMSStore(selectAppData(APP_DATA.sheet));\n  let ViewComponent;\n  if (sheet === SHEET_OPTIONS.ROOM_DETAILS) {\n    ViewComponent = <RoomDetailsSheet />;\n  }\n  return <Box>{ViewComponent}</Box>;\n};\n", "import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectIsLargeRoom,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig, keyframes } from \"../../Theme\";\nimport { EMOJI_REACTION_TYPE } from \"../common/constants\";\n\nlet emojiCount = 1;\n\nconst flyAndFade = keyframes({\n  \"20%\": { opacity: 1 },\n  \"100%\": { bottom: \"60%\", opacity: 0 },\n});\n\nconst wiggleLeftRight = keyframes({\n  \"0%\": { marginLeft: \"-50px\" },\n  \"100%\": { marginLeft: \"50px\" },\n});\n\nconst wiggleRightLeft = keyframes({\n  \"0%\": { marginLeft: \"50px\" },\n  \"100%\": { marginLeft: \"-50px\" },\n});\n\nconst getStartingPoints = (isMobile) => {\n  let arr = [];\n  const min = 5;\n  const max = isMobile ? 30 : 20;\n  const inc = isMobile ? 8 : 5;\n  for (let i = min; i <= max; i += inc) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nexport function FlyingEmoji() {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const vanillaStore = useHMSVanillaStore();\n  const hmsActions = useHMSActions();\n  const [emojis, setEmojis] = useState([]);\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n\n  const startingPoints = useMemo(() => getStartingPoints(isMobile), [isMobile]);\n\n  const showFlyingEmoji = useCallback(\n    async ({ emojiId, senderId }) => {\n      if (!emojiId || !senderId || document.hidden) {\n        return;\n      }\n      let senderPeerName = vanillaStore.getState(selectPeerNameByID(senderId));\n      if (!senderPeerName && isLargeRoom) {\n        const sender = await hmsActions.getPeer(senderId);\n        senderPeerName = sender?.name;\n      }\n      const nameToShow = localPeerId === senderId ? \"You\" : senderPeerName;\n      const startingPoint = startingPoints[emojiCount % startingPoints.length];\n      const id = emojiCount++;\n\n      setEmojis((emojis) => {\n        return [\n          ...emojis,\n          {\n            id: id,\n            emojiId: emojiId,\n            senderName: nameToShow,\n            startingPoint: `${startingPoint}%`,\n            wiggleType: Math.random() < 0.5 ? 0 : 1,\n          },\n        ];\n      });\n    },\n    [vanillaStore, isLargeRoom, localPeerId, startingPoints, hmsActions]\n  );\n\n  useCustomEvent({\n    type: EMOJI_REACTION_TYPE,\n    onEvent: showFlyingEmoji,\n  });\n\n  useEffect(() => {\n    window.showFlyingEmoji = showFlyingEmoji;\n  }, [showFlyingEmoji]);\n\n  return (\n    <Box\n      css={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        overflow: \"hidden\",\n        pointerEvents: \"none\",\n        userSelect: \"none\",\n        zIndex: 999,\n      }}\n    >\n      {emojis.map((emoji) => {\n        return (\n          <Flex\n            key={emoji.id}\n            css={{\n              left: emoji.startingPoint,\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              position: \"absolute\",\n              bottom: 0,\n              animation: `${flyAndFade()} 5s forwards, ${\n                emoji.wiggleType === 0 ? wiggleLeftRight() : wiggleRightLeft()\n              } 1s ease-in-out infinite alternate`,\n            }}\n            onAnimationEnd={() =>\n              setEmojis(emojis.filter((item) => item.id !== emoji.id))\n            }\n          >\n            <Box>\n              <em-emoji id={emoji.emojiId} size=\"48px\" set=\"apple\" />\n            </Box>\n            {emoji.senderName ? (\n              <Box\n                css={{\n                  width: \"fit-content\",\n                  padding: \"$2 $4\",\n                  background: \"$surface_bright\",\n                  borderRadius: \"$1\",\n                }}\n              >\n                <Text\n                  css={{\n                    fontSize: \"$space$6\",\n                    lineHeight: \"$xs\",\n                    color: \"$on_surface_high\",\n                  }}\n                >\n                  {emoji.senderName}\n                </Text>\n              </Box>\n            ) : (\n              \"\"\n            )}\n          </Flex>\n        );\n      })}\n    </Box>\n  );\n}\n", "import React, { useCallback } from \"react\";\nimport { useCustomEvent, useHMSActions } from \"@100mslive/react-sdk\";\nimport { REMOTE_STOP_SCREENSHARE_TYPE } from \"../common/constants\";\n\nexport function RemoteStopScreenshare() {\n  const actions = useHMSActions();\n\n  const onRemoteStopScreenshare = useCallback(async () => {\n    await actions.setScreenShareEnabled(false);\n  }, [actions]);\n\n  useCustomEvent({\n    type: REMOTE_STOP_SCREENSHARE_TYPE,\n    onEvent: onRemoteStopScreenshare,\n  });\n\n  return <></>;\n}\n", "import { useCallback, useEffect, useRef } from \"react\";\nimport {\n  selectIsConnectedToRoom,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { useShowStreamingUI } from \"../../common/hooks\";\n// @ts-ignore: No implicit Any\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAutoStartStreaming = () => {\n  const [isHLSStarted, setHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const permissions = useHMSStore(selectPermissions);\n  const showStreamingUI = useShowStreamingUI();\n  const hmsActions = useHMSActions();\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const {\n    isHLSRunning,\n    isRTMPRunning,\n    isHLSRecordingOn,\n    isBrowserRecordingOn,\n  } = useRecordingStreaming();\n  const streamStartedRef = useRef(false);\n\n  const startHLS = useCallback(async () => {\n    try {\n      if (\n        isHLSStarted ||\n        !showStreamingUI ||\n        isHLSRunning ||\n        isRTMPRunning ||\n        isHLSRecordingOn ||\n        isBrowserRecordingOn\n      ) {\n        return;\n      }\n      setHLSStarted(true);\n      streamStartedRef.current = true;\n      await hmsActions.startHLSStreaming();\n    } catch (error) {\n      console.error(error);\n      streamStartedRef.current = false;\n      setHLSStarted(false);\n    }\n  }, [\n    hmsActions,\n    isHLSRunning,\n    isHLSStarted,\n    setHLSStarted,\n    showStreamingUI,\n    isRTMPRunning,\n    isHLSRecordingOn,\n    isBrowserRecordingOn,\n  ]);\n\n  useEffect(() => {\n    if (!isHLSStarted && !isHLSRunning) {\n      streamStartedRef.current = false;\n    }\n  }, [isHLSStarted, isHLSRunning]);\n\n  useEffect(() => {\n    if (\n      !isConnected ||\n      streamStartedRef.current ||\n      !permissions?.hlsStreaming\n    ) {\n      return;\n    }\n    // Is a streaming kit and peer with streaming permissions joins\n    startHLS();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isConnected]);\n};\n", "import React, { MutableRefObject, useEffect, useRef } from \"react\";\nimport {\n  HMSStatsStoreWrapper,\n  HMSStoreWrapper,\n  IHMSNotifications,\n} from \"@100mslive/hms-video-store\";\nimport {\n  Layout,\n  Logo,\n  Screens,\n  Theme,\n  Typography,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSActions,\n  HMSReactiveStore,\n  HMSRoomProvider,\n  selectIsConnectedToRoom,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { AppData } from \"./components/AppData/AppData\";\n// @ts-ignore: No implicit Any\nimport AuthToken from \"./components/AuthToken\";\nimport { ConferenceScreen } from \"./components/ConferenceScreen\";\n// @ts-ignore: No implicit Any\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\n// @ts-ignore: No implicit Any\nimport { Init } from \"./components/init/Init\";\n// @ts-ignore: No implicit Any\nimport { KeyboardHandler } from \"./components/Input/KeyboardInputManager\";\nimport { LeaveScreen } from \"./components/LeaveScreen\";\nimport { MwebLandscapePrompt } from \"./components/MwebLandscapePrompt\";\nimport { Notifications } from \"./components/Notifications\";\nimport { PIPProvider } from \"./components/PIP/PIPProvider\";\nimport { PreviewScreen } from \"./components/Preview/PreviewScreen\";\n// @ts-ignore: No implicit Any\nimport { ToastContainer } from \"./components/Toast/ToastContainer\";\nimport { VBHandler } from \"./components/VirtualBackground/VBHandler\";\nimport { Sheet } from \"./layouts/Sheet\";\nimport {\n  RoomLayoutContext,\n  RoomLayoutProvider,\n  useRoomLayout,\n} from \"./provider/roomLayoutProvider\";\nimport { DialogContainerProvider } from \"../context/DialogContext\";\nimport { Box } from \"../Layout\";\nimport { globalStyles, HMSThemeProvider } from \"../Theme\";\nimport { HMSPrebuiltContext } from \"./AppContext\";\nimport {\n  AppStateContext,\n  PrebuiltStates,\n  useAppStateManager,\n} from \"./AppStateContext\";\n// @ts-ignore: No implicit Any\nimport { FlyingEmoji } from \"./plugins/FlyingEmoji\";\n// @ts-ignore: No implicit Any\nimport { RemoteStopScreenshare } from \"./plugins/RemoteStopScreenshare\";\n// @ts-ignore: No implicit Any\nimport { useIsNotificationDisabled } from \"./components/AppData/useUISettings\";\nimport { useAutoStartStreaming } from \"./components/hooks/useAutoStartStreaming\";\nimport {\n  useRoomLayoutLeaveScreen,\n  useRoomLayoutPreviewScreen,\n} from \"./provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { FeatureFlags } from \"./services/FeatureFlags\";\n// @ts-ignore: No implicit Any\nimport { DEFAULT_PORTAL_CONTAINER } from \"./common/constants\";\n\nexport type HMSPrebuiltOptions = {\n  userName?: string;\n  userId?: string;\n  endpoints?: object;\n  effectsSDKKey?: string;\n};\n\nexport type HMSPrebuiltProps = {\n  roomCode?: string;\n  logo?: Logo;\n  typography?: Typography;\n  themes?: Theme[];\n  options?: HMSPrebuiltOptions;\n  screens?: Screens;\n  authToken?: string;\n  leaveOnUnload?: boolean;\n  onLeave?: () => void;\n  onJoin?: () => void;\n  /**\n   * @remarks\n   * Specify css selectors for the HTML element to be used as container for dialogs. Affects the positioning and focus of dialogs.\n   */\n  containerSelector?: string;\n};\n\nexport type HMSPrebuiltRefType = {\n  hmsActions: HMSActions;\n  hmsStore: HMSStoreWrapper;\n  hmsStats: HMSStatsStoreWrapper;\n  hmsNotifications: IHMSNotifications;\n};\n\nexport const HMSPrebuilt = React.forwardRef<\n  HMSPrebuiltRefType,\n  HMSPrebuiltProps\n>(\n  (\n    {\n      roomCode = \"\",\n      authToken = \"\",\n      containerSelector = DEFAULT_PORTAL_CONTAINER,\n      logo,\n      typography,\n      themes,\n      options: { userName = \"\", userId = \"\", endpoints } = {},\n      screens,\n      leaveOnUnload = true,\n      onLeave,\n      onJoin,\n    },\n    ref\n  ) => {\n    const reactiveStore = useRef<HMSPrebuiltRefType>();\n    const [hydrated, setHydrated] = React.useState(false);\n\n    useEffect(() => {\n      setHydrated(true);\n      const hms = new HMSReactiveStore();\n      const hmsStore = hms.getStore();\n      const hmsActions = hms.getActions();\n      const hmsNotifications = hms.getNotifications();\n      const hmsStats = hms.getStats();\n      hms.triggerOnSubscribe();\n\n      reactiveStore.current = {\n        hmsActions,\n        hmsStats,\n        hmsStore,\n        hmsNotifications,\n      };\n    }, []);\n\n    useEffect(() => {\n      if (!ref || !reactiveStore.current) {\n        return;\n      }\n      (ref as MutableRefObject<HMSPrebuiltRefType>).current = {\n        ...reactiveStore.current,\n      };\n    }, [ref]);\n\n    useEffect(() => {\n      // leave room when component unmounts\n      return () => {\n        VBHandler.reset();\n        reactiveStore?.current?.hmsActions.leave();\n      };\n    }, []);\n\n    const endpointsObj = endpoints as\n      | {\n          init: string;\n          tokenByRoomCode: string;\n          roomLayout: string;\n          event: string;\n        }\n      | undefined;\n    const tokenByRoomCodeEndpoint: string = endpointsObj?.tokenByRoomCode || \"\";\n    const initEndpoint: string = endpointsObj?.init || \"\";\n    const eventEndpoint: string = endpointsObj?.event || \"\";\n    const roomLayoutEndpoint: string = endpointsObj?.roomLayout || \"\";\n\n    const overrideLayout: Partial<Layout> = {\n      logo,\n      themes,\n      typography,\n      screens,\n    };\n\n    if (!roomCode && !authToken) {\n      console.error(`\n          HMSPrebuilt can be initialised by providing: \n          either \"roomCode\" or \"authToken\".\n          Please check if you are providing the above values for initialising prebuilt.\n        `);\n      throw Error(\"Incorrect initializing params for HMSPrebuilt component\");\n    }\n\n    if (!hydrated) {\n      return null;\n    }\n\n    globalStyles();\n\n    return (\n      <ErrorBoundary>\n        <HMSPrebuiltContext.Provider\n          value={{\n            roomCode,\n            containerSelector,\n            onLeave,\n            onJoin,\n            userName,\n            userId,\n            endpoints: {\n              tokenByRoomCode: tokenByRoomCodeEndpoint,\n              init: initEndpoint,\n              roomLayout: roomLayoutEndpoint,\n              event: eventEndpoint,\n            },\n          }}\n        >\n          <HMSRoomProvider\n            isHMSStatsOn={FeatureFlags.enableStatsForNerds}\n            actions={reactiveStore.current?.hmsActions}\n            store={reactiveStore.current?.hmsStore}\n            notifications={reactiveStore.current?.hmsNotifications}\n            stats={reactiveStore.current?.hmsStats}\n            leaveOnUnload={leaveOnUnload}\n          >\n            <RoomLayoutProvider\n              roomLayoutEndpoint={roomLayoutEndpoint}\n              overrideLayout={overrideLayout}\n            >\n              <RoomLayoutContext.Consumer>\n                {(data) => {\n                  const layout = data?.layout;\n                  const theme: Theme = layout?.themes?.[0] || ({} as Theme);\n                  const { typography } = layout || {};\n                  let fontFamily = [\"sans-serif\"];\n                  if (typography?.font_family) {\n                    fontFamily = [`${typography?.font_family}`, ...fontFamily];\n                  }\n\n                  return (\n                    <HMSThemeProvider\n                      // issue is with stichtes caching the theme using the theme name / class\n                      // no updates to the themes are fired if the name is same.\n                      // TODO: cache the theme and do deep check to trigger name change in the theme\n                      themeType={`${theme.name}-${Date.now()}`}\n                      theme={{\n                        //@ts-ignore: Prebuilt theme to match stiches theme\n                        colors: theme.palette,\n                        fonts: {\n                          //@ts-ignore: font list to match token types of stiches\n                          sans: fontFamily,\n                        },\n                      }}\n                    >\n                      <PIPProvider>\n                        <Init />\n                        <DialogContainerProvider\n                          dialogContainerSelector={containerSelector}\n                        >\n                          <Box\n                            className={DEFAULT_PORTAL_CONTAINER.slice(1)} // Skips the '.' in the selector\n                            css={{\n                              bg: \"$background_dim\",\n                              size: \"100%\",\n                              lineHeight: \"1.5\",\n                              \"-webkit-text-size-adjust\": \"100%\",\n                              position: \"relative\",\n                            }}\n                          >\n                            <AppRoutes\n                              authTokenByRoomCodeEndpoint={\n                                tokenByRoomCodeEndpoint\n                              }\n                              defaultAuthToken={authToken}\n                            />\n                          </Box>\n                        </DialogContainerProvider>\n                      </PIPProvider>\n                    </HMSThemeProvider>\n                  );\n                }}\n              </RoomLayoutContext.Consumer>\n            </RoomLayoutProvider>\n          </HMSRoomProvider>\n        </HMSPrebuiltContext.Provider>\n      </ErrorBoundary>\n    );\n  }\n);\n\nHMSPrebuilt.displayName = \"HMSPrebuilt\";\n\nconst AppStates = ({ activeState }: { activeState: PrebuiltStates }) => {\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const { isLeaveScreenEnabled } = useRoomLayoutLeaveScreen();\n  useAutoStartStreaming();\n\n  return match({ activeState, isPreviewScreenEnabled, isLeaveScreenEnabled })\n    .with(\n      { activeState: PrebuiltStates.PREVIEW, isPreviewScreenEnabled: true },\n      () => <PreviewScreen />\n    )\n    .with(\n      { activeState: PrebuiltStates.LEAVE, isLeaveScreenEnabled: true },\n      () => <LeaveScreen />\n    )\n    .otherwise(() => <ConferenceScreen />);\n};\n\nconst BackSwipe = () => {\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n  useEffect(() => {\n    const onRouteLeave = async () => {\n      if (isConnectedToRoom) {\n        await hmsActions.leave();\n      }\n    };\n    window.addEventListener(\"popstate\", onRouteLeave);\n    return () => {\n      window.removeEventListener(\"popstate\", onRouteLeave);\n    };\n  }, [hmsActions, isConnectedToRoom]);\n  return null;\n};\n\nfunction AppRoutes({\n  authTokenByRoomCodeEndpoint,\n  defaultAuthToken,\n}: {\n  authTokenByRoomCodeEndpoint: string;\n  defaultAuthToken?: string;\n}) {\n  const roomLayout = useRoomLayout();\n  const isNotificationsDisabled = useIsNotificationDisabled();\n  const { activeState, rejoin } = useAppStateManager();\n  return (\n    <AppStateContext.Provider value={{ rejoin }}>\n      <>\n        {activeState !== PrebuiltStates.LEAVE && <AppData />}\n        <ToastContainer />\n        <Notifications />\n        <MwebLandscapePrompt />\n        <Sheet />\n        <BackSwipe />\n        {!isNotificationsDisabled && <FlyingEmoji />}\n        <RemoteStopScreenshare />\n        <KeyboardHandler />\n        <AuthToken\n          authTokenByRoomCodeEndpoint={authTokenByRoomCodeEndpoint}\n          defaultAuthToken={defaultAuthToken}\n          activeState={activeState}\n        />\n        {roomLayout && activeState && <AppStates activeState={activeState} />}\n      </>\n    </AppStateContext.Provider>\n  );\n}\n", "export * from \"./App\";\n", "import { Indicator, Root } from \"@radix-ui/react-progress\";\nimport { styled } from \"../Theme\";\n\nconst StyledIndicator = styled(Indicator, {\n  h: \"$4\",\n  backgroundColor: \"$primary_default\",\n});\n\nconst StyledRoot = styled(Root, {\n  w: \"100%\",\n  h: \"$4\",\n  borderRadius: \"$round\",\n  backgroundColor: \"$secondary_dim\",\n  overflow: \"hidden\",\n});\n\nexport const Progress = {\n  Root: StyledRoot,\n  Content: StyledIndicator,\n};\n", "import React, { useContext } from \"react\";\nimport { HMSDiagnosticsInterface } from \"@100mslive/react-sdk\";\n\nexport enum DiagnosticsStep {\n  BROWSER,\n  VIDEO,\n  AUDIO,\n  CONNECTIVITY,\n}\n\nexport const initialSteps = {\n  [DiagnosticsStep.BROWSER]: { name: \"Browser Support\" },\n  [DiagnosticsStep.VIDEO]: { name: \"Test Video\" },\n  [DiagnosticsStep.AUDIO]: { name: \"Test Audio\" },\n  [DiagnosticsStep.CONNECTIVITY]: { name: \"Connection Quality\" },\n};\n\nexport interface DiagnosticsStepInfo {\n  name: string;\n  hasFailed?: boolean;\n  isCompleted?: boolean;\n}\n\nexport const DiagnosticsContext = React.createContext<{\n  hmsDiagnostics?: HMSDiagnosticsInterface;\n  activeStepIndex: DiagnosticsStep;\n  setActiveStep: React.Dispatch<React.SetStateAction<DiagnosticsStep>>;\n  steps: Record<DiagnosticsStep, DiagnosticsStepInfo>;\n  updateStep: (\n    step: DiagnosticsStep,\n    value: Omit<DiagnosticsStepInfo, \"name\">\n  ) => void;\n}>({\n  activeStepIndex: 0,\n  setActiveStep: () => {\n    return;\n  },\n  steps: initialSteps,\n  updateStep: () => {\n    return;\n  },\n});\n\nexport const useDiagnostics = () => {\n  const context = useContext(DiagnosticsContext);\n  const activeStep = context.steps[context.activeStepIndex];\n\n  return { ...context, activeStep };\n};\n", "import React from \"react\";\nimport { Button } from \"../Button\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { CSS } from \"../Theme\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nexport const TestContainer = ({\n  css,\n  children,\n}: {\n  css?: CSS;\n  children: React.ReactNode;\n}) => {\n  return <Box css={{ p: \"$10\", ...css }}>{children}</Box>;\n};\n\nexport const TestFooter = ({\n  error,\n  ctaText,\n  children,\n}: {\n  ctaText?: string;\n  error?: Error;\n  children?: React.ReactNode;\n}) => {\n  const {\n    hmsDiagnostics,\n    activeStepIndex: activeStep,\n    setActiveStep,\n  } = useDiagnostics();\n\n  const onNextStep = () => {\n    if (activeStep === DiagnosticsStep.AUDIO) {\n      hmsDiagnostics?.stopMicCheck();\n    } else if (activeStep === DiagnosticsStep.VIDEO) {\n      hmsDiagnostics?.stopCameraCheck();\n    } else if (activeStep === DiagnosticsStep.CONNECTIVITY) {\n      hmsDiagnostics?.stopConnectivityCheck();\n    }\n\n    setActiveStep((step) => step + 1);\n  };\n\n  return (\n    <Flex\n      css={{\n        py: \"$8\",\n        px: \"$10\",\n        background: \"$background_dim\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        borderTop: \"1px solid $border_default\",\n        fontSize: \"$sm\",\n        borderBottomLeftRadius: \"$1\",\n        borderBottomRightRadius: \"$1\",\n        lineHeight: \"$sm\",\n        zIndex: 1001,\n        \"@lg\": { flexDirection: \"column\", gap: \"$8\" },\n      }}\n    >\n      <Box>\n        {error && (\n          <Text css={{ c: \"$alert_error_default\" }}>\n            Error: {error.message}\n          </Text>\n        )}\n      </Box>\n      {children ? (\n        children\n      ) : (\n        <Flex\n          align=\"center\"\n          css={{ gap: \"$8\", \"@lg\": { flexDirection: \"column\" } }}\n        >\n          <Text css={{ c: \"$on_primary_medium\" }}>{ctaText}</Text>\n          <Flex align=\"center\" gap=\"4\">\n            <Button onClick={onNextStep} variant=\"standard\" outlined={true}>\n              Skip\n            </Button>\n            <Button disabled={!!error} onClick={onNextStep}>\n              Yes\n            </Button>\n          </Flex>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n", "import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"../Dropdown\";\nimport { Box, Flex } from \"../Layout\";\nimport { DialogDropdownTrigger } from \"../Prebuilt/primitives/DropdownTrigger\";\nimport { Text } from \"../Text\";\n\nexport const DeviceSelector = ({\n  title,\n  devices,\n  selection,\n  onChange,\n  icon,\n  children = null,\n}) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef(null);\n  return (\n    <Box css={{ mb: \"$6\" }}>\n      <Text css={{ mb: \"$4\" }}>{title}</Text>\n      <Flex\n        align=\"center\"\n        css={{\n          gap: \"$4\",\n          \"@md\": {\n            flexDirection: children ? \"column\" : \"row\",\n            alignItems: children ? \"start\" : \"center\",\n          },\n        }}\n      >\n        <Dropdown.Root open={open} onOpenChange={setOpen}>\n          <DialogDropdownTrigger\n            ref={ref}\n            icon={icon}\n            title={\n              devices.find(({ deviceId }) => deviceId === selection)?.label ||\n              \"Select device from list\"\n            }\n            open={open}\n          />\n          <Dropdown.Portal>\n            <Dropdown.Content\n              align=\"start\"\n              sideOffset={8}\n              css={{\n                w:\n                  // @ts-ignore\n                  ref.current?.clientWidth,\n                zIndex: 1001,\n              }}\n            >\n              {devices.map((device) => {\n                return (\n                  <Dropdown.Item\n                    key={device.label}\n                    onSelect={() => onChange(device.deviceId)}\n                    css={{\n                      px: \"$9\",\n                    }}\n                  >\n                    {device.label}\n                  </Dropdown.Item>\n                );\n              })}\n            </Dropdown.Content>\n          </Dropdown.Portal>\n        </Dropdown.Root>\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n\nDeviceSelector.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.array.isRequired,\n  selection: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  icon: PropTypes.node,\n  children: PropTypes.node,\n};\n", "/* eslint-disable react/prop-types */\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  HMSException,\n  selectDevices,\n  selectLocalAudioTrackID,\n  selectLocalMediaSettings,\n  selectTrackAudioByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon, SpeakerIcon, StopIcon } from \"@100mslive/react-icons\";\nimport { PermissionErrorModal } from \"../Prebuilt/components/Notifications/PermissionErrorModal\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Button } from \"../Button\";\nimport { Box, Flex } from \"../Layout\";\nimport { Progress } from \"../Progress\";\nimport { Text } from \"../Text\";\n// @ts-ignore: No implicit any\nimport { DeviceSelector } from \"./DeviceSelector\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\nimport { useAudioOutputTest } from \"../Prebuilt/components/hooks/useAudioOutputTest\";\nimport { TEST_AUDIO_URL } from \"../Prebuilt/common/constants\";\n\nconst SelectContainer = ({ children }: { children: React.ReactNode }) => (\n  <Box css={{ w: \"calc(50% - 0.75rem)\", \"@lg\": { w: \"100%\" } }}>{children}</Box>\n);\n\nconst MicTest = ({ setError }: { setError: (err?: Error) => void }) => {\n  const { hmsDiagnostics } = useDiagnostics();\n  const devices = useHMSStore(selectDevices);\n  const [isRecording, setIsRecording] = useState(false);\n  const [selectedMic, setSelectedMic] = useState(\n    devices.audioInput[0]?.deviceId || \"default\"\n  );\n  const trackID = useHMSStore(selectLocalAudioTrackID);\n  const audioLevel = useHMSStore(selectTrackAudioByID(trackID));\n  const { audioOutputDeviceId } = useHMSStore(selectLocalMediaSettings);\n  const { playing, setPlaying, audioRef } = useAudioOutputTest({\n    deviceId: audioOutputDeviceId || devices.audioOutput[0]?.deviceId,\n  });\n\n  return (\n    <SelectContainer>\n      <DeviceSelector\n        title=\"Microphone (Input)\"\n        devices={devices.audioInput}\n        selection={selectedMic}\n        icon={<MicOnIcon />}\n        onChange={(deviceId: string) => {\n          setError(undefined);\n          setSelectedMic(deviceId);\n          hmsDiagnostics?.stopMicCheck();\n        }}\n      />\n      <Flex css={{ gap: \"$6\", alignItems: \"center\" }}>\n        <Button\n          variant=\"standard\"\n          icon\n          onClick={() => {\n            isRecording\n              ? hmsDiagnostics?.stopMicCheck()\n              : hmsDiagnostics\n                  ?.startMicCheck({\n                    inputDevice: selectedMic,\n                    onError: (err: Error) => {\n                      setError(err);\n                    },\n                    onStop: () => {\n                      setIsRecording(false);\n                    },\n                  })\n                  .then(() => {\n                    setIsRecording(true);\n                  });\n          }}\n          disabled={devices.audioInput.length === 0 || playing}\n        >\n          {isRecording ? <StopIcon /> : <MicOnIcon />}\n          {isRecording ? \"Stop Recording\" : \"Record\"}\n        </Button>\n\n        <Button\n          icon\n          variant=\"standard\"\n          outlined={hmsDiagnostics?.getRecordedAudio() === TEST_AUDIO_URL}\n          onClick={() => {\n            if (audioRef.current) {\n              audioRef.current.src = hmsDiagnostics?.getRecordedAudio() || \"\";\n              audioRef.current.play();\n            }\n          }}\n          disabled={\n            playing || hmsDiagnostics?.getRecordedAudio() === TEST_AUDIO_URL\n          }\n        >\n          <SpeakerIcon />\n          {playing ? \"Playing...\" : \"Playback\"}\n        </Button>\n        <audio\n          ref={audioRef}\n          onEnded={() => setPlaying(false)}\n          onPlay={() => setPlaying(true)}\n          style={{ display: \"none\" }}\n        />\n      </Flex>\n\n      <Flex\n        align=\"center\"\n        css={{\n          mt: \"$4\",\n          maxWidth: \"10rem\",\n          opacity: isRecording ? \"1\" : \"0\",\n          gap: \"$4\",\n        }}\n      >\n        <Text>\n          <MicOnIcon />\n        </Text>\n        <Progress.Root value={audioLevel} css={{ h: \"$2\" }}>\n          <Progress.Content\n            style={{\n              transform: `translateX(-${100 - audioLevel}%)`,\n              transition: \"transform 0.3s\",\n            }}\n          />\n        </Progress.Root>\n      </Flex>\n    </SelectContainer>\n  );\n};\n\nconst SpeakerTest = () => {\n  const actions = useHMSActions();\n  const devices = useHMSStore(selectDevices);\n  const { audioOutputDeviceId } = useHMSStore(selectLocalMediaSettings);\n\n  if (devices.audioOutput.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <SelectContainer>\n      <DeviceSelector\n        title=\"Speaker (Output)\"\n        devices={devices.audioOutput}\n        selection={audioOutputDeviceId || devices.audioOutput[0]?.deviceId}\n        icon={<SpeakerIcon />}\n        onChange={(deviceId: string) => {\n          actions.setAudioOutputDevice(deviceId);\n        }}\n      />\n    </SelectContainer>\n  );\n};\n\nexport const AudioTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const [error, setErrorAlone] = useState<Error | undefined>();\n\n  const setError = useCallback(\n    (err?: Error) => {\n      updateStep(DiagnosticsStep.AUDIO, { hasFailed: !!err });\n      setErrorAlone(err);\n    },\n    [updateStep, setErrorAlone]\n  );\n\n  useEffect(() => {\n    hmsDiagnostics\n      ?.requestPermission({ audio: true })\n      .catch((error) => setError(error));\n  }, [hmsDiagnostics, setError]);\n\n  return (\n    <>\n      <TestContainer>\n        <Text variant=\"body2\" css={{ c: \"$on_primary_medium\" }}>\n          Record a 10 second audio clip and play it back to check that your\n          microphone and speaker are working. If they aren't, make sure your\n          volume is turned up, try a different speaker or microphone, or check\n          your bluetooth settings.\n        </Text>\n\n        <Flex\n          css={{\n            mt: \"$10\",\n            gap: \"$10\",\n            \"@lg\": {\n              flexDirection: \"column\",\n              gap: \"$8\",\n            },\n          }}\n        >\n          <MicTest setError={setError} />\n          <SpeakerTest />\n        </Flex>\n      </TestContainer>\n      <TestFooter error={error} ctaText=\"Does your audio sound good?\" />\n      <PermissionErrorModal error={error as HMSException} />\n    </>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { parsedUserAgent } from \"@100mslive/react-sdk\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nconst CMS_MEDIA_SERVER = \"https://storage.googleapis.com/100ms-cms-prod/\";\n\nexport const operatingSystemIconInfo = {\n  tizen: {\n    key: \"tizen\",\n    val: \"Tizen\",\n    icon: `${CMS_MEDIA_SERVER}cms/Tizen_b99350214e/Tizen_b99350214e.svg`,\n  },\n  \"mac os\": {\n    key: \"macos\",\n    val: \"Mac OS\",\n    icon: `${CMS_MEDIA_SERVER}cms/mac_OS_804456afd8/mac_OS_804456afd8.png`,\n  },\n  windows: {\n    key: \"windows\",\n    val: \"Windows\",\n    icon: `${CMS_MEDIA_SERVER}cms/Windows_fdfe6749b6/Windows_fdfe6749b6.svg`,\n  },\n  linux: {\n    key: \"linux\",\n    val: \"Linux\",\n    icon: `${CMS_MEDIA_SERVER}cms/Linux_31f8353a2e/Linux_31f8353a2e.svg`,\n  },\n  chromium: {\n    key: \"chromium\",\n    val: \"Chromium\",\n    icon: `${CMS_MEDIA_SERVER}cms/Chromium_3df17710bd/Chromium_3df17710bd.svg`,\n  },\n  ubuntu: {\n    key: \"ubuntu\",\n    val: \"Ubuntu\",\n    icon: `${CMS_MEDIA_SERVER}cms/Ubuntu_966dd923c5/Ubuntu_966dd923c5.svg`,\n  },\n  ios: {\n    key: \"ios\",\n    val: \"iOS\",\n    icon: `${CMS_MEDIA_SERVER}cms/i_OS_3cdc9d9b71/i_OS_3cdc9d9b71.svg`,\n  },\n  android: {\n    key: \"android\",\n    val: \"Android\",\n    icon: `${CMS_MEDIA_SERVER}cms/Android_49dcfdc934/Android_49dcfdc934.svg`,\n  },\n};\n\nexport const browserTypeIconInfo = {\n  brave: {\n    key: \"brave\",\n    val: \"Brave\",\n    icon: `${CMS_MEDIA_SERVER}cms/Brave_7e66131f09/Brave_7e66131f09.svg`,\n  },\n  chrome: {\n    key: \"chrome\",\n    val: \"Chrome\",\n    icon: `${CMS_MEDIA_SERVER}cms/Chrome_7bf77fbdd7/Chrome_7bf77fbdd7.svg`,\n  },\n  firefox: {\n    key: \"firefox\",\n    val: \"Firefox\",\n    icon: `${CMS_MEDIA_SERVER}cms/Firefox_30f3976fb8/Firefox_30f3976fb8.svg`,\n  },\n  safari: {\n    key: \"safari\",\n    val: \"Safari\",\n    icon: `${CMS_MEDIA_SERVER}cms/Safari_254e74ed94/Safari_254e74ed94.svg`,\n  },\n  \"mobile safari\": {\n    key: \"safari\",\n    val: \"Safari\",\n    icon: `${CMS_MEDIA_SERVER}cms/Safari_254e74ed94/Safari_254e74ed94.svg`,\n  },\n  edge: {\n    key: \"edge\",\n    val: \"Edge\",\n    icon: `${CMS_MEDIA_SERVER}cms/Edge_23add4a83f/Edge_23add4a83f.svg`,\n  },\n  opera: {\n    key: \"opera\",\n    val: \"Opera\",\n    icon: `${CMS_MEDIA_SERVER}cms/Opera_0f3bf4eb19/Opera_0f3bf4eb19.svg`,\n  },\n};\n\nconst CheckDetails = ({\n  title,\n  value,\n  iconURL,\n}: {\n  title: string;\n  value: string;\n  iconURL?: string;\n}) => (\n  <Box\n    css={{\n      w: \"100%\",\n      my: \"$10\",\n      p: \"$10\",\n      r: \"$1\",\n      bg: \"$surface_default\",\n      \"@lg\": { w: \"auto\" },\n    }}\n  >\n    <Text css={{ c: \"$on_primary_medium\", mb: \"$6\" }}>{title}</Text>\n    <Flex align=\"center\">\n      {iconURL && (\n        <Box\n          css={{ size: \"2rem\", r: \"$round\", bg: \"$surface_brighter\", mr: \"$4\" }}\n        >\n          <img\n            style={{ objectFit: \"contain\", width: \"2rem\" }}\n            src={iconURL}\n            alt={value}\n          />\n        </Box>\n      )}\n      <Text>{value}</Text>\n    </Flex>\n  </Box>\n);\n\nexport const BrowserTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const [error, setError] = useState<Error | undefined>();\n  useEffect(() => {\n    try {\n      hmsDiagnostics?.checkBrowserSupport();\n    } catch (err) {\n      updateStep(DiagnosticsStep.BROWSER, { hasFailed: true });\n      setError(err as Error);\n    }\n  }, [hmsDiagnostics, updateStep]);\n  return (\n    <>\n      <TestContainer\n        css={{ display: \"flex\", gap: \"$8\", \"@lg\": { display: \"block\" } }}\n      >\n        <CheckDetails\n          title=\"Browser\"\n          iconURL={\n            parsedUserAgent.getBrowser().name &&\n            browserTypeIconInfo[\n              parsedUserAgent\n                .getBrowser()\n                .name?.toLowerCase() as keyof typeof browserTypeIconInfo\n            ]?.icon\n          }\n          value={`${parsedUserAgent.getBrowser().name} ${\n            parsedUserAgent.getBrowser().version\n          }`}\n        />\n        <CheckDetails\n          title=\"Operating system\"\n          iconURL={\n            parsedUserAgent.getOS().name &&\n            operatingSystemIconInfo[\n              parsedUserAgent\n                .getOS()\n                .name?.toLowerCase() as keyof typeof operatingSystemIconInfo\n            ]?.icon\n          }\n          value={`${parsedUserAgent.getOS().name} ${\n            parsedUserAgent.getOS().version\n          }`}\n        />\n      </TestContainer>\n      <TestFooter error={error} ctaText=\"Is your device information correct?\" />\n    </>\n  );\n};\n", "import React, { useState } from \"react\";\nimport {\n  ConnectivityCheckResult,\n  ConnectivityState,\n  DiagnosticsRTCStats,\n} from \"@100mslive/react-sdk\";\nimport {\n  CheckCircleIcon,\n  CrossCircleIcon,\n  EyeCloseIcon,\n  EyeOpenIcon,\n  LinkIcon,\n} from \"@100mslive/react-icons\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Button } from \"../Button\";\nimport { Box, Flex } from \"../Layout\";\nimport { Loading } from \"../Loading\";\nimport { formatBytes } from \"../Stats\";\nimport { Text } from \"../Text\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nconst Regions = {\n  in: \"India\",\n  eu: \"Europe\",\n  us: \"United States\",\n};\n\nconst ConnectivityStateMessage = {\n  [ConnectivityState.STARTING]: \"Fetching Init\",\n  [ConnectivityState.INIT_FETCHED]: \"Connecting to signal server\",\n  [ConnectivityState.SIGNAL_CONNECTED]: \"Establishing ICE connection\",\n  [ConnectivityState.ICE_ESTABLISHED]: \"Capturing Media\",\n  [ConnectivityState.MEDIA_CAPTURED]: \"Publishing Media\",\n  [ConnectivityState.MEDIA_PUBLISHED]: \"Finishing Up\",\n  [ConnectivityState.COMPLETED]: \"Completed\",\n};\n\nexport const ConnectivityTestStepResult = ({\n  title,\n  status = \"Connected\",\n  success,\n  children,\n}: {\n  title: string;\n  status?: string;\n  success?: boolean;\n  children: React.ReactNode;\n}) => {\n  const [hideDetails, setHideDetails] = useState(true);\n\n  return (\n    <Box css={{ my: \"$10\", p: \"$10\", r: \"$1\", bg: \"$surface_bright\" }}>\n      <Text css={{ c: \"$on_primary_medium\", mb: \"$6\" }}>{title}</Text>\n      {success ? (\n        <Flex>\n          <Text css={{ c: \"$alert_success\" }}>\n            <CheckCircleIcon width=\"1.5rem\" height=\"1.5rem\" />\n          </Text>\n          <Text variant=\"lg\" css={{ ml: \"$4\" }}>\n            {status}\n          </Text>\n        </Flex>\n      ) : (\n        <Flex>\n          <Text css={{ c: \"$alert_error_bright\" }}>\n            <CrossCircleIcon width=\"1.5rem\" height=\"1.5rem\" />\n          </Text>\n          <Text variant=\"lg\" css={{ ml: \"$4\" }}>\n            Failed\n          </Text>\n        </Flex>\n      )}\n      <Flex\n        onClick={() => setHideDetails(!hideDetails)}\n        align=\"center\"\n        gap=\"2\"\n        css={{\n          color: \"$primary_bright\",\n        }}\n      >\n        {hideDetails ? <EyeOpenIcon /> : <EyeCloseIcon />}\n        <Text\n          variant=\"caption\"\n          css={{\n            color: \"$primary_bright\",\n          }}\n        >\n          {hideDetails ? \"View\" : \"Hide\"} detailed information\n        </Text>\n      </Flex>\n      {!hideDetails ? <Box>{children}</Box> : null}\n    </Box>\n  );\n};\n\nconst DetailedInfo = ({\n  title,\n  value,\n  Icon,\n}: {\n  title: string;\n  value: string;\n  Icon?: (props: React.SVGProps<SVGSVGElement>) => React.JSX.Element;\n}) => {\n  return (\n    <Box css={{ flex: \"50%\", mt: \"$6\" }}>\n      <Text\n        variant=\"caption\"\n        css={{ fontWeight: \"$semiBold\", c: \"$on_primary_medium\" }}\n      >\n        {title}\n      </Text>\n      <Flex css={{ mt: \"$xs\", alignItems: \"flex-start\" }}>\n        {Icon && (\n          <Text css={{ mr: \"$4\" }}>\n            <Icon width=\"1rem\" height=\"1rem\" />\n          </Text>\n        )}\n        <Text variant=\"caption\">{value}</Text>\n      </Flex>\n    </Box>\n  );\n};\n\nconst MediaServerResult = ({\n  result,\n}: {\n  result?: ConnectivityCheckResult[\"mediaServerReport\"];\n}) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Media server connection test\"\n      success={result?.isPublishICEConnected && result.isSubscribeICEConnected}\n    >\n      <Flex css={{ flexWrap: \"wrap\" }}>\n        <DetailedInfo\n          title=\"Media Captured\"\n          value={result?.stats?.audio.bytesSent ? \"Yes\" : \"No\"}\n          Icon={\n            result?.stats?.audio.bytesSent ? CheckCircleIcon : CrossCircleIcon\n          }\n        />\n        <DetailedInfo\n          title=\"Media Published\"\n          value={result?.stats?.audio.bitrateSent ? \"Yes\" : \"No\"}\n          Icon={\n            result?.stats?.audio.bytesSent ? CheckCircleIcon : CrossCircleIcon\n          }\n        />\n        {result?.connectionQualityScore ? (\n          <DetailedInfo\n            title=\"Connection Quality Score (CQS)\"\n            value={`${result.connectionQualityScore.toFixed(2)} (out of 5)`}\n          />\n        ) : null}\n      </Flex>\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst SignallingResult = ({\n  result,\n}: {\n  result?: ConnectivityCheckResult[\"signallingReport\"];\n}) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Signalling server connection test\"\n      success={result?.isConnected}\n    >\n      <Flex css={{ flexWrap: \"wrap\" }}>\n        <DetailedInfo\n          title=\"Signalling Gateway\"\n          value={result?.isConnected ? \"Reachable\" : \"Unreachable\"}\n          Icon={result?.isConnected ? CheckCircleIcon : CrossCircleIcon}\n        />\n        <DetailedInfo\n          title=\"Websocket URL\"\n          value={result?.websocketUrl || \"N/A\"}\n          Icon={LinkIcon}\n        />\n      </Flex>\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst AudioStats = ({ stats }: { stats: DiagnosticsRTCStats | undefined }) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Audio\"\n      status=\"Received\"\n      success={!!stats?.bytesSent}\n    >\n      {stats && (\n        <Flex css={{ flexWrap: \"wrap\" }}>\n          <DetailedInfo\n            title=\"Bytes Sent\"\n            value={formatBytes(stats.bytesSent)}\n          />\n          <DetailedInfo\n            title=\"Bytes Received\"\n            value={formatBytes(stats.bytesReceived)}\n          />\n          <DetailedInfo\n            title=\"Packets Received\"\n            value={stats.packetsReceived.toString()}\n          />\n          <DetailedInfo\n            title=\"Packets Lost\"\n            value={stats.packetsLost.toString()}\n          />\n          <DetailedInfo\n            title=\"Bitrate Sent\"\n            value={formatBytes(stats.bitrateSent, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Bitrate Received\"\n            value={formatBytes(stats.bitrateReceived, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Round Trip Time\"\n            value={`${stats.roundTripTime} ms`}\n          />\n        </Flex>\n      )}\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst VideoStats = ({ stats }: { stats: DiagnosticsRTCStats | undefined }) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Video\"\n      status=\"Received\"\n      success={!!stats?.bytesSent}\n    >\n      {stats && (\n        <Flex css={{ flexWrap: \"wrap\" }}>\n          <DetailedInfo\n            title=\"Bytes Sent\"\n            value={formatBytes(stats.bytesSent)}\n          />\n          <DetailedInfo\n            title=\"Bytes Received\"\n            value={formatBytes(stats.bytesReceived)}\n          />\n          <DetailedInfo\n            title=\"Packets Received\"\n            value={stats.packetsReceived.toString()}\n          />\n          <DetailedInfo\n            title=\"Packets Lost\"\n            value={stats.packetsLost.toString()}\n          />\n          <DetailedInfo\n            title=\"Bitrate Sent\"\n            value={formatBytes(stats.bitrateSent, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Bitrate Received\"\n            value={formatBytes(stats.bitrateReceived, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Round Trip Time\"\n            value={`${stats.roundTripTime} ms`}\n          />\n        </Flex>\n      )}\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst Footer = ({\n  error,\n  result,\n  restart,\n}: {\n  result?: ConnectivityCheckResult;\n  restart: () => void;\n  error?: Error;\n}) => {\n  return (\n    <TestFooter error={error}>\n      <Flex css={{ gap: \"$8\", \"@lg\": { flexDirection: \"column\" } }}>\n        <Button variant=\"standard\" onClick={restart}>\n          Restart Test\n        </Button>\n        <Button\n          disabled={!result}\n          onClick={() =>\n            result && downloadJson(result, \"hms_diagnostics_results\")\n          }\n        >\n          Download Test Report\n        </Button>\n      </Flex>\n    </TestFooter>\n  );\n};\n\nconst ConnectivityTestReport = ({\n  error,\n  result,\n  progress,\n  startTest,\n}: {\n  error?: Error;\n  result?: ConnectivityCheckResult;\n  progress?: ConnectivityState;\n  startTest: () => void;\n}) => {\n  if (error) {\n    return (\n      <>\n        <TestContainer css={{ textAlign: \"center\" }}>\n          <Text css={{ c: \"$alert_error_default\", mb: \"$4\" }}>\n            <CrossCircleIcon />\n          </Text>\n          <Text variant=\"h6\">Connectivity Test Failed</Text>\n          <Text variant=\"body2\" css={{ c: \"$on_primary_medium\" }}>\n            {error.message}\n          </Text>\n        </TestContainer>\n        <Footer restart={startTest} error={error} />\n      </>\n    );\n  }\n\n  if (result) {\n    // for debugging and quick view of results\n    console.log(result);\n    return (\n      <>\n        <TestContainer>\n          <Text css={{ c: \"$on_primary_medium\" }}>\n            Connectivity test has been completed.\n          </Text>\n          <SignallingResult result={result?.signallingReport} />\n          <MediaServerResult result={result?.mediaServerReport} />\n          <AudioStats stats={result?.mediaServerReport?.stats?.audio} />\n          <VideoStats stats={result?.mediaServerReport?.stats?.video} />\n        </TestContainer>\n        <Footer result={result} restart={startTest} error={error} />\n      </>\n    );\n  }\n\n  if (progress !== undefined) {\n    return (\n      <TestContainer css={{ textAlign: \"center\" }}>\n        <Text\n          css={{\n            c: \"$primary_bright\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Loading size=\"3.5rem\" color=\"currentColor\" />\n        </Text>\n        <Text variant=\"h6\" css={{ mt: \"$8\" }}>\n          Checking your connection...\n        </Text>\n        <Text\n          variant=\"body2\"\n          css={{ c: \"$on_primary_medium\", mt: \"$4\" }}\n        >{`${ConnectivityStateMessage[progress]}...`}</Text>\n      </TestContainer>\n    );\n  }\n\n  return null;\n};\n\nconst RegionSelector = ({\n  region,\n  setRegion,\n  startTest,\n}: {\n  region?: string;\n  startTest?: () => void;\n  setRegion: (region: string) => void;\n}) => {\n  return (\n    <TestContainer css={{ borderBottom: \"1px solid $border_default\" }}>\n      <Text variant=\"body1\">Select a region</Text>\n      <Text variant=\"body2\" css={{ c: \"$on_secondary_low\" }}>\n        Select the closest region for best results\n      </Text>\n      <Flex\n        justify=\"between\"\n        css={{\n          mt: \"$md\",\n          \"@lg\": {\n            flexDirection: \"column\",\n            gap: \"$8\",\n          },\n        }}\n      >\n        <Flex\n          css={{\n            gap: \"$4\",\n            \"@lg\": {\n              flexDirection: \"column\",\n            },\n          }}\n        >\n          {Object.entries(Regions).map(([key, value]) => (\n            <Button\n              key={key}\n              outlined={region !== key}\n              variant={region === key ? \"primary\" : \"standard\"}\n              css={region === key ? { bg: \"$primary_dim\" } : {}}\n              onClick={() => setRegion(key)}\n            >\n              {value}\n            </Button>\n          ))}\n        </Flex>\n        <Flex css={{ \"@lg\": { flexDirection: \"column\" } }}>\n          <Button variant=\"primary\" onClick={startTest} disabled={!startTest}>\n            {startTest ? \"Start Test\" : \"Testing...\"}\n          </Button>\n        </Flex>\n      </Flex>\n    </TestContainer>\n  );\n};\n\nexport const ConnectivityTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const [region, setRegion] = useState<string | undefined>(\n    Object.keys(Regions)[0]\n  );\n  const [error, setError] = useState<Error | undefined>();\n  const [progress, setProgress] = useState<ConnectivityState>();\n  const [result, setResult] = useState<ConnectivityCheckResult | undefined>();\n\n  const startTest = () => {\n    updateStep(DiagnosticsStep.CONNECTIVITY, {\n      hasFailed: false,\n      isCompleted: false,\n    });\n    setError(undefined);\n    setResult(undefined);\n    hmsDiagnostics\n      ?.startConnectivityCheck(\n        (state) => {\n          setProgress(state);\n        },\n        (result) => {\n          updateStep(DiagnosticsStep.CONNECTIVITY, { isCompleted: true });\n          setResult(result);\n        },\n        region\n      )\n      .catch((error) => {\n        updateStep(DiagnosticsStep.CONNECTIVITY, { hasFailed: true });\n        setError(error);\n      });\n  };\n\n  return (\n    <>\n      <RegionSelector\n        region={region}\n        setRegion={setRegion}\n        startTest={\n          progress === undefined || progress === ConnectivityState.COMPLETED\n            ? startTest\n            : undefined\n        }\n      />\n      <ConnectivityTestReport\n        error={error}\n        result={result}\n        progress={progress}\n        startTest={startTest}\n      />\n    </>\n  );\n};\n\nconst downloadJson = (obj: object, fileName: string) => {\n  const a = document.createElement(\"a\");\n  const file = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json\",\n  });\n  a.href = URL.createObjectURL(file);\n  a.download = `${fileName}.json`;\n  a.click();\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSException,\n  selectDevices,\n  selectLocalMediaSettings,\n  selectLocalVideoTrackID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { VideoOnIcon } from \"@100mslive/react-icons\";\nimport { PermissionErrorModal } from \"../Prebuilt/components/Notifications/PermissionErrorModal\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { Video } from \"../Video\";\nimport { StyledVideoTile } from \"../VideoTile\";\n// @ts-ignore: No implicit any\nimport { DeviceSelector } from \"./DeviceSelector\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nexport const VideoTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const allDevices = useHMSStore(selectDevices);\n  const { videoInput } = allDevices;\n  const trackID = useHMSStore(selectLocalVideoTrackID);\n  const sdkSelectedDevices = useHMSStore(selectLocalMediaSettings);\n  const [error, setError] = useState<HMSException | undefined>();\n\n  useEffect(() => {\n    hmsDiagnostics?.startCameraCheck().catch((err) => {\n      updateStep(DiagnosticsStep.VIDEO, { hasFailed: true });\n      setError(err);\n    });\n  }, [hmsDiagnostics, updateStep]);\n\n  return (\n    <>\n      <TestContainer\n        css={{\n          display: \"flex\",\n          \"@lg\": { flexDirection: \"column\", alignItems: \"center\" },\n        }}\n      >\n        {trackID && (\n          <StyledVideoTile.Container\n            css={{\n              width: \"90%\",\n              aspectRatio: \"16/9\",\n              mr: \"$10\",\n              \"@lg\": { mr: 0, mb: \"$10\", aspectRatio: \"1/1\" },\n            }}\n          >\n            <Video mirror={true} trackId={trackID} />\n          </StyledVideoTile.Container>\n        )}\n        <Flex direction=\"column\" css={{ w: \"100%\" }}>\n          <Text variant=\"body2\" css={{ c: \"$on_primary_medium\", mb: \"$10\" }}>\n            Move in front of your camera to make sure it's working. If you don't\n            see your video, try changing the selected camera. If the camera\n            isn't part of your computer, check your settings to make sure your\n            system recognizes it.\n          </Text>\n          <DeviceSelector\n            title=\"Video\"\n            devices={videoInput || []}\n            icon={<VideoOnIcon />}\n            selection={sdkSelectedDevices.videoInputDeviceId}\n            onChange={async (deviceId: string) => {\n              hmsDiagnostics?.stopCameraCheck();\n              hmsDiagnostics?.startCameraCheck(deviceId);\n            }}\n          />\n        </Flex>\n      </TestContainer>\n      <TestFooter error={error} ctaText=\"Does your video look good?\" />\n      <PermissionErrorModal error={error} />\n    </>\n  );\n};\n", "import React, { useCallback, useRef, useState } from \"react\";\nimport { HMSRoomProvider, useHMSActions } from \"@100mslive/react-sdk\";\nimport {\n  CheckCircleIcon,\n  ConnectivityIcon,\n  CrossCircleIcon,\n  GlobeIcon,\n  MicOnIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { HMSThemeProvider } from \"../Theme\";\nimport { AudioTest } from \"./AudioTest\";\nimport { BrowserTest } from \"./BrowserTest\";\nimport { ConnectivityTest } from \"./ConnectivityTest\";\nimport {\n  DiagnosticsContext,\n  DiagnosticsStep,\n  DiagnosticsStepInfo,\n  initialSteps,\n  useDiagnostics,\n} from \"./DiagnosticsContext\";\nimport { VideoTest } from \"./VideoTest\";\n\nconst DiagnosticsStepIcon: Record<DiagnosticsStep, React.ReactNode> = {\n  [DiagnosticsStep.VIDEO]: <VideoOnIcon width=\"2rem\" height=\"2rem\" />,\n  [DiagnosticsStep.AUDIO]: <MicOnIcon width=\"2rem\" height=\"2rem\" />,\n  [DiagnosticsStep.BROWSER]: <GlobeIcon width=\"2rem\" height=\"2rem\" />,\n  [DiagnosticsStep.CONNECTIVITY]: (\n    <ConnectivityIcon width=\"2rem\" height=\"2rem\" />\n  ),\n};\n\nconst Container = ({ children }: { children: React.ReactNode }) => (\n  <Box\n    css={{\n      px: \"120px\",\n      pt: \"120px\",\n      pb: \"24px\",\n      bg: \"$background_dim\",\n      lineHeight: \"1.5\",\n      \"-webkit-text-size-adjust\": \"100%\",\n      position: \"relative\",\n      h: \"100%\",\n      \"@lg\": {\n        p: \"$12\",\n      },\n      overflowY: \"auto\",\n      boxSizing: \"border-box\",\n      \"& *\": {\n        boxSizing: \"border-box\",\n      },\n      \"::-webkit-scrollbar-track\": {\n        WebkitBoxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n        boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"transparent\",\n      },\n      \"::-webkit-scrollbar\": {\n        width: \"6px\",\n        height: \"6px\",\n        backgroundColor: \"transparent\",\n      },\n      \"::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#657080\",\n        borderRadius: \"5px\",\n      },\n    }}\n  >\n    {children}\n  </Box>\n);\n\nconst DiagnosticsStepTest = () => {\n  const { activeStepIndex } = useDiagnostics();\n\n  let TestComponent = () => <></>;\n\n  if (activeStepIndex === DiagnosticsStep.AUDIO) {\n    TestComponent = AudioTest;\n  } else if (activeStepIndex === DiagnosticsStep.VIDEO) {\n    TestComponent = VideoTest;\n  } else if (activeStepIndex === DiagnosticsStep.BROWSER) {\n    TestComponent = BrowserTest;\n  } else if (activeStepIndex === DiagnosticsStep.CONNECTIVITY) {\n    TestComponent = ConnectivityTest;\n  }\n\n  return <TestComponent key={activeStepIndex} />;\n};\n\nconst DiagnosticsStepHeader = () => {\n  const { activeStepIndex, activeStep } = useDiagnostics();\n  return (\n    <Flex\n      css={{\n        py: \"$8\",\n        px: \"$10\",\n        alignItems: \"center\",\n        borderBottom: \"1px solid $border_default\",\n      }}\n    >\n      <Text css={{ c: \"$primary_bright\", mt: \"$xs\" }}>\n        {DiagnosticsStepIcon[activeStepIndex]}\n      </Text>\n      <Text css={{ fontSize: \"$h6\", ml: \"$9\" }}>{activeStep.name}</Text>\n    </Flex>\n  );\n};\n\nconst DiagnosticsStepContainer = () => {\n  return (\n    <Box\n      css={{\n        border: \"1px solid $border_default\",\n        r: \"$1\",\n        w: \"75%\",\n        maxWidth: \"65rem\",\n        \"@lg\": { w: \"100%\" },\n      }}\n    >\n      <DiagnosticsStepHeader />\n      <DiagnosticsStepTest />\n    </Box>\n  );\n};\n\nconst DiagnosticsStepsList = () => {\n  const { activeStepIndex, activeStep, steps } = useDiagnostics();\n\n  return (\n    <Box css={{ w: \"25%\", \"@lg\": { display: \"none\" } }}>\n      {Object.keys(DiagnosticsStep)\n        .filter((key) => !isNaN(Number(key)))\n        .map((key) => {\n          const keyIndex = Number(key);\n          const step = steps[keyIndex as DiagnosticsStep];\n          const isStepCompleted =\n            activeStepIndex > keyIndex || activeStep.isCompleted;\n\n          let color = \"$on_primary_low\";\n          let icon = (\n            <Text css={{ c: color, fontSize: \"1.75rem\" }}>&bull;</Text>\n          );\n\n          if (activeStepIndex === keyIndex) {\n            color = \"$on_primary_high\";\n            icon = <Text css={{ c: color, fontSize: \"1.75rem\" }}>&bull;</Text>;\n          }\n          if (isStepCompleted) {\n            color = \"$primary_bright\";\n            icon = <CheckCircleIcon width=\"1rem\" height=\"1rem\" />;\n          }\n          if (step.hasFailed) {\n            color = \"$alert_error_default\";\n            icon = <CrossCircleIcon width=\"1rem\" height=\"1rem\" />;\n          }\n\n          return (\n            <Flex\n              key={key}\n              css={{ mb: \"$10\", c: color, gap: \"$4\", alignItems: \"center\" }}\n            >\n              {icon}\n              <Text css={{ c: color }}>{step.name}</Text>\n            </Flex>\n          );\n        })}\n    </Box>\n  );\n};\n\nconst DiagnosticsProvider = () => {\n  const actions = useHMSActions();\n  const [activeStep, setActiveStep] = useState(0);\n  const [steps, setSteps] = useState(initialSteps);\n  const diagnosticsRef = useRef(actions.initDiagnostics());\n\n  const updateStep = useCallback(\n    (step: DiagnosticsStep, value: Omit<DiagnosticsStepInfo, \"name\">) => {\n      setSteps((prevSteps) => ({\n        ...prevSteps,\n        [step]: { ...prevSteps[step], ...value },\n      }));\n    },\n    []\n  );\n\n  return (\n    <DiagnosticsContext.Provider\n      value={{\n        hmsDiagnostics: diagnosticsRef.current,\n        activeStepIndex: activeStep,\n        setActiveStep,\n        steps,\n        updateStep,\n      }}\n    >\n      <Container>\n        <Text variant=\"h4\">Pre-call Test</Text>\n        <Text variant=\"md\" css={{ c: \"$on_primary_medium\" }}>\n          Make sure your devices and network are good to go, let's get started.\n        </Text>\n        <Flex css={{ direction: \"column\", mt: \"$12\", justifyItems: \"center\" }}>\n          <DiagnosticsStepsList />\n          <DiagnosticsStepContainer />\n        </Flex>\n      </Container>\n    </DiagnosticsContext.Provider>\n  );\n};\n\nexport const Diagnostics = () => {\n  return (\n    <HMSRoomProvider>\n      <HMSThemeProvider themeType=\"default\">\n        <DiagnosticsProvider />\n      </HMSThemeProvider>\n    </HMSRoomProvider>\n  );\n};\n", "export { Diagnostics } from \"./Diagnostics\";\n", "export * from \"./Button\";\nexport * from \"./Text\";\nexport * from \"./IconButton\";\nexport * from \"./Layout\";\nexport * from \"./Avatar\";\nexport * from \"./Divider\";\nexport * from \"./Switch\";\nexport * from \"./Tooltip\";\nexport * from \"./Select\";\nexport * from \"./Slider\";\nexport * from \"./Modal\";\nexport * from \"./Loading\";\nexport * from \"./Input\";\nexport * from \"./VideoTile\";\nexport * from \"./VideoList\";\nexport * from \"./Pagination\";\nexport * from \"./Dropdown\";\nexport { textEllipsis, flexCenter, slideLeftAndFade } from \"./utils\";\nexport * from \"./Video\";\nexport * from \"./TileMenu\";\nexport * from \"./AudioLevel\";\nexport * from \"./Popover\";\nexport * from \"./Stats\";\nexport * from \"./Theme\";\nexport * from \"./Checkbox\";\nexport * from \"./Label\";\nexport * from \"./RadioGroup\";\nexport * from \"./Toast\";\nexport * from \"./Accordion\";\nexport * from \"./Fieldset\";\nexport * from \"./Footer\";\nexport * as HMSSelect from \"./ReactSelect\";\nexport * from \"./Tabs\";\nexport * from \"./QRCode\";\nexport * from \"./Link\";\nexport * from \"./Collapsible\";\nexport * from \"./Prebuilt\";\nexport * from \"./Progress\";\nexport * from \"./context/DialogContext\";\nexport * from \"./TextArea\";\nexport * from \"./Diagnostics\";\n"],
  "mappings": "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",
  "names": ["defaultStitchesThemeMap", "_a", "_b", "QUESTION_TYPE_TITLE", "import_react", "theme", "merge", "import_react", "import_react", "ThemeTypes", "React", "isBrowser", "updatedTheme", "import_react", "_a", "_b", "React", "init_Loading", "import_react", "init_Loading", "React", "_a", "_b", "init_Button", "init_Text", "init_IconButton", "_a", "_b", "import_react", "_a", "_b", "css", "React", "init_Avatar", "init_Divider", "import_react", "React", "init_Switch", "import_react", "React", "init_Tooltip", "import_react", "import_react_icons", "Root", "_a", "React", "init_Select", "import_react", "Root", "Track", "Range", "Thumb", "init_Tooltip", "_a", "_b", "React", "init_Slider", "import_react", "import_react_icons", "init_IconButton", "React", "React", "import_react", "import_react", "import_react", "React", "import_react", "import_react_icons", "_a", "_b", "css", "React", "init_Input", "Root", "Overlay", "Root", "Container", "Root", "init_Dropdown", "import_react", "import_react_sdk", "_a", "_b", "React", "init_Video", "Root", "Flex", "theme", "import_react", "import_react_sdk", "import_react", "import_react_sdk", "React", "init_AudioLevel", "StyledContent", "StyledTrigger", "Popover", "Root", "Root", "Label", "import_react", "import_react_sdk", "_a", "_b", "React", "import_react", "import_react_sdk", "init_Tooltip", "init_Stats", "init_Checkbox", "Label", "init_Label", "init_RadioGroup", "import_react", "import_react_icons", "init_IconButton", "init_Text", "css", "React", "_a", "_b", "init_Toast", "import_react", "import_react_icons", "StyledTrigger", "StyledContent", "React", "_a", "_b", "css", "init_Accordion", "init_Fieldset", "Root", "init_Footer", "StyledTrigger", "StyledContent", "StyledItem", "Select", "Select", "init_ReactSelect", "StyledTrigger", "StyledContent", "init_Tabs", "import_react", "React", "init_QRCode", "import_react", "init_Text", "_a", "_b", "Icon", "React", "init_Link", "init_Collapsible", "import_react", "init_Label", "init_Switch", "React", "Label", "import_react", "import_react_use", "import_react", "import_react_sdk", "_a", "_b", "value", "import_react", "import_react_sdk", "import_react_icons", "React", "init_constants", "import_react", "init_constants", "_a", "layout", "_b", "import_react", "import_lodash", "React", "_a", "init_utils", "_a", "_b", "_a", "_b", "details", "import_react", "import_react_sdk", "init_utils", "import_react", "import_react_sdk", "view", "init_constants", "import_react", "import_react_use", "import_react_sdk", "init_constants", "React", "_a", "_b", "import_react", "React", "import_react_sdk", "_a", "_b", "_a", "_b", "import_react", "import_react", "import_react_use", "import_ts_pattern", "import_react_sdk", "React", "isLeaveScreenEnabled", "prevState", "import_react", "import_react_use", "import_ts_pattern", "import_uuid", "import_react_sdk", "init_Text", "React", "uuid", "error", "_a", "IconButton", "init_IconButton", "import_react", "import_react_icons", "Icon", "init_Dropdown", "init_Tooltip", "init_IconButton", "React", "import_react", "init_Text", "_a", "_b", "React", "import_react", "DialogPrimitive", "StyledContent", "React", "_a", "_b", "init_Sheet", "import_react", "import_react_icons", "React", "css", "import_react", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "_a", "React", "_b", "import_react", "import_react_icons", "React", "import_react", "import_react_use", "import_react_icons", "init_Divider", "init_IconButton", "init_Sheet", "init_Tabs", "init_Text", "React", "_a", "Icon", "Content", "import_react", "import_react_sdk", "import_react_icons", "init_AudioLevel", "init_Dropdown", "init_Switch", "init_Text", "init_Tooltip", "init_IconButton", "React", "_a", "import_react", "import_react_sdk", "import_react_icons", "init_Tooltip", "init_IconButton", "React", "import_react", "React", "import_react", "_a", "import_react", "import_react_use", "import_join_form", "import_react_sdk", "init_utils", "_b", "hlsPlayer", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_Dropdown", "init_Tooltip", "init_IconButton", "data", "_a", "React", "import_react", "import_react_sdk", "init_Tooltip", "init_IconButton", "React", "import_react", "import_react_sdk", "init_Tooltip", "init_IconButton", "React", "import_react", "import_react_icons", "init_Button", "init_Text", "React", "init_IconButton", "import_react", "init_Text", "css", "React", "import_react", "import_react_icons", "init_Button", "init_Text", "React", "import_react", "import_react_sdk", "import_react_icons", "init_Dropdown", "init_Tooltip", "React", "import_react", "import_react_sdk", "import_react_icons", "init_IconButton", "init_Sheet", "init_Tooltip", "React", "open", "import_react", "import_react_use", "import_react_sdk", "React", "import_react_sdk", "_a", "_b", "isMicActive", "isCamActive", "import_react", "import_react_sdk", "import_react_icons", "init_IconButton", "React", "import_react", "React", "init_TextArea", "import_react", "init_Text", "React", "import_react", "import_react_sdk", "import_react", "import_react_sdk", "import_react", "import_react_sdk", "import_react_icons", "init_Dropdown", "init_IconButton", "init_Sheet", "init_Text", "init_Tooltip", "_a", "_b", "React", "import_react", "import_react_use", "init_Text", "_a", "React", "import_react", "import_react_sdk", "match", "formatTime", "init_utils", "_a", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "Link", "init_Text", "init_Tooltip", "init_utils", "_b", "React", "formatTime", "data", "itemKey", "AutoSizer", "import_react", "import_react_sdk", "import_react_icons", "init_Text", "init_TextArea", "init_Tooltip", "init_IconButton", "init_utils", "_a", "_b", "React", "formatTime", "import_react", "import_react_icons", "init_Dropdown", "init_Text", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_Button", "init_Dropdown", "init_Sheet", "init_Text", "init_Tooltip", "React", "_a", "import_react", "import_react_icons", "init_DialogContent", "init_Button", "init_Divider", "init_IconButton", "init_Input", "init_Label", "init_Select", "init_Text", "_a", "_b", "Icon", "css", "React", "Label", "import_react", "import_react_icons", "init_DialogContent", "css", "React", "Label", "import_react", "import_react_sdk", "import_react_icons", "React", "import_react", "import_ts_pattern", "import_react_sdk", "StatsRow", "init_Divider", "init_Dropdown", "init_Label", "init_Stats", "init_Switch", "init_Text", "_a", "React", "Label", "_b", "layer", "local", "import_react", "import_react_sdk", "import_react_icons", "init_DialogContent", "_a", "_b", "React", "selectedRole", "import_react", "import_react_sdk", "import_react_icons", "init_Button", "init_Loading", "init_Text", "React", "id", "import_react", "import_react_use", "init_Sheet", "React", "import_react", "screenfull", "import_react", "import_react_icons", "React", "import_react", "import_react_sdk", "init_Button", "init_Label", "init_RadioGroup", "init_Text", "init_DialogContent", "init_constants", "React", "Label", "import_react", "import_react_sdk", "import_react_icons", "init_Sheet", "init_DialogContent", "React", "import_react", "import_react_sdk", "import_react", "import_react", "import_react", "import_react_sdk", "import_react", "import_ts_pattern", "import_react_sdk", "import_react_icons", "init_IconButton", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "StartRecording", "init_Sheet", "init_utils", "_a", "React", "Popover", "import_react", "import_react_icons", "init_Button", "init_Input", "init_Text", "React", "import_react", "import_react_use", "import_react_sdk", "init_Sheet", "React", "import_react", "import_react_sdk", "import_react", "import_hms_video_store", "import_react_sdk", "import_react", "import_react_use", "import_ts_pattern", "import_react_sdk", "import_react_icons", "MODALS", "init_Sheet", "init_IconButton", "init_utils", "React", "import_react", "import_react_use", "React", "import_react", "import_react_icons", "init_Tooltip", "init_IconButton", "css", "React", "init_IconButton", "import_react", "init_DialogContent", "React", "import_react", "React", "import_react", "import_react_icons", "init_DialogContent", "React", "import_react", "import_react_icons", "init_DialogContent", "React", "React", "import_react", "init_DialogContent", "React", "MODALS", "import_react", "import_react_sdk", "import_react_icons", "import_react", "import_react_sdk", "import_react_icons", "init_Tooltip", "init_utils", "css", "React", "import_react", "import_hmsvbplugin", "import_react_sdk", "import_react_icons", "init_Loading", "init_Tooltip", "init_IconButton", "_a", "React", "import_react", "import_react_sdk", "import_react_icons", "init_IconButton", "React", "theme", "import_react", "import_react_sdk", "import_react_icons", "_a", "theme", "React", "import_react", "import_react_sdk", "import_react_icons", "init_Dropdown", "init_Text", "_a", "React", "import_react", "import_ts_pattern", "import_react_sdk", "import_react_icons", "init_Dropdown", "init_Text", "init_utils", "React", "_a", "_b", "import_ts_pattern", "import_react_sdk", "_a", "data", "_a", "import_react", "import_react_use", "import_react_window", "import_react_sdk", "import_react_icons", "init_Accordion", "init_Button", "init_Divider", "init_Text", "init_utils", "React", "import_react", "import_react_sdk", "import_react", "import_react_sdk", "_a", "_b", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_IconButton", "init_utils", "React", "_a", "_b", "import_react", "import_react_icons", "init_IconButton", "React", "import_react", "import_react_sdk", "import_react_icons", "init_IconButton", "React", "import_react", "import_react_use", "import_react_sdk", "Footer", "init_Footer", "_a", "_b", "React", "React", "import_react", "import_react_sdk", "init_Button", "init_Text", "import_react", "import_react_sdk", "import_react_icons", "Container", "React", "import_react", "React", "React", "import_react", "import_react_sdk", "import_react_icons", "init_utils", "Container", "_a", "_b", "import_react", "import_react_icons", "init_Button", "init_Text", "React", "import_react", "React", "import_react", "import_react_icons", "init_Input", "init_IconButton", "React", "import_react", "React", "import_react", "React", "import_react", "import_react_icons", "React", "_a", "Label", "import_react", "import_react_icons", "React", "Label", "import_react", "import_react_icons", "init_utils", "_a", "index", "text", "options", "React", "import_react", "import_react_icons", "_a", "React", "index", "_a", "_b", "uuid", "React", "Container", "question", "import_react", "import_uuid", "import_react_sdk", "import_react_icons", "init_utils", "import_react", "import_react_icons", "init_Text", "init_utils", "React", "import_react", "init_Text", "React", "import_react", "import_react_sdk", "_a", "import_react", "import_react_sdk", "init_Text", "init_utils", "React", "_a", "import_react", "import_react_sdk", "import_react_icons", "init_Loading", "init_Text", "_a", "_b", "React", "Container", "import_react", "import_ts_pattern", "import_react_sdk", "import_react_icons", "QuestionCard", "init_utils", "React", "respondedToQuiz", "isLive", "isCorrectAnswer", "pollEnded", "import_react", "_a", "React", "QuestionCard", "import_react", "init_utils", "_a", "_b", "React", "QuestionCard", "import_react", "import_react_sdk", "import_react_icons", "init_utils", "_a", "_b", "React", "Container", "import_react", "React", "import_react", "import_react_sdk", "import_react_icons", "React", "_a", "import_react", "init_Text", "init_utils", "React", "import_react", "init_Text", "React", "import_react", "import_react_icons", "init_Text", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "React", "Root", "_a", "_b", "import_react", "import_react_use", "import_react_icons", "init_Dropdown", "init_Sheet", "init_Text", "_a", "_b", "React", "import_react", "import_react_sdk", "import_react", "_a", "_b", "React", "Popover", "Picker", "data", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "TextArea", "init_IconButton", "init_utils", "_a", "_b", "import_react", "import_react_sdk", "init_Button", "init_Text", "_a", "_b", "React", "import_react", "import_react_icons", "React", "import_react", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_Text", "_a", "_b", "React", "import_react", "import_react_use", "import_hms_video_store", "import_ts_pattern", "import_react_sdk", "import_react_icons", "init_Button", "_a", "_b", "React", "import_react", "import_react_use", "import_react_window", "import_react_sdk", "import_react_icons", "VirtualizedParticipantItem", "init_IconButton", "init_Loading", "init_Text", "init_utils", "React", "data", "_a", "search", "import_react", "import_react_sdk", "import_react_icons", "init_Text", "_a", "_b", "React", "Popover", "import_react", "import_react_use", "import_ts_pattern", "import_react_sdk", "import_react_icons", "ParticipantCount", "init_Tooltip", "init_utils", "React", "_a", "_b", "import_react", "import_react_sdk", "import_react_icons", "Wrapper", "React", "init_utils", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_Slider", "init_Text", "init_utils", "React", "_a", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_TileMenu", "init_Sheet", "init_Text", "init_utils", "_a", "_b", "theme", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_VideoTile", "init_TileMenu", "init_AudioLevel", "init_Avatar", "init_Stats", "init_Video", "init_utils", "React", "import_react", "Root", "Title", "Icon", "init_Text", "React", "import_react", "import_hmsvbplugin", "init_Text", "React", "import_react", "import_react_use", "import_hms_video_store", "import_hmsvbplugin", "import_react_sdk", "import_react_icons", "init_Text", "_a", "React", "import_react", "import_react_use", "import_ts_pattern", "import_react_sdk", "Wrapper", "init_VideoTile", "_a", "_b", "React", "import_react", "init_Text", "React", "css", "import_react", "init_Loading", "init_Text", "css", "React", "import_react", "import_react_use", "import_join_form", "import_react_sdk", "import_react_icons", "_a", "_b", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "Container", "init_AudioLevel", "init_IconButton", "init_utils", "React", "import_react", "import_react_use", "init_Sheet", "React", "import_react", "import_react_sdk", "React", "_a", "import_react", "init_Text", "React", "import_react", "React", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_Text", "init_IconButton", "init_VideoTile", "React", "Draggable", "import_react", "import_react_icons", "init_Pagination", "React", "import_react", "init_VideoTile", "React", "_a", "_b", "import_react", "import_react_use", "import_react_sdk", "_a", "React", "page", "import_react", "import_react_use", "import_react_icons", "init_Pagination", "import_react", "Root", "init_VideoTile", "React", "css", "_a", "_b", "import_react", "import_react_use", "import_react_sdk", "init_Pagination", "_a", "_b", "React", "page", "import_react", "_a", "React", "page", "import_react", "import_react_use", "import_react_sdk", "init_Pagination", "import_react", "import_react_icons", "init_Text", "React", "Popover", "import_react", "import_react_sdk", "import_react_icons", "init_Button", "init_Text", "React", "import_react", "import_react_use", "import_screenfull", "import_react_sdk", "import_react_icons", "Tile", "init_TileMenu", "init_Stats", "init_Video", "theme", "screenfull", "React", "import_react", "import_react_use", "import_react_sdk", "init_Pagination", "_a", "React", "import_react", "import_react_use", "import_react_sdk", "React", "import_react_sdk", "_a", "import_react", "import_react_sdk", "React", "import_react", "import_react_sdk", "React", "smallTilePeers", "import_react", "import_react_sdk", "React", "import_react", "import_react_draggable", "import_react_use", "import_react_sdk", "init_Text", "data", "_a", "React", "Draggable", "import_react", "import_react_sdk", "_a", "_b", "React", "import_react", "import_react_icons", "init_Text", "init_IconButton", "import_react", "_a", "_b", "React", "import_react", "React", "import_react", "import_react_icons", "hlsPlayer", "React", "import_react", "css", "React", "import_react", "import_react_use", "import_react_icons", "init_Text", "React", "getDurationFromSeconds", "init_utils", "import_react", "init_utils", "hlsPlayer", "_a", "videoProgress", "bufferProgress", "videoEl", "React", "import_react", "import_hls_player", "init_Text", "init_utils", "hlsPlayer", "getDurationFromSeconds", "React", "import_react", "import_react_icons", "_a", "hlsPlayer", "React", "volume", "init_HMSVideo", "import_react", "import_react_icons", "FullScreenButton", "React", "React", "import_react", "import_react_use", "import_react_icons", "init_DialogContent", "hlsPlayer", "React", "import_react", "import_react_icons", "React", "import_react", "import_react_use", "import_react_icons", "init_Sheet", "import_react", "import_react_icons", "init_Text", "React", "import_react", "import_react_use", "import_hls_player", "import_screenfull", "import_ts_pattern", "import_react_sdk", "import_react_icons", "init_HMSVideo", "init_Button", "init_IconButton", "init_Loading", "init_Text", "init_Tooltip", "_a", "_b", "screenfull", "showLoader", "React", "data", "isCaptionEnabled", "isMobile", "isLandscape", "FullScreenButton", "import_react", "import_react_use", "import_ts_pattern", "import_react_sdk", "import_react_icons", "HLSView", "React", "_a", "isNotAllowedToPublish", "hasSubscribedRolePublishing", "isScreenOnlyPublishParams", "isSharingScreen", "pdfAnnotatorActive", "urlToIframe", "import_react", "import_react_use", "import_react_icons", "init_Text", "React", "import_react", "import_react_sdk", "import_react_icons", "init_common", "init_Divider", "init_Label", "init_Sheet", "init_Text", "init_IconButton", "React", "Label", "import_react", "import_react_use", "import_react_sdk", "Header", "init_common", "React", "init_Header", "import_react", "import_react_sdk", "import_react", "import_uuid", "import_react_sdk", "init_Footer", "init_Header", "_a", "_b", "uuid", "React", "Header", "Footer", "import_react", "import_react_icons", "init_Button", "init_Text", "init_Tooltip", "React", "import_react", "import_react_sdk", "import_react", "_a", "React", "import_react", "import_react_sdk", "import_react", "import_react_use", "import_react_sdk", "import_react_icons", "init_Button", "init_Checkbox", "init_Label", "init_Sheet", "init_Text", "init_TextArea", "React", "_a", "_b", "Label", "import_react", "import_react_use", "import_react_icons", "init_Text", "React", "import_react", "import_react_use", "React", "import_react", "import_react_icons", "init_Button", "init_Text", "init_Header", "React", "Header", "import_react", "import_react_use", "import_ts_pattern", "import_react_icons", "init_Button", "init_Text", "init_utils", "_a", "angle", "type", "React", "React", "import_react", "import_react_sdk", "init_DialogContent", "import_react", "import_uuid", "import_react_sdk", "import_react_icons", "_a", "_b", "uuid", "React", "import_react", "import_react_sdk", "import_react_icons", "init_Button", "React", "_a", "_b", "import_react", "import_react_use", "import_react_sdk", "_a", "_b", "import_react", "import_react_sdk", "init_DialogContent", "data", "React", "import_react", "import_react_sdk", "React", "import_react", "import_react_use", "import_react_sdk", "import_react", "import_react_sdk", "notificationTypes", "_a", "_b", "import_react", "import_react_sdk", "import_react_icons", "init_DialogContent", "React", "import_react", "import_react_sdk", "notificationTypes", "import_react", "import_react_sdk", "import_react_icons", "init_DialogContent", "React", "import_react", "import_ts_pattern", "import_react_sdk", "import_react_icons", "React", "_a", "_b", "React", "import_react", "import_react_sdk", "import_react_icons", "init_Notifications", "import_react", "React", "import_react", "import_react_use", "_a", "_b", "React", "import_react", "Toast", "init_Toast", "_a", "_b", "React", "import_react", "import_react_sdk", "init_Toast", "React", "Toast", "import_react", "import_react_icons", "init_Sheet", "init_Text", "React", "import_react", "import_react_sdk", "Sheet", "init_Sheet", "React", "emojis", "React", "import_react", "import_react_use", "import_react_sdk", "init_Text", "React", "import_react", "import_react_sdk", "import_react", "import_react_sdk", "React", "Sheet", "import_react", "import_ts_pattern", "import_react_sdk", "init_Notifications", "init_Sheet", "_a", "_b", "data", "theme", "typography", "StyledRoot", "import_react", "DiagnosticsStep", "React", "import_react", "init_Button", "init_Text", "css", "React", "import_react", "DeviceSelector", "init_Dropdown", "init_Text", "_a", "_b", "React", "PropTypes", "import_react", "import_react_sdk", "import_react_icons", "init_Button", "init_Text", "React", "_a", "_b", "DeviceSelector", "error", "import_react", "import_react_sdk", "init_Text", "React", "_a", "_b", "import_react", "import_react_sdk", "import_react_icons", "Footer", "init_Button", "init_Loading", "init_Stats", "init_Text", "React", "Icon", "_a", "_b", "result", "error", "import_react", "import_react_sdk", "import_react_icons", "init_Text", "init_Video", "React", "DeviceSelector", "import_react", "import_react_sdk", "import_react_icons", "Container", "init_Text", "React", "init_Diagnostics", "Label", "Popover", "init_Button", "init_Text", "init_IconButton", "init_Avatar", "init_Divider", "init_Switch", "init_Tooltip", "init_Select", "init_Slider", "init_Loading", "init_Input", "init_Dropdown", "init_Video", "init_AudioLevel", "init_Stats", "init_Checkbox", "init_Label", "init_RadioGroup", "init_Toast", "init_Accordion", "init_Fieldset", "init_Footer", "init_ReactSelect", "init_Tabs", "init_QRCode", "init_Link", "init_Collapsible", "init_TextArea", "init_Diagnostics"]
}
