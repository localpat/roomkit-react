{
  "version": 3,
  "sources": ["<define:process.env>", "../src/Button/Button.tsx", "../src/Theme/stitches.config.ts", "../src/Theme/base.config.ts", "../src/Prebuilt/common/constants.ts", "../src/Theme/ThemeProvider.tsx", "../src/Theme/useSSR.tsx", "../src/Layout/Flex.tsx", "../src/Layout/Box.tsx", "../src/Loading/Loading.tsx", "../src/utils/styles.ts", "../src/Text/Text.tsx", "../src/IconButton/IconButton.tsx", "../src/Avatar/Avatar.tsx", "../src/Avatar/getAvatarBg.ts", "../src/Divider/Divider.tsx", "../src/Switch/Switch.tsx", "../src/Tooltip/Tooltip.tsx", "../src/utils/animations.ts", "../src/Select/Select.tsx", "../src/Slider/Slider.tsx", "../src/Modal/Dialog.tsx", "../src/Modal/DialogContent.tsx", "../src/hooks/useDialogContainerSelector.tsx", "../src/context/DialogContext.tsx", "../src/Input/Input.tsx", "../src/VideoTile/StyledVideoTile.tsx", "../src/VideoList/videoListUtils.tsx", "../src/VideoList/StyledVideoList.tsx", "../src/Pagination/StyledPagination.tsx", "../src/Dropdown/Dropdown.tsx", "../src/Video/Video.tsx", "../src/TileMenu/StyledMenuTile.tsx", "../src/AudioLevel/useBorderAudioLevel.tsx", "../src/AudioLevel/AudioLevel.tsx", "../src/Popover/index.tsx", "../src/Stats/Stats.tsx", "../src/Stats/formatBytes.ts", "../src/Stats/StyledStats.tsx", "../src/Stats/useQoE.ts", "../src/Checkbox/Checkbox.tsx", "../src/Label/Label.tsx", "../src/RadioGroup/RadioGroup.tsx", "../src/Toast/Toast.tsx", "../src/Accordion/Accordion.tsx", "../src/Accordion/index.ts", "../src/Fieldset/Fieldset.tsx", "../src/Footer/Footer.tsx", "../src/ReactSelect/index.ts", "../src/ReactSelect/ReactSelect.tsx", "../src/Tabs/Tabs.tsx", "../src/QRCode/QRCode.tsx", "../src/Link/Link.tsx", "../src/Collapsible/Collapsible.tsx", "../src/Prebuilt/App.tsx", "../src/Prebuilt/components/AppData/AppData.tsx", "../src/Prebuilt/components/Settings/LayoutSettings.tsx", "../src/Prebuilt/components/Settings/SwitchWithLabel.tsx", "../src/Prebuilt/components/AppData/useUISettings.js", "../src/Prebuilt/components/hooks/useUserPreferences.jsx", "../src/Prebuilt/components/Settings/common.ts", "../src/Prebuilt/provider/roomLayoutProvider/hooks/useRoomLayoutScreen.ts", "../src/Prebuilt/provider/roomLayoutProvider/index.tsx", "../src/Prebuilt/provider/roomLayoutProvider/hooks/useFetchRoomLayout.ts", "../src/Prebuilt/provider/roomLayoutProvider/constants/index.ts", "../src/Prebuilt/common/utils.js", "../src/Prebuilt/components/AppData/useSidepane.js", "../src/Prebuilt/components/MoreSettings/constants.ts", "../src/Prebuilt/components/AuthToken.tsx", "../src/Prebuilt/AppContext.tsx", "../src/Prebuilt/AppStateContext.tsx", "../src/Prebuilt/components/VirtualBackground/VBHandler.tsx", "../src/Prebuilt/components/hooks/useRedirectToLeave.tsx", "../src/Prebuilt/components/PIP/PIPManager.ts", "../src/Prebuilt/components/PIP/pipUtils.js", "../src/Prebuilt/components/Toast/ToastManager.js", "../src/Prebuilt/components/ConferenceScreen.tsx", "../src/Prebuilt/components/Footer/Footer.tsx", "../src/Prebuilt/components/AudioVideoToggle.tsx", "../src/Prebuilt/components/IconButtonWithOptions/IconButtonWithOptions.tsx", "../src/Prebuilt/IconButton.tsx", "../src/Prebuilt/components/MoreSettings/ActionTile.jsx", "../src/Prebuilt/components/Settings/SettingsModal.jsx", "../src/Sheet/Sheet.tsx", "../src/Prebuilt/components/Settings/DeviceSettings.jsx", "../src/Prebuilt/primitives/DropdownTrigger.jsx", "../src/Prebuilt/components/hooks/useAudioOutputTest.tsx", "../src/Prebuilt/components/hooks/useDropdownSelection.jsx", "../src/Prebuilt/components/Settings/NotificationSettings.tsx", "../src/Prebuilt/components/CaptionIcon.tsx", "../src/Prebuilt/components/EmojiReaction.jsx", "../src/Prebuilt/components/Footer/EmojiCard.jsx", "../src/Prebuilt/components/hooks/useDropdownList.ts", "../src/Prebuilt/common/hooks.ts", "../src/Prebuilt/components/Interpreting/Int2En.tsx", "../src/Prebuilt/components/Interpreting/Int2Fr.tsx", "../src/Prebuilt/components/Leave/LeaveRoom.tsx", "../src/Prebuilt/components/Leave/DesktopLeaveRoom.tsx", "../src/Prebuilt/components/Leave/EndSessionContent.tsx", "../src/Prebuilt/components/Leave/LeaveAtoms.tsx", "../src/Prebuilt/components/Leave/LeaveCard.tsx", "../src/Prebuilt/components/Leave/LeaveSessionContent.tsx", "../src/Prebuilt/components/Leave/MwebLeaveRoom.tsx", "../src/Prebuilt/components/MoreSettings/MoreSettings.tsx", "../src/Prebuilt/components/MoreSettings/SplitComponents/DesktopOptions.tsx", "../src/Prebuilt/components/PIP/index.jsx", "../src/Prebuilt/components/PIP/PIPComponent.tsx", "../src/Prebuilt/components/PIP/SetupMediaSession.js", "../src/Prebuilt/components/PIP/PIPChat.tsx", "../src/TextArea/TextArea.tsx", "../src/Prebuilt/components/Chat/ChatBody.tsx", "../src/Prebuilt/components/Chat/ChatActions.tsx", "../src/Prebuilt/components/Chat/MwebChatOption.tsx", "../src/Prebuilt/components/hooks/useChatBlacklist.ts", "../src/Prebuilt/components/hooks/usePinnedMessages.ts", "../src/Prebuilt/components/Chat/EmptyChat.tsx", "../src/Prebuilt/components/hooks/usePinnedBy.tsx", "../src/Prebuilt/components/Chat/utils.ts", "../src/Prebuilt/components/PIP/PIPChatOption.tsx", "../src/Prebuilt/components/PIP/PIPWindow.tsx", "../src/Prebuilt/components/RoleChangeModal.tsx", "../src/Prebuilt/components/Settings/StartRecording.jsx", "../src/Prebuilt/components/Streaming/ResolutionInput.jsx", "../src/Prebuilt/primitives/DialogContent.jsx", "../src/Prebuilt/components/StatsForNerds.jsx", "../src/Prebuilt/components/MoreSettings/BulkRoleChangeModal.jsx", "../src/Prebuilt/components/MoreSettings/CaptionModal.tsx", "../src/Prebuilt/components/MoreSettings/CaptionContent.tsx", "../src/Prebuilt/components/MoreSettings/FullScreenItem.tsx", "../src/Prebuilt/components/hooks/useFullscreen.ts", "../src/Prebuilt/components/MoreSettings/MuteAllModal.tsx", "../src/Prebuilt/components/MoreSettings/MuteAllContent.tsx", "../src/Prebuilt/components/hooks/useMetadata.tsx", "../src/Prebuilt/components/PIP/usePIPChat.tsx", "../src/Prebuilt/components/PIP/usePIPWindow.tsx", "../src/Prebuilt/components/PIP/context.ts", "../src/Prebuilt/components/MoreSettings/SplitComponents/MwebOptions.tsx", "../src/Prebuilt/components/Header/StreamActions.tsx", "../src/Prebuilt/components/MoreSettings/ChangeNameModal.tsx", "../src/Prebuilt/components/MoreSettings/ChangeNameContent.tsx", "../src/Prebuilt/components/AppData/useSheet.ts", "../src/Prebuilt/components/hooks/useUnreadPollQuizPresent.tsx", "../src/Prebuilt/components/RaiseHand.tsx", "../src/Prebuilt/components/ScreenShareToggle.jsx", "../src/Prebuilt/components/pdfAnnotator/shareScreenOptions.jsx", "../src/Prebuilt/components/ShareMenuIcon.jsx", "../src/Prebuilt/components/pdfAnnotator/pdfFileOptions.jsx", "../src/Prebuilt/components/pdfAnnotator/pdfHeader.jsx", "../src/Prebuilt/components/pdfAnnotator/submitPdf.jsx", "../src/Prebuilt/components/pdfAnnotator/uploadedFile.jsx", "../src/Prebuilt/components/pdfAnnotator/pdfInfo.jsx", "../src/Prebuilt/components/VirtualBackground/VBToggle.tsx", "../src/Prebuilt/components/Footer/ChatToggle.tsx", "../src/Prebuilt/components/Footer/ParticipantList.tsx", "../src/Prebuilt/components/Connection/ConnectionIndicator.tsx", "../src/Prebuilt/components/Connection/connectionQualityUtils.js", "../src/Prebuilt/components/RemoveParticipant.tsx", "../src/Prebuilt/components/Footer/RoleAccordion.tsx", "../src/Prebuilt/components/Footer/RoleOptions.tsx", "../src/Prebuilt/components/hooks/useGroupOnStageActions.tsx", "../src/Prebuilt/components/AppData/useSidepaneResetOnLayoutUpdate.tsx", "../src/Prebuilt/components/hooks/usePeerOnStageActions.tsx", "../src/Prebuilt/components/Footer/PollsToggle.tsx", "../src/Prebuilt/components/Footer/WhiteboardToggle.tsx", "../src/Prebuilt/components/Notifications/HLSFailureModal.tsx", "../src/Prebuilt/components/RoleChangeRequest/RoleChangeRequestModal.tsx", "../src/Prebuilt/components/Preview/PreviewJoin.tsx", "../src/Prebuilt/layouts/SidePane.tsx", "../src/Prebuilt/components/Polls/Polls.tsx", "../src/Prebuilt/components/Polls/CreatePollQuiz/PollsQuizMenu.tsx", "../src/Prebuilt/components/Streaming/Common.jsx", "../src/Prebuilt/components/Polls/common/StatusIndicator.tsx", "../src/Prebuilt/components/Polls/CreateQuestions/CreateQuestions.jsx", "../src/Prebuilt/components/Polls/CreateQuestions/QuestionForm.tsx", "../src/Prebuilt/components/Polls/CreateQuestions/DeleteQuestionModal.tsx", "../src/Prebuilt/components/Polls/common/Line.tsx", "../src/Prebuilt/components/Polls/common/MultipleChoiceOptions.jsx", "../src/Prebuilt/components/Polls/common/OptionInputWithDelete.tsx", "../src/Prebuilt/components/Polls/common/VoteCount.tsx", "../src/Prebuilt/components/Polls/common/VoteProgress.tsx", "../src/Prebuilt/components/Polls/common/SingleChoiceOptions.jsx", "../src/Prebuilt/components/Polls/CreateQuestions/SavedQuestion.tsx", "../src/Prebuilt/components/Polls/Voting/LeaderboardSummary.tsx", "../src/Prebuilt/components/Polls/Voting/LeaderboardEntry.tsx", "../src/Prebuilt/components/Polls/common/utils.ts", "../src/Prebuilt/components/Polls/Voting/PeerParticipationSummary.tsx", "../src/Prebuilt/components/Polls/Voting/StatisticBox.tsx", "../src/Prebuilt/components/Polls/Voting/useQuizSummary.tsx", "../src/Prebuilt/components/Polls/Voting/Voting.tsx", "../src/Prebuilt/components/Polls/Voting/StandardVoting.tsx", "../src/Prebuilt/components/Polls/Voting/QuestionCard.jsx", "../src/Prebuilt/components/Polls/Voting/TimedVoting.tsx", "../src/Prebuilt/components/RoomDetails/RoomDetailsPane.tsx", "../src/Prebuilt/components/Header/HeaderComponents.jsx", "../src/Prebuilt/components/RoomDetails/RoomDetailsRow.tsx", "../src/Prebuilt/components/RoomDetails/Duration.tsx", "../src/Prebuilt/components/SidePaneTabs.tsx", "../src/Prebuilt/components/Chat/Chat.tsx", "../src/Prebuilt/components/Chat/ChatFooter.tsx", "../src/Prebuilt/components/Chat/ChatSelectorContainer.tsx", "../src/Prebuilt/components/Chat/ChatSelector.tsx", "../src/Prebuilt/components/AppData/useChatState.js", "../src/Prebuilt/components/Chat/useEmojiPickerStyles.js", "../src/Prebuilt/components/Chat/ChatStates.tsx", "../src/Prebuilt/components/Chat/PinnedMessage.tsx", "../src/Prebuilt/components/Chat/ArrowNavigation.tsx", "../src/Prebuilt/components/Chat/StickIndicator.tsx", "../src/Prebuilt/components/Footer/PaginatedParticipants.tsx", "../src/Prebuilt/components/ChatSettings.tsx", "../src/Prebuilt/components/VideoTile.tsx", "../src/Prebuilt/components/Connection/TileConnection.tsx", "../src/Prebuilt/components/TileMenu/TileMenu.tsx", "../src/Prebuilt/components/TileMenu/TileMenuContent.tsx", "../src/Prebuilt/components/TileMenu/utils.ts", "../src/Prebuilt/components/peerTileUtils.jsx", "../src/Prebuilt/components/VirtualBackground/VBPicker.tsx", "../src/Prebuilt/components/VirtualBackground/VBCollection.tsx", "../src/Prebuilt/components/VirtualBackground/VBOption.tsx", "../src/Prebuilt/components/Chip.tsx", "../src/Prebuilt/components/FullPageProgress.tsx", "../src/Prebuilt/components/Preview/PreviewForm.tsx", "../src/Prebuilt/components/RoleChangeRequest/RequestPrompt.tsx", "../src/Prebuilt/layouts/VideoStreamingSection.tsx", "../src/Prebuilt/components/VideoLayouts/GridLayout.tsx", "../src/Prebuilt/components/VideoLayouts/EqualProminence.tsx", "../src/Prebuilt/layouts/WaitingView.tsx", "../src/Prebuilt/components/InsetTile.tsx", "../src/Prebuilt/components/hooks/useVideoTileLayout.ts", "../src/Prebuilt/components/Pagination.tsx", "../src/Prebuilt/components/VideoLayouts/Grid.tsx", "../src/Prebuilt/components/hooks/useTileLayout.tsx", "../src/Prebuilt/components/VideoLayouts/RoleProminence.tsx", "../src/Prebuilt/components/SecondaryTiles.tsx", "../src/Prebuilt/components/VideoLayouts/ProminenceLayout.tsx", "../src/Prebuilt/components/hooks/useRoleProminencePeers.tsx", "../src/Prebuilt/components/VideoLayouts/ScreenshareLayout.tsx", "../src/Prebuilt/components/ScreenshareTile.tsx", "../src/Prebuilt/components/LayoutModeSelector.tsx", "../src/Prebuilt/components/ScreenshareDisplay.tsx", "../src/Prebuilt/components/VideoLayouts/WhiteboardLayout.tsx", "../src/Prebuilt/common/PeersSorter.ts", "../src/Prebuilt/layouts/EmbedView.jsx", "../src/Prebuilt/layouts/PDFView.jsx", "../src/Prebuilt/plugins/CaptionsViewer.tsx", "../src/Prebuilt/components/hooks/useCloseScreenshareWhiteboard.tsx", "../src/Prebuilt/components/Header/Header.tsx", "../src/Prebuilt/components/Header/RoomDetailsHeader.tsx", "../src/Prebuilt/components/Header/common.jsx", "../src/Prebuilt/components/PreviousRoleInMetadata.tsx", "../src/Prebuilt/components/ErrorBoundary.jsx", "../src/Prebuilt/components/init/Init.jsx", "../src/Prebuilt/services/FeatureFlags.jsx", "../src/Prebuilt/components/Input/KeyboardInputManager.js", "../src/Prebuilt/components/LeaveScreen.tsx", "../src/Prebuilt/components/EndCallFeedback/Feedback.tsx", "../src/Prebuilt/components/EndCallFeedback/FeedbackForm.tsx", "../src/Prebuilt/components/EndCallFeedback/ThankyouView.tsx", "../src/Prebuilt/components/MwebLandscapePrompt.tsx", "../src/Prebuilt/components/Notifications/Notifications.tsx", "../src/Prebuilt/components/Notifications/AutoplayBlockedModal.tsx", "../src/Prebuilt/components/Notifications/ChatNotifications.tsx", "../src/Prebuilt/components/Notifications/HandRaisedNotifications.tsx", "../src/Prebuilt/components/Toast/ToastConfig.jsx", "../src/Prebuilt/components/Toast/ToastBatcher.js", "../src/Prebuilt/components/Notifications/InitErrorModal.tsx", "../src/Prebuilt/components/Notifications/PeerNotifications.tsx", "../src/Prebuilt/components/Notifications/PermissionErrorModal.tsx", "../src/Prebuilt/components/Notifications/ReconnectNotifications.tsx", "../src/Prebuilt/components/Notifications/TrackBulkUnmuteModal.tsx", "../src/Prebuilt/components/Notifications/TrackNotifications.tsx", "../src/Prebuilt/components/Notifications/TrackUnmuteModal.tsx", "../src/Prebuilt/components/Notifications/TranscriptionNotifications.tsx", "../src/Prebuilt/components/PIP/PIPProvider.tsx", "../src/Prebuilt/components/Preview/PreviewScreen.tsx", "../src/Prebuilt/components/Toast/ToastContainer.jsx", "../src/Prebuilt/components/Toast/Toast.jsx", "../src/Prebuilt/layouts/Sheet.tsx", "../src/Prebuilt/components/RoomDetails/RoomDetailsSheet.tsx", "../src/Prebuilt/plugins/FlyingEmoji.jsx", "../src/Prebuilt/plugins/RemoteStopScreenshare.jsx", "../src/Prebuilt/components/hooks/useAutoStartStreaming.tsx", "../src/Progress/index.tsx", "../src/Diagnostics/Diagnostics.tsx", "../src/Diagnostics/AudioTest.tsx", "../src/Diagnostics/components.tsx", "../src/Diagnostics/DiagnosticsContext.ts", "../src/Diagnostics/DeviceSelector.jsx", "../src/Diagnostics/BrowserTest.tsx", "../src/Diagnostics/ConnectivityTest.tsx", "../src/Diagnostics/VideoTest.tsx"],
  "sourcesContent": ["", "import React, { ComponentPropsWithRef, PropsWithChildren } from \"react\";\nimport { Flex } from \"../Layout\";\nimport { Loading } from \"../Loading\";\nimport { styled } from \"../Theme\";\nimport { flexCenter } from \"../utils/styles\";\n\n/**\n * @param base bg color\n * @param hover hover state bg color\n * @param active active state bg color\n * @returns CSS object based on the state\n */\n\nconst getOutlinedVariants = (\n  base: string,\n  hover: string,\n  active: string,\n  disabled: string,\n  text: string,\n  textDisabled: string\n) => {\n  return {\n    bg: \"transparent\",\n    border: `solid $space$px $colors${base}`,\n    c: text,\n    \"&[disabled]\": {\n      c: textDisabled,\n      bg: \"transparent\",\n      border: `solid $space$px $colors${disabled}`,\n      cursor: \"not-allowed\",\n    },\n    \"&:not([disabled]):hover\": {\n      border: `solid $space$px $colors${hover}`,\n      bg: \"transparent\",\n    },\n    \"&:not([disabled]):active\": {\n      border: `solid $space$px $colors${active}`,\n      bg: \"transparent\",\n    },\n    \"&:not([disabled]):focus-visible\": {\n      boxShadow: `0 0 0 3px $colors${base}`,\n    },\n  };\n};\n\nconst getButtonVariants = (\n  base: string,\n  hover: string,\n  active: string,\n  disabled: string,\n  text: string,\n  textDisabled: string\n) => {\n  return {\n    bg: base,\n    border: `1px solid ${base}`,\n    c: text,\n    \"&[disabled]\": {\n      c: textDisabled,\n      cursor: \"not-allowed\",\n      bg: disabled,\n      border: `1px solid ${disabled}`,\n    },\n    \"&:not([disabled]):hover\": {\n      bg: hover,\n      border: `1px solid ${hover}`,\n    },\n    \"&:not([disabled]):active\": {\n      bg: active,\n      border: `1px solid ${active}`,\n    },\n    \"&:not([disabled]):focus-visible\": {\n      boxShadow: `0 0 0 3px ${base}`,\n    },\n  };\n};\n\nconst StyledButton = styled(\"button\", {\n  ...flexCenter,\n  cursor: \"pointer\",\n  fontFamily: \"$sans\",\n  lineHeight: \"inherit\",\n  textTransform: \"none\",\n  position: \"relative\",\n  outline: \"none\",\n  border: \"none\",\n  fs: \"$md\",\n  r: \"$1\",\n  backgroundColor: \"$primary_default\",\n  fontWeight: \"500\",\n  whiteSpace: \"nowrap\",\n  p: \"$4 $8\",\n  \"-webkit-appearance\": \"button\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&:not([disabled]):focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n  transition: \"all 0.2s  ease\",\n  compoundVariants: [\n    {\n      variant: \"standard\",\n      outlined: true,\n      css: getOutlinedVariants(\n        \"$secondary_default\",\n        \"$secondary_bright\",\n        \"$secondary_dim\",\n        \"$secondary_disabled\",\n        \"$on_surface_high\",\n        \"$on_surface_low\"\n      ),\n    },\n    {\n      variant: \"danger\",\n      outlined: true,\n      css: getOutlinedVariants(\n        \"$alert_error_default\",\n        \"$alert_error_bright\",\n        \"$alert_error_dim\",\n        \"$alert_error_brighter\",\n        \"$on_surface_high\",\n        \"$on_surface_low\"\n      ),\n    },\n    {\n      variant: \"primary\",\n      outlined: true,\n      css: getOutlinedVariants(\n        \"$primary_default\",\n        \"$primary_bright\",\n        \"$primary_dim\",\n        \"$primary_disabled\",\n        \"$on_surface_high\",\n        \"$on_surface_low\"\n      ),\n    },\n  ],\n  variants: {\n    variant: {\n      standard: getButtonVariants(\n        \"$secondary_default\",\n        \"$secondary_bright\",\n        \"$secondary_dim\",\n        \"$secondary_disabled\",\n        \"$on_secondary_high\",\n        \"$on_secondary_low\"\n      ),\n      danger: getButtonVariants(\n        \"$alert_error_default\",\n        \"$alert_error_bright\",\n        \"$alert_error_dim\",\n        \"$alert_error_dim\",\n        \"$alert_error_brighter\",\n        \"$on_primary_low\"\n      ),\n      primary: getButtonVariants(\n        \"$primary_default\",\n        \"$primary_bright\",\n        \"$primary_dim\",\n        \"$primary_disabled\",\n        \"$on_primary_high\",\n        \"$on_primary_low\"\n      ),\n    },\n    outlined: {\n      true: {},\n    },\n    icon: {\n      true: {},\n    },\n  },\n  defaultVariants: {\n    variant: \"primary\",\n  },\n});\n\nexport const Button = React.forwardRef<\n  HTMLButtonElement,\n  PropsWithChildren<\n    { loading?: boolean } & ComponentPropsWithRef<typeof StyledButton>\n  >\n>(({ children, loading = false, icon, ...buttonProps }, ref) => {\n  return (\n    <StyledButton {...buttonProps} ref={ref}>\n      <>\n        {loading && (\n          <Flex\n            align=\"center\"\n            justify=\"center\"\n            css={{\n              w: \"100%\",\n              position: \"absolute\",\n              left: \"0\",\n              color: \"$on_primary_low\",\n            }}\n          >\n            <Loading color=\"currentColor\" />\n          </Flex>\n        )}\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            visibility: loading ? \"hidden\" : \"visible\",\n            gap: icon ? \"$4\" : \"0\",\n          }}\n        >\n          {children}\n        </Flex>\n      </>\n    </StyledButton>\n  );\n});\n", "import type * as Stitches from \"@stitches/react\";\nimport { createStitches } from \"@stitches/react\";\nimport merge from \"lodash.merge\";\nimport {\n  baseConfig,\n  defaultMedia,\n  defaultThemeMap,\n  defaultUtils,\n} from \"./base.config\";\nimport { DEFAULT_PORTAL_CONTAINER } from \"../Prebuilt/common/constants\";\n\nconst HmsStitches = createStitches({\n  prefix: \"hms-ui\",\n  theme: {\n    ...baseConfig.theme,\n    colors: {\n      ...baseConfig.theme.colors,\n    },\n  },\n  media: defaultMedia,\n  utils: defaultUtils,\n  themeMap: defaultThemeMap,\n});\n\nexport const {\n  theme,\n  createTheme: createThemeBase,\n  styled,\n  globalCss,\n  keyframes,\n  css,\n  getCssText,\n  config,\n} = HmsStitches;\n\nexport const globalStyles = globalCss({\n  [`${DEFAULT_PORTAL_CONTAINER} *`]: {\n    fontFamily: \"$sans\",\n    boxSizing: \"border-box\",\n  },\n  \"::-webkit-scrollbar-track\": {\n    WebkitBoxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n    backgroundColor: \"transparent\",\n  },\n  \"::-webkit-scrollbar\": {\n    width: \"6px\",\n    height: \"6px\",\n    backgroundColor: \"transparent\",\n  },\n  \"::-webkit-scrollbar-thumb\": {\n    backgroundColor: \"#657080\",\n    borderRadius: \"5px\",\n  },\n  /**\n   * needed for safari. Safari\n   * adds background color on its own\n   * on hls-viewer on fullscreen\n   */\n  \"#hls-viewer-dark:fullscreen\": {\n    backgroundColor: \"black !important\",\n  },\n\n  \"#hls-viewer-light:fullscreen\": {\n    backgroundColor: \"white !important\",\n  },\n});\n\nexport type ThemeType = \"default\";\nexport type Theme = typeof HmsStitches.theme;\n\n/**\n * This method will be used to create custom themes or update any theme values\n * @param { type: ThemeType; className: string; theme: Theme }\n * @returns\n */\nexport const createTheme = ({\n  themeType,\n  theme,\n  className,\n}: {\n  themeType: string;\n  className?: string;\n  theme?: Partial<Theme>;\n}) => {\n  if (!themeType) {\n    throw new Error(\"Theme type is required\");\n  }\n  const mergedTheme = merge(baseConfig.theme, theme || {});\n  return createThemeBase(className || `${themeType}-theme`, mergedTheme);\n};\n\nexport type CSS = Stitches.CSS<typeof HmsStitches>;\n", "import type * as Stitches from \"@stitches/react\";\nimport { defaultThemeMap as defaultStitchesThemeMap } from \"@stitches/react\";\n\nexport const baseConfig = {\n  theme: {\n    colors: {\n      primary_default: \"#2572ED\",\n      primary_bright: \"#538DFF\",\n      primary_dim: \"#002D6D\",\n      primary_disabled: \"#004299\",\n      on_primary_high: \"rgba(245, 249, 255, 0.95)\",\n      on_primary_medium: \"rgba(224, 236, 255, 0.8)\",\n      on_primary_low: \"rgba(194, 208, 229, 0.5)\",\n      secondary_default: \"#444954\",\n      secondary_bright: \"#70778B\",\n      secondary_dim: \"#293042\",\n      secondary_disabled: \"#404759\",\n      on_secondary_high: \"#FFFFFF\",\n      on_secondary_medium: \"#D3D9F0\",\n      on_secondary_low: \"#A4ABC0\",\n      background_default: \"#0B0E15\",\n      background_dim: \"#000000\",\n      surface_default: \"#191B23\",\n      surface_bright: \"#272A31\",\n      surface_brighter: \"#2E3038\",\n      surface_dim: \"#11131A\",\n      on_surface_high: \"#EFF0FA\",\n      on_surface_medium: \"#C5C6D0\",\n      on_surface_low: \"#8F9099\",\n      border_default: \"#1D1F27\",\n      border_bright: \"#272A31\",\n      alert_success: \"#36B37E\",\n      alert_warning: \"#FFAB00\",\n      alert_error_default: \"#C74E5B\",\n      alert_error_bright: \"#FFB2B6\",\n      alert_error_brighter: \"#FFEDEC\",\n      alert_error_dim: \"#270005\",\n    },\n    shadows: {\n      sm: \"0 0 4px 0 #0000004D\",\n      md: \"0 0 8px 0 #0000004D\",\n    },\n    fonts: {\n      sans: \"Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif\",\n    },\n    fontSizes: {\n      h1: \"6rem\",\n      h2: \"3.75rem\",\n      h3: \"3rem\",\n      h4: \"2.125rem\",\n      h5: \"1.5rem\",\n      h6: \"1.25rem\",\n      tiny: \"0.625rem\",\n      xs: \"0.75rem\",\n      sm: \"0.875rem\",\n      md: \"1rem\",\n      lg: \"1.125rem\",\n    },\n    fontWeights: {\n      semiBold: 600,\n      medium: 500,\n      regular: 400,\n    },\n    lineHeights: {\n      h1: \"5.75rem\",\n      h2: \"3.5rem\",\n      h3: \"3.25rem\",\n      h4: \"2.5rem\",\n      h5: \"2rem\",\n      h6: \"1.5rem\",\n      tiny: \"1rem\",\n      xs: \"1rem\",\n      sm: \"1.25rem\",\n      md: \"1.5rem\",\n    },\n    radii: {\n      \"0\": \"0.25rem\",\n      \"1\": \"0.5rem\",\n      \"2\": \"0.75rem\",\n      \"3\": \"1rem\",\n      \"4\": \"1.5rem\",\n      round: \"100rem\",\n    },\n    space: {\n      0: \"0rem\",\n      xs: \"0.5rem\",\n      sm: \"0.75rem\",\n      md: \"1rem\",\n      lg: \"1.25rem\",\n      xl: \"2.25rem\",\n      px: \"1px\",\n      1: \"0.125rem\",\n      2: \"0.25rem\",\n      3: \"0.375rem\",\n      4: \"0.5rem\",\n      5: \"0.625rem\",\n      6: \"0.75rem\",\n      7: \"0.875rem\",\n      8: \"1rem\",\n      9: \"1.25rem\",\n      10: \"1.5rem\",\n      11: \"1.75rem\",\n      12: \"2rem\",\n      13: \"2.25rem\",\n      14: \"2.5rem\",\n      15: \"2.75rem\",\n      16: \"3rem\",\n      17: \"3.5rem\",\n      18: \"4rem\",\n      19: \"4.25rem\",\n      20: \"5rem\",\n      24: \"6rem\",\n      28: \"7rem\",\n      32: \"8rem\",\n      36: \"9rem\",\n      40: \"10rem\",\n      44: \"11rem\",\n      48: \"12rem\",\n      52: \"13rem\",\n      56: \"14rem\",\n      60: \"15rem\",\n      64: \"16rem\",\n      72: \"18rem\",\n      80: \"20rem\",\n      96: \"24rem\",\n      100: \"25rem\",\n    },\n    borderWidths: {\n      light: \"1px\",\n      normal: \"2px\",\n      bold: \"3px\",\n      extrabold: \"4px\",\n      black: \"5px\",\n    },\n  },\n};\n\nexport const defaultUtils = {\n  bg: (value: Stitches.PropertyValue<\"backgroundColor\">) => ({\n    backgroundColor: value,\n  }),\n  c: (value: Stitches.PropertyValue<\"color\">) => ({\n    color: value,\n  }),\n  r: (value: Stitches.ScaleValue<\"radii\">) => ({\n    borderRadius: value,\n  }),\n  fs: (value: Stitches.PropertyValue<\"fontSize\"> | number | string) => ({\n    fontSize: value,\n  }),\n  size: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    height: value,\n    width: value,\n  }),\n  w: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    width: value,\n  }),\n  h: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    height: value,\n  }),\n  p: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    padding: value,\n  }),\n  pt: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingTop: value,\n  }),\n  pr: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingRight: value,\n  }),\n  pb: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingBottom: value,\n  }),\n  pl: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingLeft: value,\n  }),\n  px: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingLeft: value,\n    paddingRight: value,\n  }),\n  py: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    paddingTop: value,\n    paddingBottom: value,\n  }),\n  m: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    margin: value,\n  }),\n  mt: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginTop: value,\n  }),\n  mr: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginRight: value,\n  }),\n  mb: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginBottom: value,\n  }),\n  ml: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginLeft: value,\n  }),\n  mx: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginLeft: value,\n    marginRight: value,\n  }),\n  my: (value: Stitches.ScaleValue<\"space\"> | number | string) => ({\n    marginTop: value,\n    marginBottom: value,\n  }),\n};\n\nexport const defaultMedia = {\n  allowMotion: \"(prefers-reduced-motion: no-preference)\",\n  sm: \"(max-width: 640px)\",\n  md: \"(max-width: 768px)\",\n  lg: \"(max-width: 1024px)\",\n  xl: \"(max-width: 1280px)\",\n  \"2xl\": \"(max-width: 1536px)\",\n  ls: \"(max-width: 1024px) and (orientation: landscape)\",\n};\n\nexport const defaultThemeMap = {\n  ...defaultStitchesThemeMap,\n  width: \"space\",\n  height: \"space\",\n  minWidth: \"space\",\n  maxWidth: \"space\",\n  minHeight: \"space\",\n  maxHeight: \"space\",\n  flexBasis: \"space\",\n  gridTemplateColumns: \"space\",\n  gridTemplateRows: \"space\",\n  blockSize: \"space\",\n  minBlockSize: \"space\",\n  maxBlockSize: \"space\",\n  inlineSize: \"space\",\n  minInlineSize: \"space\",\n  maxInlineSize: \"space\",\n};\n", "import { parsedUserAgent } from \"@100mslive/react-sdk\";\n\nexport const QUERY_PARAM_SKIP_PREVIEW = \"skip_preview\";\nexport const QUERY_PARAM_SKIP_PREVIEW_HEADFUL = \"skip_preview_headful\";\nexport const QUERY_PARAM_NAME = \"name\";\nexport const QUERY_PARAM_VIEW_MODE = \"ui_mode\";\nexport const QUERY_PARAM_PREVIEW_AS_ROLE = \"preview_as_role\";\nexport const UI_MODE_GRID = \"grid\";\nexport const MAX_TOASTS = 5;\nexport const RTMP_RECORD_RESOLUTION_MIN = 480;\nexport const RTMP_RECORD_RESOLUTION_MAX = 1280;\nexport const RTMP_RECORD_DEFAULT_RESOLUTION = {\n  width: 1280,\n  height: 720,\n};\nexport const EMOJI_REACTION_TYPE = \"EMOJI_REACTION\";\n\nexport const CHAT_SELECTOR = {\n  PEER: \"peer\",\n  ROLE: \"role\",\n  EVERYONE: \"Everyone\",\n};\n\nexport const APP_DATA = {\n  uiSettings: \"uiSettings\",\n  chatOpen: \"chatOpen\",\n  chatSelector: \"chatSelector\",\n  chatDraft: \"chatDraft\",\n  appConfig: \"appConfig\",\n  sidePane: \"sidePane\",\n  hlsStats: \"hlsStats\",\n  subscribedNotifications: \"subscribedNotifications\",\n  logo: \"logo\",\n  hlsStarted: \"hlsStarted\",\n  rtmpStarted: \"rtmpStarted\",\n  recordingStarted: \"recordingStarted\",\n  embedConfig: \"embedConfig\",\n  pinnedTrackId: \"pinnedTrackId\",\n  dropdownList: \"dropdownList\",\n  authToken: \"authToken\",\n  pdfConfig: \"pdfConfig\",\n  minimiseInset: \"minimiseInset\",\n  activeScreensharePeerId: \"activeScreensharePeerId\",\n  disableNotifications: \"disableNotifications\",\n  pollState: \"pollState\",\n  background: \"background\",\n  sheet: \"sheet\",\n  caption: \"caption\",\n  loadingEffects: \"loadingEffects\",\n  noiseCancellation: \"noiseCancellation\",\n};\n\nexport const UI_SETTINGS = {\n  isAudioOnly: \"isAudioOnly\",\n  maxTileCount: \"maxTileCount\",\n  uiViewMode: \"uiViewMode\",\n  layoutMode: \"layoutMode\",\n  showStatsOnTiles: \"showStatsOnTiles\",\n  enableAmbientMusic: \"enableAmbientMusic\",\n  mirrorLocalVideo: \"mirrorLocalVideo\",\n};\n\nexport const SIDE_PANE_OPTIONS = {\n  PARTICIPANTS: \"Participants\",\n  CHAT: \"Chat\",\n  STREAMING: \"STREAMING\",\n  POLLS: \"POLLS\",\n  VB: \"VB\",\n  ROOM_DETAILS: \"ROOM_DETAILS\",\n};\n\nexport type SidePaneOption =\n  (typeof SIDE_PANE_OPTIONS)[keyof typeof SIDE_PANE_OPTIONS];\n\nexport const SHEET_OPTIONS = {\n  ROOM_DETAILS: \"ROOM_DETAILS\",\n};\n\nexport const POLL_STATE = {\n  pollInView: \"pollInView\",\n  view: \"view\",\n};\n\nexport const POLL_VIEWS = {\n  CREATE_POLL_QUIZ: \"CREATE_POLL_QUIZ\",\n  CREATE_QUESTIONS: \"CREATE_QUESTIONS\",\n  VOTE: \"VOTE\",\n  RESULTS: \"RESULTS\",\n};\n\nexport const CAPTION_TOAST = {\n  captionToast: \"captionToast\",\n};\nexport const SUBSCRIBED_NOTIFICATIONS = {\n  PEER_JOINED: \"PEER_JOINED\",\n  PEER_LEFT: \"PEER_LEFT\",\n  METADATA_UPDATED: \"METADATA_UPDATED\",\n  NEW_MESSAGE: \"NEW_MESSAGE\",\n  ERROR: \"ERROR\",\n};\n\nexport const CREATE_ROOM_DOC_URL =\n  \"https://github.com/100mslive/100ms-web/wiki/Creating-and-joining-a-room\";\nexport const HLS_TIMED_METADATA_DOC_URL =\n  \"https://www.100ms.live/docs/javascript/v2/how--to-guides/record-and-live-stream/hls/hls-timed-metadata\";\n\nexport const REMOTE_STOP_SCREENSHARE_TYPE = \"REMOTE_STOP_SCREENSHARE\";\n\nexport const isChrome =\n  parsedUserAgent.getBrowser()?.name?.toLowerCase() === \"chrome\";\nexport const isFirefox =\n  parsedUserAgent.getBrowser()?.name?.toLowerCase() === \"firefox\";\nexport const isSafari =\n  parsedUserAgent.getBrowser()?.name?.toLowerCase() === \"safari\";\nexport const isIOS = parsedUserAgent.getOS()?.name?.toLowerCase() === \"ios\";\nexport const isMacOS =\n  parsedUserAgent.getOS()?.name?.toLowerCase() === \"mac os\";\nexport const isAndroid =\n  parsedUserAgent.getOS()?.name?.toLowerCase() === \"android\";\nexport const isIPadOS = false;\n// typeof navigator !== \"undefined\" &&\n// navigator?.maxTouchPoints &&\n// navigator?.maxTouchPoints > 2 &&\n// navigator?.userAgent?.match(/Mac/);\n\nexport enum SESSION_STORE_KEY {\n  TRANSCRIPTION_STATE = \"transcriptionState\",\n  PINNED_MESSAGES = \"pinnedMessages\",\n  SPOTLIGHT = \"spotlight\",\n  CHAT_PEER_BLACKLIST = \"chatPeerBlacklist\",\n  CHAT_MESSAGE_BLACKLIST = \"chatMessageBlacklist\",\n  CHAT_STATE = \"chatState\",\n}\n\nexport enum INTERACTION_TYPE {\n  POLL = \"Poll\",\n  QUIZ = \"Quiz\",\n}\n\nexport enum QUESTION_TYPE_TITLE {\n  \"single-choice\" = \"Single Choice\",\n  \"multiple-choice\" = \"Multiple Choice\",\n  // 'short-answer' = 'Short Answer',\n  // 'long-answer' = 'Long Answer',\n}\n\nexport enum QUESTION_TYPE {\n  SINGLE_CHOICE = \"single-choice\",\n  MULTIPLE_CHOICE = \"multiple-choice\",\n  // SHORT_ANSWER = 'short-answer',\n  // LONG_ANSWER = 'long-answer',\n}\n\nexport const ROLE_CHANGE_DECLINED = \"role_change_declined\";\n\nexport const DEFAULT_PORTAL_CONTAINER = \".prebuilt-container\";\n\nexport const TEST_AUDIO_URL = \"https://100ms.live/test-audio.wav\";\n", "import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport type { Theme } from \"./stitches.config\";\nimport { createTheme, theme } from \"./stitches.config\";\nimport useSSR from \"./useSSR\";\n\nconst defaultAspectRatio = {\n  width: 1,\n  height: 1,\n};\n\nexport enum ThemeTypes {\n  // eslint-disable-next-line no-unused-vars\n  default = \"default\",\n}\n\nexport type ThemeContextValue = {\n  themeType: string;\n  theme: Theme;\n  aspectRatio: { width: number; height: number };\n  /**\n   * @param {ThemeTypes} themeToUpdateTo - optional\n   * Use this to toggle or update the currentTheme.\n   * if a param is passed, it will set the theme to passed value, otherwise will toggle between light and dark\n   * depending on current applied theme\n   */\n  toggleTheme: (themeToUpdateTo?: ThemeTypes) => void;\n};\n\nexport type ThemeProviderProps = {\n  themeType?: string;\n  theme?: Theme;\n  aspectRatio?: { width: number; height: number };\n};\n\nconst defaultContext = {\n  themeType: ThemeTypes.default,\n  theme,\n  aspectRatio: { width: 1, height: 1 },\n  toggleTheme: (_themeToUpdateTo?: ThemeTypes) => {\n    return;\n  },\n};\nexport const ThemeContext =\n  React.createContext<ThemeContextValue>(defaultContext);\n\n/**\n * Wrap this around your root component to get access to theme\n * eg:\n * <ThemeProvider type=\"dark\" appBuilder={{ aspectRatio: { width:1, height: 1} }}>\n *  <App />\n * </ThemeProvider>\n */\nexport const HMSThemeProvider: React.FC<\n  React.PropsWithChildren<ThemeProviderProps>\n> = ({\n  themeType,\n  theme: userTheme,\n  aspectRatio = defaultAspectRatio,\n  children,\n}) => {\n  const systemTheme = ThemeTypes.default;\n  const [currentTheme, setCurrentTheme] = useState(themeType || systemTheme);\n  const previousClassName = useRef(\"\");\n  const { isBrowser } = useSSR();\n  const updatedTheme = useMemo(() => {\n    const updatedTheme = createTheme({\n      themeType: currentTheme,\n      theme: userTheme || {},\n    });\n    if (!isBrowser) {\n      return updatedTheme;\n    }\n    if (previousClassName.current) {\n      document.documentElement.classList.remove(previousClassName.current);\n    }\n    previousClassName.current = updatedTheme.className;\n    document.documentElement.classList.add(updatedTheme);\n    return updatedTheme;\n  }, [userTheme, currentTheme, isBrowser]);\n\n  const toggleTheme = useCallback((themeToUpdateTo?: ThemeTypes) => {\n    if (themeToUpdateTo) {\n      setCurrentTheme(themeToUpdateTo);\n      return;\n    }\n    setCurrentTheme(ThemeTypes.default);\n  }, []);\n\n  useEffect(() => {\n    if (themeType) {\n      setCurrentTheme(themeType);\n    }\n  }, [themeType]);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        themeType: currentTheme,\n        theme: updatedTheme as unknown as Theme,\n        aspectRatio,\n        toggleTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => React.useContext(ThemeContext);\n", "import { useEffect, useState } from \"react\";\n\nconst isBrowser = (): boolean => {\n  return Boolean(\n    typeof window !== \"undefined\" &&\n      window.document &&\n      window.document.createElement\n  );\n};\n\nexport type SSRState = {\n  isBrowser: boolean;\n  isServer: boolean;\n};\n\nconst useSSR = (): SSRState => {\n  const [browser, setBrowser] = useState<boolean>(false);\n  useEffect(() => {\n    setBrowser(isBrowser());\n  }, []);\n\n  return {\n    isBrowser: browser,\n    isServer: !browser,\n  };\n};\n\nexport default useSSR;\n", "import { styled } from \"../Theme\";\n\n/**\n * @see https://tailwindcss.com/docs/space\n */\nconst gapStyles = (value: number) => {\n  return {\n    \"& > * + *\": {\n      marginRight: \"0\",\n      marginLeft: `${0.25 * value}rem`,\n    },\n  };\n};\n\nexport const Flex = styled(\"div\", {\n  display: \"flex\",\n  variants: {\n    justify: {\n      start: {\n        justifyContent: \"flex-start\",\n      },\n      end: {\n        justifyContent: \"flex-end\",\n      },\n      center: {\n        justifyContent: \"center\",\n      },\n      between: {\n        justifyContent: \"space-between\",\n      },\n      around: {\n        justifyContent: \"space-around\",\n      },\n      evenly: {\n        justifyContent: \"space-evenly\",\n      },\n    },\n    align: {\n      start: {\n        alignItems: \"flex-start\",\n      },\n      end: {\n        alignItems: \"flex-end\",\n      },\n      center: {\n        alignItems: \"center\",\n      },\n      baseline: {\n        alignItems: \"baseline\",\n      },\n      strech: {\n        alignItems: \"stretch\",\n      },\n    },\n    direction: {\n      row: {\n        flexDirection: \"row\",\n      },\n      column: {\n        flexDirection: \"column\",\n      },\n      rowReverse: {\n        flexDirection: \"row-reverse\",\n      },\n      columnReverse: {\n        flexDirection: \"column-reverse\",\n      },\n    },\n    gap: {\n      1: gapStyles(1),\n      2: gapStyles(2),\n      3: gapStyles(3),\n      4: gapStyles(4),\n    },\n  },\n});\n", "import { styled } from \"../Theme\";\n\nexport const Box = styled(\"div\", {});\n", "import React from \"react\";\n\ntype Props = {\n  /**\n   * Adjusts width and height\n   */\n  size?: number | string;\n  /**\n   * Color of Loader\n   */\n  color?: string;\n};\n\ntype LoadingProps = Props & React.SVGProps<SVGSVGElement>;\n\nexport const Loading = ({\n  size = 24,\n  color = \"white\",\n  ...props\n}: LoadingProps) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 50 50\"\n    fill={color}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <circle\n      cx=\"25\"\n      cy=\"25\"\n      r=\"20\"\n      stroke={color}\n      strokeWidth=\"4\"\n      strokeDasharray=\"70 30\"\n      fill=\"none\"\n    >\n      <animateTransform\n        attributeName=\"transform\"\n        attributeType=\"XML\"\n        type=\"rotate\"\n        from=\"0 25 25\"\n        to=\"360 25 25\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  </svg>\n);\n", "/**\n * Flex based centering helper styles\n */\nexport const flexCenter = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\n/**\n * Gives styles for text ellipsis, with given width as maxWidth.\n * A number in pixels or css width string value can be passed\n * @param {number|string} width\n * @returns\n */\nexport const textEllipsis = (width: number | string) => ({\n  maxWidth: width,\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n  minWidth: 0,\n});\n", "import { styled } from \"../Theme\";\n\nexport const textVariants = {\n  h1: {\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"-1.5px\",\n    fontSize: \"$h1\",\n    lineHeight: \"$h1\",\n    \"@md\": {\n      fontSize: \"4.5rem\",\n      lineHeight: \"4.75rem\",\n    },\n  },\n  h2: {\n    fontSize: \"$h2\",\n    lineHeight: \"$h2\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"-0.5px\",\n    \"@md\": {\n      fontSize: \"3rem\",\n      lineHeight: \"3.25rem\",\n    },\n  },\n  h3: {\n    fontSize: \"$h3\",\n    lineHeight: \"$h3\",\n    fontWeight: \"$semiBold\",\n    \"@md\": {\n      fontSize: \"2.5rem\",\n      lineHeight: \"2.75rem\",\n    },\n  },\n  h4: {\n    fontSize: \"$h4\",\n    lineHeight: \"$h4\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.25px\",\n    \"@md\": {\n      fontSize: \"1.75rem\",\n      lineHeight: \"2rem\",\n    },\n  },\n  h5: {\n    fontSize: \"$h5\",\n    lineHeight: \"$h5\",\n    fontWeight: \"$semiBold\",\n    \"@md\": {\n      fontSize: \"1.5rem\",\n      lineHeight: \"1.75rem\",\n    },\n  },\n  h6: {\n    fontSize: \"$h6\",\n    lineHeight: \"$h6\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.15px\",\n    \"@md\": {\n      fontSize: \"1.25rem\",\n      lineHeight: \"1.5rem\",\n    },\n  },\n  sub1: {\n    fontSize: \"$md\",\n    lineHeight: \"$h5\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.15px\",\n  },\n  sub2: {\n    fontSize: \"$sm\",\n    lineHeight: \"$sm\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.1px\",\n  },\n  body1: {\n    fontSize: \"$md\",\n    lineHeight: \"$h6\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.1px\",\n  },\n  body2: {\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.25rem\",\n    fontWeight: \"$medium\",\n    letterSpacing: \"0.25px\",\n  },\n  button: {\n    fontSize: \"1rem\",\n    lineHeight: \"1.5rem\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.5px\",\n  },\n  caption: {\n    fontSize: \"0.75rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"0.4px\",\n    fontWeight: \"$regular\",\n  },\n  overline: {\n    fontSize: \"0.625rem\",\n    lineHeight: \"1rem\",\n    letterSpacing: \"1.5px\",\n    fontWeight: \"$medium\",\n  },\n  tiny: {\n    fontSize: \"$tiny\",\n    lineHeight: \"$tiny\",\n  },\n  xs: {\n    fontSize: \"$xs\",\n    lineHeight: \"$xs\",\n  },\n  sm: {\n    fontSize: \"$sm\",\n    lineHeight: \"$sm\",\n  },\n  md: {\n    fontSize: \"$md\",\n    lineHeight: \"$md\",\n  },\n  lg: {\n    fontSize: \"$lg\",\n    lineHeight: \"$md\",\n    fontWeight: \"$semiBold\",\n    letterSpacing: \"0.15px\",\n  },\n};\n\nexport const Text = styled(\"p\", {\n  fontFamily: \"$sans\",\n  fontWeight: \"$regular\",\n  margin: 0,\n  color: \"$on_surface_high\",\n  variants: {\n    variant: textVariants,\n    color: {\n      white: {\n        color: \"$on_surface_high\",\n      },\n    },\n    inline: {\n      true: {\n        display: \"inline\",\n      },\n    },\n  },\n  defaultVariants: {\n    variant: \"md\",\n  },\n});\n", "import { styled } from \"../Theme\";\nimport { flexCenter } from \"../utils/styles\";\n\nexport const IconButton = styled(\"button\", {\n  ...flexCenter,\n  alignItems: \"center\",\n  outline: \"none\",\n  border: \"none\",\n  padding: \"$2\",\n  r: \"$0\",\n  cursor: \"pointer\",\n  backgroundColor: \"transparent\",\n  color: \"$on_surface_high\",\n  \"&:not([disabled]):focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n  \"&:not([disabled]):focus\": {\n    outline: \"none\",\n  },\n  \"@media (hover: hover)\": {\n    \"&:not([disabled]):hover\": {\n      backgroundColor: \"$on_surface_low\",\n    },\n  },\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n    backgroundColor: \"$secondary_dim\",\n    color: \"$on_primary_high\",\n  },\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  variants: {\n    active: {\n      true: {\n        \"&:not([disabled]):hover\": {\n          backgroundColor: \"$on_surface_low\",\n        },\n      },\n    },\n  },\n});\n", "import React from \"react\";\nimport { VariantProps } from \"@stitches/react\";\nimport { PersonIcon } from \"@100mslive/react-icons\";\nimport { styled } from \"../Theme\";\nimport { getAvatarBg } from \"./getAvatarBg\";\nimport { flexCenter } from \"../utils/styles\";\n\nconst getAvatarShape = (radii: string) => ({\n  borderRadius: radii,\n});\n\nexport const StyledAvatar = styled(\"div\", {\n  ...flexCenter,\n  color: \"$colors$on_primary_high\",\n  fontFamily: \"$sans\",\n  aspectRatio: 1,\n  fontWeight: 600,\n  fontSize: \"$space$9\",\n  variants: {\n    shape: {\n      circle: getAvatarShape(\"$round\"),\n      square: getAvatarShape(\"$1\"),\n    },\n    size: {\n      small: {\n        height: \"$16 !important\",\n        fontSize: \"$space$6\",\n      },\n      medium: {\n        height: \"$18 !important\",\n        fontSize: \"$space$10\",\n      },\n      large: {\n        height: \"$20 !important\",\n        fontSize: \"$space$12\",\n      },\n    },\n  },\n  defaultVariants: {\n    shape: \"circle\",\n  },\n});\n\ntype Props = VariantProps<typeof StyledAvatar> &\n  React.ComponentProps<typeof StyledAvatar> & {\n    name: string;\n  };\n\nexport const Avatar: React.FC<Props> = ({ name, css, ...props }) => {\n  const info = getAvatarBg(name);\n  let { color } = info;\n  if (!name) {\n    color = \"#7E47EB\";\n  }\n  return (\n    <StyledAvatar css={{ bg: color, ...css }} {...props}>\n      {info.initials || <PersonIcon height={40} width={40} />}\n    </StyledAvatar>\n  );\n};\n", "const getInitials = (name: string | undefined) => {\n  if (!name) {\n    return undefined;\n  } else {\n    return (\n      name\n        .trim()\n        // remove non chars/digits\n        .replace(/[^a-zA-Z0-9]/g, \"\")\n        .match(/(^\\S\\S?|\\b\\S)?/g)\n        ?.join(\"\")\n        ?.match(/(^\\S|\\S$)?/g)\n        ?.join(\"\")\n        .toUpperCase()\n    );\n  }\n};\n\n/**\n  calculates the initials of the name and choose a background color based on the first later of the initials\n */\nexport const getAvatarBg = (\n  name: string\n): { initials: string; color: string } => {\n  const initials = getInitials(name);\n  const indexFactor = 20;\n  const colorIndex = ((initials?.codePointAt(0) || 0) % indexFactor) + 1;\n  return { initials: initials || \"\", color: colorsList[colorIndex - 1] };\n};\n\nconst colorsList = [\n  \"#616161\",\n  \"#F44336\",\n  \"#3F51B5\",\n  \"#4CAF50\",\n  \"#FFA000\",\n  \"#795548\",\n  \"#E91E63\",\n  \"#2F80FF\",\n  \"#8BC34A\",\n  \"#F57C00\",\n  \"#4E342E\",\n  \"#9C27B0\",\n  \"#00BCD4\",\n  \"#C0CA33\",\n  \"#F4511E\",\n  \"#673AB7\",\n  \"#009688\",\n  \"#FBC02D\",\n  \"#BF360C\",\n  \"#455A64\",\n];\n", "import { styled } from \"../Theme\";\n\nconst getVerticalSpace = (space: string) => ({\n  marginLeft: space,\n  marginRight: space,\n});\nconst getHorizontalSpace = (space: string) => ({\n  marginTop: space,\n  marginBottom: space,\n});\n\nexport const VerticalDivider = styled(\"span\", {\n  height: \"25px\",\n  width: \"1px\",\n  backgroundColor: \"$border_bright\",\n  variants: {\n    space: {\n      1: getVerticalSpace(\"$1\"),\n      2: getVerticalSpace(\"$2\"),\n      3: getVerticalSpace(\"$3\"),\n      4: getVerticalSpace(\"$4\"),\n    },\n  },\n  defaultVariants: {\n    space: 1,\n  },\n});\n\nexport const HorizontalDivider = styled(\"span\", {\n  height: \"1px\",\n  width: \"100%\",\n  display: \"block\",\n  backgroundColor: \"$border_bright\",\n  variants: {\n    space: {\n      1: getHorizontalSpace(\"$1\"),\n      2: getHorizontalSpace(\"$2\"),\n      3: getHorizontalSpace(\"$3\"),\n      4: getHorizontalSpace(\"$4\"),\n    },\n  },\n  defaultVariants: {\n    space: 1,\n  },\n});\n", "import React from \"react\";\nimport * as BaseSwitch from \"@radix-ui/react-switch\";\nimport { styled } from \"../Theme\";\n\nconst SwitchRoot = styled(BaseSwitch.Root, {\n  all: \"unset\",\n  width: \"30px\",\n  height: \"14px\",\n  border: \"solid $space$px $secondary_default\",\n  borderRadius: \"$3\",\n  p: \"$2\",\n  position: \"relative\",\n  cursor: \"pointer\",\n  '&[data-state=\"checked\"]': {\n    backgroundColor: \"$primary_default\",\n    border: \"solid $space$px $primary_default\",\n  },\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n  },\n});\n\nconst SwitchThumb = styled(BaseSwitch.Thumb, {\n  display: \"block\",\n  top: \"3px\",\n  position: \"absolute\",\n  width: \"$md\",\n  height: \"$md\",\n  backgroundColor: \"$secondary_default\",\n  borderRadius: \"$round\",\n  transition: \"right 500ms ease-in\",\n  left: \"$2\",\n  '&[data-state=\"checked\"]': {\n    left: \"unset\",\n    right: \"$2\",\n    backgroundColor: \"$on_primary_high\",\n  },\n});\n\ntype SwitchProps = React.ComponentProps<typeof SwitchRoot>;\n\nexport const Switch: React.FC<SwitchProps> = (props) => (\n  <SwitchRoot {...props}>\n    <SwitchThumb />\n  </SwitchRoot>\n);\n\nSwitch.displayName = \"Switch\";\n", "import React, { PropsWithChildren, useState } from \"react\";\nimport * as BaseTooltip from \"@radix-ui/react-tooltip\";\nimport { CSS, styled } from \"../Theme\";\nimport {\n  slideDownAndFade,\n  slideLeftAndFade,\n  slideRightAndFade,\n  slideUpAndFade,\n} from \"../utils\";\n\nconst TooltipBox = styled(BaseTooltip.Content, {\n  fontFamily: \"$sans\",\n  borderRadius: \"$2\",\n  padding: \"$2 $4\",\n  fontSize: \"$xs\",\n  zIndex: 11,\n  color: \"$on_surface_high\",\n  backgroundColor: \"$surface_bright\",\n  \"@media (prefers-reduced-motion: no-preference)\": {\n    animationDuration: \"400ms\",\n    animationTimingFunction: \"cubic-bezier(0.16, 1, 0.3, 1)\",\n    willChange: \"transform, opacity\",\n    '&[data-state=\"delayed-open\"]': {\n      '&[data-side=\"top\"]': { animationName: slideDownAndFade() },\n      '&[data-side=\"right\"]': { animationName: slideLeftAndFade() },\n      '&[data-side=\"bottom\"]': { animationName: slideUpAndFade() },\n      '&[data-side=\"left\"]': { animationName: slideRightAndFade() },\n    },\n  },\n  variants: {\n    outlined: {\n      true: {\n        backgroundColor: \"$background_dim\",\n        border: \"solid $space$px $border_bright\",\n      },\n    },\n  },\n});\n\nconst TooltipTrigger = styled(BaseTooltip.Trigger, {\n  fontFamily: \"$sans\",\n});\n\nconst TooltipRoot = BaseTooltip.Root;\nexport type alignTooltip = \"end\" | \"center\" | \"start\" | undefined;\nexport type sideTooltip = \"bottom\" | \"left\" | \"right\" | \"top\" | undefined;\n\nexport const Tooltip: React.FC<\n  PropsWithChildren<{\n    title: React.ReactNode | string;\n    outlined?: boolean;\n    side?: sideTooltip;\n    align?: alignTooltip;\n    disabled?: boolean;\n    triggerCss?: CSS;\n    boxCss?: CSS;\n    delayDuration?: number;\n  }>\n> = ({\n  children,\n  title,\n  triggerCss,\n  boxCss,\n  outlined = true,\n  side = \"bottom\",\n  align = \"center\",\n  disabled = false,\n  delayDuration = 200,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <BaseTooltip.Provider>\n      <TooltipRoot\n        delayDuration={delayDuration}\n        open={open && !disabled}\n        onOpenChange={setOpen}\n      >\n        <TooltipTrigger css={{ ...triggerCss }} asChild>\n          {children}\n        </TooltipTrigger>\n        <TooltipBox\n          sideOffset={10}\n          side={side}\n          align={align}\n          outlined={outlined}\n          css={{ ...boxCss }}\n        >\n          {title}\n        </TooltipBox>\n      </TooltipRoot>\n    </BaseTooltip.Provider>\n  );\n};\n", "import { keyframes } from \"../Theme\";\n\nexport const slideDown = (controller: string) =>\n  keyframes({\n    from: { height: 0 },\n    to: { height: `var(${controller})` },\n  });\n\nexport const slideUp = (controller: string) =>\n  keyframes({\n    from: { height: `var(${controller})` },\n    to: { height: 0 },\n  });\n\nexport const translateAcross = ({\n  xFrom = \"0\",\n  yFrom = \"0\",\n  zFrom = \"0\",\n  xTo = \"0\",\n  yTo = \"0\",\n  zTo = \"0\",\n}) =>\n  keyframes({\n    from: { transform: `translate3d(${xFrom}, ${yFrom}, ${zFrom})` },\n    to: { transform: `translate3d(${xTo}, ${yTo}, ${zTo}` },\n  });\n\nexport const dialogOpen = keyframes({\n  \"0%\": { opacity: 0, transform: \"translate(-50%, -48%) scale(.90)\" },\n  \"100%\": { opacity: 1, transform: \"translate(-50%, -50%) scale(1)\" },\n});\n\nexport const dialogClose = keyframes({\n  \"0%\": { opacity: 1, transform: \"translate(-50%, -50%) scale(1)\" },\n  \"100%\": { opacity: 0, transform: \"translate(-50%, -48%) scale(.90)\" },\n});\n\nexport const slideUpAndFade = (start = \"2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateY(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateY(0)\" },\n  });\n\nexport const slideRightAndFade = (start = \"-2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateX(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateX(0)\" },\n  });\n\nexport const sheetSlideIn = keyframes({\n  from: { transform: \"$$transformValue\" },\n  to: { transform: \"translate3d(0,0,0)\" },\n});\n\nexport const sheetSlideOut = keyframes({\n  from: { transform: \"translate3d(0,0,0)\" },\n  to: { transform: \"$$transformValue\" },\n});\nexport const sheetFadeIn = keyframes({\n  from: { opacity: \"0\" },\n  to: { opacity: \"1\" },\n});\n\nexport const sheetFadeOut = keyframes({\n  from: { opacity: \"1\" },\n  to: { opacity: \"0\" },\n});\nexport const slideDownAndFade = (start = \"-2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateY(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateY(0)\" },\n  });\n\nexport const slideLeftAndFade = (start = \"2px\") =>\n  keyframes({\n    \"0%\": { opacity: 0, transform: `translateX(${start})` },\n    \"100%\": { opacity: 1, transform: \"translateX(0)\" },\n  });\n\nconst slideLeftAndFadeOut = (end = \"-100%\") =>\n  keyframes({\n    \"0%\": { opacity: 1, transform: `translateX(0)` },\n    \"100%\": { opacity: 0, transform: `translateX(${end})` },\n  });\n\nexport const popoverAnimation = {\n  \"@media (prefers-reduced-motion: no-preference)\": {\n    animationDuration: \"400ms\",\n    animationTimingFunction: \"cubic-bezier(0.16, 1, 0.3, 1)\",\n    willChange: \"transform, opacity\",\n    '&[data-state=\"open\"]': {\n      '&[data-side=\"top\"]': { animationName: slideDownAndFade() },\n      '&[data-side=\"right\"]': { animationName: slideLeftAndFade() },\n      '&[data-side=\"bottom\"]': { animationName: slideUpAndFade() },\n      '&[data-side=\"left\"]': { animationName: slideRightAndFade() },\n    },\n  },\n};\n\nexport const toastAnimation = {\n  \"@media (prefers-reduced-motion: no-preference)\": {\n    animationDuration: \"500ms\",\n    animationTimingFunction: \"cubic-bezier(0.16, 1, 0.3, 1)\",\n    willChange: \"transform, opacity\",\n    animationName: slideLeftAndFadeOut(),\n\n    '&[data-state=\"open\"]': {\n      animationName: slideRightAndFade(\"-100%\"),\n    },\n    '&[data-swipe=\"move\"]': {\n      transform: \"translateX(var(--radix-toast-swipe-move-x))\",\n    },\n    '&[data-swipe=\"cancel\"]': {\n      transform: \"translateX(0)\",\n      transition: \"transform 200ms ease-out\",\n    },\n    '&[data-swipe=\"end\"]': {\n      animation: `${slideLeftAndFadeOut()} 100ms ease-out forwards`,\n    },\n  },\n};\n", "import React from \"react\";\nimport { ChevronDownIcon } from \"@100mslive/react-icons\";\nimport { styled } from \"../Theme\";\n\nconst Root = styled(\"div\", {\n  color: \"$on_primary_high\",\n  display: \"inline-flex\",\n  position: \"relative\",\n  outline: \"none\",\n  overflow: \"hidden\",\n  borderRadius: \"$1\",\n  backgroundColor: \"$surface_default\",\n  maxWidth: \"100%\",\n});\n\n// TODO: replace these with tokens\nconst SelectRoot = styled(\"select\", {\n  h: \"$16\",\n  fontSize: \"$md\",\n  fontWeight: \"500\",\n  lineHeight: \"inherit\",\n  textTransform: \"none\",\n  appearance: \"none\",\n  color: \"$on_secondary_high\",\n  padding: \"5px\",\n  paddingLeft: \"12px\",\n  paddingRight: \"30px\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  backgroundColor: \"$secondary_default\",\n  \"&:not([disabled]):focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n  },\n});\n\nconst Arrow = styled(\"span\", {\n  color: \"$on_secondary_high\",\n  width: \"30px\",\n  height: \"100%\",\n  position: \"absolute\",\n  right: 0,\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  transition: \"border .2s ease 0s\",\n});\n\nconst DefaultDownIcon = ({ ...props }) => (\n  <Arrow {...props}>\n    <ChevronDownIcon />\n  </Arrow>\n);\n\nexport const Select = {\n  Root,\n  DownIcon: Arrow,\n  DefaultDownIcon,\n  Select: SelectRoot,\n};\n", "import React from \"react\";\nimport * as BaseSlider from \"@radix-ui/react-slider\";\nimport { CSS } from \"@stitches/react\";\nimport { styled } from \"../Theme\";\nimport { Tooltip } from \"../Tooltip\";\n\nconst Root = styled(BaseSlider.Root, {\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  userSelect: \"none\",\n  touchAction: \"none\",\n  width: \"100%\",\n  '&[data-orientation=\"horizontal\"]': {\n    height: 20,\n  },\n});\n\nconst Track = styled(BaseSlider.Track, {\n  backgroundColor: \"$surface_bright\",\n  position: \"relative\",\n  flexGrow: 1,\n  borderRadius: \"$round\",\n  cursor: \"pointer\",\n  '&[data-orientation=\"horizontal\"]': { height: 3 },\n});\n\nconst Range = styled(BaseSlider.Range, {\n  position: \"absolute\",\n  backgroundColor: \"$primary_default\",\n  borderRadius: \"$round\",\n  height: \"100%\",\n});\n\nconst Thumb = styled(BaseSlider.Thumb, {\n  all: \"unset\",\n  display: \"block\",\n  width: \"$8\",\n  height: \"$8\",\n  backgroundColor: \"$primary_default\",\n  cursor: \"pointer\",\n  boxShadow: `0 2px 10px $colors$surface_default`,\n  borderRadius: 10,\n  \"&:hover\": { backgroundColor: \"$primary_default\" },\n  \"&:focus\": { boxShadow: \"none\" },\n});\n\ntype SliderProps = React.ComponentProps<typeof Root> & {\n  thumbStyles?: CSS;\n  showTooltip?: boolean;\n};\n\nexport const Slider: React.FC<SliderProps & { showTooltip?: boolean }> = ({\n  showTooltip = true,\n  thumbStyles,\n  ...props\n}) => (\n  <Root {...props}>\n    <Track>\n      <Range />\n    </Track>\n    {showTooltip ? (\n      <Tooltip title={String(props.value?.[0])}>\n        <Thumb css={thumbStyles} />\n      </Tooltip>\n    ) : (\n      <Thumb css={thumbStyles} />\n    )}\n  </Root>\n);\n", "import React, { ReactNode, useEffect, useRef } from \"react\";\nimport { Root } from \"@radix-ui/react-dialog\";\nimport { styled } from \"@stitches/react\";\nimport {\n  CustomDialogContent,\n  CustomDialogOverlay,\n  DialogClose,\n  DialogDefaultCloseIcon,\n  DialogDescription,\n  DialogTitle,\n  StyledDialogPortal,\n  StyledDialogTrigger,\n} from \"./DialogContent\";\nimport { useDialogContainerSelector } from \"../hooks/useDialogContainerSelector\";\n\nconst StyledDialog = styled(Root, {});\n\n// Handles race conditions when multiple elements with dismissable layer are present\n// https://github.com/radix-ui/primitives/issues/2122\nconst DialogRoot = <T extends React.ComponentProps<typeof StyledDialog>>(\n  props: T\n) => {\n  useEffect(() => {\n    return () => {\n      if (document)\n        setTimeout(() => (document.body.style.pointerEvents = \"auto\"), 0);\n    };\n  }, []);\n  return <StyledDialog {...(props as object)} />;\n};\n\nconst CustomDialogPortal = ({\n  children,\n  container,\n}: {\n  children: ReactNode;\n  container?: HTMLElement | null;\n}) => {\n  const dialogContainerSelector = useDialogContainerSelector();\n  const containerRef = useRef<HTMLElement | null>(null);\n\n  if (container) {\n    containerRef.current = container;\n  } else if (dialogContainerSelector && !containerRef.current) {\n    containerRef.current = document.querySelector(\n      dialogContainerSelector\n    ) as HTMLElement;\n  } else if (!containerRef.current) {\n    containerRef.current = document.body;\n  }\n  return (\n    <StyledDialogPortal container={containerRef.current}>\n      <>{children}</>\n    </StyledDialogPortal>\n  );\n};\n\nexport const Dialog = {\n  Root: DialogRoot,\n  Trigger: StyledDialogTrigger,\n  Overlay: CustomDialogOverlay,\n  Content: CustomDialogContent,\n  Title: DialogTitle,\n  Description: DialogDescription,\n  Close: DialogClose,\n  DefaultClose: DialogDefaultCloseIcon,\n  Portal: CustomDialogPortal,\n};\n", "import React, { ComponentProps } from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../IconButton\";\nimport { styled } from \"../Theme\";\nimport { dialogClose, dialogOpen } from \"../utils/animations\";\n\nexport const DialogClose = styled(DialogPrimitive.Close, {\n  backgroundColor: \"transparent\",\n  padding: \"0\",\n  margin: \"0\",\n  border: \"none\",\n  backgroundImage: \"none\",\n});\n\nexport const StyledDialogTrigger = styled(DialogPrimitive.Trigger, {\n  appearance: \"none !important\", // Needed for safari it shows white overlay\n});\n\nexport const CustomDialogOverlay = styled(DialogPrimitive.Overlay, {\n  backgroundColor: \"rgba(0, 0, 0, 0.5);\",\n  position: \"absolute\",\n  inset: 0,\n});\n\nexport const StyledDialogPortal = styled(DialogPrimitive.Portal, {});\n\nexport const CustomDialogContent = styled(DialogPrimitive.Content, {\n  color: \"$on_surface_medium\",\n  backgroundColor: \"$surface_dim\",\n  borderRadius: \"8px\",\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  maxHeight: \"95%\",\n  overflowY: \"auto\",\n  border: \"$space$px solid $border_bright\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  transform: \"translate(-50%, -50%)\",\n  zIndex: 999,\n  padding: \"$12\",\n  \"@allowMotion\": {\n    '&[data-state=\"open\"]': {\n      animation: `${dialogOpen} 150ms cubic-bezier(0.16, 1, 0.3, 1)`,\n    },\n    '&[data-state=\"closed\"]': {\n      animation: `${dialogClose} 150ms cubic-bezier(0.16, 1, 0.3, 1)`,\n    },\n  },\n  \"&:focus\": { outline: \"none\" },\n});\n\nexport const DialogTitle = styled(DialogPrimitive.Title, {\n  margin: 0,\n});\n\nexport const DialogDescription = styled(DialogPrimitive.Description, {});\n\nexport const DialogDefaultCloseIcon = (\n  props: ComponentProps<typeof IconButton>\n) => (\n  <DialogClose asChild>\n    <IconButton {...props}>\n      <CrossIcon />\n    </IconButton>\n  </DialogClose>\n);\n", "import { useContext } from \"react\";\nimport { DialogContainerContext } from \"../context/DialogContext\";\n\nexport function useDialogContainerSelector() {\n  const dialogContainerSelector = useContext(DialogContainerContext);\n  return dialogContainerSelector;\n}\n", "import React, { createContext, ReactNode } from \"react\";\n\nexport const DialogContainerContext = createContext(\"\");\n\nexport function DialogContainerProvider({\n  children,\n  dialogContainerSelector,\n}: {\n  children: ReactNode;\n  dialogContainerSelector: string;\n}) {\n  return (\n    <DialogContainerContext.Provider value={dialogContainerSelector}>\n      {children}\n    </DialogContainerContext.Provider>\n  );\n}\n", "import React, { ComponentProps, PropsWithChildren, PropsWithRef } from \"react\";\nimport { CSS } from \"@stitches/react\";\nimport { CopyIcon, EyeCloseIcon, EyeOpenIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../Layout\";\nimport { styled } from \"../Theme\";\n\nexport const Input = styled(\"input\", {\n  fontFamily: \"$sans\",\n  lineHeight: \"inherit\",\n  backgroundColor: \"$surface_default\",\n  borderRadius: \"8px\",\n  outline: \"none\",\n  border: \"1px solid $border_default\",\n  padding: \"0.5rem 0.75rem\",\n  minHeight: \"30px\",\n  color: \"$on_surface_high\",\n  fontSize: \"$md\",\n  \"&:focus\": {\n    boxShadow: \"0 0 0 1px $colors$primary_default\",\n    border: \"1px solid transparent\",\n  },\n  \"&::placeholder\": {\n    color: \"$on_surface_medium\",\n  },\n  variants: {\n    error: {\n      true: {\n        \"&:focus\": {\n          boxShadow: \"0 0 0 3px $colors$alert_error_default\",\n        },\n      },\n    },\n  },\n});\n\nconst PasswordRoot = styled(\"div\", {\n  w: \"100%\",\n  position: \"relative\",\n  display: \"flex\",\n});\n\nconst PasswordShowIcon: React.FC<\n  ComponentProps<typeof Flex> & { showPassword?: boolean; css?: CSS }\n> = ({ showPassword, css, ...props }) => {\n  return (\n    <Flex css={{ ...css }} {...props}>\n      {showPassword ? <EyeOpenIcon /> : <EyeCloseIcon />}\n    </Flex>\n  );\n};\n\nconst PasswordCopyIcon: React.FC<\n  ComponentProps<typeof Flex & { css?: CSS }>\n> = ({ css, ...props }) => {\n  return (\n    <Flex css={{ ...css }} {...props}>\n      <CopyIcon />\n    </Flex>\n  );\n};\n\nconst PasswordIcons = React.forwardRef<\n  HTMLDivElement,\n  PropsWithChildren<ComponentProps<typeof Flex & { css?: CSS }>>\n>(({ css, ...props }, ref) => {\n  return (\n    <Flex\n      css={{\n        position: \"absolute\",\n        top: 0,\n        height: \"100%\",\n        zIndex: 10,\n        right: \"$4\",\n        bg: \"$surface_bright\",\n        alignItems: \"center\",\n        ...css,\n      }}\n      ref={ref}\n      {...props}\n    >\n      {props.children}\n    </Flex>\n  );\n});\n\nconst ReactInput: React.FC<\n  PropsWithRef<\n    ComponentProps<typeof Input> & { showPassword?: boolean; css?: CSS }\n  >\n> = React.forwardRef<\n  HTMLInputElement,\n  PropsWithRef<\n    ComponentProps<typeof Input> & { showPassword?: boolean; css?: CSS }\n  >\n>(({ showPassword = false, css, ...props }, ref) => {\n  return (\n    <Input\n      css={{ flexGrow: 1, width: \"100%\", ...css }}\n      type={showPassword ? \"text\" : \"password\"}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nexport const PasswordInput = {\n  Root: PasswordRoot,\n  Icons: PasswordIcons,\n  Input: ReactInput,\n  ShowIcon: PasswordShowIcon,\n  CopyIcon: PasswordCopyIcon,\n};\n", "import { Box } from \"../Layout\";\nimport { styled } from \"../Theme\";\nimport { flexCenter } from \"../utils\";\n\nexport const Root = styled(\"div\", {\n  padding: \"0.75rem\",\n  // show videotile context menu on hover\n  // [`&:hover .tile-menu`]: {\n  //   display: 'inline-block',\n  // },\n});\n\nconst Container = styled(\"div\", {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"relative\",\n  overflow: \"hidden\",\n  borderRadius: \"$2\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  background: \"$background_default\",\n  variants: {\n    transparentBg: {\n      true: {\n        background: \"transparent\",\n      },\n    },\n    noRadius: {\n      true: {\n        borderRadius: 0,\n      },\n    },\n  },\n});\n\nconst Overlay = styled(\"div\", {\n  position: \"absolute\",\n  width: \"100%\",\n  height: \"100%\",\n});\n\nconst Info = styled(\"div\", {\n  color: \"$on_primary_high\",\n  position: \"absolute\",\n  bottom: \"5px\",\n  left: \"50%\",\n  fontSize: \"$sm\",\n  transform: \"translateX(-50%)\",\n  textAlign: \"center\",\n  width: \"80%\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  textOverflow: \"ellipsis\",\n  fontFamily: \"$sans\",\n});\n\nconst AttributeBox = styled(\"div\", {\n  position: \"absolute\",\n  top: \"$4\",\n  color: \"$on_secondary_high\",\n  bg: \"$secondary_dim\",\n  borderRadius: \"$round\",\n  width: \"$14\",\n  height: \"$14\",\n  mb: \"5px\",\n  ...flexCenter,\n  variants: {\n    size: {\n      small: {\n        width: \"$10\",\n        height: \"$10\",\n        \"& > svg\": {\n          width: \"$8\",\n          height: \"$8\",\n        },\n      },\n      medium: {\n        width: \"$13\",\n        height: \"$13\",\n      },\n    },\n    position: {\n      left: { left: \"$4\" },\n      right: { right: \"$4\" },\n    },\n  },\n  defaultVariants: {\n    size: \"medium\",\n    position: \"left\",\n  },\n});\n\nconst AudioIndicator = styled(AttributeBox, {\n  defaultVariants: { position: \"right\" },\n});\n\nconst FullScreenButton = styled(\"button\", {\n  height: \"$14\",\n  p: \"$2 $4\",\n  color: \"$on_surface_high\",\n  borderRadius: \"$1\",\n  border: \"none\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  position: \"absolute\",\n  top: \"$2\",\n  right: \"$2\",\n  zIndex: 5,\n  \"&:not([disabled]):focus\": {\n    outline: \"none\",\n    boxShadow: \"0 0 0 3px $colors$primary_bright\",\n  },\n});\n\nconst AvatarContainer = styled(Box, {\n  ...flexCenter,\n  flexDirection: \"column\",\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"50%\",\n  transform: \"translateX(-50%) translateY(-50%)\",\n  width: \"40%\",\n  height: \"40%\",\n  \"& > div\": {\n    maxHeight: \"$20\",\n    height: \"100%\",\n  },\n});\n\ninterface VideoTileType {\n  Root: typeof Root;\n  Container: typeof Container;\n  Overlay: typeof Overlay;\n  Info: typeof Info;\n  AvatarContainer: typeof AvatarContainer;\n  AttributeBox: typeof AttributeBox;\n  AudioIndicator: typeof AudioIndicator;\n  FullScreenButton: typeof FullScreenButton;\n}\n\nexport const StyledVideoTile: VideoTileType = {\n  Root,\n  Container,\n  Overlay,\n  Info,\n  AvatarContainer,\n  AttributeBox,\n  AudioIndicator,\n  FullScreenButton,\n};\n", "export const getLeft = (index: number, currentPageIndex: number) => {\n  //active slide\n  if (index === currentPageIndex) {\n    return 0;\n  }\n  //prev slide\n  if (index + 1 === currentPageIndex) {\n    return \"-100%\";\n  }\n  //next slide\n  if (index - 1 === currentPageIndex) {\n    return \"100%\";\n  }\n  //all slides before prev\n  if (index < currentPageIndex) {\n    return \"-200%\";\n  }\n  //all slides after next\n  return \"200%\";\n};\n", "import { styled } from \"../Theme\";\n\nconst Root = styled(\"div\", {\n  height: \"100%\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst Container = styled(\"div\", {\n  height: \"100%\",\n  width: \"100%\",\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  overflow: \"hidden\",\n});\n\nconst View = styled(\"div\", {\n  height: \"100%\",\n  width: \"100%\",\n  position: \"absolute\",\n  display: \"flex\",\n  placeContent: \"center\",\n  flexWrap: \"wrap\",\n  alignItems: \"center\",\n});\n\ninterface VideoListType {\n  Root: typeof Root;\n  Container: typeof Container;\n  View: typeof View;\n}\n\nexport const StyledVideoList: VideoListType = {\n  Root,\n  Container,\n  View,\n};\n", "import { styled } from \"../Theme\";\n\nconst Root = styled(\"div\", {\n  height: \"2rem\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"0.5rem\",\n  },\n});\n\nconst Chevron = styled(\"button\", {\n  color: \"$on_surface_high\",\n  border: \"none\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&[disabled]\": {\n    color: \"$on_surface_low\",\n    cursor: \"not-allowed\",\n  },\n  backgroundColor: \"transparent\",\n  display: \"flex\",\n});\n\nconst Dots = styled(\"div\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"0.5rem\",\n  },\n});\n\nconst Dot = styled(\"button\", {\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  borderRadius: \"9999px\",\n  width: \"0.5rem\",\n  height: \"0.5rem\",\n  backgroundColor: \"$on_surface_low\",\n  padding: \"0px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  variants: {\n    active: {\n      true: {\n        backgroundColor: \"$on_surface_high\",\n      },\n    },\n  },\n});\n\ninterface PaginationType {\n  Root: typeof Root;\n  Chevron: typeof Chevron;\n  Dots: typeof Dots;\n  Dot: typeof Dot;\n}\n\nexport const StyledPagination: PaginationType = {\n  Root,\n  Chevron,\n  Dots,\n  Dot,\n};\n", "import {\n  CheckboxItem,\n  Content,\n  Group,\n  Item,\n  ItemIndicator,\n  Label,\n  Portal,\n  Root,\n  Separator,\n  Sub,\n  SubContent,\n  SubTrigger,\n  Trigger,\n} from \"@radix-ui/react-dropdown-menu\";\nimport { styled } from \"../Theme\";\n\nconst DropdownRoot = styled(Root, {});\n\nconst DropdownTrigger = styled(Trigger, {\n  cursor: \"pointer\",\n  appearance: \"none !important\",\n  '&[data-state=\"open\"]': {\n    backgroundColor: \"$surface_bright\",\n  },\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n});\n\nconst DropdownTriggerItem = styled(SubTrigger, {\n  w: \"100%\",\n  color: \"$on_surface_high\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n    bg: \"$surface_brighter\",\n  },\n  \"&:focus-visible\": {\n    bg: \"$surface_brighter\",\n    outline: \"none\",\n  },\n});\n\nconst DropdownItem = styled(Item, {\n  color: \"$on_surface_high\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  outline: \"none\",\n  backgroundColor: \"$surface_dim\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n    bg: \"$surface_bright\",\n  },\n  \"&:focus-visible\": {\n    bg: \"$surface_bright\",\n  },\n});\n\nconst DropdownItemSeparator = styled(Separator, {\n  h: 1,\n  backgroundColor: \"$border_bright\",\n  m: \"$4 $8\",\n});\n\nconst DropdownContent = styled(Content, {\n  w: \"$80\",\n  maxHeight: \"$64\",\n  r: \"$1\",\n  py: \"$4\",\n  backgroundColor: \"$surface_dim\",\n  overflowY: \"auto\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  zIndex: 20,\n  fontFamily: \"$sans\",\n});\n\nconst DropdownLabel = styled(Label, {\n  display: \"flex\",\n  alignItems: \"center\",\n  h: \"$12\",\n  w: \"100%\",\n  p: \"$8 $4\",\n});\n\nconst DropdownGroup = styled(Group, {});\n\nconst DropdownSubMenu = styled(Sub, {});\n\nconst DropdownSubMenuContent = styled(SubContent, {\n  w: \"$80\",\n  maxHeight: \"$64\",\n  r: \"$1\",\n  py: \"$4\",\n  backgroundColor: \"$surface_bright\",\n  overflowY: \"auto\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  zIndex: 20,\n});\n\nconst DropdownCheckboxItem = styled(CheckboxItem, {\n  color: \"$on_surface_high\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  outline: \"none\",\n  \"&:hover\": {\n    cursor: \"pointer\",\n    bg: \"$surface_brighter\",\n  },\n  \"&:focus-visible\": {\n    bg: \"$surface_brighter\",\n  },\n  gap: \"$2\",\n});\n\nconst DropdownItemIndicator = styled(ItemIndicator, {\n  w: \"$10\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nexport const Dropdown = {\n  Root: DropdownRoot,\n  Trigger: DropdownTrigger,\n  TriggerItem: DropdownTriggerItem,\n  Content: DropdownContent,\n  Portal: Portal,\n  SubMenu: DropdownSubMenu,\n  SubMenuContent: DropdownSubMenuContent,\n  Item: DropdownItem,\n  Label: DropdownLabel,\n  Group: DropdownGroup,\n  ItemSeparator: DropdownItemSeparator,\n  CheckboxItem: DropdownCheckboxItem,\n  ItemIndicator: DropdownItemIndicator,\n};\n", "import React from \"react\";\nimport type { VariantProps } from \"@stitches/react\";\nimport { HMSPeer, useVideo } from \"@100mslive/react-sdk\";\nimport { styled } from \"../Theme\";\n\nexport const StyledVideo = styled(\"video\", {\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  borderRadius: \"$2\",\n  objectFit: \"cover\",\n  background: \"$background_default\",\n  variants: {\n    mirror: {\n      true: {\n        transform: \"scaleX(-1)\",\n      },\n    },\n    screenShare: {\n      true: {\n        objectFit: \"contain\",\n      },\n    },\n    degraded: {\n      // send the video behind when it's degraded so avatar can show on top of it. Video will be stuck frame in this case.\n      // not hiding by using display none, because it will lead it to be detached as it will no longer be in view.\n      true: {\n        zIndex: -100,\n      },\n    },\n    noRadius: {\n      true: {\n        borderRadius: 0,\n      },\n    },\n  },\n  defaultVariants: {\n    mirror: false,\n  },\n});\n\ntype StyledProps = VariantProps<typeof StyledVideo> &\n  React.ComponentProps<typeof StyledVideo>;\n\ninterface Props {\n  /**\n   * trackID for peer (videoTrack)\n   */\n  trackId: HMSPeer[\"videoTrack\"];\n  /**\n   * Boolean stating whether to override the internal behaviour.\n   * when attach is false, even if tile is inView or enabled, it won't be rendered\n   */\n  attach?: boolean;\n}\n\nexport const Video: React.FC<Props & StyledProps> = ({\n  trackId,\n  attach,\n  ...props\n}) => {\n  const { videoRef } = useVideo({ trackId, attach });\n  return <StyledVideo ref={videoRef} {...props} />;\n};\n", "import * as Popover from \"@radix-ui/react-popover\";\nimport { styled } from \"../Theme\";\nimport { popoverAnimation } from \"../utils/animations\";\nimport { flexCenter } from \"../utils/styles\";\n\nconst Root = Popover.Root;\n\nconst StyledTrigger = styled(Popover.Trigger, {\n  position: \"absolute\",\n  bottom: \"$2\",\n  right: \"$2\",\n  zIndex: 10,\n  width: \"$13\",\n  height: \"$13\",\n  color: \"$on_surface_high\",\n  borderRadius: \"$2\",\n  backgroundColor: \"$surface_bright\",\n  cursor: \"pointer\",\n  border: \"none\",\n  ...flexCenter,\n  \"&:not([disabled]):focus\": {\n    outline: \"none\",\n    boxShadow: \"0 0 0 3px $colors$primary_bright\",\n  },\n});\n\nconst StyledContent = styled(Popover.Content, {\n  fontFamily: \"$sans\",\n  backgroundColor: \"$surface_dim\",\n  padding: \"$5 0\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  borderRadius: \"$space$6\",\n  zIndex: 11,\n  width: \"$60\",\n  ...popoverAnimation,\n});\n\nconst styledItem = {\n  fontSize: \"$sm\",\n  color: \"$on_surface_high\",\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: \"$4 $6\",\n  width: \"100%\",\n  backgroundColor: \"$menuBg\",\n};\n\nconst StyledItemButton = styled(\"button\", {\n  ...styledItem,\n  height: \"$14\",\n  border: \"none\",\n  \"&:hover\": {\n    backgroundColor: \"$surface_brighter\",\n  },\n  cursor: \"pointer\",\n  // TODO: default focus applied cause issues with this style\n  \"&:focus\": {\n    outline: \"none\",\n    // backgroundColor: '$grey3',\n  },\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"$4\",\n  },\n});\n\nconst StyledVolumeItem = styled(\"div\", {\n  // TODO: maybe keep this as base comp and extend button variant\n  ...styledItem,\n  alignItems: \"start\",\n  flexDirection: \"column\",\n  marginBottom: \"0\",\n});\n\nexport const Flex = styled(\"div\", {\n  display: \"flex\",\n  \"& > * + *\": {\n    marginRight: \"0\",\n    marginLeft: \"$4\",\n  },\n});\n\nconst RemoveMenuItem = styled(StyledItemButton, {\n  color: \"$alert_error_default\",\n  borderTop: \"1px solid $border_bright\",\n});\n\ninterface MenuTileType {\n  Root: typeof Root;\n  Trigger: typeof StyledTrigger;\n  Content: typeof StyledContent;\n  ItemButton: typeof StyledItemButton;\n  VolumeItem: typeof StyledVolumeItem;\n  RemoveItem: typeof RemoveMenuItem;\n}\n\nexport const StyledMenuTile: MenuTileType = {\n  Root,\n  Trigger: StyledTrigger,\n  Content: StyledContent,\n  ItemButton: StyledItemButton,\n  VolumeItem: StyledVolumeItem,\n  RemoveItem: RemoveMenuItem,\n};\n", "import { useCallback, useRef } from \"react\";\nimport { HMSTrackID } from \"@100mslive/hms-video-store\";\nimport { useAudioLevelStyles } from \"@100mslive/react-sdk\";\nimport { useTheme } from \"../Theme\";\n\n/**\n * pass in a track id and get a ref. That ref can be attached to an element which will have border\n * as per audio level post that.\n */\nexport function useBorderAudioLevel(audioTrackId?: HMSTrackID) {\n  const { theme } = useTheme();\n  const color = theme.colors.primary_default.value;\n  const getStyle = useCallback(\n    (level: number) => {\n      const style: Record<string, string> = {\n        transition: \"outline 0.4s ease-in-out\",\n      };\n      style[\"outline\"] = level\n        ? `${sigmoid(level) * 4}px solid ${color}`\n        : \"0px solid transparent\";\n      return style;\n    },\n    [color]\n  );\n  const ref = useRef(null);\n  useAudioLevelStyles({\n    trackId: audioTrackId,\n    getStyle,\n    ref,\n  });\n  return ref;\n}\n\nexport const sigmoid = (z: number) => {\n  return 1 / (1 + Math.exp(-z));\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport { selectTrackAudioByID, useHMSVanillaStore } from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../Layout\";\nimport { keyframes } from \"../Theme\";\n//@ts-ignore\nimport bg from \"./audio-level.png\";\n\n// keep the calculated values before hand to avoid recalcuation everytime\nconst positionValues = new Array(101).fill(0).reduce((acc, _, index) => {\n  acc[index] = Math.round((index / 100) * 4) / 4; // convert to 0.25 multiples\n  return acc;\n}, {});\n\nconst barAnimation = keyframes({\n  from: {\n    maskSize: \"4em .8em\",\n    \"-webkit-mask-position-y\": \".1em\",\n    maskPosition: \"initial .1em\",\n  },\n\n  \"50%\": {\n    maskSize: \"4em 1em\",\n    \"-webkit-mask-position-y\": 0,\n    maskPosition: \"initial 0\",\n  },\n\n  to: {\n    maskSize: \"4em .8em\",\n    \"-webkit-mask-position-y\": \".1em\",\n    maskPosition: \"initial 0.1em\",\n  },\n});\n\nconst AudioBar = () => {\n  return (\n    <Box\n      css={{\n        width: \".25em\",\n        height: \"1em\",\n        maskImage: `url(${bg})`,\n        \"-webkit-mask-repeat\": \"no-repeat\",\n        backgroundColor: \"$on_primary_high\",\n        maskSize: \"4em 1em\",\n      }}\n    />\n  );\n};\n\nexport const AudioLevel = ({\n  trackId,\n  size,\n}: {\n  trackId?: string;\n  size?: \"small\" | \"medium\";\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  const vanillaStore = useHMSVanillaStore();\n\n  useEffect(() => {\n    const unsubscribe = vanillaStore.subscribe((audioLevel) => {\n      if (ref.current) {\n        let index = 0;\n        //@ts-ignore\n        for (const child of ref.current.children) {\n          const positionX = `-${\n            positionValues[audioLevel] * (index === 1 ? 2.5 : 1.25)\n          }em`;\n          child.style[\"-webkit-mask-position-x\"] = positionX;\n          child.style[\"mask-position\"] = `${positionX} 0`;\n          child.style[\"animation\"] =\n            positionValues[audioLevel] > 0\n              ? `${barAnimation} 0.6s steps(3,jump-none) 0s infinite`\n              : \"none\";\n          index++;\n        }\n      }\n    }, selectTrackAudioByID(trackId));\n    return unsubscribe;\n  }, [vanillaStore, trackId]);\n  return (\n    <Flex\n      ref={ref}\n      css={{\n        fontSize: size === \"small\" ? \"0.75rem\" : \"1rem\",\n        gap: size === \"small\" ? \"$1\" : \"$2\",\n      }}\n    >\n      <AudioBar />\n      <AudioBar />\n      <AudioBar />\n    </Flex>\n  );\n};\n", "import {\n  Arrow,\n  Close,\n  Content,\n  Popover as Root,\n  Portal,\n  Trigger,\n} from \"@radix-ui/react-popover\";\nimport { styled } from \"../Theme\";\nimport { popoverAnimation } from \"../utils/animations\";\n\nconst StyledContent = styled(Content, {\n  padding: \"$6\",\n  borderRadius: \"$2\",\n  backgroundColor: \"$background_default\",\n  boxShadow: \"$sm\",\n  zIndex: 12,\n  ...popoverAnimation,\n});\n\nconst StyledArrow = styled(Arrow, {\n  ...popoverAnimation,\n});\n\nconst StyledTrigger = styled(Trigger, {\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n});\n\nexport const Popover = {\n  Root,\n  Content: StyledContent,\n  Trigger: StyledTrigger,\n  Portal: Portal,\n  Arrow: StyledArrow,\n  Close: Close,\n};\n", "import React, { Fragment } from \"react\";\nimport {\n  HMSPeerID,\n  HMSTrackID,\n  HMSTrackStats,\n  RID,\n  selectConnectionQualityByPeerID,\n  selectHMSStats,\n  simulcastMapping,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"../Tooltip\";\nimport { formatBytes } from \"./formatBytes\";\nimport { Stats } from \"./StyledStats\";\nimport { useQoE } from \"./useQoE\";\n\nexport interface VideoTileStatsProps {\n  videoTrackID?: HMSTrackID;\n  audioTrackID?: HMSTrackID;\n  peerID?: HMSPeerID;\n  isLocal: boolean;\n}\n\n/**\n * This component can be used to overlay webrtc stats over the Video Tile. For the local tracks it also includes\n * remote inbound stats as sent by the SFU in receiver report.\n */\nexport function VideoTileStats({\n  videoTrackID,\n  audioTrackID,\n  peerID,\n  isLocal = false,\n}: VideoTileStatsProps) {\n  const audioSelector = isLocal\n    ? selectHMSStats.localAudioTrackStatsByID\n    : selectHMSStats.trackStatsByID;\n  const audioTrackStats = useHMSStatsStore(audioSelector(audioTrackID));\n  const localVideoTrackStats = useHMSStatsStore(\n    selectHMSStats.localVideoTrackStatsByID(videoTrackID)\n  );\n  const remoteVideoTrackStats = useHMSStatsStore(\n    selectHMSStats.trackStatsByID(videoTrackID)\n  );\n  const videoTrackStats = isLocal\n    ? localVideoTrackStats?.[0]\n    : remoteVideoTrackStats;\n  const downlinkScore = useHMSStore(\n    selectConnectionQualityByPeerID(peerID)\n  )?.downlinkQuality;\n  const availableOutgoingBitrate = useHMSStatsStore(\n    selectHMSStats.availablePublishBitrate\n  );\n  const qoe = useQoE({ videoTrackID, audioTrackID, isLocal });\n\n  // Viewer role - no stats to show\n  if (!(audioTrackStats || videoTrackStats)) {\n    return null;\n  }\n  return (\n    <Stats.Root>\n      <table>\n        <tbody>\n          {isLocal ? (\n            <Fragment>\n              <StatsRow\n                show={isNotNullishAndNot0(availableOutgoingBitrate)}\n                label=\"AOBR\"\n                tooltip=\"Available Outgoing Bitrate\"\n                value={formatBytes(availableOutgoingBitrate, \"b/s\")}\n              />\n              {localVideoTrackStats?.map((stat) => {\n                if (!stat) {\n                  return null;\n                }\n                const layer = stat.rid ? simulcastMapping[stat.rid as RID] : \"\";\n                return (\n                  <Fragment key={`${stat.id}${stat.rid}`}>\n                    {layer && <StatsRow label={layer.toUpperCase()} value=\"\" />}\n                    <StatsRow\n                      show={isNotNullishAndNot0(stat.frameWidth)}\n                      label=\"Width\"\n                      value={stat.frameWidth?.toString()}\n                    />\n                    <StatsRow\n                      show={isNotNullishAndNot0(stat.frameHeight)}\n                      label=\"Height\"\n                      value={stat.frameHeight?.toString()}\n                    />\n                    <StatsRow\n                      show={isNotNullishAndNot0(stat.framesPerSecond)}\n                      label=\"FPS\"\n                      value={`${stat.framesPerSecond} ${\n                        isNotNullishAndNot0(stat.framesDropped)\n                          ? `(${stat.framesDropped} dropped)`\n                          : \"\"\n                      }`}\n                    />\n                    <StatsRow\n                      show={isNotNullish(stat.bitrate)}\n                      label=\"Bitrate(V)\"\n                      value={formatBytes(stat.bitrate, \"b/s\")}\n                    />\n                    <Stats.Gap />\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          ) : (\n            <Fragment>\n              <StatsRow show={isNotNullish(qoe)} label=\"QoE\" value={qoe} />\n              <StatsRow\n                show={isNotNullishAndNot0(videoTrackStats?.frameWidth)}\n                label=\"Width\"\n                value={videoTrackStats?.frameWidth?.toString()}\n              />\n              <StatsRow\n                show={isNotNullishAndNot0(videoTrackStats?.frameHeight)}\n                label=\"Height\"\n                value={videoTrackStats?.frameHeight?.toString()}\n              />\n              <StatsRow\n                show={isNotNullishAndNot0(videoTrackStats?.framesPerSecond)}\n                label=\"FPS\"\n                value={`${videoTrackStats?.framesPerSecond} ${\n                  isNotNullishAndNot0(videoTrackStats?.framesDropped)\n                    ? `(${videoTrackStats?.framesDropped} dropped)`\n                    : \"\"\n                }`}\n              />\n              <StatsRow\n                show={isNotNullish(videoTrackStats?.totalPausesDuration)}\n                label=\"Pauses Duration\"\n                value={videoTrackStats?.totalPausesDuration}\n              />\n              <StatsRow\n                show={isNotNullish(videoTrackStats?.totalFreezesDuration)}\n                label=\"Freezes Duration\"\n                value={videoTrackStats?.totalFreezesDuration}\n              />\n              <StatsRow\n                show={isNotNullish(videoTrackStats?.bitrate)}\n                label=\"Bitrate(V)\"\n                value={formatBytes(videoTrackStats?.bitrate, \"b/s\")}\n              />\n            </Fragment>\n          )}\n\n          <StatsRow\n            show={isNotNullish(audioTrackStats?.bitrate)}\n            label=\"Bitrate(A)\"\n            value={formatBytes(audioTrackStats?.bitrate, \"b/s\")}\n          />\n\n          <StatsRow\n            show={isNotNullish(downlinkScore)}\n            label=\"CQS\"\n            value={downlinkScore}\n          />\n\n          <StatsRow\n            show={isNotNullish(videoTrackStats?.codec)}\n            label=\"Codec(V)\"\n            value={videoTrackStats?.codec}\n          />\n\n          <StatsRow\n            show={isNotNullish(audioTrackStats?.codec)}\n            label=\"Codec(A)\"\n            value={audioTrackStats?.codec}\n          />\n\n          <PacketLostAndJitter\n            audioTrackStats={audioTrackStats}\n            videoTrackStats={videoTrackStats}\n          />\n        </tbody>\n      </table>\n    </Stats.Root>\n  );\n}\n\nconst PacketLostAndJitter = ({\n  audioTrackStats,\n  videoTrackStats,\n}: {\n  audioTrackStats?: HMSTrackStats;\n  videoTrackStats?: HMSTrackStats;\n}) => {\n  // for local peer, we'll use the remote inbound stats to get packet loss and jitter, to know whether the track is\n  // local we check if the stats type has outbound in it as it's being published from local. Both audio and video\n  // tracks are checked in case the user has permission to publish only one of them.\n  const isLocalPeer =\n    audioTrackStats?.type.includes(\"outbound\") ||\n    videoTrackStats?.type.includes(\"outbound\");\n  const audioStats = isLocalPeer ? audioTrackStats?.remote : audioTrackStats;\n  const videoStats = isLocalPeer ? videoTrackStats?.remote : videoTrackStats;\n  return (\n    <>\n      <TrackPacketsLostRow label=\"Packet Loss(V)\" stats={videoStats} />\n      <TrackPacketsLostRow label=\"Packet Loss(A)\" stats={audioStats} />\n      <StatsRow\n        show={isNotNullish(videoStats?.jitter)}\n        label=\"Jitter(V)\"\n        value={videoStats?.jitter?.toFixed(4)}\n      />\n      <StatsRow\n        show={isNotNullish(audioStats?.jitter)}\n        label=\"Jitter(A)\"\n        value={audioStats?.jitter?.toFixed(4)}\n      />\n    </>\n  );\n};\n\nconst TrackPacketsLostRow = ({\n  stats,\n  label,\n}: {\n  stats?: Pick<HMSTrackStats, \"packetsLost\" | \"packetsLostRate\">;\n  label: string;\n}) => {\n  const packetsLostRate = `${\n    stats?.packetsLostRate ? stats.packetsLostRate.toFixed(2) : 0\n  }/s`;\n\n  return (\n    <StatsRow\n      show={isNotNullishAndNot0(stats?.packetsLost)}\n      label={label}\n      value={`${stats?.packetsLost}(${packetsLostRate})`}\n    />\n  );\n};\n\nconst RawStatsRow = ({\n  label = \"\",\n  value = \"\",\n  tooltip = \"\",\n  show = true,\n}: {\n  label: string;\n  value?: string | number;\n  show?: boolean;\n  tooltip?: string;\n}) => {\n  const statsLabel = <Stats.Label>{label}</Stats.Label>;\n\n  return (\n    <>\n      {show ? (\n        <Stats.Row>\n          {tooltip ? (\n            <Tooltip side=\"top\" title={tooltip}>\n              {statsLabel}\n            </Tooltip>\n          ) : (\n            statsLabel\n          )}\n          {value === \"\" ? <Stats.Value /> : <Stats.Value>{value}</Stats.Value>}\n        </Stats.Row>\n      ) : null}\n    </>\n  );\n};\n\n// memoize so only the rows which change rerender\nconst StatsRow = React.memo(RawStatsRow);\n\nexport function isNotNullishAndNot0(value: number | undefined | null) {\n  return isNotNullish(value) && value !== 0;\n}\n\n/**\n * Check only for presence(not truthy) of a value.\n * Use in places where 0, false need to be considered valid.\n */\nexport function isNotNullish(value: number | string | undefined | null) {\n  return value !== undefined && value !== null;\n}\n", "export const formatBytes = (bytes?: number, unit = \"B\", decimals = 2) => {\n  if (bytes === 0) {\n    return `0 ${unit}`;\n  }\n  if (!bytes) {\n    return \"-\";\n  }\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(\n    (size) => size + unit\n  );\n\n  let i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  // B to KB\n  i === 0 && i++;\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n", "import { styled } from \"../Theme\";\n\nexport const Root = styled(\"div\", {\n  backgroundColor: \"rgba(0,0,0,0.75)\",\n  position: \"absolute\",\n  top: \"$3\",\n  left: \"$3\",\n  zIndex: 7,\n  borderRadius: \"$2\",\n  padding: \"$2\",\n  fontSize: \"$xs\",\n  overflowY: \"auto\",\n  maxHeight: \"75%\",\n  maxWidth: \"85%\",\n});\n\nexport const Table = styled(\"table\", {});\n\nexport const Row = styled(\"tr\", {\n  width: \"100%\",\n  \"& > * + *\": {\n    px: \"$4\",\n  },\n  whiteSpace: \"nowrap\",\n  textAlign: \"left\",\n});\n\nexport const Label = styled(\"td\", {\n  color: \"$on_primary_high\",\n  fontWeight: \"$regular\",\n});\n\nexport const Value = styled(\"td\", {\n  color: \"$on_primary_high\",\n});\n\nexport const Gap = styled(\"tr\", {\n  height: \"$4\",\n});\n\ninterface StatsType {\n  Root: typeof Root;\n  Row: typeof Row;\n  Label: typeof Label;\n  Value: typeof Value;\n  Table: typeof Table;\n  Gap: typeof Gap;\n}\n\nexport const Stats: StatsType = {\n  Root,\n  Row,\n  Label,\n  Value,\n  Table,\n  Gap,\n};\n", "import { useRef } from \"react\";\nimport { usePrevious } from \"react-use\";\nimport {\n  HMSTrackID,\n  selectHMSStats,\n  useHMSStatsStore,\n} from \"@100mslive/react-sdk\";\n\ninterface UseQoEProps {\n  videoTrackID?: HMSTrackID;\n  audioTrackID?: HMSTrackID;\n  isLocal?: boolean;\n}\n\nconst EXPECTED_RESOLUTION = 1280 * 720;\n\nconst clip = (value: number, min_value: number, max_value: number) => {\n  return Math.max(Math.min(value, max_value), min_value);\n};\n\n/**\n * calculate QoE using 5 params:\n * p1:freeze_duration_norm\n * p2:resolution_norm\n * p3:fps_norm\n * p4:delay_norm\n * p5:audio_concealed_norm\n * the formula is 5*(p1)^3 * (p2)^0.3 * (p3)^0.5 * (p4)^1 * (p5)*2\n *\n * https://github.com/100mslive/webrtc-benchmark/blob/daily/sssd.py#L112\n */\nexport const useQoE = ({\n  videoTrackID,\n  audioTrackID,\n  isLocal = false,\n}: UseQoEProps) => {\n  const audioTrackStats = useHMSStatsStore(\n    selectHMSStats.trackStatsByID(audioTrackID)\n  );\n  const videoTrackStats = useHMSStatsStore(\n    selectHMSStats.trackStatsByID(videoTrackID)\n  );\n  const prevVideoTrackStats = usePrevious(videoTrackStats);\n  const prevAudioTrackStats = usePrevious(audioTrackStats);\n\n  const prevJitterBufferDelayMs = useRef<number>(0);\n\n  if (\n    isLocal ||\n    (videoTrackID && !videoTrackStats) ||\n    (audioTrackID && !audioTrackStats)\n  ) {\n    return;\n  }\n\n  const resolutionNorm =\n    ((videoTrackStats?.frameWidth || 0) * (videoTrackStats?.frameHeight || 0)) /\n    EXPECTED_RESOLUTION;\n\n  const framesDecodedInLastSec =\n    videoTrackStats?.framesDecoded && prevVideoTrackStats?.framesDecoded\n      ? videoTrackStats.framesDecoded - prevVideoTrackStats.framesDecoded\n      : 0;\n  let freezeDurationNorm =\n    1 -\n    ((videoTrackStats?.totalFreezesDuration || 0) -\n      (prevVideoTrackStats?.totalFreezesDuration || 0));\n  freezeDurationNorm = freezeDurationNorm < 0 ? 0.5 : freezeDurationNorm;\n  freezeDurationNorm = framesDecodedInLastSec === 0 ? 0 : freezeDurationNorm;\n\n  const fpsNorm = framesDecodedInLastSec / 30;\n\n  const prevJBDelay = prevVideoTrackStats?.jitterBufferDelay || 0;\n  const prevJBEmittedCount = prevVideoTrackStats?.jitterBufferEmittedCount || 0;\n  const currentJBDelay =\n    (videoTrackStats?.jitterBufferDelay || 0) - prevJBDelay;\n  const currentJBEmittedCount =\n    (videoTrackStats?.jitterBufferEmittedCount || 0) - prevJBEmittedCount;\n\n  const jitterBufferDelayMs =\n    currentJBEmittedCount > 0\n      ? (currentJBDelay * 1000) / currentJBEmittedCount\n      : prevJitterBufferDelayMs.current;\n  prevJitterBufferDelayMs.current = jitterBufferDelayMs;\n  const delayNorm = 1 - Math.min(1, jitterBufferDelayMs / 2000);\n\n  const prevConcealedSamples =\n    (prevAudioTrackStats?.concealedSamples || 0) -\n    (prevAudioTrackStats?.silentConcealedSamples || 0);\n  const currentConcealedSamples =\n    (audioTrackStats?.concealedSamples || 0) -\n    (audioTrackStats?.silentConcealedSamples || 0) -\n    prevConcealedSamples;\n\n  const audioConcealedNorm = 1 - currentConcealedSamples / 48000;\n\n  return (\n    5 *\n    clip(freezeDurationNorm, 0, 1) ** 3 *\n    clip(resolutionNorm, 0, 1) ** 0.3 *\n    clip(fpsNorm, 0, 1) ** 0.2 *\n    clip(delayNorm, 0, 1) ** 0.5 *\n    clip(audioConcealedNorm, 0, 1) ** 2\n  ).toFixed(2);\n};\n", "import * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { styled } from \"../Theme\";\n\nconst CheckboxRoot = styled(CheckboxPrimitive.Root, {\n  all: \"unset\",\n  border: \"1px solid $primary_default\",\n  backgroundColor: \"$on_primary_high\",\n  width: \"$8\",\n  height: \"$8\",\n  borderRadius: \"$0\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  boxShadow: \"none\",\n  outline: \"none\",\n  cursor: \"pointer\",\n  \"&:focus\": {\n    boxShadow: \"none\",\n    outline: \"none\",\n  },\n  '&[data-state=\"checked\"]': {\n    backgroundColor: \"$primary_default\",\n  },\n});\n\nconst CheckboxIndicator = styled(CheckboxPrimitive.Indicator, {\n  color: \"$on_primary_high\",\n});\n\nexport const Checkbox = {\n  Root: CheckboxRoot,\n  Indicator: CheckboxIndicator,\n};\n", "import * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { styled } from \"../Theme\";\n\nexport const Label = styled(LabelPrimitive.Root, {\n  fontFamily: \"$sans\",\n  fontSize: \"$md\",\n  color: \"$on_primary_high\",\n});\n", "import * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport { styled } from \"../Theme\";\n\nconst RadioGroupRoot = styled(RadioGroupPrimitive.Root, {\n  display: \"flex\",\n  alignItems: \"center\",\n});\n\nconst RadioGroupItem = styled(RadioGroupPrimitive.Item, {\n  bg: \"$on_primary_high\",\n  width: \"$8\",\n  height: \"$8\",\n  border: \"1px solid $primary_default\",\n  cursor: \"pointer\",\n  borderRadius: \"$round\",\n  \"&:focus\": {\n    boxShadow: \"none\",\n    outline: \"none\",\n  },\n  '&[data-state=\"checked\"]': {\n    borderWidth: \"$space$2\",\n    p: \"$1\",\n  },\n});\nconst RadioGroupIndicator = styled(RadioGroupPrimitive.Indicator, {\n  bg: \"$primary_default\",\n});\n\nexport const RadioGroup = {\n  Root: RadioGroupRoot,\n  Item: RadioGroupItem,\n  Indicator: RadioGroupIndicator,\n};\n", "import React, { ComponentProps } from \"react\";\nimport type { ToastProps } from \"@radix-ui/react-toast\";\nimport * as ToastPrimitives from \"@radix-ui/react-toast\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../IconButton\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { styled } from \"../Theme\";\nimport { toastAnimation } from \"../utils\";\n\nconst getToastVariant = (base: string) => {\n  return {\n    borderLeftColor: base,\n    borderLeft: 0,\n    \"&:before\": {\n      position: \"absolute\",\n      top: \"-1px\",\n      left: \"-$4\",\n      width: \"$8\",\n      borderLeft: `solid $space$px ${base}`,\n      borderTop: `solid $space$px ${base}`,\n      borderBottom: `solid $space$px ${base}`,\n      borderTopLeftRadius: \"$3\",\n      borderBottomLeftRadius: \"$3\",\n      bg: base,\n      content: \" \",\n      height: \"100%\",\n      zIndex: 10,\n    },\n    \"@sm\": {\n      \"&:before\": {\n        content: \"none\",\n      },\n      border: `solid $space$px ${base}`,\n    },\n  };\n};\n\nconst ToastRoot = styled(ToastPrimitives.Root, {\n  r: \"$3\",\n  bg: \"$surface_default\",\n  p: \"$10\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"relative\",\n  fontFamily: \"$sans\",\n  border: \"solid $space$px $border_bright\",\n  overflow: \"hidden\",\n  ...toastAnimation,\n  \"@sm\": {\n    p: \"$8 $11\",\n  },\n  variants: {\n    variant: {\n      standard: getToastVariant(\"$secondary_default\"),\n      warning: getToastVariant(\"$alert_warning\"),\n      error: getToastVariant(\"$alert_error_default\"),\n      success: getToastVariant(\"$alert_success\"),\n    },\n  },\n  defaultVariants: {\n    variant: \"standard\",\n  },\n});\n\nconst ToastTitle = styled(ToastPrimitives.Title, {\n  fontSize: \"$md\",\n  color: \"$on_surface_high\",\n  fontWeight: \"$semiBold\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n});\nconst ToastDescription = styled(ToastPrimitives.Description, {\n  color: \"$on_surface_medium\",\n});\nconst ToastClose = styled(ToastPrimitives.Close, {});\nconst ToastAction = styled(ToastPrimitives.Action, {\n  cursor: \"pointer\",\n  background: \"none\",\n  border: \"none\",\n});\nconst ToastViewport = styled(ToastPrimitives.Viewport, {\n  position: \"fixed\",\n  bottom: 0,\n  left: 0,\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"$8\",\n  gap: 10,\n  width: 390,\n  \"@sm\": {\n    width: \"100%\",\n    padding: \"$6\",\n  },\n  maxWidth: \"100vw\",\n  margin: 0,\n  listStyle: \"none\",\n  zIndex: 1000,\n});\n\nconst DefaultClose = ({\n  css,\n}: Pick<ComponentProps<typeof ToastClose>, \"css\">) => {\n  return (\n    <ToastClose css={css} asChild>\n      <IconButton>\n        <CrossIcon />\n      </IconButton>\n    </ToastClose>\n  );\n};\n\ninterface HMSToastProps extends ToastProps {\n  title: string;\n  description?: string;\n  isClosable?: boolean;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n  inlineAction?: boolean;\n}\n\nconst HMSToast: React.FC<HMSToastProps> = ({\n  title,\n  description,\n  isClosable = true,\n  icon,\n  action,\n  inlineAction = false,\n  ...props\n}) => {\n  return (\n    <>\n      <ToastRoot {...props}>\n        <ToastTitle>\n          <Flex align=\"center\" css={{ gap: \"$4\", flex: \"1 1 0\", minWidth: 0 }}>\n            {icon ? (\n              <Box css={{ w: \"$10\", h: \"$10\", alignSelf: \"start\", mt: \"$2\" }}>\n                {icon}\n              </Box>\n            ) : null}\n            <Text\n              variant=\"sub1\"\n              css={{ c: \"inherit\", wordBreak: \"break-word\" }}\n            >\n              {title}\n            </Text>\n          </Flex>\n          {isClosable ? <DefaultClose /> : null}\n          {!isClosable && inlineAction && action ? (\n            <ToastAction altText={`${title}Action`}>{action}</ToastAction>\n          ) : null}\n        </ToastTitle>\n        {description ? (\n          <ToastDescription>\n            <Text\n              variant=\"body1\"\n              css={{ fontWeight: \"$regular\", c: \"$on_surface_medium\" }}\n            >\n              {description}\n            </Text>\n          </ToastDescription>\n        ) : null}\n        {!inlineAction && action ? (\n          <ToastAction altText={`${title}Action`} css={{ mt: \"$10\" }}>\n            {action}\n          </ToastAction>\n        ) : null}\n      </ToastRoot>\n    </>\n  );\n};\nexport const Toast = {\n  Provider: ToastPrimitives.Provider,\n  Root: ToastRoot,\n  Title: ToastTitle,\n  Description: ToastDescription,\n  Close: DefaultClose,\n  Action: ToastAction,\n  Viewport: ToastViewport,\n  HMSToast: HMSToast,\n};\n", "import React, { PropsWithChildren } from \"react\";\nimport * as BaseAccordion from \"@radix-ui/react-accordion\";\nimport { CSS } from \"@stitches/react\";\nimport { ChevronUpIcon } from \"@100mslive/react-icons\";\nimport { Box } from \"../Layout\";\nimport { styled } from \"../Theme\";\nimport { slideDown, slideUp } from \"../utils\";\n\nconst StyledAccordion = styled(BaseAccordion.Root, {});\n\nconst StyledItem = styled(BaseAccordion.Item, {\n  marginTop: \"$px\",\n  display: \"block\",\n  \"&:first-child\": {\n    marginTop: 0,\n    borderTopLeftRadius: \"$0\",\n    borderTopRightRadius: \"$0\",\n  },\n  \"&:last-child\": {\n    borderBottomLeftRadius: \"$4\",\n    borderBottomRightRadius: \"$4\",\n  },\n});\n\nconst StyledHeader = styled(BaseAccordion.Header, {\n  all: \"unset\",\n  display: \"flex\",\n  fontFamily: \"$sans\",\n});\n\nconst StyledTrigger = styled(BaseAccordion.Trigger, {\n  all: \"unset\",\n  fontFamily: \"$sans\",\n  flex: 1,\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  fontSize: \"$md\",\n  lineHeight: \"$md\",\n  color: \"$on_surface_high\",\n});\n\nconst StyledContent = styled(BaseAccordion.Content, {\n  display: \"contents\",\n  fontSize: \"$md\",\n  fontFamily: \"$sans\",\n  color: \"$on_surface_medium\",\n  '&[data-state=\"open\"]': {\n    animation: `${slideDown(\n      \"--radix-accordion-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n  '&[data-state=\"closed\"]': {\n    animation: `${slideUp(\n      \"--radix-accordion-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n});\n\nconst StyledChevron = styled(ChevronUpIcon, {\n  color: \"$on_primary_high\",\n  transition: \"transform 300ms cubic-bezier(0.87, 0, 0.13, 1)\",\n  \"[data-state=closed] &\": { transform: \"rotate(180deg)\" },\n});\n\n// Exports\nexport const AccordionRoot = StyledAccordion;\nexport const AccordionItem = StyledItem;\n\nexport const AccordionHeader: React.FC<\n  PropsWithChildren<\n    BaseAccordion.AccordionTriggerProps & {\n      iconStyles?: CSS;\n      css?: CSS;\n      chevronID?: string;\n    }\n  >\n> = React.forwardRef<\n  HTMLButtonElement,\n  PropsWithChildren<\n    BaseAccordion.AccordionTriggerProps & {\n      iconStyles?: CSS;\n      css?: CSS;\n      chevronID?: string;\n    }\n  >\n>(({ children, iconStyles, css, chevronID, ...props }, forwardedRef) => (\n  <StyledHeader css={css}>\n    <StyledTrigger {...props} ref={forwardedRef}>\n      {children}\n      <StyledChevron data-testid={chevronID} aria-hidden css={iconStyles} />\n    </StyledTrigger>\n  </StyledHeader>\n));\n\nexport const AccordionContent: React.FC<\n  PropsWithChildren<\n    BaseAccordion.AccordionContentProps & { contentStyles?: CSS }\n  >\n> = React.forwardRef<\n  HTMLDivElement,\n  PropsWithChildren<\n    BaseAccordion.AccordionContentProps & { contentStyles?: CSS }\n  >\n>(({ children, contentStyles, ...props }, forwardedRef) => (\n  <StyledContent {...props} ref={forwardedRef}>\n    <Box css={contentStyles}>{children}</Box>\n  </StyledContent>\n));\n", "import {\n  AccordionContent,\n  AccordionHeader,\n  AccordionItem,\n  AccordionRoot,\n} from \"./Accordion\";\n\nexport const Accordion = {\n  Root: AccordionRoot,\n  Item: AccordionItem,\n  Content: AccordionContent,\n  Header: AccordionHeader,\n};\n", "import { styled } from \"../Theme\";\n\nconst StyledFieldset = styled(\"fieldset\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  border: \"none\",\n  backgroundColor: \"transparent\",\n});\n\nexport const Fieldset = StyledFieldset;\n", "import { Flex } from \"../Layout\";\nimport { styled } from \"../Theme\";\n\nconst Root = styled(Flex, {\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  py: \"$4\",\n  position: \"relative\",\n  height: \"100%\",\n  \"@md\": { flexWrap: \"wrap\", gap: \"$4\" },\n});\n\nconst Left = styled(Flex, {\n  alignItems: \"center\",\n  position: \"absolute\",\n  left: \"$10\",\n  gap: \"$8\",\n  \"@md\": {\n    position: \"unset\",\n    justifyContent: \"center\",\n    w: \"100%\",\n  },\n});\n\nconst Center = styled(Flex, {\n  w: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  gap: \"$8\",\n});\n\nconst Right = styled(Flex, {\n  alignItems: \"center\",\n  position: \"absolute\",\n  right: \"$10\",\n  gap: \"$8\",\n  \"@md\": {\n    display: \"none\",\n  },\n});\n\nexport const Footer = {\n  Root,\n  Left,\n  Center,\n  Right,\n};\n", "export { Select } from \"./ReactSelect\";\n", "import * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { styled } from \"../Theme\";\n\nconst StyledRoot = styled(SelectPrimitive.Root, {});\n\nconst StyledTrigger = styled(SelectPrimitive.SelectTrigger, {\n  all: \"unset\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"$2\",\n  padding: \"$8\",\n  lineHeight: \"$px\",\n  gap: \"$8\",\n  backgroundColor: \"$secondary_default\",\n  color: \"$on_primary_high\",\n  fontSize: \"$8\",\n  cursor: \"pointer\",\n  r: \"$1\",\n});\n\nconst StyledContent = styled(SelectPrimitive.Content, {\n  overflow: \"hidden\",\n  backgroundColor: \"$surface_bright\",\n  r: \"$1\",\n  h: \"$80\",\n});\n\nconst StyledViewport = styled(SelectPrimitive.Viewport, {\n  padding: \"$3\",\n});\n\nconst StyledItem = styled(SelectPrimitive.Item, {\n  all: \"unset\",\n  fontSize: \"$7\",\n  r: \"$1\",\n  display: \"flex\",\n  p: \"$4 $8\",\n  w: \"$52\",\n  position: \"relative\",\n  userSelect: \"none\",\n  cursor: \"pointer\",\n});\n\nconst StyledLabel = styled(SelectPrimitive.Label, {\n  p: \"$4 $8\",\n  lineHeight: \"$10\",\n  color: \"$on_primary_high\",\n});\n\nconst StyledSeparator = styled(SelectPrimitive.Separator, {\n  height: \"$px\",\n  backgroundColor: \"$on_primary_high\",\n  margin: \"$4\",\n  opacity: 0.4,\n});\n\nconst StyledItemIndicator = styled(SelectPrimitive.ItemIndicator, {\n  position: \"absolute\",\n  right: \"$8\",\n  width: \"$8\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"$on_primary_high\",\n});\n\nconst scrollButtonStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  p: \"$4\",\n  backgroundColor: \"$surface_bright\",\n  color: \"$on_primary_high\",\n  cursor: \"default\",\n};\n\nconst StyledScrollUpButton = styled(\n  SelectPrimitive.ScrollUpButton,\n  scrollButtonStyles\n);\n\nconst StyledScrollDownButton = styled(\n  SelectPrimitive.ScrollDownButton,\n  scrollButtonStyles\n);\n\nexport const Select = {\n  Root: StyledRoot,\n  Trigger: StyledTrigger,\n  Content: StyledContent,\n  Viewport: StyledViewport,\n  Item: StyledItem,\n  Label: StyledLabel,\n  Separator: StyledSeparator,\n  ItemIndicator: StyledItemIndicator,\n  ScrollUpButton: StyledScrollUpButton,\n  ScrollDownButton: StyledScrollDownButton,\n  Value: SelectPrimitive.Value,\n  Icon: SelectPrimitive.Icon,\n  ItemText: SelectPrimitive.ItemText,\n  Group: SelectPrimitive.Group,\n};\n", "import * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport { styled } from \"../Theme\";\n\nconst StyledTabsRoot = styled(TabsPrimitive.Root, {\n  display: \"flex\",\n});\n\nconst StyledList = styled(TabsPrimitive.List, {\n  flexShrink: 0,\n  display: \"flex\",\n});\n\nconst StyledTrigger = styled(TabsPrimitive.Trigger, {\n  all: \"unset\",\n  fontFamily: \"$sans\",\n  p: \"$8\",\n  display: \"flex\",\n  alignItems: \"center\",\n  fontSize: \"$sm\",\n  lineHeight: \"$sm\",\n  color: \"$on_surface_high\",\n  userSelect: \"none\",\n  cursor: \"pointer\",\n  '&[data-state=\"active\"]': {\n    bg: \"$surface_brighter\",\n    r: \"$1\",\n  },\n});\n\nconst StyledContent = styled(TabsPrimitive.Content, {\n  flex: \"1 1 0\",\n  padding: \"$10\",\n  outline: \"none\",\n});\n\nexport const Tabs = {\n  Root: StyledTabsRoot,\n  List: StyledList,\n  Content: StyledContent,\n  Trigger: StyledTrigger,\n};\n", "import React, { ComponentProps } from \"react\";\nimport { QRCodeSVG } from \"qrcode.react\";\n\nexport const QRCode = (props: ComponentProps<typeof QRCodeSVG>) => {\n  return <QRCodeSVG style={{ width: \"100%\", height: \"100%\" }} {...props} />;\n};\n", "import React from \"react\";\nimport * as icons from \"@100mslive/react-icons\";\nimport { Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { styled } from \"../Theme\";\n\nconst LinkComponent = styled(\"a\", {\n  textDecoration: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"$5\",\n  variants: {\n    color: {\n      highEmp: {\n        color: \"$on_surface_high\",\n        \"&:hover\": {\n          color: \"$on_surface_medium\",\n        },\n      },\n      primary: {\n        color: \"$primary_default\",\n        \"&:hover\": {\n          color: \"$primary_bright\",\n        },\n      },\n    },\n  },\n});\n\nexport interface LinkProps extends React.ComponentProps<typeof LinkComponent> {\n  as?: React.ElementType;\n  iconSide?: \"left\" | \"right\" | \"none\";\n  icon?: keyof typeof icons;\n  color?: \"highEmp\" | \"primary\";\n}\n\nexport const Link = ({\n  iconSide = \"left\",\n  icon,\n  color = \"primary\",\n  children,\n  ...rest\n}: LinkProps) => {\n  const Icon = icon ? icons[icon] : React.Fragment;\n  const renderedIcon = icon ? (\n    <Flex as=\"span\">\n      <Icon height={13.33} width={13.33} />{\" \"}\n    </Flex>\n  ) : null;\n\n  return (\n    <LinkComponent {...rest} color={color}>\n      {iconSide === \"left\" && renderedIcon}\n      <Text as=\"span\" variant=\"body2\" css={{ color: \"inherit\" }}>\n        {children}\n      </Text>\n      {iconSide === \"right\" && renderedIcon}\n    </LinkComponent>\n  );\n};\n", "import { Content, Root, Trigger } from \"@radix-ui/react-collapsible\";\nimport { styled } from \"../Theme\";\nimport { slideDown, slideUp } from \"../utils\";\n\nconst CollapsibleRoot = styled(Root, {});\n\nconst CollapsibleTrigger = styled(Trigger, {\n  cursor: \"pointer\",\n  appearance: \"none !important\",\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px $colors$primary_default\",\n  },\n});\n\nconst CollapsibleContent = styled(Content, {\n  w: \"$80\",\n  r: \"$1\",\n  overflowY: \"auto\",\n  '&[data-state=\"open\"]': {\n    animation: `${slideDown(\n      \"--radix-collapsible-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n  '&[data-state=\"closed\"]': {\n    animation: `${slideUp(\n      \"--radix-collapsible-content-height\"\n    )} 300ms cubic-bezier(0.87, 0, 0.13, 1) forwards`,\n  },\n});\n\nexport const Collapsible = {\n  Root: CollapsibleRoot,\n  Trigger: CollapsibleTrigger,\n  Content: CollapsibleContent,\n};\n", "import React, { MutableRefObject, useEffect, useRef } from \"react\";\nimport {\n  HMSStatsStoreWrapper,\n  HMSStoreWrapper,\n  IHMSNotifications,\n} from \"@100mslive/hms-video-store\";\nimport {\n  Layout,\n  Logo,\n  Screens,\n  Theme,\n  Typography,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSActions,\n  HMSReactiveStore,\n  HMSRoomProvider,\n  selectIsConnectedToRoom,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { AppData } from \"./components/AppData/AppData\";\n// @ts-ignore: No implicit Any\nimport AuthToken from \"./components/AuthToken\";\nimport { ConferenceScreen } from \"./components/ConferenceScreen\";\n// @ts-ignore: No implicit Any\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\n// @ts-ignore: No implicit Any\nimport { Init } from \"./components/init/Init\";\n// @ts-ignore: No implicit Any\nimport { KeyboardHandler } from \"./components/Input/KeyboardInputManager\";\nimport { LeaveScreen } from \"./components/LeaveScreen\";\nimport { MwebLandscapePrompt } from \"./components/MwebLandscapePrompt\";\nimport { Notifications } from \"./components/Notifications\";\nimport { PIPProvider } from \"./components/PIP/PIPProvider\";\nimport { PreviewScreen } from \"./components/Preview/PreviewScreen\";\n// @ts-ignore: No implicit Any\nimport { ToastContainer } from \"./components/Toast/ToastContainer\";\nimport { VBHandler } from \"./components/VirtualBackground/VBHandler\";\nimport { Sheet } from \"./layouts/Sheet\";\nimport {\n  RoomLayoutContext,\n  RoomLayoutProvider,\n  useRoomLayout,\n} from \"./provider/roomLayoutProvider\";\nimport { DialogContainerProvider } from \"../context/DialogContext\";\nimport { Box } from \"../Layout\";\nimport { globalStyles, HMSThemeProvider } from \"../Theme\";\nimport { HMSPrebuiltContext } from \"./AppContext\";\nimport {\n  AppStateContext,\n  PrebuiltStates,\n  useAppStateManager,\n} from \"./AppStateContext\";\n// @ts-ignore: No implicit Any\nimport { FlyingEmoji } from \"./plugins/FlyingEmoji\";\n// @ts-ignore: No implicit Any\nimport { RemoteStopScreenshare } from \"./plugins/RemoteStopScreenshare\";\n// @ts-ignore: No implicit Any\nimport { useIsNotificationDisabled } from \"./components/AppData/useUISettings\";\nimport { useAutoStartStreaming } from \"./components/hooks/useAutoStartStreaming\";\nimport {\n  useRoomLayoutLeaveScreen,\n  useRoomLayoutPreviewScreen,\n} from \"./provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { FeatureFlags } from \"./services/FeatureFlags\";\n// @ts-ignore: No implicit Any\nimport { DEFAULT_PORTAL_CONTAINER } from \"./common/constants\";\n\nexport type HMSPrebuiltOptions = {\n  userName?: string;\n  userId?: string;\n  endpoints?: object;\n  effectsSDKKey?: string;\n};\n\nexport type HMSPrebuiltProps = {\n  roomCode?: string;\n  logo?: Logo;\n  typography?: Typography;\n  themes?: Theme[];\n  options?: HMSPrebuiltOptions;\n  screens?: Screens;\n  authToken?: string;\n  leaveOnUnload?: boolean;\n  onLeave?: () => void;\n  onJoin?: () => void;\n  /**\n   * @remarks\n   * Specify css selectors for the HTML element to be used as container for dialogs. Affects the positioning and focus of dialogs.\n   */\n  containerSelector?: string;\n};\n\nexport type HMSPrebuiltRefType = {\n  hmsActions: HMSActions;\n  hmsStore: HMSStoreWrapper;\n  hmsStats: HMSStatsStoreWrapper;\n  hmsNotifications: IHMSNotifications;\n};\n\nexport const HMSPrebuilt = React.forwardRef<\n  HMSPrebuiltRefType,\n  HMSPrebuiltProps\n>(\n  (\n    {\n      roomCode = \"\",\n      authToken = \"\",\n      containerSelector = DEFAULT_PORTAL_CONTAINER,\n      logo,\n      typography,\n      themes,\n      options: { userName = \"\", userId = \"\", endpoints } = {},\n      screens,\n      leaveOnUnload = true,\n      onLeave,\n      onJoin,\n    },\n    ref\n  ) => {\n    const reactiveStore = useRef<HMSPrebuiltRefType>();\n    const [hydrated, setHydrated] = React.useState(false);\n\n    useEffect(() => {\n      setHydrated(true);\n      const hms = new HMSReactiveStore();\n      const hmsStore = hms.getStore();\n      const hmsActions = hms.getActions();\n      const hmsNotifications = hms.getNotifications();\n      const hmsStats = hms.getStats();\n      hms.triggerOnSubscribe();\n\n      reactiveStore.current = {\n        hmsActions,\n        hmsStats,\n        hmsStore,\n        hmsNotifications,\n      };\n    }, []);\n\n    useEffect(() => {\n      if (!ref || !reactiveStore.current) {\n        return;\n      }\n      (ref as MutableRefObject<HMSPrebuiltRefType>).current = {\n        ...reactiveStore.current,\n      };\n    }, [ref]);\n\n    useEffect(() => {\n      // leave room when component unmounts\n      return () => {\n        VBHandler.reset();\n        reactiveStore?.current?.hmsActions.leave();\n      };\n    }, []);\n\n    const endpointsObj = endpoints as\n      | {\n          init: string;\n          tokenByRoomCode: string;\n          roomLayout: string;\n          event: string;\n        }\n      | undefined;\n    const tokenByRoomCodeEndpoint: string = endpointsObj?.tokenByRoomCode || \"\";\n    const initEndpoint: string = endpointsObj?.init || \"\";\n    const eventEndpoint: string = endpointsObj?.event || \"\";\n    const roomLayoutEndpoint: string = endpointsObj?.roomLayout || \"\";\n\n    const overrideLayout: Partial<Layout> = {\n      logo,\n      themes,\n      typography,\n      screens,\n    };\n\n    if (!roomCode && !authToken) {\n      console.error(`\n          HMSPrebuilt can be initialised by providing: \n          either \"roomCode\" or \"authToken\".\n          Please check if you are providing the above values for initialising prebuilt.\n        `);\n      throw Error(\"Incorrect initializing params for HMSPrebuilt component\");\n    }\n\n    if (!hydrated) {\n      return null;\n    }\n\n    globalStyles();\n\n    return (\n      <ErrorBoundary>\n        <HMSPrebuiltContext.Provider\n          value={{\n            roomCode,\n            containerSelector,\n            onLeave,\n            onJoin,\n            userName,\n            userId,\n            endpoints: {\n              tokenByRoomCode: tokenByRoomCodeEndpoint,\n              init: initEndpoint,\n              roomLayout: roomLayoutEndpoint,\n              event: eventEndpoint,\n            },\n          }}\n        >\n          <HMSRoomProvider\n            isHMSStatsOn={FeatureFlags.enableStatsForNerds}\n            actions={reactiveStore.current?.hmsActions}\n            store={reactiveStore.current?.hmsStore}\n            notifications={reactiveStore.current?.hmsNotifications}\n            stats={reactiveStore.current?.hmsStats}\n            leaveOnUnload={leaveOnUnload}\n          >\n            <RoomLayoutProvider\n              roomLayoutEndpoint={roomLayoutEndpoint}\n              overrideLayout={overrideLayout}\n            >\n              <RoomLayoutContext.Consumer>\n                {(data) => {\n                  const layout = data?.layout;\n                  const theme: Theme = layout?.themes?.[0] || ({} as Theme);\n                  const { typography } = layout || {};\n                  let fontFamily = [\"sans-serif\"];\n                  if (typography?.font_family) {\n                    fontFamily = [`${typography?.font_family}`, ...fontFamily];\n                  }\n\n                  return (\n                    <HMSThemeProvider\n                      // issue is with stichtes caching the theme using the theme name / class\n                      // no updates to the themes are fired if the name is same.\n                      // TODO: cache the theme and do deep check to trigger name change in the theme\n                      themeType={`${theme.name}-${Date.now()}`}\n                      theme={{\n                        //@ts-ignore: Prebuilt theme to match stiches theme\n                        colors: theme.palette,\n                        fonts: {\n                          //@ts-ignore: font list to match token types of stiches\n                          sans: fontFamily,\n                        },\n                      }}\n                    >\n                      <PIPProvider>\n                        <Init />\n                        <DialogContainerProvider\n                          dialogContainerSelector={containerSelector}\n                        >\n                          <Box\n                            className={DEFAULT_PORTAL_CONTAINER.slice(1)} // Skips the '.' in the selector\n                            css={{\n                              bg: \"$background_dim\",\n                              size: \"100%\",\n                              lineHeight: \"1.5\",\n                              \"-webkit-text-size-adjust\": \"100%\",\n                              position: \"relative\",\n                            }}\n                          >\n                            <AppRoutes\n                              authTokenByRoomCodeEndpoint={\n                                tokenByRoomCodeEndpoint\n                              }\n                              defaultAuthToken={authToken}\n                            />\n                          </Box>\n                        </DialogContainerProvider>\n                      </PIPProvider>\n                    </HMSThemeProvider>\n                  );\n                }}\n              </RoomLayoutContext.Consumer>\n            </RoomLayoutProvider>\n          </HMSRoomProvider>\n        </HMSPrebuiltContext.Provider>\n      </ErrorBoundary>\n    );\n  }\n);\n\nHMSPrebuilt.displayName = \"HMSPrebuilt\";\n\nconst AppStates = ({ activeState }: { activeState: PrebuiltStates }) => {\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const { isLeaveScreenEnabled } = useRoomLayoutLeaveScreen();\n  useAutoStartStreaming();\n\n  return match({ activeState, isPreviewScreenEnabled, isLeaveScreenEnabled })\n    .with(\n      { activeState: PrebuiltStates.PREVIEW, isPreviewScreenEnabled: true },\n      () => <PreviewScreen />\n    )\n    .with(\n      { activeState: PrebuiltStates.LEAVE, isLeaveScreenEnabled: true },\n      () => <LeaveScreen />\n    )\n    .otherwise(() => <ConferenceScreen />);\n};\n\nconst BackSwipe = () => {\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n  useEffect(() => {\n    const onRouteLeave = async () => {\n      if (isConnectedToRoom) {\n        await hmsActions.leave();\n      }\n    };\n    window.addEventListener(\"popstate\", onRouteLeave);\n    return () => {\n      window.removeEventListener(\"popstate\", onRouteLeave);\n    };\n  }, [hmsActions, isConnectedToRoom]);\n  return null;\n};\n\nfunction AppRoutes({\n  authTokenByRoomCodeEndpoint,\n  defaultAuthToken,\n}: {\n  authTokenByRoomCodeEndpoint: string;\n  defaultAuthToken?: string;\n}) {\n  const roomLayout = useRoomLayout();\n  const isNotificationsDisabled = useIsNotificationDisabled();\n  const { activeState, rejoin } = useAppStateManager();\n  return (\n    <AppStateContext.Provider value={{ rejoin }}>\n      <>\n        {activeState !== PrebuiltStates.LEAVE && <AppData />}\n        <ToastContainer />\n        <Notifications />\n        <MwebLandscapePrompt />\n        <Sheet />\n        <BackSwipe />\n        {!isNotificationsDisabled && <FlyingEmoji />}\n        <RemoteStopScreenshare />\n        <KeyboardHandler />\n        <AuthToken\n          authTokenByRoomCodeEndpoint={authTokenByRoomCodeEndpoint}\n          defaultAuthToken={defaultAuthToken}\n          activeState={activeState}\n        />\n        {roomLayout && activeState && <AppStates activeState={activeState} />}\n      </>\n    </AppStateContext.Provider>\n  );\n}\n", "import React, { useEffect, useMemo, useRef } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectFullAppData,\n  selectHLSState,\n  selectRoomState,\n  selectRTMPState,\n  useAVToggle,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { LayoutMode } from \"../Settings/LayoutSettings\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n//@ts-ignore\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n// @ts-ignore\nimport { useIsSidepaneTypeOpen, useSidepaneToggle } from \"./useSidepane\";\n// @ts-ignore\nimport { useSetAppDataByKey, useSetNoiseCancellation } from \"./useUISettings\";\nimport {\n  APP_DATA,\n  CHAT_SELECTOR,\n  POLL_STATE,\n  SIDE_PANE_OPTIONS,\n  UI_MODE_GRID,\n  UI_SETTINGS,\n} from \"../../common/constants\";\nimport { DEFAULT_TILES_IN_VIEW } from \"../MoreSettings/constants\";\n\nconst initialAppData = {\n  [APP_DATA.uiSettings]: {\n    [UI_SETTINGS.isAudioOnly]: false,\n    [UI_SETTINGS.maxTileCount]: 9,\n    [UI_SETTINGS.showStatsOnTiles]: false,\n    [UI_SETTINGS.enableAmbientMusic]: false,\n    [UI_SETTINGS.uiViewMode]: UI_MODE_GRID,\n    [UI_SETTINGS.mirrorLocalVideo]: true,\n    [UI_SETTINGS.layoutMode]: LayoutMode.GALLERY,\n  },\n  [APP_DATA.subscribedNotifications]: {\n    PEER_JOINED: false,\n    PEER_LEFT: false,\n    NEW_MESSAGE: true,\n    ERROR: true,\n    METADATA_UPDATED: true,\n  },\n  [APP_DATA.chatOpen]: false,\n  [APP_DATA.chatSelector]: {\n    [CHAT_SELECTOR.ROLE]: \"\",\n    [CHAT_SELECTOR.PEER]: {},\n  },\n  [APP_DATA.chatDraft]: \"\",\n  [APP_DATA.sidePane]: \"\",\n  [APP_DATA.sheet]: \"\",\n  [APP_DATA.hlsStarted]: false,\n  [APP_DATA.rtmpStarted]: false,\n  [APP_DATA.recordingStarted]: false,\n  [APP_DATA.dropdownList]: [],\n  [APP_DATA.authToken]: \"\",\n  [APP_DATA.minimiseInset]: false,\n  [APP_DATA.activeScreensharePeerId]: \"\",\n  [APP_DATA.disableNotifications]: false,\n  [APP_DATA.loadingEffects]: false,\n  [APP_DATA.background]: \"none\",\n  [APP_DATA.pollState]: {\n    [POLL_STATE.pollInView]: \"\",\n    [POLL_STATE.view]: \"\",\n  },\n  // by default on because of on demand now, for beam disabled\n  [APP_DATA.caption]: false,\n  [APP_DATA.noiseCancellation]: false,\n};\n\nexport const AppData = React.memo(() => {\n  const hmsActions = useHMSActions();\n  const [preferences = {}] = useUserPreferences(\n    UserPreferencesKeys.UI_SETTINGS\n  );\n  const appData = useHMSStore(selectFullAppData);\n  const { elements } = useRoomLayoutConferencingScreen();\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const { isLocalVideoEnabled } = useAVToggle();\n  const sidepaneOpenedRef = useRef(false);\n  const [, setNoiseCancellationEnabled] = useSetNoiseCancellation();\n  const isMobile = useMedia(cssConfig.media.md);\n\n  useEffect(() => {\n    if (elements?.noise_cancellation?.enabled_by_default) {\n      setNoiseCancellationEnabled(true);\n    }\n  }, [\n    elements?.noise_cancellation?.enabled_by_default,\n    setNoiseCancellationEnabled,\n  ]);\n\n  const defaultMediaURL = useMemo(() => {\n    const media = elements?.virtual_background?.background_media || [];\n    for (let i = 0; i < media.length; i++) {\n      if (media[i].default && media[i].url) {\n        return media[i].url;\n      }\n    }\n    return \"\";\n  }, [elements?.virtual_background?.background_media]);\n\n  useEffect(() => {\n    hmsActions.initAppData({\n      ...initialAppData,\n      ...appData,\n    });\n    // @ts-ignore\n    hmsActions.setFrameworkInfo({\n      type: \"react-web\",\n      isPrebuilt: true,\n      version: React.version,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hmsActions]);\n\n  useEffect(() => {\n    const uiSettings = preferences || {};\n    const updatedSettings = {\n      ...uiSettings,\n      [UI_SETTINGS.isAudioOnly]: undefined,\n      [UI_SETTINGS.uiViewMode]: uiSettings.uiViewMode || UI_MODE_GRID,\n    };\n    hmsActions.setAppData(APP_DATA.uiSettings, updatedSettings, true);\n  }, [hmsActions, preferences]);\n\n  useEffect(() => {\n    hmsActions.setAppData(\n      APP_DATA.uiSettings,\n      {\n        [UI_SETTINGS.maxTileCount]: isMobile\n          ? DEFAULT_TILES_IN_VIEW.MWEB\n          : Number(elements?.video_tile_layout?.grid?.tiles_in_view) ||\n            DEFAULT_TILES_IN_VIEW.DESKTOP,\n      },\n      true\n    );\n  }, [hmsActions, isMobile, elements?.video_tile_layout?.grid?.tiles_in_view]);\n\n  useEffect(() => {\n    if (!preferences.subscribedNotifications) {\n      return;\n    }\n    hmsActions.setAppData(\n      APP_DATA.subscribedNotifications,\n      preferences.subscribedNotifications,\n      true\n    );\n  }, [preferences.subscribedNotifications, hmsActions]);\n\n  useEffect(() => {\n    if (defaultMediaURL && !sidepaneOpenedRef.current && isLocalVideoEnabled) {\n      hmsActions.setAppData(APP_DATA.background, defaultMediaURL);\n      sidepaneOpenedRef.current = true;\n      toggleVB();\n    }\n  }, [hmsActions, toggleVB, isLocalVideoEnabled, defaultMediaURL]);\n\n  return <ResetStreamingStart />;\n});\n\n/**\n * reset hlsStarted, rtmpStarted values when streaming starts\n */\nconst ResetStreamingStart = () => {\n  const { isHLSRunning, isRTMPRunning, isBrowserRecordingOn } =\n    useRecordingStreaming();\n  const hlsError = useHMSStore(selectHLSState).error;\n  const rtmpError = useHMSStore(selectRTMPState).error;\n  const roomState = useHMSStore(selectRoomState);\n  const [hlsStarted, setHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const [recordingStarted, setRecordingStarted] = useSetAppDataByKey(\n    APP_DATA.recordingStarted\n  );\n  const [rtmpStarted, setRTMPStarted] = useSetAppDataByKey(\n    APP_DATA.rtmpStarted\n  );\n  const toggleStreaming = useSidepaneToggle(SIDE_PANE_OPTIONS.STREAMING);\n  const isStreamingOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.STREAMING);\n\n  useEffect(() => {\n    if (isBrowserRecordingOn && recordingStarted) {\n      setRecordingStarted(false);\n    }\n  }, [isBrowserRecordingOn, recordingStarted, setRecordingStarted]);\n  /**\n   * Reset on leave\n   */\n  useEffect(() => {\n    if (roomState === HMSRoomState.Disconnected) {\n      setHLSStarted(false);\n      setRecordingStarted(false);\n      setRTMPStarted(false);\n    }\n  }, [roomState, setHLSStarted, setRTMPStarted, setRecordingStarted]);\n  useEffect(() => {\n    if (isHLSRunning || hlsError) {\n      if (hlsStarted) {\n        setHLSStarted(false);\n        if (isStreamingOpen) {\n          toggleStreaming();\n        }\n      }\n    }\n  }, [\n    isHLSRunning,\n    hlsStarted,\n    setHLSStarted,\n    hlsError,\n    isStreamingOpen,\n    toggleStreaming,\n  ]);\n  useEffect(() => {\n    if (isRTMPRunning || rtmpError || isBrowserRecordingOn) {\n      if (rtmpStarted) {\n        setRTMPStarted(false);\n        if (isStreamingOpen) {\n          toggleStreaming();\n        }\n      }\n    }\n  }, [\n    isRTMPRunning,\n    setRTMPStarted,\n    rtmpStarted,\n    rtmpError,\n    isBrowserRecordingOn,\n    isStreamingOpen,\n    toggleStreaming,\n  ]);\n  return null;\n};\n", "import React, { useCallback } from \"react\";\nimport {\n  selectIsLocalScreenShared,\n  selectIsLocalVideoEnabled,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  GalleryIcon,\n  PersonRectangleIcon,\n  SidebarIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex, Slider, Text } from \"../../..\";\nimport SwitchWithLabel from \"./SwitchWithLabel\";\n// @ts-ignore: No implicit Any\nimport { useSetUiSettings } from \"../AppData/useUISettings\";\nimport { settingOverflow } from \"./common\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport const LayoutMode = {\n  SIDEBAR: \"Sidebar\",\n  GALLERY: \"Gallery\",\n  SPOTLIGHT: \"Spotlight\",\n};\n\nexport type LayoutModeKeys = keyof typeof LayoutMode;\n\nexport const LayoutModeIconMapping = {\n  [LayoutMode.GALLERY]: <GalleryIcon />,\n  [LayoutMode.SIDEBAR]: <SidebarIcon />,\n  [LayoutMode.SPOTLIGHT]: <PersonRectangleIcon />,\n};\n\nexport const LayoutSettings = () => {\n  const hmsActions = useHMSActions();\n  const isLocalVideoEnabled = useHMSStore(selectIsLocalVideoEnabled);\n  const isLocalScreenShared = useHMSStore(selectIsLocalScreenShared);\n  const [{ isAudioOnly, maxTileCount, mirrorLocalVideo }, setUISettings] =\n    useSetUiSettings();\n  const toggleIsAudioOnly = useCallback(\n    async (isAudioOnlyModeOn?: boolean) => {\n      if (isAudioOnlyModeOn) {\n        // turn off video and screen share if user switches to audio only mode\n        isLocalVideoEnabled && (await hmsActions.setLocalVideoEnabled(false));\n        isLocalScreenShared && (await hmsActions.setScreenShareEnabled(false));\n      }\n      setUISettings({ [UI_SETTINGS.isAudioOnly]: isAudioOnlyModeOn });\n    },\n    [hmsActions, isLocalVideoEnabled, isLocalScreenShared, setUISettings]\n  );\n\n  return (\n    <Box className={settingOverflow()}>\n      <Flex\n        align=\"center\"\n        css={{ w: \"100%\", my: \"$2\", py: \"$8\", \"@md\": { display: \"none\" } }}\n      >\n        <Text variant=\"md\" css={{ fontWeight: \"$semiBold\" }}>\n          Tiles In View({maxTileCount})\n        </Text>\n        <Flex justify=\"end\" css={{ flex: \"1 1 0\" }}>\n          <Slider\n            step={1}\n            value={[maxTileCount]}\n            min={1}\n            max={49}\n            onValueChange={(e) => {\n              setUISettings({ [UI_SETTINGS.maxTileCount]: e[0] });\n            }}\n            css={{ w: \"70%\" }}\n          />\n        </Flex>\n      </Flex>\n      <SwitchWithLabel\n        label=\"Audio Only Mode\"\n        id=\"audioOnlyMode\"\n        checked={isAudioOnly}\n        onChange={toggleIsAudioOnly}\n      />\n      <SwitchWithLabel\n        label=\"Mirror Local Video\"\n        id=\"mirrorMode\"\n        checked={mirrorLocalVideo}\n        onChange={(value) => {\n          setUISettings({\n            [UI_SETTINGS.mirrorLocalVideo]: value,\n          });\n        }}\n      />\n    </Box>\n  );\n};\n", "import React from \"react\";\nimport { Label } from \"../../../Label\";\nimport { Flex } from \"../../../Layout\";\nimport { Switch } from \"../../../Switch\";\n\nconst SwitchWithLabel = ({\n  label,\n  icon,\n  id,\n  onChange,\n  checked,\n  hide = false,\n}: {\n  label: string;\n  icon?: React.ReactNode;\n  id: string;\n  onChange: (value: boolean) => void;\n  checked: boolean;\n  hide?: boolean;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        my: \"$2\",\n        py: \"$8\",\n        w: \"100%\",\n        borderBottom: \"1px solid $border_default\",\n        display: hide ? \"none\" : \"flex\",\n      }}\n    >\n      <Label\n        htmlFor={id}\n        css={{\n          fontSize: \"$md\",\n          fontWeight: \"$semiBold\",\n          color: checked ? \"$on_surface_high\" : \"$on_surface_low\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"$8\",\n          flex: \"1 1 0\",\n        }}\n      >\n        {icon}\n        {label}\n      </Label>\n      <Switch id={id} checked={checked} onCheckedChange={onChange} />\n    </Flex>\n  );\n};\n\nexport default SwitchWithLabel;\n", "import { useCallback, useMemo } from \"react\";\nimport {\n  selectAppData,\n  selectAppDataByPath,\n  selectAudioTrackByPeerID,\n  selectPermissions,\n  selectPolls,\n  selectSessionStore,\n  selectTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\nimport {\n  APP_DATA,\n  POLL_STATE,\n  SESSION_STORE_KEY,\n  UI_SETTINGS,\n} from \"../../common/constants\";\n\n/**\n * fields saved related to UI settings in store's app data can be\n * accessed using this hook. key is optional if not passed\n * the whole UI settings object is returned. Usage -\n * 1. val = useUiSettings(\"isAudioOnly\");\n *    console.log(val); // false\n * 2. val = useUISettings();\n *    console.log(val); // {isAudioOnly: false}\n * @param {string | undefined} uiSettingKey\n */\nexport const useUISettings = (uiSettingKey) => {\n  const uiSettings = useHMSStore(\n    selectAppDataByPath(APP_DATA.uiSettings, uiSettingKey)\n  );\n  return uiSettings;\n};\n\n/**\n * fields saved related to UI settings in store's app data can be\n * accessed using this hook. key is optional if not passed\n * the whole UI settings object is returned. Usage -\n * [val, setVal] = useUiSettings(\"isAudioOnly\");\n * console.log(val); // false\n * setVal(true);\n * @param {string} uiSettingKey\n */\nexport const useSetUiSettings = (uiSettingKey) => {\n  const value = useUISettings(uiSettingKey);\n  const setValue = useSetAppData({\n    key1: APP_DATA.uiSettings,\n    key2: uiSettingKey,\n  });\n  return [value, setValue];\n};\n\nexport const useIsHLSStartedFromUI = () => {\n  return useHMSStore(selectAppData(APP_DATA.hlsStarted));\n};\n\nexport const useIsRTMPStartedFromUI = () => {\n  return useHMSStore(selectAppData(APP_DATA.rtmpStarted));\n};\n\nexport const useAuthToken = () => {\n  return useHMSStore(selectAppData(APP_DATA.authToken));\n};\n\nexport const useUrlToEmbed = () => {\n  return useHMSStore(selectAppData(APP_DATA.embedConfig))?.url;\n};\n\nexport const usePDFConfig = () => {\n  return useHMSStore(selectAppData(APP_DATA.pdfConfig));\n};\n\nexport const useResetPDFConfig = () => {\n  const [, setPDFConfig] = useSetAppDataByKey(APP_DATA.pdfConfig);\n  return useCallback(() => setPDFConfig(), [setPDFConfig]);\n};\n\nexport const useResetEmbedConfig = () => {\n  const [, setEmbedConfig] = useSetAppDataByKey(APP_DATA.embedConfig);\n  return () => setEmbedConfig();\n};\nexport const usePinnedTrack = () => {\n  const pinnedTrackId = useHMSStore(selectAppData(APP_DATA.pinnedTrackId));\n  const spotlightPeerId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const spotlightVideoTrackId = useHMSStore(\n    selectVideoTrackByPeerID(spotlightPeerId)\n  )?.id;\n  const spotlightAudioTrackId = useHMSStore(\n    selectAudioTrackByPeerID(spotlightPeerId)\n  )?.id;\n  return useHMSStore(\n    selectTrackByID(\n      pinnedTrackId || spotlightVideoTrackId || spotlightAudioTrackId\n    )\n  );\n};\n\nexport const useSubscribedNotifications = (notificationKey) => {\n  const notificationPreference = useHMSStore(\n    selectAppDataByPath(APP_DATA.subscribedNotifications, notificationKey)\n  );\n  return notificationPreference;\n};\n\nexport const useIsNotificationDisabled = () => {\n  const notificationPreference = useHMSStore(\n    selectAppDataByPath(APP_DATA.disableNotifications)\n  );\n  return notificationPreference;\n};\n\nexport const useSetSubscribedNotifications = (notificationKey) => {\n  const value = useSubscribedNotifications(notificationKey);\n  const setValue = useSetAppData({\n    key1: APP_DATA.subscribedNotifications,\n    key2: notificationKey,\n  });\n  return [value, setValue];\n};\n\nexport const useIsCaptionEnabled = () => {\n  const isCaptionEnabled = useHMSStore(selectAppDataByPath(APP_DATA.caption));\n  return isCaptionEnabled;\n};\n\nexport const useSetIsCaptionEnabled = () => {\n  const [value, setValue] = useSetAppDataByKey(APP_DATA.caption);\n  return [value, setValue];\n};\n\nexport const useSubscribeChatSelector = (chatSelectorKey) => {\n  const chatSelectorPreference = useHMSStore(\n    selectAppDataByPath(APP_DATA.chatSelector, chatSelectorKey)\n  );\n  return chatSelectorPreference;\n};\n\nexport const useSetSubscribedChatSelector = (chatSelectorKey) => {\n  const value = useSubscribeChatSelector(chatSelectorKey);\n  const setValue = useSetAppData({\n    key1: APP_DATA.chatSelector,\n    key2: chatSelectorKey,\n  });\n  return [value, setValue];\n};\n\nexport const useSetAppDataByKey = (appDataKey) => {\n  const value = useHMSStore(selectAppData(appDataKey));\n  const actions = useHMSActions();\n  const setValue = useCallback(\n    (value) => {\n      actions.setAppData(appDataKey, value);\n    },\n    [actions, appDataKey]\n  );\n  return [value, setValue];\n};\n\nconst useSetAppData = ({ key1, key2 }) => {\n  const actions = useHMSActions();\n  const store = useHMSVanillaStore();\n  const [, setPreferences] = useUserPreferences(\n    UserPreferencesKeys.UI_SETTINGS\n  );\n  const setValue = useCallback(\n    (value) => {\n      if (!key1) {\n        return;\n      }\n      actions.setAppData(\n        key1,\n        key2\n          ? {\n              [key2]: value,\n            }\n          : value,\n        true\n      );\n      const appData = store.getState(selectAppData());\n      setPreferences({\n        ...appData.uiSettings,\n        [UI_SETTINGS.isAudioOnly]: undefined,\n        subscribedNotifications: appData.subscribedNotifications,\n      });\n    },\n    [actions, key1, key2, store, setPreferences]\n  );\n  return setValue;\n};\n\nexport const useShowPolls = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const polls = useHMSStore(selectPolls);\n\n  const showPolls = useMemo(() => {\n    return (\n      permissions?.pollWrite || (permissions?.pollRead && polls?.length > 0)\n    );\n  }, [permissions?.pollRead, permissions?.pollWrite, polls?.length]);\n\n  return { showPolls };\n};\n\nexport const usePollViewState = () => {\n  const [pollState, setPollState] = useSetAppDataByKey(APP_DATA.pollState);\n\n  const setPollView = useCallback(\n    (view) => {\n      setPollState({\n        [POLL_STATE.pollInView]: pollState?.pollInView,\n        [POLL_STATE.view]: view,\n      });\n    },\n    [pollState?.pollInView, setPollState]\n  );\n\n  return {\n    setPollState,\n    setPollView,\n    pollInView: pollState?.pollInView,\n    view: pollState?.view,\n  };\n};\n\nexport const useIsNoiseCancellationEnabled = () => {\n  const isNoiseCancellationEnabled = useHMSStore(\n    selectAppDataByPath(APP_DATA.noiseCancellation)\n  );\n  return isNoiseCancellationEnabled;\n};\nexport const useSetNoiseCancellation = () => {\n  const [isNoiseCancellationEnabled, setNoiseCancellationEnabled] =\n    useSetAppDataByKey(APP_DATA.noiseCancellation);\n  return [isNoiseCancellationEnabled, setNoiseCancellationEnabled];\n};\n", "import { useState } from \"react\";\nimport { useLocalStorage } from \"react-use\";\n\nexport const UserPreferencesKeys = {\n  PREVIEW: \"preview\",\n  NOTIFICATIONS: \"notifications\",\n  UI_SETTINGS: \"uiSettings\",\n  RTMP_URLS: \"rtmpUrls\",\n  USER_ID: \"userId\",\n};\n\nexport const defaultPreviewPreference = {\n  name: \"\",\n  isAudioMuted: false,\n  isVideoMuted: false,\n};\n\nexport const useUserPreferences = (key, defaultPreference) => {\n  const [localStorageValue, setStorageValue] = useLocalStorage(\n    key,\n    defaultPreference\n  );\n  const [preference, setPreference] = useState(\n    localStorageValue || defaultPreference\n  );\n  const changePreference = (value) => {\n    setPreference(value);\n    setStorageValue(value);\n  };\n  return [preference, changePreference];\n};\n", "import { css } from \"../../..\";\n\nexport const settingOverflow = css({\n  flex: \"1 1 0\",\n  pr: \"$12\",\n  mr: \"-$12\",\n  overflowY: \"auto\",\n});\n\nexport const settingContent = css({\n  display: \"flex\",\n  flexDirection: \"column\",\n  \"&[hidden]\": {\n    display: \"none\",\n  },\n});\n", "import { useMemo } from \"react\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  DefaultPreviewScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n  LeaveScreen,\n  PreviewScreen,\n  Screens,\n} from \"@100mslive/types-prebuilt\";\nimport {\n  selectHLSState,\n  selectPeerCount,\n  selectRoomStartTime,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayout } from \"..\";\n// @ts-ignore\nimport { getFormattedCount } from \"../../../common/utils\";\n\nexport type useRoomLayoutScreenProps = {\n  screen: keyof Screens;\n};\n\ntype useRoomLayoutScreenReturnType<T extends useRoomLayoutScreenProps> =\n  T[\"screen\"] extends \"conferencing\"\n    ? ConferencingScreen\n    : T[\"screen\"] extends \"leave\"\n    ? LeaveScreen\n    : T[\"screen\"] extends \"preview\"\n    ? PreviewScreen\n    : undefined;\n\nfunction useRoomLayoutScreen<T extends useRoomLayoutScreenProps>({\n  screen,\n}: T): useRoomLayoutScreenReturnType<T> | undefined {\n  const roomLayout = useRoomLayout();\n  const screenProps = roomLayout?.screens?.[screen] as\n    | useRoomLayoutScreenReturnType<T>\n    | undefined;\n  return screenProps;\n}\n\ntype PreviewKeys = Omit<PreviewScreen, \"skip_preview_screen\">;\n\nexport function useRoomLayoutPreviewScreen() {\n  const screenProps = useRoomLayoutScreen({ screen: \"preview\" });\n  const isPreviewScreenEnabled =\n    !!screenProps && !screenProps?.skip_preview_screen;\n  let elements: DefaultPreviewScreen_Elements | undefined;\n  let screenType: keyof PreviewKeys | undefined;\n  if (isPreviewScreenEnabled) {\n    screenType = Object.keys(screenProps).filter(\n      (key) => key !== \"skip_preview_screen\"\n    )[0] as keyof PreviewKeys;\n    elements = screenProps[screenType]?.elements;\n  }\n  return {\n    isPreviewScreenEnabled,\n    elements,\n    screenType,\n  };\n}\n\nexport type ConferencingScreenElements = DefaultConferencingScreen_Elements &\n  HLSLiveStreamingScreen_Elements;\n\nexport function useRoomLayoutConferencingScreen() {\n  const screenProps = useRoomLayoutScreen({ screen: \"conferencing\" }) || {};\n  const screenType = Object.keys(screenProps)[0] as keyof ConferencingScreen;\n  const elements = screenProps[screenType]\n    ?.elements as ConferencingScreenElements;\n  // @ts-ignore\n  const hideSections: string[] = screenProps[screenType]?.hideSections || [];\n  return {\n    hideSections,\n    elements,\n    screenType,\n  };\n}\n\nexport function useRoomLayoutLeaveScreen() {\n  const screenProps = useRoomLayoutScreen({ screen: \"leave\" });\n  const isLeaveScreenEnabled = !!screenProps;\n  return {\n    isLeaveScreenEnabled,\n    feedback: screenProps?.default?.elements?.feedback,\n  };\n}\n\nexport function useRoomLayoutHeader() {\n  const { elements } = useRoomLayoutConferencingScreen();\n  // return elements.header;\n  const { isRecordingOn } = useRecordingStreaming();\n  const peerCount = useHMSStore(selectPeerCount);\n  const sessionStartedAt = useHMSStore(selectRoomStartTime);\n  const hlsState = useHMSStore(selectHLSState);\n\n  // People watching, start timestamp, recording status\n  const details = useMemo(() => {\n    const details = [];\n    if (hlsState?.variants[0]?.[\"startedAt\"]) {\n      details.push(`${getFormattedCount(peerCount)} watching`);\n      details.push(hlsState.variants[0][\"startedAt\"]);\n    } else if (sessionStartedAt) {\n      details.push(sessionStartedAt);\n    }\n    if (isRecordingOn) {\n      details.push(\"Recording\");\n    }\n    return details;\n  }, [hlsState?.variants, isRecordingOn, peerCount, sessionStartedAt]);\n\n  return {\n    title: elements.header?.title || \"\",\n    description: elements.header?.description || \"\",\n    details,\n  };\n}\n", "import React from \"react\";\nimport type { Layout } from \"@100mslive/types-prebuilt\";\nimport { isArray, mergeWith } from \"lodash\";\n// @ts-ignore: fix types\nimport { useAuthToken } from \"../../components/AppData/useUISettings\";\nimport {\n  useFetchRoomLayout,\n  useFetchRoomLayoutResponse,\n} from \"./hooks/useFetchRoomLayout\";\n\nexport type RoomLayoutProviderProps = {\n  roomLayoutEndpoint?: string;\n  overrideLayout?: Partial<Layout>;\n};\n\nexport const RoomLayoutContext = React.createContext<\n  | {\n      layout: Layout | undefined;\n      updateRoomLayoutForRole:\n        | useFetchRoomLayoutResponse[\"updateRoomLayoutForRole\"]\n        | undefined;\n      setOriginalLayout:\n        | useFetchRoomLayoutResponse[\"setOriginalLayout\"]\n        | undefined;\n    }\n  | undefined\n>(undefined);\n\n// The default merge in lodash merges the values of current layout and the changes.\n// This behaviour makes changes in array based values inconsistent since a union happens.\n// The customizer uses the new value provided if one of the values is an array\nfunction customizer(objValue: unknown, srcValue: unknown) {\n  if (isArray(objValue) || isArray(srcValue)) {\n    return srcValue;\n  }\n  // default merge behaviour is followed\n  return undefined;\n}\n\nexport const RoomLayoutProvider: React.FC<\n  React.PropsWithChildren<RoomLayoutProviderProps>\n> = ({ children, roomLayoutEndpoint, overrideLayout }) => {\n  const authToken: string = useAuthToken();\n  const { layout, updateRoomLayoutForRole, setOriginalLayout } =\n    useFetchRoomLayout({\n      authToken,\n      endpoint: roomLayoutEndpoint,\n    });\n  const mergedLayout =\n    authToken && layout\n      ? mergeWith(layout, overrideLayout, customizer)\n      : layout;\n  return (\n    <RoomLayoutContext.Provider\n      value={{\n        layout: mergedLayout,\n        updateRoomLayoutForRole,\n        setOriginalLayout,\n      }}\n    >\n      {children}\n    </RoomLayoutContext.Provider>\n  );\n};\n\nexport const useRoomLayout = () => React.useContext(RoomLayoutContext)?.layout;\nexport const useUpdateRoomLayout = () =>\n  React.useContext(RoomLayoutContext)?.updateRoomLayoutForRole;\nexport const useSetOriginalLayout = () =>\n  React.useContext(RoomLayoutContext)?.setOriginalLayout;\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\nimport type { GetResponse, Layout } from \"@100mslive/types-prebuilt\";\nimport { defaultLayout } from \"../constants\";\n\n// TODO: remove this usage\nconst fetchWithRetry = async (url = \"\", options = {}) => {\n  const MAX_RETRIES = 4;\n  let error = Error(\"something went wrong\");\n  for (let i = 0; i < MAX_RETRIES; i++) {\n    try {\n      return await fetch(url, options);\n    } catch (err) {\n      error = err as Error;\n    }\n  }\n  console.error(\"Fetch failed after max retries\", { url, options });\n  throw error;\n};\n\n// this should take endpoint and return\nexport type useFetchRoomLayoutProps = {\n  endpoint?: string;\n  authToken: string;\n};\n\nexport type useFetchRoomLayoutResponse = {\n  layout: Layout | undefined;\n  updateRoomLayoutForRole: (role: string) => void;\n  setOriginalLayout: () => void;\n};\n\nexport const useFetchRoomLayout = ({\n  endpoint = \"\",\n  authToken = \"\",\n}: useFetchRoomLayoutProps): useFetchRoomLayoutResponse => {\n  const [layout, setLayout] = useState<Layout | undefined>(undefined);\n  const layoutResp = useRef<GetResponse>();\n  const originalLayout = useRef<Layout>();\n  const isFetchInProgress = useRef(false);\n\n  const setOriginalLayout = useCallback(\n    () => setLayout(originalLayout.current),\n    []\n  );\n\n  const updateRoomLayoutForRole = useCallback((role: string) => {\n    if (!layoutResp.current) {\n      return;\n    }\n    const [layout] = (layoutResp.current?.data || []).filter(\n      (layout) => layout.role === role\n    );\n    if (layout) {\n      setLayout(layout);\n    }\n  }, []);\n  useEffect(() => {\n    (async () => {\n      if (isFetchInProgress.current || !authToken) {\n        return;\n      }\n      isFetchInProgress.current = true;\n      try {\n        const resp = await fetchWithRetry(\n          endpoint || \"https://api.100ms.live/v2/layouts/ui\",\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        layoutResp.current = await resp.json();\n      } catch (e) {\n        console.error(\n          \"[Room Layout API]: Failed to fetch / process room layout. Resorting to default layout.\",\n          e\n        );\n        layoutResp.current = {\n          data: [defaultLayout],\n        };\n      }\n      let layoutForRole = layoutResp.current?.data?.[0];\n      if (!layoutForRole) {\n        console.error(\n          \"[Room Layout API]: Unable to figure out room layout from API response. Resorting to default layout.\"\n        );\n        layoutForRole = defaultLayout;\n      }\n      const layout = layoutForRole;\n      if (!originalLayout.current) {\n        originalLayout.current = layout;\n      }\n      setLayout(layout);\n      isFetchInProgress.current = false;\n    })();\n  }, [authToken, endpoint]);\n\n  return { layout, updateRoomLayoutForRole, setOriginalLayout };\n};\n", "import type { Layout } from \"@100mslive/types-prebuilt\";\nimport { JoinForm_JoinBtnType } from \"@100mslive/types-prebuilt/elements/join_form\";\n\nexport const defaultLayout: Layout = {\n  id: \"\",\n  role_id: \"\",\n  template_id: \"\",\n  app_id: \"\",\n  typography: {\n    font_family: \"Inter\",\n  },\n  themes: [],\n  options: {},\n  screens: {\n    preview: {\n      default: {\n        elements: {\n          preview_header: {\n            title: \"Get Started\",\n            sub_title: \"Setup your audio and video before joining\",\n          },\n          join_form: {\n            join_btn_type: JoinForm_JoinBtnType.JOIN_BTN_TYPE_JOIN_ONLY,\n            join_btn_label: \"Join Now\",\n            go_live_btn_label: \"Go Live\",\n          },\n        },\n      },\n    },\n    conferencing: {\n      default: {\n        elements: {\n          chat: {\n            public_chat_enabled: true,\n            private_chat_enabled: true,\n            chat_title: \"Chat\",\n            allow_pinning_messages: true,\n            message_placeholder: \"Send a message...\",\n            roles_whitelist: [],\n            real_time_controls: {\n              can_disable_chat: true,\n              can_block_user: true,\n              can_hide_message: true,\n            },\n          },\n          participant_list: {},\n          video_tile_layout: {\n            grid: {\n              enable_local_tile_inset: true,\n              prominent_roles: [],\n              enable_spotlighting_peer: true,\n            },\n          },\n          emoji_reactions: {},\n        },\n      },\n    },\n    leave: {},\n  },\n};\n", "import { QUESTION_TYPE } from \"./constants\";\n\n// eslint-disable-next-line complexity\nexport function shadeColor(color, percent) {\n  let R = parseInt(color.substring(1, 3), 16);\n  let G = parseInt(color.substring(3, 5), 16);\n  let B = parseInt(color.substring(5, 7), 16);\n\n  R = Math.floor((R * (100 + percent)) / 100);\n  G = Math.floor((G * (100 + percent)) / 100);\n  B = Math.floor((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  const RR =\n    R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\n  const GG =\n    G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\n  const BB =\n    B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\n\n  return `#${RR}${GG}${BB}`;\n}\n\n/**\n * TODO: this is currently an O(N**2) function, don't use with peer lists, it's currently\n * being used to find intersection between list of role names where the complexity shouldn't matter much.\n */\nexport const arrayIntersection = (a, b) => {\n  if (a === undefined || b === undefined) {\n    return [];\n  }\n  // ensure \"a\" is the bigger array\n  if (b.length > a.length) {\n    let t = b;\n    b = a;\n    a = t;\n  }\n  return a.filter(function (e) {\n    return b.indexOf(e) > -1;\n  });\n};\n\nexport const getMetadata = (metadataString) => {\n  try {\n    return !metadataString ? {} : JSON.parse(metadataString);\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const metadataProps = function (peer) {\n  return {\n    isHandRaised: getMetadata(peer.metadata)?.isHandRaised,\n  };\n};\n\nexport const isScreenshareSupported = () => {\n  return typeof navigator.mediaDevices.getDisplayMedia !== \"undefined\";\n};\n\nexport const metadataPayloadParser = (payload) => {\n  try {\n    const data = window.atob(payload);\n    const parsedData = JSON.parse(data);\n    return parsedData;\n  } catch (e) {\n    return { payload };\n  }\n};\n\n// For bottom action sheet, returns updated height based on drag\nexport const getUpdatedHeight = (e, MINIMUM_HEIGHT) => {\n  const heightToPercentage =\n    100 - ((e?.touches?.[0] || e).pageY / window.innerHeight) * 100;\n  // Snap to top if height > 80%, should be at least 40vh\n  const sheetHeightInVH = Math.max(\n    MINIMUM_HEIGHT,\n    heightToPercentage > 80 ? 100 : heightToPercentage\n  );\n  return `${sheetHeightInVH}vh`;\n};\n\nexport const getFormattedCount = (num) => {\n  const formatter = new Intl.NumberFormat(\"en\", {\n    notation: \"compact\",\n    maximumFractionDigits: 2,\n  });\n  const formattedNum = formatter.format(num);\n  return formattedNum;\n};\n\nexport const formatTime = (timeInSeconds) => {\n  timeInSeconds = Math.floor(timeInSeconds / 1000);\n  const hours = Math.floor(timeInSeconds / 3600);\n  const minutes = Math.floor((timeInSeconds % 3600) / 60);\n  const seconds = timeInSeconds % 60;\n  const hour = hours !== 0 ? `${hours < 10 ? \"0\" : \"\"}${hours}:` : \"\";\n  return `${hour}${minutes < 10 ? \"0\" : \"\"}${minutes}:${\n    seconds < 10 ? \"0\" : \"\"\n  }${seconds}`;\n};\n\nconst compareArrays = (a, b) => {\n  if (a.length !== b.length) return false;\n  else {\n    // Comparing each element of your array\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nexport const checkCorrectAnswer = (answer, localPeerResponse, type) => {\n  if (type === QUESTION_TYPE.SINGLE_CHOICE) {\n    return answer?.option === localPeerResponse?.option;\n  } else if (type === QUESTION_TYPE.MULTIPLE_CHOICE) {\n    return (\n      answer?.options &&\n      localPeerResponse?.options &&\n      compareArrays(answer?.options, localPeerResponse?.options)\n    );\n  }\n};\n\nexport const isValidTextInput = (text, minLength = 1, maxLength = 1024) => {\n  return text && text.length >= minLength && text.length <= maxLength;\n};\n\nexport const calculateAvatarAndAttribBoxSize = (\n  calculatedWidth,\n  calculatedHeight\n) => {\n  if (!calculatedWidth || !calculatedHeight) {\n    return [undefined, undefined];\n  }\n\n  let avatarSize = \"large\";\n  if (calculatedWidth <= 150 || calculatedHeight <= 150) {\n    avatarSize = \"small\";\n  } else if (calculatedWidth <= 300 || calculatedHeight <= 300) {\n    avatarSize = \"medium\";\n  }\n\n  let attribBoxSize = \"medium\";\n  if (calculatedWidth <= 180 || calculatedHeight <= 180) {\n    attribBoxSize = \"small\";\n  }\n\n  return [avatarSize, attribBoxSize];\n};\n\nexport const isMobileUserAgent = /Mobi|Android|iPhone/i.test(\n  navigator.userAgent\n);\n\nexport const getPeerResponses = (questions, peerid, userid) => {\n  return questions.map((question) =>\n    question.responses?.filter(\n      (response) =>\n        response &&\n        (response.peer?.peerid === peerid ||\n          response.peer?.userid === userid) &&\n        !response.skipped\n    )\n  );\n};\n\nexport const getIndexToShow = (responses) => {\n  let lastAttemptedIndex = 0;\n\n  Object.keys(responses).forEach((key) => {\n    const keyNum = parseInt(key);\n    if (keyNum > lastAttemptedIndex && responses[key]) {\n      lastAttemptedIndex = keyNum;\n    }\n  });\n\n  return lastAttemptedIndex + 1;\n};\n\nexport const getPeerParticipationSummary = (\n  poll,\n  localPeerID,\n  localCustomerUserID\n) => {\n  let correctResponses = 0;\n  let score = 0;\n  const questions = poll.questions || [];\n  const peerResponses = getPeerResponses(\n    questions,\n    localPeerID,\n    localCustomerUserID\n  );\n  let totalResponses = peerResponses.length || 0;\n\n  peerResponses.forEach((peerResponse) => {\n    if (!peerResponse?.[0]) {\n      return;\n    }\n    const isCorrect = checkCorrectAnswer(\n      questions[peerResponse[0].questionIndex - 1].answer,\n      peerResponse[0],\n      questions[peerResponse[0].questionIndex - 1].type\n    );\n    if (isCorrect) {\n      score += questions[peerResponse[0].questionIndex - 1]?.weight || 0;\n      correctResponses++;\n    }\n  });\n  return { totalResponses, correctResponses, score };\n};\n", "import { useCallback } from \"react\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  selectAppData,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { usePollViewState } from \"./useUISettings\";\nimport {\n  APP_DATA,\n  POLL_STATE,\n  POLL_VIEWS,\n  SIDE_PANE_OPTIONS,\n} from \"../../common/constants\";\n\n/**\n * Gives a boolean value if the sidepaneType matches current sidepane value in store\n * @param {string} sidepaneType\n * @returns {boolean} - if the sidepaneType is passed returns boolean else the current value\n */\nexport const useIsSidepaneTypeOpen = (sidepaneType) => {\n  if (!sidepaneType) {\n    throw Error(\"Pass one of the side pane options\");\n  }\n  return useHMSStore(selectAppData(APP_DATA.sidePane)) === sidepaneType;\n};\n\n/**\n * Gives the current value of sidepane in store\n * @returns {string} - if the sidepaneType is passed returns boolean else the current value\n */\nexport const useSidepaneState = () => {\n  const sidePane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  return sidePane;\n};\n\n/**\n * Toggle the sidepane value between passed sidePaneType and '';\n * @param {string} sidepaneType\n */\nexport const useSidepaneToggle = (sidepaneType) => {\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const toggleSidepane = useCallback(() => {\n    const isOpen =\n      vanillaStore.getState(selectAppData(APP_DATA.sidePane)) === sidepaneType;\n    hmsActions.setAppData(APP_DATA.sidePane, !isOpen ? sidepaneType : \"\");\n  }, [vanillaStore, hmsActions, sidepaneType]);\n  return toggleSidepane;\n};\n\nexport const usePollViewToggle = () => {\n  const hmsActions = useHMSActions();\n  const { view, setPollState } = usePollViewState();\n  const isOpen = useSidepaneState() === SIDE_PANE_OPTIONS.POLLS;\n\n  const togglePollView = useCallback(\n    (id) => {\n      match({ id, isOpen, view })\n        .with(\n          {\n            id: P.string,\n          },\n          () => {\n            setPollState({\n              [POLL_STATE.pollInView]: id,\n              [POLL_STATE.view]: POLL_VIEWS.VOTE,\n            });\n            hmsActions.setAppData(APP_DATA.sidePane, SIDE_PANE_OPTIONS.POLLS);\n          }\n        )\n        .with(\n          {\n            isOpen: true,\n            view: P.when((view) => !!view),\n          },\n          () => {\n            setPollState({\n              [POLL_STATE.pollInView]: undefined,\n              [POLL_STATE.view]: null,\n            });\n            hmsActions.setAppData(APP_DATA.sidePane, \"\");\n          }\n        )\n        .otherwise(() => {\n          setPollState({\n            [POLL_STATE.pollInView]: undefined,\n            [POLL_STATE.view]: POLL_VIEWS.CREATE_POLL_QUIZ,\n          });\n          hmsActions.setAppData(APP_DATA.sidePane, SIDE_PANE_OPTIONS.POLLS);\n        });\n    },\n    [hmsActions, view, setPollState, isOpen]\n  );\n\n  return togglePollView;\n};\n\n/**\n * resets the sidepane value\n */\nexport const useSidepaneReset = () => {\n  const hmsActions = useHMSActions();\n  const resetSidepane = useCallback(() => {\n    hmsActions.setAppData(APP_DATA.sidePane, \"\");\n    hmsActions.setAppData(APP_DATA.pollInView, \"\");\n  }, [hmsActions]);\n  return resetSidepane;\n};\n", "export const trackSourceOptions = [\n  { label: \"All Track Sources\", value: \"\" },\n  { label: \"regular\", value: \"regular\" },\n  { label: \"screen\", value: \"screen\" },\n  { label: \"audioplaylist\", value: \"audioplaylist\" },\n  { label: \"videoplaylist\", value: \"videoplaylist\" },\n];\nexport const trackTypeOptions = [\n  { label: \"All Track Types\", value: \"\" },\n  { label: \"audio\", value: \"audio\" },\n  { label: \"video\", value: \"video\" },\n];\n\nexport const DEFAULT_TILES_IN_VIEW = { MWEB: 4, DESKTOP: 9 };\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useSessionStorage } from \"react-use\";\nimport { match } from \"ts-pattern\";\nimport { v4 as uuid } from \"uuid\";\nimport { HMSException, useHMSActions } from \"@100mslive/react-sdk\";\nimport { Dialog } from \"../../Modal\";\nimport { Text } from \"../../Text\";\nimport { useHMSPrebuiltContext } from \"../AppContext\";\nimport { PrebuiltStates } from \"../AppStateContext\";\n// @ts-ignore: No implicit Any\nimport errorImage from \"../images/transaction_error.svg\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"./AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { UserPreferencesKeys } from \"./hooks/useUserPreferences\";\nimport { APP_DATA } from \"../common/constants\";\n\n/**\n * query params exposed -\n * skip_preview=true => used by recording and streaming service, skips preview and directly joins\n *                      header and footer don't show up in this case\n * skip_preview_headful=true => used by automation testing to skip preview without impacting the UI\n * name=abc => gives the initial name for the peer joining\n * auth_token=123 => uses the passed in token to join instead of fetching from token endpoint\n * ui_mode=activespeaker => lands in active speaker mode after joining the room\n */\nconst AuthToken = React.memo<{\n  authTokenByRoomCodeEndpoint: string;\n  defaultAuthToken?: string;\n  activeState?: PrebuiltStates;\n}>(({ authTokenByRoomCodeEndpoint, defaultAuthToken, activeState }) => {\n  const hmsActions = useHMSActions();\n  const { roomCode, userId } = useHMSPrebuiltContext();\n  const [error, setError] = useState({ title: \"\", body: \"\" });\n  const authToken = defaultAuthToken;\n  const [tokenInAppData, setAuthTokenInAppData] = useSetAppDataByKey(\n    APP_DATA.authToken\n  );\n  const [savedUserId, setSavedUserId] = useSessionStorage<string>(\n    UserPreferencesKeys.USER_ID\n  );\n  const progressRef = useRef<boolean | null>(null);\n\n  useEffect(() => {\n    if (authToken) {\n      setAuthTokenInAppData(authToken);\n      return;\n    }\n\n    if (\n      tokenInAppData ||\n      progressRef.current ||\n      activeState === PrebuiltStates.LEAVE\n    ) {\n      return;\n    }\n\n    if (!roomCode) {\n      console.error(\"room code not provided\");\n      return;\n    }\n\n    let userIdForAuthToken = userId || savedUserId;\n    if (!userIdForAuthToken) {\n      userIdForAuthToken = uuid();\n      setSavedUserId(userIdForAuthToken);\n    }\n\n    progressRef.current = true;\n    hmsActions\n      .getAuthTokenByRoomCode(\n        { roomCode, userId: userIdForAuthToken },\n        { endpoint: authTokenByRoomCodeEndpoint }\n      )\n      .then((token) => setAuthTokenInAppData(token))\n      .catch((error) => setError(convertError(error)))\n      .finally(() => {\n        progressRef.current = false;\n      });\n  }, [\n    hmsActions,\n    authToken,\n    authTokenByRoomCodeEndpoint,\n    setAuthTokenInAppData,\n    roomCode,\n    userId,\n    savedUserId,\n    tokenInAppData,\n    setSavedUserId,\n    activeState,\n  ]);\n\n  if (error.title) {\n    return (\n      <Dialog.Root open={true}>\n        <Dialog.Content\n          css={{\n            maxWidth: \"$100\",\n            boxSizing: \"border-box\",\n            p: \"$10 $12\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <img src={errorImage} height={80} width={80} alt=\"Token Error\" />\n          <Text variant=\"h4\" css={{ textAlign: \"center\", mb: \"$4\", mt: \"$10\" }}>\n            {error.title}\n          </Text>\n          <Text css={{ c: \"$on_surface_medium\", textAlign: \"center\" }}>\n            {error.body}\n          </Text>\n        </Dialog.Content>\n      </Dialog.Root>\n    );\n  }\n  return null;\n});\n\nconst convertError = (error: HMSException) => {\n  console.error(\"[error]\", { error });\n  console.warn(\n    \"If you think this is a mistake on our side, please reach out to us over Discord:\",\n    \"https://discord.com/invite/kGdmszyzq2\"\n  );\n  return match([error.action, error.code])\n    .with([\"GET_TOKEN\", 403], () => ({\n      title: \"Psst! This room is currently inactive.\",\n      body: \"Please feel free to join another open room for more conversations. Thanks for stopping by!\",\n    }))\n\n    .with([\"GET_TOKEN\", 404], () => ({\n      title: \"Room code does not exist\",\n      body: \"We could not find a room code corresponding to this link.\",\n    }))\n    .with([\"GET_TOKEN\", 2003], () => ({\n      title: \"Endpoint is not reachable\",\n      body: `Endpoint is not reachable. ${error.description}.`,\n    }))\n    .otherwise(() =>\n      // @ts-ignore\n      match(error.response?.status)\n        .with(404, () => ({\n          title: \"Room does not exist\",\n          body: \"We could not find a room corresponding to this link.\",\n        }))\n        .with(403, () => ({\n          title: \"Accessing room using this link format is disabled\",\n          body: \"You can re-enable this from the developer section in Dashboard.\",\n        }))\n        .otherwise(() => {\n          console.error(\"Token API Error\", error);\n          return {\n            title: \"Error fetching token\",\n            body: \"An error occurred while fetching the app token. Please look into logs for more details.\",\n          };\n        })\n    );\n};\n\nexport default AuthToken;\n", "import React, { useContext } from \"react\";\n// @ts-ignore\nimport { DEFAULT_PORTAL_CONTAINER } from \"./common/constants\";\n\ntype HMSPrebuiltContextType = {\n  roomCode: string;\n  userName?: string;\n  userId?: string;\n  containerSelector: string;\n  endpoints?: Record<string, string>;\n  onLeave?: () => void;\n  onJoin?: () => void;\n};\n\nexport const HMSPrebuiltContext = React.createContext<HMSPrebuiltContextType>({\n  roomCode: \"\",\n  userName: \"\",\n  userId: \"\",\n  containerSelector: DEFAULT_PORTAL_CONTAINER,\n  endpoints: {},\n  onLeave: undefined,\n  onJoin: undefined,\n});\n\nHMSPrebuiltContext.displayName = \"HMSPrebuiltContext\";\n\nexport const useHMSPrebuiltContext = () => {\n  const context = useContext(HMSPrebuiltContext);\n  if (!context) {\n    throw Error(\n      \"Make sure HMSPrebuiltContext.Provider is present at the top level of your application\"\n    );\n  }\n  return context;\n};\n", "import React, { useContext, useEffect } from \"react\";\nimport { usePreviousDistinct } from \"react-use\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  HMSRoomState,\n  selectRoomState,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { VBHandler } from \"./components/VirtualBackground/VBHandler\";\nimport {\n  useRoomLayout,\n  useSetOriginalLayout,\n} from \"./provider/roomLayoutProvider\";\nimport { useRedirectToLeave } from \"./components/hooks/useRedirectToLeave\";\nimport {\n  useRoomLayoutLeaveScreen,\n  useRoomLayoutPreviewScreen,\n} from \"./provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { APP_DATA } from \"./common/constants\";\n\nexport enum PrebuiltStates {\n  MEETING = \"meeting\",\n  PREVIEW = \"preview\",\n  LEAVE = \"leave\",\n}\n\ntype AppStateContextType = {\n  rejoin: () => void;\n};\n\nexport const AppStateContext = React.createContext<AppStateContextType>({\n  rejoin: () => {\n    console.log(\"Rejoin\");\n  },\n});\n\nAppStateContext.displayName = \"AppStateContext\";\n\nexport const useHMSAppStateContext = () => {\n  const context = useContext(AppStateContext);\n  if (!context) {\n    throw Error(\n      \"Make sure AppStateContext.Provider is present at the top level of your application\"\n    );\n  }\n  return context;\n};\n\nexport const useAppStateManager = () => {\n  const roomLayout = useRoomLayout();\n  const setOriginalLayout = useSetOriginalLayout();\n  const [activeState, setActiveState] = React.useState<\n    PrebuiltStates | undefined\n  >();\n  const roomState = useHMSStore(selectRoomState);\n  const prevRoomState = usePreviousDistinct(roomState);\n  const hmsActions = useHMSActions();\n  const { isLeaveScreenEnabled } = useRoomLayoutLeaveScreen();\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const { redirectToLeave } = useRedirectToLeave();\n\n  const rejoin = () => {\n    setOriginalLayout?.();\n    hmsActions.setAppData(APP_DATA.authToken, \"\");\n    setActiveState(\n      isPreviewScreenEnabled ? PrebuiltStates.PREVIEW : PrebuiltStates.MEETING\n    );\n  };\n\n  useEffect(() => {\n    if (!roomLayout) {\n      return;\n    }\n    match([roomState, prevRoomState])\n      .with([HMSRoomState.Connected, P.any], () =>\n        setActiveState(PrebuiltStates.MEETING)\n      )\n      .with(\n        [HMSRoomState.Disconnecting, HMSRoomState.Connected],\n        [HMSRoomState.Disconnecting, HMSRoomState.Connecting],\n        [HMSRoomState.Disconnecting, HMSRoomState.Reconnecting],\n        [HMSRoomState.Disconnected, HMSRoomState.Connected],\n        [HMSRoomState.Disconnected, HMSRoomState.Connecting],\n        [HMSRoomState.Disconnected, HMSRoomState.Reconnecting],\n        () => {\n          setActiveState((prevState) => {\n            return match({\n              isLeaveScreenEnabled,\n              isPreviewScreenEnabled,\n              prevState,\n            })\n              .when(\n                ({ isLeaveScreenEnabled, prevState }) =>\n                  isLeaveScreenEnabled && prevState !== PrebuiltStates.LEAVE,\n                () => PrebuiltStates.LEAVE\n              )\n              .with(\n                { isPreviewScreenEnabled: true },\n                () => PrebuiltStates.PREVIEW\n              )\n              .otherwise(() => PrebuiltStates.MEETING);\n          });\n          VBHandler.reset();\n          redirectToLeave(1000); // to clear toasts after 1 second\n        }\n      )\n      .with([HMSRoomState.Disconnected, P.nullish], () => {\n        setActiveState(\n          isPreviewScreenEnabled\n            ? PrebuiltStates.PREVIEW\n            : PrebuiltStates.MEETING\n        );\n      })\n      .otherwise(() => {\n        // do nothing\n      });\n  }, [\n    roomLayout,\n    roomState,\n    isLeaveScreenEnabled,\n    isPreviewScreenEnabled,\n    prevRoomState,\n    redirectToLeave,\n  ]);\n  return { activeState, rejoin };\n};\n", "// Open issue with eslint-plugin-import https://github.com/import-js/eslint-plugin-import/issues/1810\n// eslint-disable-next-line\nimport {\n  HMSVBPlugin,\n  HMSVirtualBackgroundTypes,\n} from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport { parsedUserAgent } from \"@100mslive/react-sdk\";\nimport { isSafari } from \"../../common/constants\";\nexport class VBPlugin {\n  private hmsPlugin?: HMSVBPlugin;\n  private effectsPlugin?: any;\n\n  initialisePlugin = async (effectsSDKKey?: string, onInit?: () => void) => {\n    if (this.getVBObject()) {\n      return;\n    }\n    if (effectsSDKKey) {\n      try {\n        // eslint-disable-next-line\n        const effects = await import(\n          \"@100mslive/hms-virtual-background/hmseffectsplugin\"\n        );\n        this.effectsPlugin = new effects.HMSEffectsPlugin(\n          effectsSDKKey,\n          onInit\n        );\n      } catch (error) {\n        console.error(\n          \"Failed to initialise HMSEffectsPlugin:\",\n          error,\n          \"Using HMSVBPlugin\"\n        );\n        this.hmsPlugin = new HMSVBPlugin(\n          HMSVirtualBackgroundTypes.NONE,\n          HMSVirtualBackgroundTypes.NONE\n        );\n      }\n    } else {\n      this.hmsPlugin = new HMSVBPlugin(\n        HMSVirtualBackgroundTypes.NONE,\n        HMSVirtualBackgroundTypes.NONE\n      );\n    }\n  };\n\n  getBackground = () => {\n    if (this.effectsPlugin) {\n      return this.effectsPlugin?.getBackground();\n    } else {\n      const background = this.hmsPlugin?.getBackground();\n      // @ts-ignore\n      return background?.src || background;\n    }\n  };\n\n  getBlurAmount = () => {\n    if (this.effectsPlugin) {\n      return this.effectsPlugin.getBlurAmount();\n    } else {\n      // Treating HMS VB intensity as a fixed value\n      return this.hmsPlugin?.getBackground() === HMSVirtualBackgroundTypes.BLUR\n        ? 1\n        : 0;\n    }\n  };\n\n  getVBObject = () => {\n    return this.effectsPlugin || this.hmsPlugin;\n  };\n\n  getName = () => {\n    return this.effectsPlugin\n      ? this.effectsPlugin?.getName()\n      : this.hmsPlugin?.getName();\n  };\n\n  setBlur = async (blurPower: number) => {\n    if (this.effectsPlugin) {\n      this.effectsPlugin?.setBlur(blurPower);\n    } else {\n      await this.hmsPlugin?.setBackground(\n        HMSVirtualBackgroundTypes.BLUR,\n        HMSVirtualBackgroundTypes.BLUR\n      );\n    }\n  };\n\n  setBackground = async (mediaURL: string) => {\n    if (this.effectsPlugin) {\n      this.effectsPlugin?.setBackground(mediaURL);\n    } else {\n      const img = document.createElement(\"img\");\n      let retries = 0;\n      const MAX_RETRIES = 3;\n      img.alt = \"VB\";\n      img.src = mediaURL;\n      try {\n        await this.hmsPlugin?.setBackground(\n          img,\n          HMSVirtualBackgroundTypes.IMAGE\n        );\n      } catch (e) {\n        console.error(e);\n        if (retries++ < MAX_RETRIES) {\n          await this.hmsPlugin?.setBackground(\n            img,\n            HMSVirtualBackgroundTypes.IMAGE\n          );\n        }\n      }\n    }\n  };\n\n  setPreset = async (preset: \"quality\" | \"balanced\") => {\n    if (this.effectsPlugin) {\n      await this.effectsPlugin.setPreset(preset);\n    }\n  };\n\n  getPreset = () => {\n    return this.effectsPlugin?.getPreset() || \"\";\n  };\n\n  removeEffects = async () => {\n    if (this.effectsPlugin) {\n      this.effectsPlugin?.removeEffects();\n    } else {\n      await this.hmsPlugin?.setBackground(\n        HMSVirtualBackgroundTypes.NONE,\n        HMSVirtualBackgroundTypes.NONE\n      );\n    }\n  };\n\n  reset = () => {\n    this.effectsPlugin = undefined;\n    this.hmsPlugin = undefined;\n  };\n\n  isEffectsSupported = () => {\n    if (!isSafari) {\n      return true;\n    }\n    const browserVersion = parsedUserAgent?.getBrowser()?.version || \"16\";\n    if (browserVersion && parseInt(browserVersion.split(\".\")[0]) < 17) {\n      return false;\n    }\n    return true;\n  };\n}\n\nexport const VBHandler = new VBPlugin();\n", "import { useCallback } from \"react\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\n// @ts-ignore: No implicit Any\nimport { PictureInPicture } from \"../PIP/PIPManager\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const useRedirectToLeave = () => {\n  const { onLeave } = useHMSPrebuiltContext();\n\n  const redirect = useCallback(\n    (timeout = 0) => {\n      setTimeout(() => {\n        PictureInPicture.stop().catch(() => console.error(\"stopping pip\"));\n        ToastManager.clearAllToast();\n        onLeave?.();\n      }, timeout);\n    },\n    [onLeave]\n  );\n\n  return { redirectToLeave: redirect };\n};\n", "import * as workerTimers from \"worker-timers\";\nimport {\n  HMSActions,\n  HMSPeer,\n  HMSTrack,\n  HMSVideoTrack,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit any\nimport {\n  drawVideoElementsOnCanvas,\n  dummyChangeInCanvas,\n  resetPIPCanvasColors,\n} from \"./pipUtils\";\nimport { isIOS, isMacOS, isSafari } from \"../../common/constants\";\nconst MAX_NUMBER_OF_TILES_IN_PIP = 4;\nconst DEFAULT_FPS = 30;\nconst DEFAULT_CANVAS_WIDTH = 480;\nconst DEFAULT_CANVAS_HEIGHT = 320;\nconst LEAVE_EVENT_NAME = \"leavepictureinpicture\";\n\nenum PIPStates {\n  starting = \"starting\",\n  started = \"started\",\n  stopping = \"stopping\",\n  stopped = \"stopped\",\n}\n\n/**\n * video elements are stitched together as a canvas which is converted to\n * another video element converted to PIP.\n * The task is split into two parts -\n * 1. a function which gets hit when the input changes and updates the tracks\n * to show\n * 2. an independent loop which updates the canvas periodically based on the current\n * tracks which should be shown.\n */\nclass PipManager {\n  private listeners = new Set<(value: boolean) => void>();\n  private canvas: HTMLCanvasElement | null = null;\n  private pipVideo: HTMLVideoElement | null = null;\n  private hmsActions: HMSActions | null = null;\n  private timeoutRef = 0;\n  private videoElements: HTMLVideoElement[] = [];\n  private onStateChange: ((value: boolean) => void) | null = null;\n  private tracksToShow: Array<string> = [];\n  private state: PIPStates = PIPStates.stopped;\n\n  constructor() {\n    this.reset();\n  }\n\n  listenToStateChange(cb: (value: boolean) => void) {\n    this.listeners.add(cb);\n  }\n\n  /**\n   * @private\n   */\n  reset() {\n    console.debug(\"resetting PIP state\");\n    resetPIPCanvasColors();\n    this.canvas = null; // where stitching will take place\n    this.pipVideo = null; // the element which will be sent in PIP\n    this.timeoutRef = 0; // setTimeout reference so it can be cancelled\n    this.hmsActions = null; // for attaching detaching\n    this.videoElements = []; // for attaching tracks\n    this.tracksToShow = [];\n    this.onStateChange = null; // for user of this class to listen to changes\n    this.state = PIPStates.stopped;\n  }\n\n  /**\n   * check if PIP is supported in this browser env\n   */\n  isSupported() {\n    return (\n      !!document.pictureInPictureEnabled && !isIOS && !(isMacOS && isSafari)\n    );\n  }\n\n  /**\n   * check if pip is currently turned on\n   */\n  isOn() {\n    return !!document.pictureInPictureElement;\n  }\n\n  /**\n   * request browser to start pip and start the render loop updating the pip\n   * video element with peer tracks.\n   * @param hmsActions\n   * @param onStateChangeFn {function(bool):void} callback called to notify change in pip state\n   */\n  async start(\n    hmsActions: HMSActions,\n    onStateChangeFn: (value: boolean) => void\n  ): Promise<void> {\n    if (!this.isSupported()) {\n      throw new Error(\"pip is not supported on this browser\");\n    }\n    console.debug(\"starting PIP, current state\", this.state);\n    if (this.state === PIPStates.started) {\n      await this.stop(); // if anything is already running\n    } else if (this.state === PIPStates.starting) {\n      return; // ignore double clicks\n    }\n    this.state = PIPStates.starting;\n    try {\n      await this.init(hmsActions, onStateChangeFn);\n      // when user closes pip, call internal stop\n      this.pipVideo?.addEventListener(LEAVE_EVENT_NAME, this.stop);\n      this.renderLoop();\n      if (!this.isOn()) {\n        await this.requestPIP();\n      }\n      console.debug(\"pip started\");\n      this.state = PIPStates.started;\n      this.onStateChange?.(true);\n      this.callListeners(true);\n    } catch (err) {\n      console.error(\"error in request pip\", err);\n      this.state = PIPStates.stopped;\n    }\n  }\n\n  stop = async () => {\n    if (this.state === PIPStates.stopped) {\n      return;\n    }\n    this.state = PIPStates.stopping;\n    this.pipVideo?.removeEventListener(LEAVE_EVENT_NAME, this.stop);\n    if (this.timeoutRef) {\n      workerTimers.clearTimeout(this.timeoutRef);\n      this.timeoutRef = 0;\n    }\n    if (this.isOn()) {\n      this.exitPIP();\n    }\n    // detach all to avoid bandwidth consumption\n    await this.detachOldAttachNewTracks(this.tracksToShow, []);\n    this.onStateChange?.(false); // notify parent about this\n    this.callListeners(false);\n    this.reset(); // cleanup\n    this.state = PIPStates.stopped;\n  };\n\n  /**\n   * @param peers {Array} All Remote Peers present in call.\n   * @param tracksMap {Object} map of track id to track\n   * */\n  async updatePeersAndTracks(\n    peers: HMSPeer[],\n    tracksMap: Record<string, HMSTrack>\n  ) {\n    if (!this.canvas) {\n      console.log(\"no canvas to render video to\");\n      return;\n    }\n    const newTracksToShowUnordered = this.pickTracksToShow(peers, tracksMap);\n    const currentTracksShowing = this.tracksToShow;\n    this.tracksToShow = this.orderNewTracksToShow(\n      newTracksToShowUnordered,\n      currentTracksShowing\n    );\n    try {\n      await this.detachOldAttachNewTracks(\n        currentTracksShowing,\n        this.tracksToShow,\n        tracksMap\n      );\n    } catch (error) {\n      console.error(\"error in detaching/attaching tracks\", error);\n    }\n  }\n\n  // ------- Private function --------------\n  /**\n   * @private {boolean} on - whether pip is on/off\n   */\n  callListeners = (on: boolean) => {\n    this.listeners.forEach((listener) => listener?.(on));\n  };\n\n  /**\n   * @private\n   */\n  async init(\n    hmsActions: HMSActions,\n    onStateChangeFn: (value: boolean) => void\n  ) {\n    await this.initMediaElements();\n    this.hmsActions = hmsActions;\n    this.onStateChange = onStateChangeFn;\n  }\n\n  async initMediaElements() {\n    if (!this.canvas) {\n      const { canvas, pipVideo } = this.initializeCanvasAndVideoElement();\n      this.canvas = canvas; // where stitching will take place\n      this.pipVideo = pipVideo; // the element which will be sent in PIP\n      this.videoElements = this.initializeVideoElements(); // for attaching tracks\n      const videoPlayPromise = this.pipVideo.play();\n      dummyChangeInCanvas(this.canvas);\n      await videoPlayPromise;\n    }\n  }\n\n  initializeCanvasAndVideoElement() {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = DEFAULT_CANVAS_WIDTH;\n    canvas.height = DEFAULT_CANVAS_HEIGHT;\n    const pipVideo = document.createElement(\"video\");\n    pipVideo.width = DEFAULT_CANVAS_WIDTH;\n    pipVideo.height = DEFAULT_CANVAS_HEIGHT;\n    pipVideo.muted = true;\n    pipVideo.srcObject = canvas.captureStream();\n    return { canvas, pipVideo };\n  }\n\n  initializeVideoElements() {\n    const videoElements = [];\n    for (let i = 0; i < MAX_NUMBER_OF_TILES_IN_PIP; i++) {\n      const videoElement = document.createElement(\"video\");\n      videoElement.autoplay = true;\n      videoElement.playsInline = true;\n      videoElements.push(videoElement);\n    }\n    return videoElements;\n  }\n\n  /**\n   * render loop is responsible for rendering the video elements on canvas/pip.\n   * in each loop current video elements are stitched and painted on canvas\n   */\n  renderLoop() {\n    const delay = 1000 / DEFAULT_FPS;\n    this.timeoutRef = workerTimers.setTimeout(() => {\n      if (\n        this.state === PIPStates.stopping ||\n        this.state === PIPStates.stopped\n      ) {\n        return;\n      }\n      if (this.state === PIPStates.started) {\n        drawVideoElementsOnCanvas(this.videoElements, this.canvas);\n      }\n      this.renderLoop();\n    }, delay);\n  }\n\n  async requestPIP() {\n    try {\n      if (this.isOn()) {\n        this.exitPIP(); // is this really needed?\n      }\n      if (!this.pipVideo) {\n        return;\n      }\n      await this.pipVideo.requestPictureInPicture();\n    } catch (error) {\n      console.error(\"error in requestpip\", error, \"state\", this.state);\n      throw error;\n    }\n  }\n\n  exitPIP() {\n    document.exitPictureInPicture();\n  }\n\n  /**\n   * Logic - pick only enabled video tracks\n   * @param peers {Array<any>}\n   * @param tracksMap {Record<string, any>}\n   */\n  pickTracksToShow(peers: HMSPeer[], tracksMap: Record<string, HMSTrack>) {\n    const tracksToShow = new Set<string>();\n    for (const peer of peers) {\n      if (tracksToShow.size === MAX_NUMBER_OF_TILES_IN_PIP) {\n        break;\n      } else if (\n        peer.videoTrack &&\n        this.showTrack(tracksMap[peer.videoTrack] as HMSVideoTrack)\n      ) {\n        tracksToShow.add(peer.videoTrack);\n      }\n    }\n    return Array.from(tracksToShow);\n  }\n\n  /**\n   * there has to be a smart reordering of new tracks based on currently showing\n   * ones to reduce unnecessary displacement. If someone was showing up both\n   * earlier and now, it's a better UX to keep their position same instead\n   * of letting it change.\n   * The returned array is a shuffled version of newTracks with position of\n   * tracks present in the old tracks intact.\n   * eg. old = [1,5,9,3], new = [3,8,2,9], result = [8,2,9,3]\n   * @param oldTracks {Array}\n   * @param newTracks {Array}\n   * @return {Array}\n   */\n  orderNewTracksToShow(newTracks: string[], oldTracks: string[]) {\n    const betterNewTracks: Array<string> = new Array(newTracks.length);\n    const leftOvers: Array<string> = [];\n    // put the common ones in right position\n    newTracks.forEach((track) => {\n      const oldPosition = oldTracks.indexOf(track);\n      if (oldPosition !== -1 && oldPosition < newTracks.length) {\n        // if track is there currently and we can put it on the same position\n        betterNewTracks[oldPosition] = track;\n      } else {\n        leftOvers.push(track);\n      }\n    });\n    // put the left overs in remaining empty positions\n    for (let i = 0; i < newTracks.length; i++) {\n      if (!betterNewTracks[i]) {\n        const newEntry = leftOvers.shift();\n        if (newEntry) {\n          betterNewTracks[i] = newEntry;\n        }\n      }\n    }\n    return Array.from(new Set(betterNewTracks));\n  }\n\n  private showTrack(track: HMSVideoTrack | undefined) {\n    return track && track.enabled && !track.degraded;\n  }\n\n  /**\n   * call detach for tracks which no longer need to be shown and attach for\n   * new ones which are to be shown now.\n   * Note: oldTracks and newTracks are not necessarily of same length\n   * @param oldTracks {Array<String>}\n   * @param newTracks {Array<String>}\n   * @param tracksMap {Record<String, any>}\n   */\n  // eslint-disable-next-line complexity\n  async detachOldAttachNewTracks(\n    oldTracks: Array<string>,\n    newTracks: Array<string>,\n    tracksMap: Record<string, HMSTrack> | null = null\n  ) {\n    const numTracks = Math.max(oldTracks.length, newTracks.length);\n    for (let i = 0; i < numTracks; i++) {\n      if (oldTracks[i] === newTracks[i]) {\n        continue; // it would already have been attached previously\n      } else if (oldTracks[i]) {\n        // old track is there but not equal to new track, detach\n        // no need to call detach if we know for sure track is no longer in store\n        if (!tracksMap || tracksMap[oldTracks[i]]) {\n          await this.hmsActions?.detachVideo(\n            oldTracks[i],\n            this.videoElements[i]\n          );\n        }\n        if (this.videoElements[i]) {\n          // even if old track got removed from the room, element needs to be cleaned up\n          this.videoElements[i].srcObject = null;\n        }\n      }\n      if (newTracks[i]) {\n        await this.hmsActions?.attachVideo(newTracks[i], this.videoElements[i]);\n      }\n    }\n  }\n}\n\nexport const PictureInPicture = new PipManager();\n// PictureInPicture.initMediaElements().catch(console.error);  // for safari, init early\n", "let CANVAS_FILL_COLOR;\nlet CANVAS_STROKE_COLOR;\n\nfunction setPIPCanvasColors() {\n  if (!CANVAS_FILL_COLOR) {\n    CANVAS_FILL_COLOR = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(\"--hms-ui-colors-surface_bright\");\n  }\n  if (!CANVAS_STROKE_COLOR) {\n    CANVAS_STROKE_COLOR = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(\"--hms-ui-colors-border_bright\");\n  }\n}\n\nexport function resetPIPCanvasColors() {\n  CANVAS_FILL_COLOR = \"\";\n  CANVAS_STROKE_COLOR = \"\";\n}\n/**\n * no tile - blank canvas, black image\n * 1 tile - takes full space on canvas\n * 2 tile - stack two video adjacent to each other\n * 3 tile - two rows first row has two tile second row has one tile centered.\n * 4 tiles - two rows two columns - all equal size\n * All videos will respect their aspect ratios.\n */\nexport function drawVideoElementsOnCanvas(videoElements, canvas) {\n  let videoTiles = videoElements.filter(\n    (videoElement) => videoElement.srcObject !== null\n  );\n\n  const ctx = canvas.getContext(\"2d\");\n  setPIPCanvasColors();\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  if (videoTiles.length === 0) {\n    // no tile to render, render black image\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    return;\n  }\n\n  fillGridTiles(videoTiles.slice(0, 4), ctx, canvas);\n}\n\n// this is to send some data for stream and resolve video element's play for a\n// video element rendering this canvas' capture stream\nexport function dummyChangeInCanvas(canvas) {\n  const ctx = canvas.getContext(\"2d\");\n  setPIPCanvasColors();\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * Imagine the canvas as a grid with passed in number of rows and columns. Go\n * over the tiles in the grid in order while drawing the videoElements upon them.\n */\nfunction fillGridTiles(videoElements, ctx, canvas) {\n  const offset = 8;\n  canvas.width = 480;\n  canvas.height = 320;\n\n  ctx.fillStyle = CANVAS_FILL_COLOR;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  // Show borders only when there is atleast one video\n  if (videoElements.length > 0) {\n    ctx.strokeStyle = CANVAS_STROKE_COLOR;\n    ctx.lineWidth = offset / 2;\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n\n  if (videoElements.length === 1) {\n    const video = videoElements[0];\n    const { width, height } = getRenderDimensions(\n      video,\n      canvas.width - offset,\n      canvas.height - offset\n    );\n    /**\n     * The x and y offset are to center the video tile horizontally and vertically\n     * width and height are the aspect ratio constrained video tile dimensions\n     */\n    const xOffset = (canvas.width - width) / 2;\n    const yOffset = (canvas.height - height) / 2;\n    ctx.drawImage(video, xOffset, yOffset, width, height);\n  }\n\n  if (videoElements.length === 2) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset, // This will be the max available width for each tile\n        canvas.height - offset\n      );\n      /**\n       * (canvas.width / 2 - width) / 2 This is to center width wise within in the box\n       * (canvas.width / 2) * index This is the start offset\n       * for 1st element it is 0, for second it will be canvas.width/2 which starts from the center\n       */\n      const xOffset =\n        (canvas.width / 2 - width) / 2 + (canvas.width / 2) * index;\n      /**\n       * (canvas.height - height) / 2 This is to center height wise\n       */\n      const yOffset = (canvas.height - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw a border between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke(path);\n  }\n\n  if (videoElements.length === 3) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset,\n        canvas.height / 2 - offset\n      );\n      /**\n       * for first two tiles, xOffset is similar to the 2 tiles calculation with only difference being the height. it is half now.\n       */\n      const xOffset =\n        index < 2\n          ? (canvas.width / 2 - width) / 2 + (canvas.width / 2) * index\n          : canvas.width / 2 - width / 2;\n      const yOffset =\n        (index < 2 ? 0 : canvas.height / 2) + (canvas.height / 2 - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw borders between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height / 2);\n    ctx.stroke(path);\n    path.moveTo(0, canvas.height / 2);\n    path.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke(path);\n  }\n  if (videoElements.length === 4) {\n    videoElements.forEach((video, index) => {\n      const { width, height } = getRenderDimensions(\n        video,\n        canvas.width / 2 - offset,\n        canvas.height / 2 - offset\n      );\n      /**\n       * Similar to two tiles repeat after 2 tiles\n       * (canvas.width / 2 - width) / 2 is to center horizontally\n       */\n      const xOffset =\n        (canvas.width / 2 - width) / 2 + (canvas.width / 2) * (index % 2);\n      /**\n       * Similar to two tiles with the yOffset being height/2 for the 3rd and 4th tiles\n       * (canvas.height / 2 - height) / 2 is to center vertically\n       */\n      const yOffset =\n        (index < 2 ? 0 : canvas.height / 2) + (canvas.height / 2 - height) / 2;\n\n      ctx.drawImage(video, xOffset, yOffset, width, height);\n    });\n    /**\n     * Draw borders between tiles\n     */\n    const path = new Path2D();\n    path.moveTo(canvas.width / 2, 0);\n    path.lineTo(canvas.width / 2, canvas.height);\n    ctx.stroke(path);\n    path.moveTo(0, canvas.height / 2);\n    path.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke(path);\n  }\n}\n\n/**\n * Restrict the dimensions within the available dimension with aspect ratio\n * constraint applied\n * @param {HTMLVideoElement} video\n * @param {number} width\n * @param {number} height\n * @returns { width: number, height: number }\n */\nfunction getRenderDimensions(video, width, height) {\n  let finalWidth = (video.videoWidth / video.videoHeight) * height;\n  let finalHeight = height;\n\n  if (finalWidth > width) {\n    finalWidth = width;\n    finalHeight = (video.videoHeight / video.videoWidth) * width;\n  }\n  return { width: finalWidth, height: finalHeight };\n}\n", "import { v4 } from \"uuid\";\n\nexport const ToastManager = {\n  toasts: new Map(),\n  listeners: new Map(),\n  addToast(toast) {\n    const id = toast.id ? toast.id : v4();\n    this.toasts.set(id, { ...toast, id });\n    this.onChange();\n    return id;\n  },\n\n  clearAllToast() {\n    this.toasts.clear();\n    this.onChange();\n  },\n\n  removeToast(id) {\n    this.toasts.delete(id);\n    this.onChange();\n  },\n  replaceToast(id, toast) {\n    if (this.isActive(id)) {\n      this.toasts.set(id, { ...this.toasts.get(id), ...toast });\n      this.onChange();\n      return id;\n    } else {\n      return this.addToast(toast);\n    }\n  },\n  addListener(cb) {\n    this.listeners.set(cb, cb);\n  },\n  removeListener(cb) {\n    this.listeners.delete(cb);\n  },\n  isActive(id) {\n    return this.toasts.has(id);\n  },\n  onChange() {\n    const toasts = Array.from(this.toasts.values());\n    this.listeners.forEach((listener) => listener(toasts));\n  },\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  HMSRoomState,\n  selectAppData,\n  selectIsConnectedToRoom,\n  selectRoomState,\n  useAwayNotifications,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Footer } from \"./Footer/Footer\";\nimport { MoreSettings } from \"./MoreSettings/MoreSettings\";\nimport { HLSFailureModal } from \"./Notifications/HLSFailureModal\";\n// @ts-ignore: No implicit Any\nimport { ActivatedPIP } from \"./PIP/PIPComponent\";\n// @ts-ignore: No implicit Any\nimport { PictureInPicture } from \"./PIP/PIPManager\";\nimport { RoleChangeRequestModal } from \"./RoleChangeRequest/RoleChangeRequestModal\";\nimport { Box, Flex } from \"../../Layout\";\nimport { useHMSPrebuiltContext } from \"../AppContext\";\nimport { VideoStreamingSection } from \"../layouts/VideoStreamingSection\";\n// @ts-ignore: No implicit Any\nimport { EmojiReaction } from \"./EmojiReaction\";\nimport FullPageProgress from \"./FullPageProgress\";\nimport { Header } from \"./Header\";\nimport { PreviousRoleInMetadata } from \"./PreviousRoleInMetadata\";\nimport { RaiseHand } from \"./RaiseHand\";\nimport {\n  useRoomLayoutConferencingScreen,\n  useRoomLayoutPreviewScreen,\n} from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useAuthToken, useSetAppDataByKey } from \"./AppData/useUISettings\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../common/hooks\";\nimport { APP_DATA, isAndroid, isIOS, isIPadOS } from \"../common/constants\";\n\nexport const ConferenceScreen = () => {\n  const { userName, endpoints, onJoin: onJoinFunc } = useHMSPrebuiltContext();\n  const screenProps = useRoomLayoutConferencingScreen();\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const roomState = useHMSStore(selectRoomState);\n  const isConnectedToRoom = useHMSStore(selectIsConnectedToRoom);\n  const hmsActions = useHMSActions();\n  const [hideControls, setHideControls] = useState(false);\n  const dropdownList = useHMSStore(selectAppData(APP_DATA.dropdownList));\n  const authTokenInAppData = useAuthToken();\n  const headerRef = useRef<HTMLDivElement | null>(null);\n  const footerRef = useRef<HTMLDivElement | null>(null);\n  const isMobileDevice = isAndroid || isIOS || isIPadOS;\n  const dropdownListRef = useRef<string[]>();\n  const [isHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const { requestPermission } = useAwayNotifications();\n\n  // using it in hls stream to show action button when chat is disabled\n  const showChat = !!screenProps.elements?.chat;\n  const autoRoomJoined = useRef(isPreviewScreenEnabled);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const isMwebHLSStream = isMobileHLSStream || isLandscapeHLSStream;\n\n  const toggleControls = () => {\n    if (\n      dropdownListRef.current?.length === 0 &&\n      isMobileDevice &&\n      !isMwebHLSStream\n    ) {\n      setHideControls((value) => !value);\n    }\n  };\n\n  useEffect(() => {\n    let timeout: undefined | ReturnType<typeof setTimeout>;\n    dropdownListRef.current = dropdownList || [];\n    if (dropdownListRef.current && dropdownListRef.current.length === 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        if (dropdownListRef.current && dropdownListRef.current.length === 0) {\n          setHideControls(isMobileDevice);\n        }\n      }, 5000);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [dropdownList, hideControls, isMobileDevice]);\n\n  useEffect(() => {\n    if (\n      authTokenInAppData &&\n      !isConnectedToRoom &&\n      !isPreviewScreenEnabled &&\n      roomState !== HMSRoomState.Connecting &&\n      !autoRoomJoined.current\n    ) {\n      hmsActions\n        .join({\n          userName: userName || uuid(),\n          authToken: authTokenInAppData,\n          initEndpoint: endpoints?.init,\n          settings: {\n            isAudioMuted: !isPreviewScreenEnabled,\n            isVideoMuted: !isPreviewScreenEnabled,\n            speakerAutoSelectionBlacklist: [\"Yeti Stereo Microphone\"],\n          },\n        })\n        .then(() => requestPermission())\n        .catch(console.error);\n      autoRoomJoined.current = true;\n    }\n  }, [\n    authTokenInAppData,\n    endpoints?.init,\n    hmsActions,\n    isConnectedToRoom,\n    isPreviewScreenEnabled,\n    roomState,\n    userName,\n    requestPermission,\n  ]);\n\n  useEffect(() => {\n    onJoinFunc?.();\n    return () => {\n      PictureInPicture.stop().catch((error: unknown) =>\n        console.error(\"stopping pip\", (error as Error).message)\n      );\n    };\n  }, [onJoinFunc]);\n\n  if (\n    !isConnectedToRoom &&\n    ![HMSRoomState.Reconnecting, HMSRoomState.Disconnected].includes(roomState)\n  ) {\n    return (\n      <FullPageProgress\n        text={roomState === HMSRoomState.Connecting ? \"Joining...\" : \"\"}\n      />\n    );\n  }\n\n  const hideControlsForStreaming = isMwebHLSStream ? true : hideControls;\n\n  return (\n    <>\n      {isHLSStarted ? (\n        <Box\n          css={{\n            position: \"fixed\",\n            zIndex: 100,\n            w: \"100%\",\n            h: \"100%\",\n            left: 0,\n            top: 0,\n          }}\n        >\n          <FullPageProgress\n            text=\"Starting live stream...\"\n            css={{ opacity: 0.8, bg: \"$background_dim\" }}\n          />\n        </Box>\n      ) : null}\n      <Flex css={{ size: \"100%\", overflow: \"hidden\" }} direction=\"column\">\n        {!(screenProps.hideSections.includes(\"header\") || isMwebHLSStream) && (\n          <Box\n            ref={headerRef}\n            css={{\n              h: \"$18\",\n              transition: \"margin 0.3s ease-in-out\",\n              marginTop: hideControlsForStreaming\n                ? `-${headerRef.current?.clientHeight}px`\n                : \"none\",\n              \"@md\": {\n                h: \"$17\",\n              },\n            }}\n            data-testid=\"header\"\n          >\n            <Header />\n          </Box>\n        )}\n        <Box\n          css={{\n            w: \"100%\",\n            flex: \"1 1 0\",\n            minHeight: 0,\n            // @ts-ignore\n            px: (screenProps?.elements as DefaultConferencingScreen_Elements)\n              ?.video_tile_layout?.grid?.edge_to_edge\n              ? 0\n              : \"$10\", // TODO: padding to be controlled by section/element\n            paddingBottom: \"env(safe-area-inset-bottom)\",\n            \"@lg\": {\n              px: 0,\n            },\n          }}\n          id=\"conferencing\"\n          data-testid=\"conferencing\"\n          onClick={toggleControls}\n        >\n          {screenProps.elements ? (\n            <VideoStreamingSection\n              screenType={screenProps.screenType}\n              elements={screenProps.elements}\n              hideControls={hideControlsForStreaming}\n            />\n          ) : null}\n        </Box>\n        {!screenProps.hideSections.includes(\"footer\") &&\n          screenProps.elements &&\n          !isMwebHLSStream && (\n            <Box\n              ref={footerRef}\n              css={{\n                flexShrink: 0,\n                maxHeight: \"$24\",\n                transition: \"margin 0.3s ease-in-out\",\n                bg: \"$background_dim\",\n                marginBottom: hideControlsForStreaming\n                  ? `-${footerRef.current?.clientHeight}px`\n                  : undefined,\n                \"@md\": {\n                  maxHeight: \"unset\",\n                  bg:\n                    screenProps.screenType === \"hls_live_streaming\"\n                      ? \"transparent\"\n                      : \"$background_dim\",\n                },\n              }}\n              data-testid=\"footer\"\n            >\n              <Footer\n                elements={screenProps.elements}\n                screenType={screenProps.screenType}\n              />\n            </Box>\n          )}\n        {isMwebHLSStream && !showChat && (\n          <Flex\n            css={{\n              alignItems: \"center\",\n              pr: \"$4\",\n              pb: \"$4\",\n              position: \"relative\",\n            }}\n            justify=\"end\"\n            gap=\"2\"\n          >\n            <RaiseHand />\n            <MoreSettings\n              elements={screenProps.elements}\n              screenType={screenProps.screenType}\n            />\n            <Box\n              css={{\n                position: \"absolute\",\n                bottom: \"100%\",\n                mb: \"$4\",\n              }}\n            >\n              <EmojiReaction />\n            </Box>\n          </Flex>\n        )}\n        <RoleChangeRequestModal />\n        <HLSFailureModal />\n        <ActivatedPIP />\n        <PreviousRoleInMetadata />\n      </Flex>\n    </>\n  );\n};\n", "//@ts-nocheck\nimport React, { useEffect } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { ConferencingScreen } from \"@100mslive/types-prebuilt\";\nimport { Chat_ChatState } from \"@100mslive/types-prebuilt/elements/chat\";\nimport { selectLocalPeerRole, useHMSStore } from \"@100mslive/react-sdk\";\nimport { config as cssConfig, Footer as AppFooter } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { AudioVideoToggle } from \"../AudioVideoToggle\";\nimport { CaptionIcon } from \"../CaptionIcon\";\n// @ts-ignore: No implicit Any\nimport { EmojiReaction } from \"../EmojiReaction\";\nimport Int2EnButton from \"../Interpreting/Int2En\";\nimport Int2FrButton from \"../Interpreting/Int2Fr\";\nimport EnButton from \"../Languages/En\";\nimport FrButton from \"../Languages/Fr\";\n// @ts-ignore: No implicit Any\nimport { LeaveRoom } from \"../Leave/LeaveRoom\";\n// @ts-ignore: No implicit Any\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { RaiseHand } from \"../RaiseHand\";\n// @ts-ignore: No implicit Any\nimport { ScreenshareToggle } from \"../ScreenShareToggle\";\n// @ts-ignore: No implicit Any\nimport { VBToggle } from \"../VirtualBackground/VBToggle\";\n// @ts-ignore: No implicit Any\nimport { ChatToggle } from \"./ChatToggle\";\nimport { ParticipantCount } from \"./ParticipantList\";\nimport { PollsToggle } from \"./PollsToggle\";\nimport { WhiteboardToggle } from \"./WhiteboardToggle\";\nimport { ConferencingScreenElements } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { useShowPolls } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\nexport const Footer = ({\n  screenType,\n  elements,\n}: {\n  screenType: keyof ConferencingScreen;\n  elements: ConferencingScreenElements;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isOverlayChat = !!elements?.chat?.is_overlay;\n  const openByDefault =\n    elements?.chat?.initial_state === Chat_ChatState.CHAT_STATE_OPEN;\n\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const { showPolls } = useShowPolls();\n  const role = useHMSStore(selectLocalPeerRole);\n  useEffect(() => {\n    if (!isChatOpen && openByDefault) {\n      toggleChat();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggleChat, openByDefault]);\n\n  return (\n    <AppFooter.Root\n      css={{\n        flexWrap: \"nowrap\",\n        \"@md\": {\n          justifyContent: \"center\",\n          gap: \"$10\",\n          position: \"relative\",\n          // To prevent it from showing over the sidepane if chat type is not overlay\n          zIndex: isOverlayChat && isChatOpen ? 20 : 1,\n        },\n      }}\n    >\n      <AppFooter.Left\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            p: \"0\",\n            gap: \"$10\",\n          },\n        }}\n      >\n        {isMobile ? <LeaveRoom screenType={screenType} /> : null}\n        <AudioVideoToggle />\n        {!isMobile && elements.virtual_background ? <VBToggle /> : null}\n        {role?.name === \"interpreter-en\" || role?.name === \"interpreter-fr\" ? (\n          <>\n            <Int2EnButton />\n            <Int2FrButton />\n          </>\n        ) : null}\n        {/* {role?.name === \"guest\" || role?.name === \"host\" ? (\n          <>\n            <EnButton />\n            <FrButton />\n          </>\n        ) : null} */}\n      </AppFooter.Left>\n      <AppFooter.Center\n        css={{\n          \"@md\": {\n            w: \"unset\",\n            gap: \"$10\",\n          },\n        }}\n      >\n        {isMobile ? (\n          <>\n            <ScreenshareToggle />\n            <RaiseHand />\n            {elements?.chat && <ChatToggle />}\n            <MoreSettings elements={elements} screenType={screenType} />\n          </>\n        ) : (\n          <>\n            <ScreenshareToggle />\n            <RaiseHand />\n            {screenType !== \"hls_live_streaming\" && <CaptionIcon />}\n            {elements?.emoji_reactions && <EmojiReaction />}\n            <LeaveRoom screenType={screenType} />\n          </>\n        )}\n      </AppFooter.Center>\n      <AppFooter.Right>\n        <WhiteboardToggle />\n        {showPolls && <PollsToggle />}\n        {!isMobile && elements?.chat && <ChatToggle />}\n        {elements?.participant_list && <ParticipantCount />}\n        <MoreSettings elements={elements} screenType={screenType} />\n      </AppFooter.Right>\n    </AppFooter.Root>\n  );\n};\n", "import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { HMSKrispPlugin } from \"@100mslive/hms-noise-cancellation\";\nimport {\n  DeviceType,\n  HMSRoomState,\n  selectIsLocalAudioPluginPresent,\n  selectLocalAudioTrackID,\n  selectLocalPeer,\n  selectLocalVideoTrackID,\n  selectRoom,\n  selectRoomState,\n  selectVideoTrackByID,\n  useAVToggle,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  AudioLevelIcon,\n  CameraFlipIcon,\n  CheckIcon,\n  MicOffIcon,\n  MicOnIcon,\n  SettingsIcon,\n  SpeakerIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { IconButtonWithOptions } from \"./IconButtonWithOptions/IconButtonWithOptions\";\n// @ts-ignore: No implicit Any\nimport { ActionTile } from \"./MoreSettings/ActionTile\";\n// @ts-ignore: No implicit Any\nimport SettingsModal from \"./Settings/SettingsModal\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { AudioLevel } from \"../../AudioLevel\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Switch } from \"../../Switch\";\nimport { Text } from \"../../Text\";\nimport { Tooltip } from \"../../Tooltip\";\nimport IconButton from \"../IconButton\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsNoiseCancellationEnabled,\n  useSetNoiseCancellation,\n} from \"./AppData/useUISettings\";\nimport { useAudioOutputTest } from \"./hooks/useAudioOutputTest\";\nimport { isAndroid, isIOS, isMacOS, TEST_AUDIO_URL } from \"../common/constants\";\n\nconst krispPlugin = new HMSKrispPlugin();\n// const optionsCSS = { fontWeight: '$semiBold', color: '$on_surface_high', w: '100%' };\n\nexport const Options = ({\n  options,\n  selectedDeviceId,\n  onClick,\n}: {\n  options?: Array<MediaDeviceInfo | InputDeviceInfo>;\n  selectedDeviceId?: string;\n  onClick: (deviceId: string) => Promise<void>;\n}) => {\n  return (\n    <>\n      {options?.map((option) => (\n        <Dropdown.Item\n          key={option.label}\n          css={{\n            backgroundColor: \"$surface_dim\",\n            p: \"$4 $8\",\n            h: \"$15\",\n            fontSize: \"$xs\",\n            justifyContent: \"space-between\",\n            color:\n              selectedDeviceId === option.deviceId ? \"$primary_bright\" : \"\",\n          }}\n          onClick={() => {\n            onClick(option.deviceId);\n          }}\n        >\n          {option.label}\n          {selectedDeviceId === option.deviceId ? (\n            <CheckIcon width={16} height={16} />\n          ) : null}\n        </Dropdown.Item>\n      ))}\n    </>\n  );\n};\n\nconst OptionLabel = ({\n  children,\n  icon,\n}: {\n  children: React.ReactNode;\n  icon: React.ReactNode;\n}) => {\n  return (\n    <Dropdown.Label\n      css={{\n        h: \"$16\",\n        p: \"$4 $8\",\n        color: \"$on_surface_medium\",\n        bg: \"transparent\",\n        fontSize: \"$xs\",\n        gap: \"$4\",\n        alignItems: \"center\",\n      }}\n    >\n      <Flex\n        css={{\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          \"& svg\": { size: \"$8\" },\n        }}\n      >\n        {icon}\n      </Flex>{\" \"}\n      {children}\n    </Dropdown.Label>\n  );\n};\n\nconst useNoiseCancellationWithPlugin = () => {\n  const actions = useHMSActions();\n  const [inProgress, setInProgress] = useState(false);\n  const [, setNoiseCancellationEnabled] = useSetNoiseCancellation();\n  const isEnabledForRoom = useHMSStore(selectRoom)?.isNoiseCancellationEnabled;\n  const setNoiseCancellationWithPlugin = useCallback(\n    async (enabled: boolean) => {\n      if (!isEnabledForRoom || inProgress) {\n        return;\n      }\n      if (!krispPlugin.checkSupport().isSupported) {\n        throw Error(\"Krisp plugin is not supported\");\n      }\n      setInProgress(true);\n      if (enabled) {\n        await actions.addPluginToAudioTrack(krispPlugin);\n      } else {\n        await actions.removePluginFromAudioTrack(krispPlugin);\n      }\n      setNoiseCancellationEnabled(enabled);\n      setInProgress(false);\n    },\n    [actions, inProgress, isEnabledForRoom, setNoiseCancellationEnabled]\n  );\n  return {\n    setNoiseCancellationWithPlugin,\n    inProgress,\n  };\n};\n\nexport const NoiseCancellation = ({\n  actionTile,\n  iconOnly,\n  setOpenOptionsSheet,\n}: {\n  setOpenOptionsSheet?: (value: boolean) => void;\n  iconOnly?: boolean;\n  actionTile?: boolean;\n}) => {\n  const localPeerAudioTrackID = useHMSStore(selectLocalAudioTrackID);\n  const isNoiseCancellationEnabled = useIsNoiseCancellationEnabled();\n  const { setNoiseCancellationWithPlugin, inProgress } =\n    useNoiseCancellationWithPlugin();\n  const room = useHMSStore(selectRoom);\n  const isKrispPluginAdded = useHMSStore(\n    selectIsLocalAudioPluginPresent(krispPlugin.getName())\n  );\n\n  if (\n    !krispPlugin.isSupported() ||\n    !room.isNoiseCancellationEnabled ||\n    !localPeerAudioTrackID\n  ) {\n    return null;\n  }\n\n  if (actionTile) {\n    return (\n      <ActionTile.Root\n        active={isNoiseCancellationEnabled && isKrispPluginAdded}\n        disable={inProgress}\n        onClick={async () => {\n          await setNoiseCancellationWithPlugin(!isNoiseCancellationEnabled);\n          setOpenOptionsSheet?.(false);\n        }}\n      >\n        <AudioLevelIcon />\n        <ActionTile.Title>\n          {isNoiseCancellationEnabled ? \"Noise Reduced\" : \"Reduce Noise\"}\n        </ActionTile.Title>\n      </ActionTile.Root>\n    );\n  }\n\n  if (iconOnly) {\n    return (\n      <Tooltip\n        title={isNoiseCancellationEnabled ? \"Noise Reduced\" : \"Reduce Noise\"}\n      >\n        <IconButton\n          onClick={async () => {\n            await setNoiseCancellationWithPlugin(!isNoiseCancellationEnabled);\n          }}\n          disabled={inProgress}\n          css={{\n            bg:\n              isNoiseCancellationEnabled && isKrispPluginAdded\n                ? \"$surface_brighter\"\n                : \"$background_dim\",\n            borderColor:\n              isNoiseCancellationEnabled && isKrispPluginAdded\n                ? \"$border_brighter\"\n                : \"$border_bright\",\n          }}\n        >\n          <AudioLevelIcon />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n  return (\n    <>\n      <Dropdown.ItemSeparator css={{ mx: 0 }} />\n      <Dropdown.Item\n        css={{\n          p: \"$4 $8\",\n          h: \"$15\",\n          fontSize: \"$xs\",\n          justifyContent: \"space-between\",\n        }}\n        onClick={async (e) => {\n          e.preventDefault();\n          await setNoiseCancellationWithPlugin(!isNoiseCancellationEnabled);\n        }}\n      >\n        <Text\n          css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$2\",\n            fontSize: \"$xs\",\n            \"& svg\": { size: \"$8\" },\n          }}\n        >\n          <AudioLevelIcon />\n          Reduce Noise\n        </Text>\n        <Switch\n          id=\"noise_cancellation\"\n          checked={isNoiseCancellationEnabled && isKrispPluginAdded}\n          disabled={inProgress}\n          onClick={(e) => e.stopPropagation()}\n          onCheckedChange={async (value) => {\n            await setNoiseCancellationWithPlugin(value);\n          }}\n        />\n      </Dropdown.Item>\n      <Dropdown.ItemSeparator css={{ mx: 0 }} />\n    </>\n  );\n};\n\nconst AudioOutputLabel = ({ deviceId }: { deviceId: string }) => {\n  const { playing, setPlaying, audioRef } = useAudioOutputTest({ deviceId });\n  return (\n    <OptionLabel icon={<SpeakerIcon />}>\n      <Box css={{ flex: \"1 1 0\" }}>Speakers</Box>\n      <Text\n        variant=\"xs\"\n        css={{ color: \"$primary_bright\", \"&:hover\": { cursor: \"pointer\" } }}\n        onClick={async () => {\n          if (playing) {\n            return;\n          }\n          await audioRef.current?.play();\n        }}\n      >\n        <audio\n          ref={audioRef}\n          src={TEST_AUDIO_URL}\n          onEnded={() => setPlaying(false)}\n          onPlay={() => setPlaying(true)}\n          style={{ display: \"none\" }}\n        />\n        {playing ? \"Playing Sound...\" : \"Play Test Sound\"}\n      </Text>\n    </OptionLabel>\n  );\n};\n\nconst AudioSettings = ({ onClick }: { onClick: () => void }) => {\n  return (\n    <>\n      <Dropdown.Item\n        css={{\n          backgroundColor: \"$surface_dim\",\n          p: \"$4 $8\",\n          h: \"$15\",\n          alignItems: \"center\",\n          gap: \"$2\",\n          fontSize: \"$xs\",\n          \"& svg\": { size: \"$8\" },\n        }}\n        onClick={onClick}\n      >\n        <SettingsIcon /> Audio Settings\n      </Dropdown.Item>\n    </>\n  );\n};\nexport const AudioVideoToggle = ({\n  hideOptions = false,\n}: {\n  hideOptions?: boolean;\n}) => {\n  const { allDevices, selectedDeviceIDs, updateDevice } = useDevices(\n    (error) => {\n      ToastManager.addToast({\n        title: error.message,\n        variant: \"error\",\n        duration: 2000,\n      });\n    }\n  );\n  const { videoInput, audioInput, audioOutput } = allDevices;\n  const localPeer = useHMSStore(selectLocalPeer);\n  const { isLocalVideoEnabled, isLocalAudioEnabled, toggleAudio, toggleVideo } =\n    useAVToggle();\n  const actions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const videoTrackId = useHMSStore(selectLocalVideoTrackID);\n  const localVideoTrack = useHMSStore(selectVideoTrackByID(videoTrackId));\n  const roomState = useHMSStore(selectRoomState);\n  const hasAudioDevices = Number(audioInput?.length) > 0;\n  const hasVideoDevices = Number(videoInput?.length) > 0;\n  const shouldShowAudioOutput =\n    \"setSinkId\" in HTMLMediaElement.prototype &&\n    Number(audioOutput?.length) > 0;\n  const { screenType } = useRoomLayoutConferencingScreen();\n  const [showSettings, setShowSettings] = useState(false);\n  const isKrispPluginAdded = useHMSStore(\n    selectIsLocalAudioPluginPresent(krispPlugin.getName())\n  );\n  const isNoiseCancellationEnabled = useIsNoiseCancellationEnabled();\n  const { setNoiseCancellationWithPlugin, inProgress } =\n    useNoiseCancellationWithPlugin();\n  const showMuteIcon = !isLocalAudioEnabled || !toggleAudio;\n\n  useEffect(() => {\n    (async () => {\n      const isEnabledForRoom =\n        vanillaStore.getState(selectRoom)?.isNoiseCancellationEnabled;\n      if (\n        isEnabledForRoom &&\n        isNoiseCancellationEnabled &&\n        !isKrispPluginAdded &&\n        !inProgress &&\n        localPeer?.audioTrack\n      ) {\n        try {\n          await setNoiseCancellationWithPlugin(true);\n          ToastManager.addToast({\n            title: `Noise Reduction Enabled`,\n            variant: \"standard\",\n            duration: 2000,\n            icon: <AudioLevelIcon />,\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isNoiseCancellationEnabled, localPeer?.audioTrack, inProgress]);\n\n  if (!toggleAudio && !toggleVideo) {\n    return null;\n  }\n  return (\n    <Fragment>\n      {toggleAudio ? (\n        <IconButtonWithOptions\n          disabled={!toggleAudio}\n          hideOptions={hideOptions || !hasAudioDevices}\n          onDisabledClick={toggleAudio}\n          testid=\"audio_toggle_btn\"\n          tooltipMessage={`Turn ${isLocalAudioEnabled ? \"off\" : \"on\"} audio (${\n            isMacOS ? \"\u2318\" : \"ctrl\"\n          } + d)`}\n          icon={!isLocalAudioEnabled ? <MicOffIcon /> : <MicOnIcon />}\n          active={isLocalAudioEnabled}\n          onClick={toggleAudio}\n          key=\"toggleAudio\"\n        >\n          <Dropdown.Group>\n            <OptionLabel icon={<MicOnIcon />}>\n              <Box css={{ flex: \"1 1 0\" }}>\n                {!shouldShowAudioOutput ? \"Audio\" : \"Microphone\"}\n              </Box>\n              {!showMuteIcon && <AudioLevel trackId={localPeer?.audioTrack} />}\n            </OptionLabel>\n            <Options\n              options={audioInput}\n              selectedDeviceId={selectedDeviceIDs.audioInput}\n              onClick={(deviceId) =>\n                updateDevice({ deviceId, deviceType: DeviceType.audioInput })\n              }\n            />\n          </Dropdown.Group>\n          <Dropdown.ItemSeparator css={{ mx: 0 }} />\n          {shouldShowAudioOutput && (\n            <>\n              <AudioOutputLabel\n                deviceId={selectedDeviceIDs.audioOutput || \"\"}\n              />\n              <Dropdown.Group>\n                <Options\n                  options={audioOutput}\n                  selectedDeviceId={selectedDeviceIDs.audioOutput}\n                  onClick={(deviceId) =>\n                    updateDevice({\n                      deviceId,\n                      deviceType: DeviceType.audioOutput,\n                    })\n                  }\n                />\n              </Dropdown.Group>\n            </>\n          )}\n          <NoiseCancellation />\n          <AudioSettings onClick={() => setShowSettings(true)} />\n        </IconButtonWithOptions>\n      ) : null}\n\n      {toggleVideo ? (\n        <IconButtonWithOptions\n          disabled={!toggleVideo}\n          hideOptions={hideOptions || !hasVideoDevices}\n          onDisabledClick={toggleVideo}\n          tooltipMessage={`Turn ${isLocalVideoEnabled ? \"off\" : \"on\"} video (${\n            isMacOS ? \"\u2318\" : \"ctrl\"\n          } + e)`}\n          testid=\"video_toggle_btn\"\n          icon={!isLocalVideoEnabled ? <VideoOffIcon /> : <VideoOnIcon />}\n          key=\"toggleVideo\"\n          active={isLocalVideoEnabled}\n          onClick={toggleVideo}\n        >\n          <Options\n            options={videoInput}\n            selectedDeviceId={selectedDeviceIDs.videoInput}\n            onClick={(deviceId) =>\n              updateDevice({ deviceId, deviceType: DeviceType.videoInput })\n            }\n          />\n        </IconButtonWithOptions>\n      ) : null}\n\n      {localVideoTrack?.facingMode &&\n      roomState === HMSRoomState.Preview &&\n      (isIOS || isAndroid) ? (\n        <Tooltip title=\"Switch Camera\" key=\"switchCamera\">\n          <IconButton\n            onClick={async () => {\n              try {\n                await actions.switchCamera();\n              } catch (e) {\n                ToastManager.addToast({\n                  title: `Error while flipping camera ${\n                    (e as Error).message || \"\"\n                  }`,\n                  variant: \"error\",\n                });\n              }\n            }}\n          >\n            <CameraFlipIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n      {showSettings && (\n        <SettingsModal\n          open={showSettings}\n          onOpenChange={() => setShowSettings(false)}\n          screenType={screenType}\n        />\n      )}\n    </Fragment>\n  );\n};\n", "import React from \"react\";\nimport { VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Flex } from \"../../../Layout\";\nimport { styled } from \"../../../Theme\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\n\nconst variants = {\n  disabled: {\n    true: {\n      bg: \"$surface_brighter\",\n    },\n  },\n  active: {\n    false: {\n      bg: \"$secondary_dim\",\n    },\n  },\n};\n\nconst IconSection = styled(IconButton, {\n  w: \"unset\",\n  h: \"$14\",\n  p: \"$4\",\n  r: \"$1\",\n  bg: \"transparent\",\n  borderTopRightRadius: \"0 !important\",\n  borderColor: \"$border_bright\",\n  borderBottomRightRadius: \"0 !important\",\n  position: \"relative\",\n  \"&:not([disabled]):focus-visible\": {\n    zIndex: 1,\n  },\n  \"@md\": {\n    mx: 0,\n    borderTopRightRadius: \"$1 !important\",\n    borderBottomRightRadius: \"$1 !important\",\n  },\n  variants: {\n    ...variants,\n    hideOptions: {\n      true: {\n        borderTopRightRadius: \"$1 !important\",\n        borderBottomRightRadius: \"$1 !important\",\n      },\n    },\n  },\n});\n\nconst OptionsSection = styled(IconButton, {\n  w: \"unset\",\n  h: \"$14\",\n  p: \"$4 $2\",\n  r: \"$1\",\n  borderTopLeftRadius: \"0 !important\",\n  borderColor: \"$border_bright\",\n  borderBottomLeftRadius: \"0 !important\",\n  borderLeftWidth: \"0 !important\",\n  position: \"relative\",\n  \"&:not([disabled]):focus-visible\": {\n    zIndex: 1,\n  },\n  \"@md\": {\n    display: \"none\",\n  },\n  variants,\n});\n\nconst Icon = styled(Flex, {\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"$on_primary_high\",\n  variants: {\n    disabled: {\n      true: {\n        color: \"$on_surface_low\",\n      },\n    },\n    active: {\n      true: {\n        color: \"$on_surface_high\",\n      },\n    },\n  },\n});\n\nexport const IconButtonWithOptions = ({\n  disabled = false,\n  onDisabledClick = () => {\n    return;\n  },\n  testid = \"\",\n  tooltipMessage = \"\",\n  icon,\n  children,\n  active,\n  hideOptions = false,\n  onClick = () => {\n    return;\n  },\n}: {\n  onClick: () => void;\n  onDisabledClick: () => void;\n  icon: React.ReactNode;\n  children: React.ReactNode;\n  testid?: string;\n  hideOptions?: boolean;\n  active: boolean;\n  disabled?: boolean;\n  tooltipMessage?: string;\n}) => {\n  const commonProps = { disabled, active };\n  return (\n    <Flex>\n      <IconSection\n        data-testid={testid}\n        {...commonProps}\n        onClick={onClick}\n        hideOptions={hideOptions}\n        className=\"__cancel-drag-event\"\n      >\n        <Tooltip disabled={!tooltipMessage} title={tooltipMessage}>\n          <Icon {...commonProps}>{icon}</Icon>\n        </Tooltip>\n      </IconSection>\n      {!hideOptions && children ? (\n        <Dropdown.Root>\n          <Dropdown.Trigger\n            asChild\n            // onClick does not work\n            onPointerDown={(e) => {\n              if (disabled) {\n                e.preventDefault();\n                onDisabledClick();\n              }\n            }}\n          >\n            <OptionsSection {...commonProps}>\n              <Tooltip title=\"View Options\">\n                <Icon {...commonProps}>\n                  <VerticalMenuIcon />\n                </Icon>\n              </Tooltip>\n            </OptionsSection>\n          </Dropdown.Trigger>\n          <Dropdown.Content\n            sideOffset={5}\n            alignOffset={-44}\n            align=\"start\"\n            side=\"top\"\n            css={{\n              w: 344,\n              maxWidth: \"100%\",\n              maxHeight: \"unset\",\n              p: 0,\n              border: \"none\",\n              bg: \"$surface_dim\",\n            }}\n          >\n            {children}\n          </Dropdown.Content>\n        </Dropdown.Root>\n      ) : null}\n    </Flex>\n  );\n};\n", "import { IconButton as BaseIconButton } from \"../IconButton\";\nimport { styled } from \"../Theme\";\n\nconst IconButton = styled(BaseIconButton, {\n  width: \"$14\",\n  height: \"$14\",\n  border: \"1px solid $border_bright\",\n  bg: \"$background_dim\",\n  r: \"$1\",\n  \"&[disabled]\": {\n    opacity: 0.5,\n    cursor: \"not-allowed\",\n    backgroundColor: \"$secondary_dim\",\n    color: \"$on_primary_high\",\n  },\n  variants: {\n    active: {\n      true: {\n        color: \"$on_surface_high\",\n        backgroundColor: \"transparent\",\n      },\n    },\n  },\n});\n\nexport default IconButton;\n", "import React from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { styled } from \"../../../Theme\";\n\nconst ActionTileRoot = ({\n  active,\n  disabled = false,\n  children,\n  onClick,\n  ...props\n}) => (\n  <Flex\n    {...props}\n    css={{\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      p: \"$4 $2\",\n      position: \"relative\",\n      bg: active ? \"$surface_bright\" : \"\",\n      color: disabled ? \"$on_surface_low\" : \"$on_surface_high\",\n      gap: \"$4\",\n      r: \"$1\",\n      \"&:hover\": {\n        bg: \"$surface_bright\",\n      },\n    }}\n    onClick={() => {\n      if (!disabled) {\n        onClick();\n      }\n    }}\n  >\n    {children}\n  </Flex>\n);\n\nconst ActionTileCount = styled(Text, {\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  fontWeight: \"$semiBold\",\n  color: \"$on_surface_high\",\n  p: \"$1 $2\",\n  minWidth: \"$9\",\n  textAlign: \"center\",\n  boxSizing: \"border-box\",\n  bg: \"$surface_bright\",\n  r: \"$round\",\n  letterSpacing: \"1.5px\",\n  fontSize: \"$tiny !important\",\n  lineHeight: \"$tiny !important\",\n});\n\nconst ActionTileTitle = styled(Text, {\n  fontWeight: \"$semiBold\",\n  color: \"inherit\",\n  textAlign: \"center\",\n  fontSize: \"$xs !important\",\n});\n\nexport const ActionTile = {\n  Root: ActionTileRoot,\n  Title: ActionTileTitle,\n  Count: ActionTileCount,\n};\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  ChevronLeftIcon,\n  CrossIcon,\n  GridFourIcon,\n  NotificationsIcon,\n  SettingsIcon,\n} from \"@100mslive/react-icons\";\nimport { HorizontalDivider } from \"../../../Divider\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Tabs } from \"../../../Tabs\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport DeviceSettings from \"./DeviceSettings\";\nimport { LayoutSettings } from \"./LayoutSettings\";\nimport { NotificationSettings } from \"./NotificationSettings\";\nimport { settingContent } from \"./common\";\n\nconst settingsList = [\n  {\n    tabName: \"devices\",\n    title: \"Device Settings\",\n    icon: SettingsIcon,\n    content: DeviceSettings,\n  },\n  {\n    tabName: \"notifications\",\n    title: \"Notifications\",\n    icon: NotificationsIcon,\n    content: NotificationSettings,\n  },\n  {\n    tabName: \"layout\",\n    title: \"Layout\",\n    icon: GridFourIcon,\n    content: LayoutSettings,\n  },\n];\n\nconst SettingsModal = ({\n  open,\n  onOpenChange,\n  screenType,\n  children = <></>,\n}) => {\n  const mediaQueryLg = cssConfig.media.md;\n  const isMobile = useMedia(mediaQueryLg);\n\n  const [showSetting, setShowSetting] = useState(() =>\n    settingsList.reduce((obj, { tabName }) => ({ ...obj, [tabName]: true }), {})\n  );\n\n  const hideSettingByTabName = useCallback(\n    (key) => (hide) => setShowSetting((prev) => ({ ...prev, [key]: !hide })),\n    [setShowSetting]\n  );\n\n  useEffect(() => {\n    if (screenType === \"hls_live_streaming\") {\n      hideSettingByTabName(\"layout\")(true);\n    }\n  }, [screenType, hideSettingByTabName]);\n\n  const [selection, setSelection] = useState(\n    () => Object.keys(showSetting).find((key) => showSetting[key]) ?? \"\"\n  );\n  const resetSelection = useCallback(() => {\n    setSelection(\"\");\n  }, []);\n\n  useEffect(() => {\n    if (isMobile) {\n      setSelection(\"\");\n    } else {\n      const firstNotHiddenTabName =\n        Object.keys(showSetting).find((key) => showSetting[key]) ?? \"\";\n      setSelection(firstNotHiddenTabName);\n    }\n  }, [isMobile, showSetting]);\n\n  return isMobile ? (\n    <MobileSettingModal\n      open={open}\n      onOpenChange={onOpenChange}\n      selection={selection}\n      setSelection={setSelection}\n      showSetting={showSetting}\n      hideSettingByTabName={hideSettingByTabName}\n      resetSelection={resetSelection}\n    >\n      {children}\n    </MobileSettingModal>\n  ) : (\n    <DesktopSettingModal\n      open={open}\n      onOpenChange={onOpenChange}\n      selection={selection}\n      setSelection={setSelection}\n      showSetting={showSetting}\n      hideSettingByTabName={hideSettingByTabName}\n      resetSelection={resetSelection}\n    >\n      {children}\n    </DesktopSettingModal>\n  );\n};\n\nconst MobileSettingModal = ({\n  open,\n  onOpenChange,\n  selection,\n  setSelection,\n  showSetting,\n  hideSettingByTabName,\n  resetSelection,\n  children = <></>,\n}) => {\n  return (\n    <Sheet.Root open={open} onOpenChange={onOpenChange}>\n      <Sheet.Trigger asChild>{children}</Sheet.Trigger>\n      <Sheet.Content\n        css={{\n          bg: \"$surface_dim\",\n          overflowY: \"auto\",\n        }}\n      >\n        <Sheet.Title css={{ py: \"$10\", px: \"$8\", alignItems: \"center\" }}>\n          <Flex direction=\"row\" justify=\"between\" css={{ w: \"100%\" }}>\n            {!selection ? (\n              <Text variant=\"h6\" css={{ display: \"flex\" }}>\n                Settings\n              </Text>\n            ) : (\n              <Text variant=\"h6\" css={{ display: \"flex\" }}>\n                <Box\n                  as=\"span\"\n                  css={{ r: \"$round\", mr: \"$2\" }}\n                  onClick={resetSelection}\n                >\n                  <ChevronLeftIcon />\n                </Box>\n                {selection?.charAt(0).toUpperCase() + selection.slice(1)}\n              </Text>\n            )}\n            <Sheet.Close>\n              <IconButton as=\"div\" data-testid=\"dialog_cross_icon\">\n                <CrossIcon />\n              </IconButton>\n            </Sheet.Close>\n          </Flex>\n        </Sheet.Title>\n        <HorizontalDivider />\n        {!selection ? (\n          <Flex\n            direction=\"column\"\n            css={{\n              px: \"$8\",\n              pb: \"$8\",\n              overflowY: \"auto\",\n            }}\n          >\n            {settingsList\n              .filter(({ tabName }) => showSetting[tabName])\n              .map(({ icon: Icon, tabName, title }) => {\n                return (\n                  <Box\n                    key={tabName}\n                    value={tabName}\n                    onClick={() => {\n                      setSelection(tabName);\n                    }}\n                    as=\"div\"\n                    css={{\n                      all: \"unset\",\n                      fontFamily: \"$sans\",\n                      py: \"$10\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontSize: \"$sm\",\n                      lineHeight: \"$sm\",\n                      color: \"$on_surface_high\",\n                      userSelect: \"none\",\n                      gap: \"$8\",\n                      cursor: \"pointer\",\n                      \"&:hover\": {\n                        bg: \"$surface_brighter\",\n                        r: \"$1\",\n                        gap: \"$8\",\n                        border: \"none\",\n                      },\n                      borderBottom: \"1px solid $border_default\",\n                    }}\n                  >\n                    <Icon />\n                    {title}\n                  </Box>\n                );\n              })}\n          </Flex>\n        ) : (\n          <Box\n            direction=\"column\"\n            css={{\n              overflowY: \"scroll\",\n              px: \"$8\",\n              py: \"$10\",\n              maxHeight: \"70vh\",\n              overflowX: \"hidden\",\n            }}\n          >\n            {settingsList\n              .filter(\n                ({ tabName }) => showSetting[tabName] && selection === tabName\n              )\n              .map(({ content: Content, title, tabName }) => {\n                return (\n                  <Content\n                    key={title}\n                    setHide={hideSettingByTabName(tabName)}\n                  />\n                );\n              })}\n          </Box>\n        )}\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\nconst DesktopSettingModal = ({\n  open,\n  onOpenChange,\n  selection,\n  setSelection,\n  showSetting,\n  hideSettingByTabName,\n  resetSelection,\n  children = <></>,\n}) => {\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Trigger asChild>{children}</Dialog.Trigger>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(800px, 90%)\",\n            height: \"min(656px, 90%)\",\n            p: 0,\n            r: \"$4\",\n          }}\n        >\n          <Tabs.Root\n            value={selection}\n            activationMode=\"automatic\"\n            onValueChange={setSelection}\n            css={{ size: \"100%\", position: \"relative\" }}\n          >\n            <Tabs.List\n              css={{\n                w: \"18.625rem\",\n                flexDirection: \"column\",\n                bg: \"$background_default\",\n                p: \"$14 $10\",\n                borderTopLeftRadius: \"$4\",\n                borderBottomLeftRadius: \"$4\",\n              }}\n            >\n              <Text variant=\"h5\">Settings </Text>\n              <Flex\n                direction=\"column\"\n                css={{ mx: 0, overflowY: \"auto\", pt: \"$10\" }}\n              >\n                {settingsList\n                  .filter(({ tabName }) => showSetting[tabName])\n                  .map(({ icon: Icon, tabName, title }) => {\n                    return (\n                      <Tabs.Trigger\n                        key={tabName}\n                        value={tabName}\n                        css={{ gap: \"$8\" }}\n                      >\n                        <Icon />\n                        {title}\n                      </Tabs.Trigger>\n                    );\n                  })}\n              </Flex>\n            </Tabs.List>\n            {selection && (\n              <Flex\n                direction=\"column\"\n                css={{\n                  flex: \"1 1 0\",\n                  minWidth: 0,\n                  mr: \"$4\",\n                }}\n              >\n                {settingsList\n                  .filter(({ tabName }) => showSetting[tabName])\n                  .map(({ content: Content, title, tabName }) => {\n                    return (\n                      <Tabs.Content\n                        key={tabName}\n                        value={tabName}\n                        className={settingContent()}\n                      >\n                        <SettingsContentHeader\n                          onBack={resetSelection}\n                          isMobile={false}\n                        >\n                          {title}\n                        </SettingsContentHeader>\n                        <Content setHide={hideSettingByTabName(tabName)} />\n                      </Tabs.Content>\n                    );\n                  })}\n              </Flex>\n            )}\n          </Tabs.Root>\n          <Dialog.Close\n            css={{ position: \"absolute\", right: \"$10\", top: \"$10\" }}\n          >\n            <IconButton as=\"div\" data-testid=\"dialog_cross_icon\">\n              <CrossIcon />\n            </IconButton>\n          </Dialog.Close>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\nconst SettingsContentHeader = ({ children, isMobile, onBack }) => {\n  return (\n    <Text\n      variant=\"h6\"\n      css={{ mb: \"$12\", display: \"flex\", alignItems: \"center\" }}\n    >\n      {isMobile && (\n        <Box\n          as=\"span\"\n          css={{ bg: \"$surface_bright\", mr: \"$4\", r: \"$round\", p: \"$2\" }}\n          onClick={onBack}\n        >\n          <ChevronLeftIcon />\n        </Box>\n      )}\n      {children}\n    </Text>\n  );\n};\n\nexport default SettingsModal;\n", "import React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { CSS, VariantProps } from \"@stitches/react\";\nimport { Dialog } from \"../Modal\";\nimport { styled } from \"../Theme\";\nimport {\n  sheetFadeIn,\n  sheetFadeOut,\n  sheetSlideIn,\n  sheetSlideOut,\n} from \"../utils\";\n\nconst SheetRoot = styled(DialogPrimitive.Root, {\n  minHeight: \"240px\",\n  maxWidth: \"100%\",\n});\nconst SheetTrigger = styled(DialogPrimitive.Trigger, {\n  appearance: \"none !important\", // Needed for safari it shows white overlay\n});\n\nconst StyledOverlay = styled(Dialog.Overlay, {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n\n  '&[data-state=\"open\"]': {\n    animation: `${sheetFadeIn} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n  },\n\n  '&[data-state=\"closed\"]': {\n    animation: `${sheetFadeOut} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n  },\n});\n\nconst StyledContent = styled(DialogPrimitive.Content, {\n  color: \"$on_surface_medium\",\n  backgroundColor: \"$surface_default\",\n  borderTopLeftRadius: \"$3\",\n  borderTopRightRadius: \"$3\",\n  boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n  position: \"fixed\",\n  zIndex: 22,\n  top: 0,\n  right: 0,\n  left: 0,\n  bottom: 0,\n  maxHeight: \"96%\",\n\n  // Among other things, prevents text alignment inconsistencies when dialog can't be centered in the viewport evenly.\n  // Affects animated and non-animated dialogs alike.\n  willChange: \"transform\",\n\n  \"&:focus\": {\n    outline: \"none\",\n  },\n  \"@allowMotion\": {\n    '&[data-state=\"open\"]': {\n      animation: `${sheetSlideIn} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n    },\n\n    '&[data-state=\"closed\"]': {\n      animation: `${sheetSlideOut} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n    },\n  },\n  \"@ls\": {\n    maxWidth: \"50%\",\n    margin: \"0 auto\",\n  },\n\n  variants: {\n    side: {\n      top: {\n        $$transformValue: \"translate3d(0,-100%,0)\",\n        bottom: \"auto\",\n      },\n      right: {\n        $$transformValue: \"translate3d(100%,0,0)\",\n        right: 0,\n      },\n      bottom: {\n        $$transformValue: \"translate3d(0,100%,0)\",\n        bottom: 0,\n        top: \"auto\",\n      },\n      left: {\n        $$transformValue: \"translate3d(-100%,0,0)\",\n        left: 0,\n      },\n    },\n  },\n\n  defaultVariants: {\n    side: \"bottom\",\n  },\n});\n\ntype SheetContentVariants = VariantProps<typeof StyledContent>;\ntype DialogContentPrimitiveProps = React.ComponentProps<\n  typeof DialogPrimitive.Content\n>;\ntype SheetContentProps = DialogContentPrimitiveProps &\n  SheetContentVariants & { css?: CSS; container?: HTMLElement };\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof StyledContent>,\n  SheetContentProps\n>(({ children, container, ...props }, forwardedRef) => (\n  <Dialog.Portal container={container}>\n    <StyledOverlay />\n    <StyledContent {...props} ref={forwardedRef}>\n      {children}\n    </StyledContent>\n  </Dialog.Portal>\n));\nconst SheetClose = Dialog.Close;\nconst SheetTitle = styled(DialogPrimitive.Title, {\n  margin: 0,\n});\nconst SheetDescription = Dialog.Description;\nconst SheetDefaultCloseIcon = Dialog.DefaultClose;\n\nexport const Sheet = {\n  Root: SheetRoot,\n  Trigger: SheetTrigger,\n  Content: SheetContent,\n  Description: SheetDescription,\n  Title: SheetTitle,\n  Close: SheetClose,\n  DefaultClose: SheetDefaultCloseIcon,\n};\n", "import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  DeviceType,\n  selectIsLocalVideoEnabled,\n  selectLocalVideoTrackID,\n  selectVideoTrackByID,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon, SpeakerIcon, VideoOnIcon } from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Button,\n  Dropdown,\n  Flex,\n  StyledVideoTile,\n  Text,\n  Video,\n} from \"../../../\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { DialogDropdownTrigger } from \"../../primitives/DropdownTrigger\";\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { useAudioOutputTest } from \"../hooks/useAudioOutputTest\";\nimport { useDropdownSelection } from \"../hooks/useDropdownSelection\";\nimport { settingOverflow } from \"./common\";\nimport { TEST_AUDIO_URL, UI_SETTINGS } from \"../../common/constants\";\n\n/**\n * wrap the button on click of whom settings should open, this component will take care of the rest,\n * it'll give the user options to change input/output device as well as check speaker.\n * There is also another controlled way of using this by passing in open and onOpenChange.\n */\nconst Settings = ({ setHide }) => {\n  const { allDevices, selectedDeviceIDs, updateDevice } = useDevices();\n  const { videoInput, audioInput, audioOutput } = allDevices;\n  const videoTrackId = useHMSStore(selectLocalVideoTrackID);\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  // don't show speaker selector where the API is not supported, and use\n  // a generic word(\"Audio\") for Mic. In some cases(Chrome Android for example) this changes both mic and speaker keeping them in sync.\n  const shouldShowAudioOutput = \"setSinkId\" in HTMLMediaElement.prototype;\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const trackSelector = selectVideoTrackByID(videoTrackId);\n  const hmsActions = useHMSActions();\n  const track = useHMSStore(trackSelector);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  useEffect(() => {\n    if (isMobile) {\n      hmsActions.refreshDevices();\n    }\n  }, [hmsActions, isMobile]);\n\n  /**\n   * Chromium browsers return an audioOutput with empty label when no permissions are given\n   */\n  const audioOutputFiltered = audioOutput?.filter((item) => !!item.label) ?? [];\n\n  if (\n    !videoInput?.length &&\n    !audioInput?.length &&\n    !audioOutputFiltered?.length\n  ) {\n    setHide(true);\n  }\n\n  return (\n    <Box className={settingOverflow()}>\n      {videoInput?.length ? (\n        <Fragment>\n          {isVideoOn && (\n            <StyledVideoTile.Container\n              css={{\n                w: \"90%\",\n                px: \"$10\",\n                height: \"$48\",\n                bg: \"transparent\",\n                m: \"$10 auto\",\n              }}\n            >\n              <Video\n                trackId={videoTrackId}\n                mirror={track?.facingMode !== \"environment\" && mirrorLocalVideo}\n              />\n            </StyledVideoTile.Container>\n          )}\n          <DeviceSelector\n            title=\"Video\"\n            devices={videoInput}\n            icon={<VideoOnIcon />}\n            selection={selectedDeviceIDs.videoInput}\n            onChange={(deviceId) =>\n              updateDevice({\n                deviceId,\n                deviceType: DeviceType.videoInput,\n              })\n            }\n          />\n        </Fragment>\n      ) : null}\n\n      {audioInput?.length ? (\n        <DeviceSelector\n          title={shouldShowAudioOutput ? \"Microphone\" : \"Audio\"}\n          icon={<MicOnIcon />}\n          devices={audioInput}\n          selection={selectedDeviceIDs.audioInput}\n          onChange={(deviceId) =>\n            updateDevice({\n              deviceId,\n              deviceType: DeviceType.audioInput,\n            })\n          }\n        />\n      ) : null}\n\n      {audioOutputFiltered?.length && shouldShowAudioOutput ? (\n        <DeviceSelector\n          title=\"Speaker\"\n          icon={<SpeakerIcon />}\n          devices={audioOutput}\n          selection={selectedDeviceIDs.audioOutput}\n          onChange={(deviceId) =>\n            updateDevice({\n              deviceId,\n              deviceType: DeviceType.audioOutput,\n            })\n          }\n        >\n          <TestAudio id={selectedDeviceIDs.audioOutput} />\n        </DeviceSelector>\n      ) : null}\n    </Box>\n  );\n};\n\nconst DeviceSelector = ({\n  title,\n  devices,\n  selection,\n  onChange,\n  icon,\n  children = null,\n}) => {\n  const [open, setOpen] = useState(false);\n  const selectionBg = useDropdownSelection();\n  const ref = useRef(null);\n\n  return (\n    <Box css={{ mb: \"$10\" }}>\n      <Text css={{ mb: \"$4\" }}>{title}</Text>\n      <Flex\n        align=\"center\"\n        css={{\n          gap: \"$4\",\n          \"@md\": {\n            flexDirection: children ? \"column\" : \"row\",\n            alignItems: children ? \"start\" : \"center\",\n          },\n        }}\n      >\n        <Box\n          css={{\n            position: \"relative\",\n            flex: \"1 1 0\",\n            minWidth: 0,\n            w: \"100%\",\n            maxWidth: \"100%\",\n            \"@md\": {\n              mb: children ? \"$8\" : 0,\n            },\n          }}\n        >\n          <Dropdown.Root open={open} onOpenChange={setOpen}>\n            <DialogDropdownTrigger\n              ref={ref}\n              icon={icon}\n              title={\n                devices.find(({ deviceId }) => deviceId === selection)?.label ||\n                \"Select device from list\"\n              }\n              open={open}\n            />\n            <Dropdown.Portal>\n              <Dropdown.Content\n                align=\"start\"\n                sideOffset={8}\n                css={{ w: ref.current?.clientWidth, zIndex: 1001 }}\n              >\n                {devices.map((device) => {\n                  return (\n                    <Dropdown.Item\n                      key={device.label}\n                      onSelect={() => onChange(device.deviceId)}\n                      css={{\n                        px: \"$9\",\n                        bg:\n                          device.deviceId === selection\n                            ? selectionBg\n                            : undefined,\n                      }}\n                    >\n                      {device.label}\n                    </Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Content>\n            </Dropdown.Portal>\n          </Dropdown.Root>\n        </Box>\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n\nconst TestAudio = ({ id }) => {\n  const { playing, setPlaying, audioRef } = useAudioOutputTest({\n    deviceId: id,\n  });\n  return (\n    <>\n      <Button\n        variant=\"standard\"\n        css={{\n          flexShrink: 0,\n          p: \"$6 $9\",\n          \"@md\": {\n            w: \"100%\",\n          },\n        }}\n        onClick={() => audioRef.current?.play()}\n        disabled={playing}\n      >\n        <SpeakerIcon />\n        &nbsp;Test{\" \"}\n        <Text as=\"span\" css={{ display: \"none\", \"@md\": { display: \"inline\" } }}>\n          &nbsp; speaker\n        </Text>\n      </Button>\n      <audio\n        ref={audioRef}\n        src={TEST_AUDIO_URL}\n        onEnded={() => setPlaying(false)}\n        onPlay={() => setPlaying(true)}\n        css={{ display: \"none\" }}\n      />\n    </>\n  );\n};\n\nexport default Settings;\n", "import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Flex, Text, textEllipsis } from \"../../index\";\n\nconst DialogDropdownTrigger = React.forwardRef(\n  ({ title, css, open, icon, titleCSS = {} }, ref) => {\n    return (\n      <Dropdown.Trigger\n        asChild\n        data-testid={`${title}_selector`}\n        css={{\n          border: \"1px solid $border_bright\",\n          bg: \"$surface_bright\",\n          r: \"$1\",\n          p: \"$6 $9\",\n          zIndex: 10,\n          ...css,\n        }}\n        ref={ref}\n      >\n        <Flex\n          css={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            color: \"$on_surface_high\",\n            w: \"100%\",\n          }}\n        >\n          {icon}\n          <Text\n            css={{\n              color: \"inherit\",\n              ...textEllipsis(\"90%\"),\n              flex: \"1 1 0\",\n              mx: icon ? \"$6\" : \"0\",\n              ...titleCSS,\n            }}\n          >\n            {title}\n          </Text>\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </Flex>\n      </Dropdown.Trigger>\n    );\n  }\n);\n\nexport { DialogDropdownTrigger };\n", "import { useEffect, useRef, useState } from \"react\";\n\nexport const useAudioOutputTest = ({ deviceId }: { deviceId: string }) => {\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const [playing, setPlaying] = useState(false);\n  useEffect(() => {\n    if (audioRef.current && deviceId) {\n      try {\n        // @ts-ignore\n        if (typeof audioRef.current.setSinkId !== \"undefined\") {\n          // @ts-ignore\n          audioRef.current.setSinkId(deviceId);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [deviceId]);\n  return { playing, setPlaying, audioRef };\n};\n", "export const useDropdownSelection = () => {\n  return \"$surface_bright\";\n};\n", "import React from \"react\";\nimport {\n  AlertOctagonIcon,\n  HandIcon,\n  PeopleAddIcon,\n  PeopleRemoveIcon,\n} from \"@100mslive/react-icons\";\nimport { Box } from \"../../..\";\nimport SwitchWithLabel from \"./SwitchWithLabel\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetSubscribedNotifications,\n  useSubscribedNotifications,\n} from \"../AppData/useUISettings\";\nimport { settingOverflow } from \"./common\";\nimport { SUBSCRIBED_NOTIFICATIONS } from \"../../common/constants\";\n\nconst NotificationItem = ({\n  type,\n  label,\n  icon,\n  checked,\n}: {\n  type: string;\n  label: string;\n  icon: React.ReactNode;\n  checked: boolean;\n}) => {\n  const [, setSubscribedNotifications] = useSetSubscribedNotifications(type);\n  return (\n    <SwitchWithLabel\n      label={label}\n      id={type}\n      icon={icon}\n      checked={checked}\n      onChange={(value) => {\n        setSubscribedNotifications(value);\n      }}\n    />\n  );\n};\n\nexport const NotificationSettings = () => {\n  const subscribedNotifications = useSubscribedNotifications();\n\n  return (\n    <Box className={settingOverflow()}>\n      <NotificationItem\n        label=\"Peer Joined\"\n        type={SUBSCRIBED_NOTIFICATIONS.PEER_JOINED}\n        icon={<PeopleAddIcon />}\n        checked={subscribedNotifications.PEER_JOINED}\n      />\n      <NotificationItem\n        label=\"Peer Leave\"\n        type={SUBSCRIBED_NOTIFICATIONS.PEER_LEFT}\n        icon={<PeopleRemoveIcon />}\n        checked={subscribedNotifications.PEER_LEFT}\n      />\n      <NotificationItem\n        label=\"Hand Raised\"\n        type={SUBSCRIBED_NOTIFICATIONS.METADATA_UPDATED}\n        icon={<HandIcon />}\n        checked={subscribedNotifications.METADATA_UPDATED}\n      />\n      <NotificationItem\n        label=\"Error\"\n        type={SUBSCRIBED_NOTIFICATIONS.ERROR}\n        icon={<AlertOctagonIcon />}\n        checked={subscribedNotifications.ERROR}\n      />\n    </Box>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectIsTranscriptionEnabled,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ClosedCaptionIcon, OpenCaptionIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"../../Tooltip\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../IconButton\";\n// @ts-ignore: No implicit Any\nimport { useSetIsCaptionEnabled } from \"./AppData/useUISettings.js\";\n\nexport const CaptionIcon = () => {\n  const isCaptionPresent = useHMSStore(selectIsTranscriptionEnabled);\n  const [isCaption, setIsCaption] = useSetIsCaptionEnabled();\n\n  const onClick = () => {\n    setIsCaption(!isCaption);\n  };\n  if (!isCaptionPresent) {\n    return null;\n  }\n  return (\n    <Tooltip\n      title={isCaption ? \"Hide closed captions\" : \"Show closed captions\"}\n    >\n      <IconButton data-testid=\"caption_btn\" onClick={onClick}>\n        {isCaption ? (\n          <ClosedCaptionIcon width=\"20\" height=\"20px\" />\n        ) : (\n          <OpenCaptionIcon width=\"20\" height=\"20px\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport data from \"@emoji-mart/data/sets/14/apple.json\";\nimport { init } from \"emoji-mart\";\nimport {\n  selectAvailableRoleNames,\n  selectIsConnectedToRoom,\n  selectLocalPeerID,\n  useCustomEvent,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { EmojiIcon } from \"@100mslive/react-icons\";\nimport { EmojiCard } from \"./Footer/EmojiCard\";\n// import { ToastManager } from './Toast/ToastManager';\nimport { Dropdown } from \"../../Dropdown\";\nimport { Box } from \"../../Layout\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\nimport IconButton from \"../IconButton\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useDropdownList } from \"./hooks/useDropdownList\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../common/hooks\";\nimport { EMOJI_REACTION_TYPE } from \"../common/constants\";\n\ninit({ data });\n\nexport const EmojiReaction = ({ showCard = false }) => {\n  const [open, setOpen] = useState(false);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const { elements } = useRoomLayoutConferencingScreen();\n  useDropdownList({ open: open, name: \"EmojiReaction\" });\n  // const hmsActions = useHMSActions();\n  const roles = useHMSStore(selectAvailableRoleNames);\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  // const { isStreamingOn } = useRecordingStreaming();\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeStream = useLandscapeHLSStream();\n\n  const { sendEvent } = useCustomEvent({\n    type: EMOJI_REACTION_TYPE,\n  });\n\n  const sendReaction = async (emojiId) => {\n    const data = {\n      type: EMOJI_REACTION_TYPE,\n      emojiId: emojiId,\n      senderId: localPeerId,\n    };\n    // TODO: RT find a way to figure out hls-viewer roles\n    sendEvent(data, { roleNames: roles });\n    window.showFlyingEmoji?.({ emojiId, senderId: localPeerId });\n    /* if (isStreamingOn) {\n      try {\n        await hmsActions.sendHLSTimedMetadata([\n          {\n            payload: JSON.stringify(data),\n            duration: 2,\n          },\n        ]);\n      } catch (error) {\n        console.log(error);\n        ToastManager.addToast({ title: error.message });\n      }\n    } */\n  };\n\n  if (!isConnected || !elements.emoji_reactions) {\n    return null;\n  }\n\n  if (showCard) {\n    return <EmojiCard sendReaction={sendReaction} />;\n  }\n  return (\n    <Dropdown.Root open={open} onOpenChange={setOpen}>\n      <Dropdown.Trigger asChild data-testid=\"emoji_reaction_btn\">\n        <IconButton\n          css={\n            isMobile || isLandscape\n              ? {\n                  bg: \"$surface_default\",\n                  r: \"$round\",\n                  border: \"1px solid $border_bright\",\n                }\n              : {}\n          }\n        >\n          <Tooltip title=\"Emoji reaction\">\n            <Box>\n              <EmojiIcon />\n            </Box>\n          </Tooltip>\n        </IconButton>\n      </Dropdown.Trigger>\n      <Dropdown.Content\n        sideOffset={5}\n        align={isMobileHLSStream || isLandscapeStream ? \"end\" : \"center\"}\n        css={{ p: \"$8\", bg: \"$surface_default\" }}\n      >\n        <EmojiCard sendReaction={sendReaction} />\n      </Dropdown.Content>\n    </Dropdown.Root>\n  );\n};\n", "import React from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { styled } from \"../../../Theme\";\n\n// When changing emojis in the grid, keep in mind that the payload used in sendHLSTimedMetadata has a limit of 100 characters. Using bigger emoji Ids can cause the limit to be exceeded.\nconst emojiReactionList = [\n  [\n    { emojiId: \"+1\" },\n    { emojiId: \"-1\" },\n    { emojiId: \"wave\" },\n    { emojiId: \"clap\" },\n    { emojiId: \"fire\" },\n  ],\n  [\n    { emojiId: \"tada\" },\n    { emojiId: \"heart_eyes\" },\n    { emojiId: \"joy\" },\n    { emojiId: \"open_mouth\" },\n    { emojiId: \"sob\" },\n  ],\n];\n\nexport const EmojiCard = ({ sendReaction }) => {\n  return emojiReactionList.map((emojiLine, index) => (\n    <Flex key={index} justify=\"between\" css={{ mb: \"$8\" }}>\n      {emojiLine.map((emoji) => (\n        <EmojiContainer\n          key={emoji.emojiId}\n          onClick={() => sendReaction(emoji.emojiId)}\n        >\n          <em-emoji id={emoji.emojiId} size=\"100%\" set=\"apple\"></em-emoji>\n        </EmojiContainer>\n      ))}\n    </Flex>\n  ));\n};\n\nconst EmojiContainer = styled(\"span\", {\n  position: \"relative\",\n  cursor: \"pointer\",\n  width: \"$16\",\n  height: \"$16\",\n  p: \"$4\",\n  \"&:hover\": {\n    p: \"7px\",\n    bg: \"$surface_brighter\",\n    borderRadius: \"$1\",\n  },\n});\n", "import { useEffect } from \"react\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useDropdownList = ({\n  name,\n  open,\n}: {\n  name: string;\n  open: boolean;\n}) => {\n  const [dropdownList = [], setDropdownList] = useSetAppDataByKey(\n    APP_DATA.dropdownList\n  );\n\n  useEffect(() => {\n    if (open) {\n      if (!dropdownList.includes(name)) {\n        setDropdownList([...dropdownList, name]);\n      }\n    } else {\n      const index = dropdownList.indexOf(name);\n      if (index >= 0) {\n        const newDropdownList = [...dropdownList];\n        newDropdownList.splice(index, 1);\n        setDropdownList(newDropdownList);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, name]);\n};\n", "import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { HMSHLSPlayer } from \"@100mslive/hls-player\";\nimport { JoinForm_JoinBtnType } from \"@100mslive/types-prebuilt/elements/join_form\";\nimport {\n  HMSPeer,\n  HMSRecording,\n  parsedUserAgent,\n  selectAvailableRoleNames,\n  selectIsAllowedToPublish,\n  selectIsConnectedToRoom,\n  selectLocalPeerRole,\n  selectPeerCount,\n  selectPeerMetadata,\n  selectPeers,\n  selectPeersByRoles,\n  selectRecordingState,\n  selectRemotePeers,\n  selectRolesMap,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { config } from \"../../Theme\";\nimport { useRoomLayout } from \"../provider/roomLayoutProvider\";\n// @ts-ignore\nimport { useSetAppDataByKey } from \"../components/AppData/useUISettings\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit any\nimport { isScreenshareSupported } from \"../common/utils\";\nimport {\n  APP_DATA,\n  CHAT_SELECTOR,\n  RTMP_RECORD_DEFAULT_RESOLUTION,\n} from \"./constants\";\n/**\n * Hook to execute a callback when alone in room(after a certain 5d of time)\n * @param {number} thresholdMs The threshold(in ms) after which the callback is executed,\n * starting from the instant when alone in room.\n * note: the cb is not called when another peer joins during this period.\n */\nexport const useWhenAloneInRoom = (thresholdMs = 5 * 60 * 1000) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const peerCount = useHMSStore(selectPeerCount);\n  const [aloneForLong, setAloneForLong] = useState(false);\n  const cbTimeout = useRef(null);\n  const alone = isConnected && peerCount === 1;\n\n  useEffect(() => {\n    if (alone && !cbTimeout.current) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      cbTimeout.current = setTimeout(() => {\n        setAloneForLong(true);\n      }, thresholdMs);\n    } else if (!alone) {\n      cbTimeout.current && clearTimeout(cbTimeout.current);\n      cbTimeout.current = null;\n      setAloneForLong(false);\n    }\n  }, [alone, thresholdMs]);\n\n  useEffect(() => {\n    return () => {\n      if (cbTimeout.current) {\n        clearTimeout(cbTimeout.current);\n      }\n    };\n  }, []);\n\n  return { alone, aloneForLong };\n};\n\nexport const useFilteredRoles = () => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  return elements?.chat?.roles_whitelist || [];\n};\n\nexport const useDefaultChatSelection = () => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const roles = useFilteredRoles();\n  // default is everyone for public chat\n  if (elements?.chat?.public_chat_enabled) {\n    return CHAT_SELECTOR.EVERYONE;\n  }\n  // sending first role as default\n  if (roles.length > 0) {\n    return roles[0];\n  }\n  // sending empty\n  return \"\";\n};\n\nexport const useShowStreamingUI = () => {\n  const layout = useRoomLayout();\n  const { join_form } = layout?.screens?.preview?.default?.elements || {};\n  return (\n    join_form?.join_btn_type ===\n    JoinForm_JoinBtnType.JOIN_BTN_TYPE_JOIN_AND_GO_LIVE\n  );\n};\n\n// The search results should not have role name matches\nexport const useParticipants = (params?: {\n  metadata?: { isHandRaised?: boolean };\n  role?: string;\n  search?: string;\n}) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const peerCount = useHMSStore(selectPeerCount);\n  const availableRoles = useHMSStore(selectAvailableRoleNames);\n  let participantList = useHMSStore(\n    isConnected ? selectPeers : selectRemotePeers\n  );\n  const rolesWithParticipants = Array.from(\n    new Set(participantList.map((peer) => peer.roleName))\n  );\n  const vanillaStore = useHMSVanillaStore();\n  if (params?.metadata?.isHandRaised) {\n    participantList = participantList.filter((peer) => {\n      return vanillaStore.getState(selectPeerMetadata(peer.id)).isHandRaised;\n    });\n  }\n  if (params?.role && availableRoles.includes(params.role)) {\n    participantList = participantList.filter(\n      (peer) => peer.roleName === params.role\n    );\n  }\n  if (params?.search) {\n    const search = params.search;\n    // Removed peer.roleName?.toLowerCase().includes(search)\n    participantList = participantList.filter((peer) =>\n      peer.name.toLowerCase().includes(search)\n    );\n  }\n  return {\n    participants: participantList,\n    isConnected,\n    peerCount,\n    rolesWithParticipants,\n  };\n};\n\nexport const useIsLandscape = () => {\n  const isMobile = parsedUserAgent.getDevice().type === \"mobile\";\n  const isLandscape = useMedia(config.media.ls);\n  return isMobile && isLandscape;\n};\n\nexport const useLandscapeHLSStream = () => {\n  const isLandscape = useIsLandscape();\n  const { screenType } = useRoomLayoutConferencingScreen();\n  return isLandscape && screenType === \"hls_live_streaming\";\n};\n\nexport const useMobileHLSStream = () => {\n  const isMobile = useMedia(config.media.md);\n  const { screenType } = useRoomLayoutConferencingScreen();\n  return isMobile && screenType === \"hls_live_streaming\";\n};\n\nexport const useKeyboardHandler = (\n  isPaused: boolean,\n  hlsPlayer: HMSHLSPlayer\n) => {\n  const handleKeyEvent = useCallback(\n    async (event: KeyboardEvent) => {\n      switch (event.key) {\n        case \" \":\n          if (isPaused) {\n            await hlsPlayer?.play();\n          } else {\n            hlsPlayer?.pause();\n          }\n          break;\n        case \"ArrowRight\":\n          hlsPlayer?.seekTo(hlsPlayer?.getVideoElement().currentTime + 10);\n          break;\n        case \"ArrowLeft\":\n          hlsPlayer?.seekTo(hlsPlayer?.getVideoElement().currentTime - 10);\n          break;\n      }\n    },\n    [hlsPlayer, isPaused]\n  );\n\n  return handleKeyEvent;\n};\nexport interface RTMPRecordingResolution {\n  width: number;\n  height: number;\n}\nexport const useRecordingHandler = () => {\n  const hmsActions = useHMSActions();\n  const recordingState: HMSRecording = useHMSStore(selectRecordingState);\n  const [isRecordingLoading, setIsRecordingLoading] = useState(false);\n  const [recordingStarted, setRecordingState] = useSetAppDataByKey(\n    APP_DATA.recordingStarted\n  );\n  useEffect(() => {\n    if (recordingState.browser.error && recordingStarted) {\n      setRecordingState(false);\n    }\n  }, [recordingStarted, recordingState.browser.error, setRecordingState]);\n  const startRecording = useCallback(\n    async (resolution: RTMPRecordingResolution | null = null) => {\n      try {\n        setRecordingState(true);\n        setIsRecordingLoading(true);\n        await hmsActions.startRTMPOrRecording({\n          resolution: getResolution(resolution),\n          record: true,\n        });\n      } catch (error) {\n        const err = error as Error;\n        if (err.message.includes(\"stream already running\")) {\n          ToastManager.addToast({\n            title: \"Recording already running\",\n            variant: \"error\",\n          });\n        } else {\n          ToastManager.addToast({\n            title: err.message,\n            variant: \"error\",\n          });\n        }\n        setRecordingState(false);\n      }\n      setIsRecordingLoading(false);\n    },\n    [hmsActions, setRecordingState]\n  );\n  return {\n    recordingStarted,\n    startRecording,\n    isRecordingLoading,\n  };\n};\n\nexport function getResolution(\n  recordingResolution: RTMPRecordingResolution | null\n): RTMPRecordingResolution | undefined {\n  if (!recordingResolution) {\n    return undefined;\n  }\n  const resolution: RTMPRecordingResolution = RTMP_RECORD_DEFAULT_RESOLUTION;\n  if (recordingResolution.width) {\n    resolution.width = recordingResolution.width;\n  }\n  if (recordingResolution.height) {\n    resolution.height = recordingResolution.height;\n  }\n  return resolution;\n}\n\nexport interface WaitingRoomInfo {\n  isNotAllowedToPublish: boolean;\n  isScreenOnlyPublishParams: boolean;\n  hasSubscribedRolePublishing: boolean;\n}\nexport function useWaitingRoomInfo(): WaitingRoomInfo {\n  const localPeerRole = useHMSStore(selectLocalPeerRole);\n  const { video, audio, screen } = useHMSStore(selectIsAllowedToPublish);\n  const isScreenShareAllowed = isScreenshareSupported();\n  const roles = useHMSStore(selectRolesMap);\n  const peersByRoles = useHMSStore(\n    selectPeersByRoles(localPeerRole?.subscribeParams.subscribeToRoles || [])\n  );\n  // show no publish as screenshare in mweb is not possible\n  const isNotAllowedToPublish = !(\n    video ||\n    audio ||\n    (screen && isScreenShareAllowed)\n  );\n  const isScreenOnlyPublishParams: boolean = screen && !(video || audio);\n  const hasSubscribedRolePublishing: boolean = useMemo(() => {\n    return peersByRoles.some((peer: HMSPeer) => {\n      if (peer.roleName && roles[peer.roleName] && !peer.isLocal) {\n        return !!roles[peer.roleName].publishParams?.allowed.length;\n      }\n      return false;\n    });\n  }, [peersByRoles, roles]);\n\n  return {\n    isNotAllowedToPublish,\n    isScreenOnlyPublishParams,\n    hasSubscribedRolePublishing,\n  };\n}\n", "import React from \"react\";\nimport {\n  selectLocalPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\n\nconst Int2EnButton = () => {\n  const hmsActions = useHMSActions();\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const changeRole = () => {\n    hmsActions.changeRoleOfPeer(localPeerId, \"interpreter-en\", true);\n  };\n\n  return (\n    <Tooltip key=\"int2en\" title=\"Interpreting to English\">\n      <IconButton onClick={changeRole}>\n        <div className=\"text-xs text-slate-200 rounded-lg\">EN</div>\n      </IconButton>\n    </Tooltip>\n  );\n};\nexport default Int2EnButton;\n", "import React from \"react\";\nimport {\n  selectLocalPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\n\nconst Int2FrButton = () => {\n  const hmsActions = useHMSActions();\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const changeRole = () => {\n    hmsActions.changeRoleOfPeer(localPeerId, \"interpreter-fr\", true);\n  };\n\n  return (\n    <Tooltip key=\"int2fr\" title=\"Interpr\u00E9tation vers le fran\u00E7ais\">\n      <IconButton onClick={changeRole} className=\"w-auto\">\n        <div className=\"text-xs text-slate-200 rounded-lg\">FR</div>\n      </IconButton>\n    </Tooltip>\n  );\n};\nexport default Int2FrButton;\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { ConferencingScreen } from \"@100mslive/types-prebuilt\";\nimport {\n  HMSPeer,\n  HMSRole,\n  selectHLSState,\n  selectIsConnectedToRoom,\n  selectPeersByCondition,\n  selectPermissions,\n  selectRolesMap,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { DesktopLeaveRoom } from \"./DesktopLeaveRoom\";\nimport { MwebLeaveRoom } from \"./MwebLeaveRoom\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\n\nexport const LeaveRoom = ({\n  screenType,\n  container,\n}: {\n  screenType: keyof ConferencingScreen;\n  container?: HTMLElement;\n}) => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const permissions = useHMSStore(selectPermissions);\n  const isMobile = useMedia(cssConfig.media.md);\n  const rolesMap: Record<string, HMSRole> = useHMSStore(selectRolesMap);\n  const streamingPermissionRoles = Object.keys(rolesMap).filter((roleName) => {\n    const roleObj = rolesMap[roleName];\n    return roleObj.permissions.hlsStreaming;\n  });\n  const peersWithStreamingRights = useHMSStore(\n    selectPeersByCondition((peer: HMSPeer) =>\n      streamingPermissionRoles.includes(peer.roleName || \"\")\n    )\n  );\n  const hlsState = useHMSStore(selectHLSState);\n  const hmsActions = useHMSActions();\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  const stopStream = async () => {\n    try {\n      if (permissions?.hlsStreaming) {\n        console.log(\"Stopping HLS stream\");\n        await hmsActions.stopHLSStreaming();\n        ToastManager.addToast({ title: \"Stopping the stream\" });\n      }\n    } catch (e) {\n      console.error(\"Error stopping stream\", e);\n      ToastManager.addToast({\n        title: \"Error in stopping the stream\",\n        type: \"error\",\n      });\n    }\n  };\n\n  const endRoom = async () => {\n    await hmsActions.endRoom(false, \"End Room\");\n  };\n\n  const leaveRoom = async (\n    options: { endStream?: boolean } = { endStream: false }\n  ) => {\n    if (\n      options.endStream ||\n      (hlsState.running && peersWithStreamingRights.length === 1)\n    ) {\n      await stopStream();\n    }\n    await hmsActions.leave();\n  };\n\n  if (!permissions || !isConnected) {\n    return null;\n  }\n  if (isMobileHLSStream || isLandscapeHLSStream) {\n    return (\n      <MwebLeaveRoom\n        leaveRoom={leaveRoom}\n        endRoom={endRoom}\n        container={container}\n      />\n    );\n  }\n  return isMobile ? (\n    <MwebLeaveRoom\n      leaveRoom={leaveRoom}\n      endRoom={endRoom}\n      container={container}\n    />\n  ) : (\n    <DesktopLeaveRoom\n      leaveRoom={leaveRoom}\n      screenType={screenType}\n      endRoom={endRoom}\n      container={container}\n    />\n  );\n};\n", "import React, { Fragment, useState } from \"react\";\nimport { ConferencingScreen } from \"@100mslive/types-prebuilt\";\nimport {\n  selectIsConnectedToRoom,\n  selectPermissions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { ExitIcon, StopIcon, VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport { EndSessionContent } from \"./EndSessionContent\";\nimport { LeaveIconButton, MenuTriggerButton } from \"./LeaveAtoms\";\nimport { LeaveCard } from \"./LeaveCard\";\nimport { LeaveSessionContent } from \"./LeaveSessionContent\";\n// @ts-ignore: No implicit Any\nimport { useDropdownList } from \"../hooks/useDropdownList\";\n\nexport const DesktopLeaveRoom = ({\n  leaveRoom,\n  screenType,\n  endRoom,\n  container,\n}: {\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  screenType: keyof ConferencingScreen;\n  endRoom: () => Promise<void>;\n  container?: HTMLElement;\n}) => {\n  const [open, setOpen] = useState(false);\n  const [showLeaveRoomAlert, setShowLeaveRoomAlert] = useState(false);\n  const [showEndStreamAlert, setShowEndStreamAlert] = useState(false);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const permissions = useHMSStore(selectPermissions);\n  const { isStreamingOn } = useRecordingStreaming();\n  const showStream =\n    screenType !== \"hls_live_streaming\" &&\n    isStreamingOn &&\n    permissions?.hlsStreaming;\n  const showLeaveOptions =\n    (permissions?.hlsStreaming && isStreamingOn) || permissions?.endRoom;\n\n  useDropdownList({\n    open: open || showEndStreamAlert || showLeaveRoomAlert,\n    name: \"LeaveRoom\",\n  });\n\n  if (!permissions || !isConnected) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {showLeaveOptions ? (\n        <Flex>\n          <LeaveIconButton\n            key=\"LeaveRoom\"\n            data-testid=\"leave_room_btn\"\n            css={{\n              borderTopRightRadius: 0,\n              borderBottomRightRadius: 0,\n            }}\n            onClick={() => setShowLeaveRoomAlert(true)}\n          >\n            <Tooltip title=\"Leave Room\">\n              <Box>\n                <ExitIcon style={{ transform: \"rotate(180deg)\" }} />\n              </Box>\n            </Tooltip>\n          </LeaveIconButton>\n          <Dropdown.Root open={open} onOpenChange={setOpen} modal={false}>\n            <Dropdown.Trigger\n              asChild\n              css={{\n                '&[data-state=\"open\"]': {\n                  bg: \"$alert_error_dim\",\n                },\n              }}\n            >\n              <MenuTriggerButton data-testid=\"leave_end_dropdown_trigger\">\n                <VerticalMenuIcon />\n              </MenuTriggerButton>\n            </Dropdown.Trigger>\n            <Dropdown.Portal container={container}>\n              <Dropdown.Content\n                css={{ p: 0, w: \"$100\" }}\n                alignOffset={-50}\n                sideOffset={10}\n              >\n                <Dropdown.Item\n                  css={{\n                    bg: \"$surface_dim\",\n                    color: \"$on_surface_medium\",\n                    \"&:hover\": {\n                      bg: \"$surface_default\",\n                      color: \"$on_surface_high\",\n                    },\n                    p: \"0\",\n                  }}\n                  data-testid=\"just_leave_btn\"\n                >\n                  <LeaveCard\n                    title={showStream ? \"Leave Stream\" : \"Leave Session\"}\n                    subtitle={`Others will continue after you leave. You can join the ${\n                      showStream ? \"stream\" : \"session\"\n                    } again.`}\n                    bg=\"\"\n                    titleColor=\"$on_surface_high\"\n                    icon={\n                      <ExitIcon\n                        height={24}\n                        width={24}\n                        style={{ transform: \"rotate(180deg)\" }}\n                      />\n                    }\n                    onClick={async () => await leaveRoom()}\n                    css={{ p: \"$8 $4\" }}\n                  />\n                </Dropdown.Item>\n\n                <Dropdown.Item\n                  css={{\n                    bg: \"$alert_error_dim\",\n                    color: \"$alert_error_bright\",\n                    \"&:hover\": {\n                      bg: \"$alert_error_dim\",\n                      color: \"$alert_error_brighter\",\n                    },\n                    p: \"0\",\n                  }}\n                  data-testid=\"end_room_btn\"\n                >\n                  <LeaveCard\n                    title={showStream ? \"End Stream\" : \"End Session\"}\n                    subtitle={`The ${\n                      showStream ? \"stream\" : \"session\"\n                    } will end for everyone. You can't undo this action.`}\n                    bg=\"\"\n                    titleColor=\"$alert_error_brighter\"\n                    icon={<StopIcon height={24} width={24} />}\n                    onClick={() => {\n                      setOpen(false);\n                      setShowEndStreamAlert(true);\n                    }}\n                    css={{ p: \"$8 $4\" }}\n                  />\n                </Dropdown.Item>\n              </Dropdown.Content>\n            </Dropdown.Portal>\n          </Dropdown.Root>\n        </Flex>\n      ) : (\n        <LeaveIconButton\n          onClick={() => {\n            setShowLeaveRoomAlert(true);\n          }}\n          key=\"LeaveRoom\"\n          data-testid=\"leave_room_btn\"\n        >\n          <Tooltip title=\"Leave Room\">\n            <Box>\n              <ExitIcon style={{ transform: \"rotate(180deg)\" }} />\n            </Box>\n          </Tooltip>\n        </LeaveIconButton>\n      )}\n\n      <Dialog.Root open={showEndStreamAlert} modal={false}>\n        <Dialog.Portal>\n          <Dialog.Overlay />\n          <Dialog.Content\n            css={{ w: \"min(420px, 90%)\", p: \"$8\", bg: \"$surface_dim\" }}\n          >\n            <EndSessionContent\n              setShowEndStreamAlert={setShowEndStreamAlert}\n              leaveRoom={\n                isStreamingOn ? () => leaveRoom({ endStream: true }) : endRoom\n              }\n              isStreamingOn={isStreamingOn}\n              isModal\n            />\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n\n      <Dialog.Root open={showLeaveRoomAlert} modal={false}>\n        <Dialog.Portal>\n          <Dialog.Overlay />\n          <Dialog.Content\n            css={{ w: \"min(420px, 90%)\", p: \"$8\", bg: \"$surface_dim\" }}\n          >\n            <LeaveSessionContent\n              setShowLeaveRoomAlert={setShowLeaveRoomAlert}\n              leaveRoom={leaveRoom}\n              isModal\n            />\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    </Fragment>\n  );\n};\n", "import React from \"react\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const EndSessionContent = ({\n  setShowEndStreamAlert,\n  leaveRoom,\n  isModal = false,\n  isStreamingOn = false,\n}: {\n  setShowEndStreamAlert: (value: boolean) => void;\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  isModal?: boolean;\n  isStreamingOn: boolean;\n}) => {\n  return (\n    <Box>\n      <Flex\n        css={{\n          color: \"$alert_error_default\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />\n        <Text variant=\"lg\" css={{ color: \"inherit\", fontWeight: \"$semiBold\" }}>\n          End {isStreamingOn ? \"Stream\" : \"Session\"}\n        </Text>\n        {isModal ? null : (\n          <Box\n            css={{ color: \"$on_surface_high\", ml: \"auto\" }}\n            onClick={() => setShowEndStreamAlert(false)}\n          >\n            <CrossIcon />\n          </Box>\n        )}\n      </Flex>\n      <Text\n        variant=\"sm\"\n        css={{ color: \"$on_surface_medium\", mb: \"$8\", mt: \"$4\" }}\n      >\n        The {isStreamingOn ? \"stream\" : \"session\"} will end for everyone. You\n        can't undo this action.\n      </Text>\n      <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\", gap: \"$8\" }}>\n        <Button\n          outlined\n          variant=\"standard\"\n          css={{ w: \"100%\", \"@md\": { display: \"none\" } }}\n          onClick={() => setShowEndStreamAlert(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"danger\"\n          css={{ w: \"100%\" }}\n          onClick={async () => {\n            await leaveRoom({ endStream: true });\n            setShowEndStreamAlert(false);\n          }}\n          id=\"stopStream\"\n          data-testid=\"stop_stream_btn\"\n        >\n          End {isStreamingOn ? \"Stream\" : \"Session\"}\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n", "import { IconButton } from \"../../../IconButton\";\nimport { styled } from \"../../../Theme\";\n\nexport const LeaveIconButton = styled(IconButton, {\n  color: \"$on_primary_high\",\n  h: \"$14\",\n  px: \"$4\",\n  r: \"$1\",\n  bg: \"$alert_error_default\",\n  \"&:not([disabled]):hover\": {\n    bg: \"$alert_error_bright\",\n  },\n  \"&:not([disabled]):active\": {\n    bg: \"$alert_error_default\",\n  },\n  \"@md\": {\n    mx: 0,\n  },\n});\n\nexport const MenuTriggerButton = styled(LeaveIconButton, {\n  borderLeft: \"1px solid $alert_error_dim\",\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  px: \"$2\",\n});\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { CSS } from \"../../../Theme\";\n\nexport const LeaveCard = ({\n  icon,\n  title,\n  subtitle,\n  onClick,\n  bg,\n  titleColor,\n  css = {},\n}: {\n  icon: React.JSX.Element;\n  title: string;\n  subtitle: string;\n  onClick: () => void;\n  titleColor: string;\n  bg: string;\n  css?: CSS;\n}) => {\n  return (\n    <Flex\n      css={{ p: \"$10\", flexGrow: 1, gap: \"$8\", bg, ...css }}\n      onClick={onClick}\n    >\n      <Box css={{ color: titleColor }}>{icon}</Box>\n      <Box css={{ gap: \"$2\" }}>\n        <Text variant=\"lg\" css={{ color: titleColor }}>\n          {title}\n        </Text>\n        <Text variant=\"sm\" css={{ c: \"inherit\" }}>\n          {subtitle}\n        </Text>\n      </Box>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const LeaveSessionContent = ({\n  setShowLeaveRoomAlert,\n  leaveRoom,\n  isModal = false,\n}: {\n  setShowLeaveRoomAlert: (value: boolean) => void;\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  isModal?: boolean;\n}) => {\n  return (\n    <Box>\n      <Flex\n        css={{\n          color: \"$alert_error_default\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />\n        <Text variant=\"lg\" css={{ color: \"inherit\", fontWeight: \"$semiBold\" }}>\n          Leave\n        </Text>\n        {isModal ? null : (\n          <Box\n            css={{ color: \"$on_surface_high\", ml: \"auto\" }}\n            onClick={() => setShowLeaveRoomAlert(false)}\n          >\n            <CrossIcon />\n          </Box>\n        )}\n      </Flex>\n      <Text variant=\"sm\" css={{ color: \"$on_surface_low\", mb: \"$8\", mt: \"$4\" }}>\n        Others will continue after you leave. You can join the session again.\n      </Text>\n      <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\", gap: \"$8\" }}>\n        <Button\n          outlined\n          variant=\"standard\"\n          css={{ w: \"100%\", \"@md\": { display: \"none\" } }}\n          onClick={() => setShowLeaveRoomAlert(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"danger\"\n          css={{ w: \"100%\" }}\n          onClick={async () => {\n            await leaveRoom();\n          }}\n          id=\"leaveRoom\"\n          data-testid=\"leave_room\"\n        >\n          Leave Session\n        </Button>\n      </Flex>\n    </Box>\n  );\n};\n", "import React, { Fragment, useState } from \"react\";\n// @ts-ignore: No implicit Any\nimport {\n  selectIsConnectedToRoom,\n  selectPermissions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { CrossIcon, ExitIcon, StopIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Box } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport { EndSessionContent } from \"./EndSessionContent\";\nimport { LeaveIconButton } from \"./LeaveAtoms\";\nimport { LeaveCard } from \"./LeaveCard\";\nimport { LeaveSessionContent } from \"./LeaveSessionContent\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useDropdownList } from \"../hooks/useDropdownList\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\n\nexport const MwebLeaveRoom = ({\n  leaveRoom,\n  endRoom,\n  container,\n}: {\n  leaveRoom: (options?: { endStream?: boolean }) => Promise<void>;\n  endRoom: () => Promise<void>;\n  container?: HTMLElement;\n}) => {\n  const [open, setOpen] = useState(false);\n  const { screenType } = useRoomLayoutConferencingScreen();\n  const [showLeaveRoomAlert, setShowLeaveRoomAlert] = useState(false);\n  const [showEndStreamAlert, setShowEndStreamAlert] = useState(false);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const permissions = useHMSStore(selectPermissions);\n  const { isStreamingOn } = useRecordingStreaming();\n  const showStream =\n    screenType !== \"hls_live_streaming\" &&\n    isStreamingOn &&\n    permissions?.hlsStreaming;\n  const showLeaveOptions =\n    (permissions?.hlsStreaming && isStreamingOn) || permissions?.endRoom;\n\n  useDropdownList({ open, name: \"LeaveRoom\" });\n\n  if (!permissions || !isConnected) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {showLeaveOptions ? (\n        <Sheet.Root open={open} onOpenChange={setOpen}>\n          <Sheet.Trigger asChild>\n            <LeaveButton\n              onClick={() => {\n                setOpen((open) => !open);\n              }}\n            />\n          </Sheet.Trigger>\n          <Sheet.Content container={container}>\n            <LeaveCard\n              title={showStream ? \"Leave Stream\" : \"Leave Session\"}\n              subtitle={`Others will continue after you leave. You can join the ${\n                showStream ? \"stream\" : \"session\"\n              } again.`}\n              bg=\"$surface_default\"\n              titleColor=\"$on_surface_high\"\n              icon={\n                <ExitIcon\n                  height={24}\n                  width={24}\n                  style={{ transform: \"rotate(180deg)\" }}\n                />\n              }\n              onClick={async () => await leaveRoom()}\n              css={{\n                pt: 0,\n                mt: \"$10\",\n                color: \"$on_surface_low\",\n                \"&:hover\": { color: \"$on_surface_high\" },\n              }}\n            />\n\n            <LeaveCard\n              title={showStream ? \"End Stream\" : \"End Session\"}\n              subtitle={`The will end the ${\n                showStream ? \"stream\" : \"session\"\n              } for everyone. You can't undo this action.`}\n              bg=\"$alert_error_dim\"\n              titleColor=\"$alert_error_brighter\"\n              css={{\n                color: \"$alert_error_bright\",\n                \"&:hover\": { color: \"$alert_error_brighter\" },\n              }}\n              icon={<StopIcon height={24} width={24} />}\n              onClick={() => {\n                setOpen(false);\n                setShowEndStreamAlert(true);\n              }}\n            />\n          </Sheet.Content>\n        </Sheet.Root>\n      ) : (\n        <LeaveButton onClick={() => setShowLeaveRoomAlert(true)} />\n      )}\n      <Sheet.Root\n        open={showEndStreamAlert}\n        onOpenChange={setShowEndStreamAlert}\n      >\n        <Sheet.Content\n          css={{ bg: \"$surface_dim\", p: \"$10\", pb: \"$12\" }}\n          container={container}\n        >\n          <EndSessionContent\n            setShowEndStreamAlert={setShowEndStreamAlert}\n            leaveRoom={isStreamingOn ? leaveRoom : endRoom}\n            isStreamingOn={isStreamingOn}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n\n      <Sheet.Root\n        open={showLeaveRoomAlert}\n        onOpenChange={setShowLeaveRoomAlert}\n      >\n        <Sheet.Content\n          css={{ bg: \"$surface_dim\", p: \"$10\", pb: \"$12\" }}\n          container={container}\n        >\n          <LeaveSessionContent\n            setShowLeaveRoomAlert={setShowLeaveRoomAlert}\n            leaveRoom={leaveRoom}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n    </Fragment>\n  );\n};\n\nconst LeaveButton = ({ onClick }: { onClick: () => void }) => {\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  return isMobileHLSStream || isLandscapeHLSStream ? (\n    <IconButton key=\"LeaveRoom\" data-testid=\"leave_room_btn\" onClick={onClick}>\n      <Tooltip title=\"Leave Room\">\n        <Box>\n          <CrossIcon />\n        </Box>\n      </Tooltip>\n    </IconButton>\n  ) : (\n    <LeaveIconButton\n      key=\"LeaveRoom\"\n      data-testid=\"leave_room_btn\"\n      css={{\n        borderTopRightRadius: \"$1\",\n        borderBottomRightRadius: \"$1\",\n      }}\n      onClick={onClick}\n    >\n      <Tooltip title=\"Leave Room\">\n        <Box>\n          <ExitIcon style={{ transform: \"rotate(180deg)\" }} />\n        </Box>\n      </Tooltip>\n    </LeaveIconButton>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\n// @ts-ignore: No implicit Any\nimport { DesktopOptions } from \"./SplitComponents/DesktopOptions\";\n// @ts-ignore: No implicit Any\nimport { MwebOptions } from \"./SplitComponents/MwebOptions\";\nimport { config as cssConfig } from \"../../..\";\nimport { useLandscapeHLSStream } from \"../../common/hooks\";\n\nexport const MoreSettings = ({\n  elements,\n  screenType,\n}: {\n  elements:\n    | DefaultConferencingScreen_Elements\n    | HLSLiveStreamingScreen_Elements;\n  screenType: keyof ConferencingScreen;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  return isMobile || isLandscapeHLSStream ? (\n    <MwebOptions elements={elements} screenType={screenType} />\n  ) : (\n    <DesktopOptions elements={elements} screenType={screenType} />\n  );\n};\n", "import React, { Fragment, useState } from \"react\";\nimport { HMSHLSPlayer } from \"@100mslive/hls-player\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSTranscriptionMode,\n  selectAppData,\n  selectIsTranscriptionAllowedByMode,\n  selectIsTranscriptionEnabled,\n  selectLocalPeerID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BrbIcon,\n  CheckIcon,\n  HamburgerMenuIcon,\n  InfoIcon,\n  OpenCaptionIcon,\n  PipIcon,\n  SettingsIcon,\n} from \"@100mslive/react-icons\";\nimport { Checkbox, Dropdown, Flex, Switch, Text, Tooltip } from \"../../../..\";\nimport IconButton from \"../../../IconButton\";\n// @ts-ignore: No implicit any\nimport { PIP } from \"../../PIP\";\nimport { PIPChat } from \"../../PIP/PIPChat\";\n// @ts-ignore: No implicit any\nimport { PIPChatOption } from \"../../PIP/PIPChatOption\";\nimport { PictureInPicture } from \"../../PIP/PIPManager\";\nimport { PIPWindow } from \"../../PIP/PIPWindow\";\n// @ts-ignore: No implicit any\nimport { RoleChangeModal } from \"../../RoleChangeModal\";\n// @ts-ignore: No implicit any\nimport SettingsModal from \"../../Settings/SettingsModal\";\n// @ts-ignore: No implicit any\nimport StartRecording from \"../../Settings/StartRecording\";\n// @ts-ignore: No implicit any\nimport { StatsForNerds } from \"../../StatsForNerds\";\n// @ts-ignore: No implicit any\nimport { BulkRoleChangeModal } from \"../BulkRoleChangeModal\";\nimport { CaptionModal } from \"../CaptionModal\";\n// @ts-ignore: No implicit any\nimport { FullScreenItem } from \"../FullScreenItem\";\nimport { MuteAllModal } from \"../MuteAllModal\";\n// @ts-ignore: No implicit any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../../AppData/useSidepane\";\n// @ts-ignore: No implicit any\nimport { useDropdownList } from \"../../hooks/useDropdownList\";\nimport { useMyMetadata } from \"../../hooks/useMetadata\";\n// @ts-ignore: No implicit any\nimport { usePIPChat } from \"../../PIP/usePIPChat\";\n// @ts-ignore: No implicit any\nimport {\n  APP_DATA,\n  isMacOS,\n  SIDE_PANE_OPTIONS,\n} from \"../../../common/constants\";\n\nconst MODALS = {\n  CHANGE_NAME: \"changeName\",\n  SELF_ROLE_CHANGE: \"selfRoleChange\",\n  MORE_SETTINGS: \"moreSettings\",\n  START_RECORDING: \"startRecording\",\n  DEVICE_SETTINGS: \"deviceSettings\",\n  STATS_FOR_NERDS: \"statsForNerds\",\n  BULK_ROLE_CHANGE: \"bulkRoleChange\",\n  MUTE_ALL: \"muteAll\",\n  EMBED_URL: \"embedUrl\",\n  CAPTION: \"caption\",\n};\n\nexport const DesktopOptions = ({\n  elements,\n  screenType,\n}: {\n  elements: DefaultConferencingScreen_Elements &\n    HLSLiveStreamingScreen_Elements;\n  screenType: keyof ConferencingScreen;\n}) => {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const hmsActions = useHMSActions();\n  const enablHlsStats = useHMSStore(selectAppData(APP_DATA.hlsStats));\n  const [openModals, setOpenModals] = useState(new Set());\n  const { isBRBOn, toggleBRB } = useMyMetadata();\n  const isPipOn = PictureInPicture.isOn();\n  const isBRBEnabled = !!elements?.brb;\n  const isTranscriptionAllowed = useHMSStore(\n    selectIsTranscriptionAllowedByMode(HMSTranscriptionMode.CAPTION)\n  );\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n  const { isSupported, pipWindow, requestPipWindow } = usePIPChat();\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  // Hide if pip chat is already open\n  const showPipChatOption = !!elements?.chat && isSupported && !pipWindow;\n\n  useDropdownList({ open: openModals.size > 0, name: \"MoreSettings\" });\n\n  const updateState = (modalName: string, value: boolean) => {\n    setOpenModals((modals) => {\n      const copy = new Set(modals);\n      if (value) {\n        // avoiding extra set state trigger which removes currently open dialog by clearing set.\n        copy.clear();\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n\n  return (\n    <Fragment>\n      {isSupported && pipWindow ? (\n        <PIPWindow pipWindow={pipWindow}>\n          <PIPChat />\n        </PIPWindow>\n      ) : null}\n      <Dropdown.Root\n        open={openModals.has(MODALS.MORE_SETTINGS)}\n        onOpenChange={(value) => updateState(MODALS.MORE_SETTINGS, value)}\n        modal={false}\n      >\n        <Tooltip title=\"More options\">\n          <Dropdown.Trigger asChild data-testid=\"more_settings_btn\">\n            <IconButton>\n              <HamburgerMenuIcon />\n            </IconButton>\n          </Dropdown.Trigger>\n        </Tooltip>\n\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"end\"\n          css={{\n            py: \"$0\",\n            maxHeight: \"unset\",\n            \"@md\": { w: \"$64\" },\n            \"div[role='separator']:first-child\": {\n              display: \"none\",\n            },\n          }}\n        >\n          {isBRBEnabled && screenType !== \"hls_live_streaming\" ? (\n            <Dropdown.Item onClick={toggleBRB} data-testid=\"brb_btn\">\n              <BrbIcon />\n              <Text variant=\"sm\" css={{ ml: \"$4\", color: \"$on_surface_high\" }}>\n                Be Right Back\n              </Text>\n              <Flex\n                justify=\"end\"\n                css={{ color: \"$on_surface_high\", flexGrow: \"1\" }}\n              >\n                {isBRBOn ? <CheckIcon /> : null}\n              </Flex>\n            </Dropdown.Item>\n          ) : null}\n          {isTranscriptionAllowed ? (\n            <Dropdown.Item\n              data-testid=\"closed_caption_admin\"\n              onClick={() => {\n                updateState(MODALS.CAPTION, true);\n              }}\n            >\n              <OpenCaptionIcon />\n              <Flex direction=\"column\" css={{ flexGrow: \"1\" }}>\n                <Text\n                  variant=\"sm\"\n                  css={{ ml: \"$4\", color: \"$on_surface_high\" }}\n                >\n                  Closed Captions\n                </Text>\n                <Text\n                  variant=\"caption\"\n                  css={{ ml: \"$4\", color: \"$on_surface_medium\" }}\n                >\n                  {isTranscriptionEnabled ? \"Enabled\" : \"Disabled\"}\n                </Text>\n              </Flex>\n              <Switch\n                id=\"closed_caption_start_stop\"\n                checked={isTranscriptionEnabled}\n                disabled={false}\n              />\n            </Dropdown.Item>\n          ) : null}\n          {screenType !== \"hls_live_streaming\" ? (\n            <Dropdown.Item css={{ p: 0, \"&:empty\": { display: \"none\" } }}>\n              <PIP\n                content={\n                  <Flex css={{ w: \"100%\", h: \"100%\", p: \"$8\" }}>\n                    <PipIcon />\n                    <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                      {isPipOn ? \"Disable\" : \"Enable\"} Picture-in-Picture\n                    </Text>\n                  </Flex>\n                }\n              />\n            </Dropdown.Item>\n          ) : null}\n\n          <PIPChatOption\n            showPIPChat={showPipChatOption}\n            openChat={async () => {\n              isChatOpen && toggleChat();\n              await requestPipWindow(350, 500);\n            }}\n          />\n          <FullScreenItem />\n          <Dropdown.ItemSeparator css={{ mx: 0 }} />\n          <Dropdown.Item\n            onClick={() => updateState(MODALS.DEVICE_SETTINGS, true)}\n            data-testid=\"device_settings_btn\"\n          >\n            <SettingsIcon />\n            <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n              Settings\n            </Text>\n          </Dropdown.Item>\n          {match({ screenType, isSupported: HMSHLSPlayer.isSupported() })\n            .with(\n              { screenType: \"hls_live_streaming\", isSupported: false },\n              () => null\n            )\n            .with(\n              { screenType: \"hls_live_streaming\", isSupported: true },\n              () => {\n                return (\n                  <Dropdown.Item\n                    onClick={() =>\n                      hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                    }\n                    data-testid=\"hls_stats\"\n                  >\n                    <Checkbox.Root\n                      css={{ margin: \"$2\" }}\n                      checked={enablHlsStats}\n                      onCheckedChange={() =>\n                        hmsActions.setAppData(APP_DATA.hlsStats, !enablHlsStats)\n                      }\n                    >\n                      <Checkbox.Indicator>\n                        <CheckIcon width={16} height={16} />\n                      </Checkbox.Indicator>\n                    </Checkbox.Root>\n                    <Flex justify=\"between\" css={{ width: \"100%\" }}>\n                      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                        Show HLS Stats\n                      </Text>\n\n                      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                        {`${isMacOS ? \"\u2318\" : \"ctrl\"} + ]`}\n                      </Text>\n                    </Flex>\n                  </Dropdown.Item>\n                );\n              }\n            )\n            .otherwise(() => (\n              <Dropdown.Item\n                onClick={() => updateState(MODALS.STATS_FOR_NERDS, true)}\n                data-testid=\"stats_for_nerds_btn\"\n              >\n                <InfoIcon />\n                <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n                  Stats for Nerds\n                </Text>\n              </Dropdown.Item>\n            ))}\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {openModals.has(MODALS.BULK_ROLE_CHANGE) && (\n        <BulkRoleChangeModal\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.BULK_ROLE_CHANGE, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.MUTE_ALL) && (\n        <MuteAllModal\n          onOpenChange={(value: boolean) => updateState(MODALS.MUTE_ALL, value)}\n        />\n      )}\n\n      {openModals.has(MODALS.START_RECORDING) && (\n        <StartRecording\n          open\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.START_RECORDING, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.DEVICE_SETTINGS) && (\n        <SettingsModal\n          open\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.DEVICE_SETTINGS, value)\n          }\n          screenType={screenType}\n        />\n      )}\n      {openModals.has(MODALS.STATS_FOR_NERDS) && (\n        <StatsForNerds\n          open\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.STATS_FOR_NERDS, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.SELF_ROLE_CHANGE) && (\n        <RoleChangeModal\n          peerId={localPeerId}\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.SELF_ROLE_CHANGE, value)\n          }\n        />\n      )}\n      {openModals.has(MODALS.CAPTION) && (\n        <CaptionModal\n          onOpenChange={(value: boolean) => updateState(MODALS.CAPTION, value)}\n        />\n      )}\n      {/* {openModals.has(MODALS.EMBED_URL) && (\n        <EmbedUrlModal onOpenChange={value => updateState(MODALS.EMBED_URL, value)} />\n      )} */}\n    </Fragment>\n  );\n};\n", "import React from \"react\";\nimport PIPComponent from \"./PIPComponent\";\n\nexport const PIP = ({ content = null }) => {\n  return <PIPComponent content={content} />;\n};\n", "import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  selectPeers,\n  selectTracksMap,\n  useHMSActions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { PipIcon } from \"@100mslive/react-icons\";\nimport { Flex, Tooltip } from \"../../..\";\nimport IconButton from \"../../IconButton\";\nimport { PictureInPicture } from \"./PIPManager\";\n// @ts-ignore: No implicit Any\nimport { MediaSession } from \"./SetupMediaSession\";\n// @ts-ignore: No implicit Any\nimport { usePinnedTrack } from \"../AppData/useUISettings\";\n\n/**\n * shows a button which when clicked shows some videos in PIP, clicking\n * again turns it off.\n */\nconst PIPComponent = ({ content = null }) => {\n  const [isPipOn, setIsPipOn] = useState(PictureInPicture.isOn());\n  const hmsActions = useHMSActions();\n  const store = useHMSVanillaStore();\n\n  const onPipToggle = useCallback(() => {\n    if (!isPipOn) {\n      PictureInPicture.start(hmsActions, setIsPipOn).catch((err) =>\n        console.error(\"error in starting pip\", err)\n      );\n      MediaSession.setup(hmsActions, store);\n    } else {\n      PictureInPicture.stop().catch((err) =>\n        console.error(\"error in stopping pip\", err)\n      );\n    }\n  }, [hmsActions, isPipOn, store]);\n\n  if (!PictureInPicture.isSupported()) {\n    return null;\n  }\n  return (\n    <>\n      {content ? (\n        <Flex\n          css={{ w: \"100%\" }}\n          onClick={() => onPipToggle()}\n          data-testid=\"pip_btn\"\n        >\n          {content}\n        </Flex>\n      ) : (\n        <Tooltip\n          title={`${\n            isPipOn ? \"Deactivate\" : \"Activate\"\n          } picture in picture view`}\n        >\n          <IconButton\n            active={!isPipOn}\n            key=\"pip\"\n            onClick={() => onPipToggle()}\n            data-testid=\"pip_btn\"\n          >\n            <PipIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </>\n  );\n};\n\n/**\n * this is a separate component so it can be conditionally rendered and\n * the subscriptions to store are done only if required.\n */\nexport const ActivatedPIP = () => {\n  const store = useHMSVanillaStore();\n  const pinnedTrack = usePinnedTrack();\n\n  useEffect(() => {\n    function subscribeToStore() {\n      return store.subscribe((tracksMap) => {\n        let pipPeers = store.getState(selectPeers);\n        if (pinnedTrack) {\n          pipPeers = pipPeers.filter((peer) => pinnedTrack.peerId === peer.id);\n        }\n        PictureInPicture.updatePeersAndTracks(pipPeers, tracksMap).catch(\n          (err) => {\n            console.error(\"error in updating pip\", err);\n          }\n        );\n      }, selectTracksMap);\n    }\n    let unsubscribe: (() => void) | undefined = PictureInPicture.isOn()\n      ? subscribeToStore()\n      : undefined;\n    PictureInPicture.listenToStateChange((isOn) => {\n      if (isOn) {\n        if (!unsubscribe) {\n          unsubscribe = subscribeToStore();\n        }\n      } else {\n        unsubscribe?.();\n        unsubscribe = undefined;\n      }\n    });\n    return () => {\n      unsubscribe?.();\n      unsubscribe = undefined;\n    };\n  }, [pinnedTrack, store]);\n\n  return <></>;\n};\n\nexport default PIPComponent;\n", "import {\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n} from \"@100mslive/react-sdk\";\n\n/**\n * Media Session API allows for handling control actions on top of pip\n * https://web.dev/media-session/#video-conferencing-actions\n */\nclass SetupMediaSession {\n  setup = (actions, store) => {\n    this.actions = actions;\n    this.store = store;\n    this.initState();\n    this.setUpHandlers();\n  };\n\n  initState = () => {\n    const isMicActive = this.store.getState(selectIsLocalAudioEnabled);\n    const isCamActive = this.store.getState(selectIsLocalVideoEnabled);\n    navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    navigator.mediaSession?.setCameraActive?.(isCamActive);\n\n    this.store.subscribe((isMicActive) => {\n      navigator.mediaSession?.setMicrophoneActive?.(isMicActive);\n    }, selectIsLocalAudioEnabled);\n\n    this.store.subscribe((isCamActive) => {\n      navigator.mediaSession?.setCameraActive?.(isCamActive);\n    }, selectIsLocalVideoEnabled);\n  };\n\n  toggleMic = async () => {\n    console.log(\"toggle mic clicked in pip\");\n    const current = this.store.getState(selectIsLocalAudioEnabled);\n    await this.actions.setLocalAudioEnabled(!current);\n  };\n\n  toggleCam = async () => {\n    console.log(\"toggle cam clicked in pip\");\n    const current = this.store.getState(selectIsLocalVideoEnabled);\n    await this.actions.setLocalVideoEnabled(!current);\n  };\n\n  leave = () => {\n    console.log(\"leave called from pip\");\n    this.actions.leave();\n  };\n\n  setUpHandlers = () => {\n    if (navigator.mediaSession) {\n      try {\n        navigator.mediaSession.setActionHandler(\n          \"togglemicrophone\",\n          this.toggleMic\n        );\n        navigator.mediaSession.setActionHandler(\"togglecamera\", this.toggleCam);\n        navigator.mediaSession.setActionHandler(\"hangup\", this.leave);\n      } catch (err) {\n        console.error(\"error in setting media session handlers\", err);\n      }\n    }\n  };\n}\n\nexport const MediaSession = new SetupMediaSession();\n", "import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  selectHMSMessages,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  selectSessionStore,\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { SendIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { TextArea } from \"../../../TextArea\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\nimport { AnnotisedMessage } from \"../Chat/ChatBody\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { CHAT_MESSAGE_LIMIT, formatTime } from \"../Chat/utils\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const PIPChat = () => {\n  const messages = useHMSStore(selectHMSMessages);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const count = useHMSStore(selectUnreadHMSMessagesCount);\n  const [unreadMessageCount, setUnreadMessageCount] = useState(0);\n\n  const getSenderName = useCallback(\n    (senderName: string, senderID?: string) => {\n      const slicedName =\n        senderName.length > 10 ? senderName.slice(0, 10) + \"...\" : senderName;\n      return slicedName + (senderID === localPeerID ? \" (You)\" : \"\");\n    },\n    [localPeerID]\n  );\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setUnreadMessageCount(count);\n    }, 100);\n    return () => clearTimeout(timeoutId);\n  }, [count]);\n\n  const blacklistedMessageIDs = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST)\n  );\n  const filteredMessages = useMemo(() => {\n    const blacklistedMessageIDSet = new Set(blacklistedMessageIDs || []);\n    return (\n      messages?.filter(\n        (message) =>\n          message.type === \"chat\" && !blacklistedMessageIDSet.has(message.id)\n      ) || []\n    );\n  }, [blacklistedMessageIDs, messages]);\n  const { enabled: isChatEnabled = true, updatedBy: chatStateUpdatedBy = \"\" } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  const { elements } = useRoomLayoutConferencingScreen();\n  const message_placeholder =\n    elements?.chat?.message_placeholder || \"Send a message\";\n  const canSendChatMessages =\n    !!elements?.chat?.public_chat_enabled ||\n    !!elements?.chat?.roles_whitelist?.length ||\n    !!elements?.chat?.private_chat_enabled;\n\n  const getChatStatus = useCallback(() => {\n    if (isLocalPeerBlacklisted)\n      return \"You've been blocked from sending messages\";\n    if (!isChatEnabled)\n      return `Chat has been paused by ${\n        chatStateUpdatedBy.peerId === localPeerID\n          ? \"you\"\n          : chatStateUpdatedBy?.userName\n      }`;\n    return message_placeholder;\n  }, [\n    chatStateUpdatedBy.peerId,\n    chatStateUpdatedBy?.userName,\n    isChatEnabled,\n    isLocalPeerBlacklisted,\n    localPeerID,\n    message_placeholder,\n  ]);\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Box\n        id=\"chat-container\"\n        css={{\n          bg: \"$surface_dim\",\n          overflowY: \"auto\",\n          // Subtracting height of footer\n          h: canSendChatMessages ? \"calc(100% - 87px)\" : \"100%\",\n          position: \"relative\",\n        }}\n      >\n        {unreadMessageCount ? (\n          <Box\n            id=\"new-message-notif\"\n            style={{\n              position: \"fixed\",\n              bottom: \"76px\",\n              right: \"4px\",\n            }}\n          >\n            <Text\n              variant=\"xs\"\n              css={{ cursor: \"pointer\" }}\n              style={{\n                color: \"white\",\n                background: \"gray\",\n                padding: \"4px\",\n                borderRadius: \"4px\",\n              }}\n            >\n              {unreadMessageCount === 1\n                ? \"New message\"\n                : `${unreadMessageCount} new messages`}\n            </Text>\n          </Box>\n        ) : (\n          \"\"\n        )}\n        {filteredMessages.length === 0 ? (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\",\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text variant=\"h5\" css={{ mt: \"$8\", c: \"$on_surface_high\" }}>\n              {canSendChatMessages ? \"Start a conversation\" : \"No messages yet\"}\n            </Text>\n            {canSendChatMessages ? (\n              <Text\n                variant=\"sm\"\n                style={{\n                  maxWidth: \"80%\",\n                  textAlign: \"center\",\n                  marginTop: \"4px\",\n                }}\n              >\n                There are no messages here yet. Start a conversation by sending\n                a message.\n              </Text>\n            ) : (\n              \"\"\n            )}\n          </div>\n        ) : (\n          filteredMessages.map((message) => (\n            <Box\n              className=\"pip-message\"\n              key={message.id}\n              id={message.id}\n              style={{ padding: \"8px 0.75rem\" }}\n            >\n              <Flex\n                style={{\n                  width: \"100%\",\n                  alignItems: \"center\",\n                  justifyContent: \"between\",\n                }}\n              >\n                <Text\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"between\",\n                    width: \"100%\",\n                    alignItems: \"center\",\n                  }}\n                  css={{\n                    color: \"$on_surface_high\",\n                    fontWeight: \"$semiBold\",\n                  }}\n                >\n                  <Flex\n                    style={{ flexGrow: 1, gap: \"2px\", alignItems: \"center\" }}\n                  >\n                    {message.senderName === \"You\" || !message.senderName ? (\n                      <Text\n                        as=\"span\"\n                        variant=\"sub2\"\n                        css={{\n                          color: \"$on_surface_high\",\n                          fontWeight: \"$semiBold\",\n                        }}\n                      >\n                        {message.senderName || \"Anonymous\"}\n                      </Text>\n                    ) : (\n                      <Tooltip\n                        title={message.senderName}\n                        side=\"top\"\n                        align=\"start\"\n                      >\n                        <Text\n                          as=\"span\"\n                          variant=\"sub2\"\n                          css={{\n                            color: \"$on_surface_high\",\n                            fontWeight: \"$semiBold\",\n                          }}\n                        >\n                          {getSenderName(message.senderName, message?.sender)}\n                        </Text>\n                      </Tooltip>\n                    )}\n                    <MessageTitle\n                      localPeerID={localPeerID}\n                      recipientPeer={message.recipientPeer}\n                      recipientRoles={message.recipientRoles}\n                    />\n                  </Flex>\n\n                  <Text\n                    variant=\"xs\"\n                    css={{\n                      color: \"$on_surface_medium\",\n                      flexShrink: 0,\n                      p: \"$2\",\n                      whitespace: \"nowrap\",\n                    }}\n                  >\n                    {formatTime(message.time)}\n                  </Text>\n                </Text>\n              </Flex>\n              <Text\n                variant=\"sm\"\n                css={{\n                  w: \"100%\",\n                  mt: \"$2\",\n                  wordBreak: \"break-word\",\n                  whiteSpace: \"pre-wrap\",\n                  userSelect: \"all\",\n                  color: \"$on_surface_high\",\n                }}\n              >\n                <AnnotisedMessage message={message.message} />\n              </Text>\n            </Box>\n          ))\n        )}\n        <div\n          id=\"marker\"\n          style={{ height: filteredMessages.length ? \"1px\" : 0 }}\n        />\n      </Box>\n      {canSendChatMessages && (\n        <Box css={{ bg: \"$surface_dim\" }}>\n          <Flex css={{ px: \"$4\", pb: \"3px\", gap: \"$2\", alignItems: \"center\" }}>\n            <Text variant=\"caption\">To:</Text>\n            <Flex\n              css={{\n                bg: \"$primary_bright\",\n                color: \"$on_primary_high\",\n                r: \"$2\",\n              }}\n            >\n              <select\n                id=\"selector\"\n                style={{\n                  background: \"inherit\",\n                  color: \"inherit\",\n                  border: \"none\",\n                  outline: \"none\",\n                  borderRadius: \"4px\",\n                  padding: \"0 2px\",\n                }}\n                defaultValue={\n                  elements.chat?.public_chat_enabled\n                    ? \"Everyone\"\n                    : elements.chat?.roles_whitelist?.[0]\n                }\n              >\n                {elements.chat?.roles_whitelist?.map((role) => (\n                  <option key={role} value={role}>\n                    {role}\n                  </option>\n                ))}\n                {elements.chat?.public_chat_enabled ? (\n                  <option value=\"Everyone\">Everyone</option>\n                ) : (\n                  \"\"\n                )}\n              </select>\n            </Flex>\n          </Flex>\n          <Flex\n            align=\"center\"\n            css={{\n              bg: \"$surface_default\",\n              minHeight: \"$16\",\n              width: \"100%\",\n              py: \"$6\",\n              pl: \"$4\",\n              boxSizing: \"border-box\",\n              gap: \"$2\",\n              r: \"$2\",\n            }}\n          >\n            <TextArea\n              id=\"chat-input\"\n              maxLength={CHAT_MESSAGE_LIMIT}\n              disabled={!isChatEnabled || isLocalPeerBlacklisted}\n              rows={1}\n              css={{\n                w: \"100%\",\n                c: \"$on_surface_high\",\n                p: \"0.75rem 0.75rem !important\",\n                border: \"none\",\n                resize: \"none\",\n              }}\n              placeholder={getChatStatus()}\n              required\n              autoComplete=\"off\"\n              aria-autocomplete=\"none\"\n            />\n\n            <IconButton\n              id=\"send-btn\"\n              disabled={!isChatEnabled || isLocalPeerBlacklisted}\n              title={getChatStatus()}\n              css={{\n                ml: \"auto\",\n                height: \"max-content\",\n                mr: \"$4\",\n                \"&:hover\": { c: \"$on_surface_medium\" },\n              }}\n              data-testid=\"send_msg_btn\"\n            >\n              <SendIcon />\n            </IconButton>\n          </Flex>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nconst MessageTitle = ({\n  recipientPeer,\n  recipientRoles,\n  localPeerID,\n}: {\n  recipientPeer?: string;\n  recipientRoles?: string[];\n  localPeerID: string;\n}) => {\n  const peerName = useHMSStore(selectPeerNameByID(recipientPeer));\n\n  return (\n    <>\n      {recipientRoles ? (\n        <Text\n          as=\"span\"\n          variant=\"sub2\"\n          css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n        >\n          to {recipientRoles} (Group)\n        </Text>\n      ) : null}\n      {recipientPeer ? (\n        <Text\n          as=\"span\"\n          variant=\"sub2\"\n          css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n        >\n          to {recipientPeer === localPeerID ? \"You\" : peerName} (DM)\n        </Text>\n      ) : null}\n    </>\n  );\n};\n", "import { styled } from \"../Theme\";\n\nexport const TextArea = styled(\"textarea\", {\n  fontFamily: \"$sans\",\n  lineHeight: \"inherit\",\n  backgroundColor: \"$surface_default\",\n  borderRadius: \"8px\",\n  outline: \"none\",\n  border: \"1px solid $border_default\",\n  padding: \"0.5rem 0.75rem\",\n  minHeight: \"30px\",\n  color: \"$on_surface_high\",\n  fontSize: \"$md\",\n  \"&:focus\": {\n    boxShadow: \"0 0 0 1px $colors$primary_default\",\n    border: \"1px solid transparent\",\n  },\n  \"&::placeholder\": {\n    color: \"$on_surface_medium\",\n  },\n  variants: {\n    error: {\n      true: {\n        \"&:focus\": {\n          boxShadow: \"0 0 0 3px $colors$alert_error_default\",\n        },\n      },\n    },\n  },\n});\n", "import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useMedia } from \"react-use\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { VariableSizeList } from \"react-window\";\nimport {\n  HMSMessage,\n  HMSPeerID,\n  HMSRoleName,\n  selectHMSMessages,\n  selectLocalPeerID,\n  selectLocalPeerName,\n  selectLocalPeerRoleName,\n  selectPeerNameByID,\n  selectSessionStore,\n  selectUnreadHMSMessagesCount,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { SolidPinIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig, styled } from \"../../../Theme\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport { ChatActions } from \"./ChatActions\";\nimport { EmptyChat } from \"./EmptyChat\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useSetSubscribedChatSelector } from \"../AppData/useUISettings\";\nimport { usePinnedBy } from \"../hooks/usePinnedBy\";\nimport { formatTime } from \"./utils\";\nimport { CHAT_SELECTOR, SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst rowHeights: Record<number, { size: number; id: string }> = {};\nlet listInstance: VariableSizeList | null = null; //eslint-disable-line\nfunction getRowHeight(index: number) {\n  // 72 will be default row height for any message length\n  return rowHeights[index]?.size || 72;\n}\n\nconst setRowHeight = (index: number, id: string, size: number) => {\n  if (rowHeights[index]?.id === id && rowHeights[index]?.size === size) {\n    return;\n  }\n  listInstance?.resetAfterIndex(Math.max(index - 1, 0));\n  Object.assign(rowHeights, { [index]: { size, id } });\n};\n\nconst getMessageBackgroundColor = (\n  messageType: string,\n  selectedPeerID: string,\n  selectedRole: string,\n  isOverlay: boolean\n) => {\n  if (messageType && !(selectedPeerID || selectedRole)) {\n    return isOverlay ? \"rgba(0, 0, 0, 0.64)\" : \"$surface_default\";\n  }\n  return \"\";\n};\n\nconst MessageTypeContainer = ({\n  left,\n  right,\n}: {\n  left?: string;\n  right?: string;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        ml: \"$2\",\n        mr: \"$4\",\n        gap: \"$space$2\",\n        flexWrap: \"nowrap\",\n      }}\n    >\n      {left && (\n        <Text\n          variant=\"xs\"\n          as=\"span\"\n          css={{\n            color: \"$on_surface_medium\",\n            textTransform: \"capitalize\",\n            fontWeight: \"$regular\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {left}\n        </Text>\n      )}\n      {right && (\n        <Text\n          as=\"span\"\n          variant=\"overline\"\n          css={{\n            color: \"$on_surface_medium\",\n            fontWeight: \"$regular\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {right}\n        </Text>\n      )}\n    </Flex>\n  );\n};\n\nexport const MessageType = ({\n  roles,\n  hasCurrentUserSent,\n  receiver,\n}: {\n  roles?: HMSRoleName[];\n  hasCurrentUserSent: boolean;\n  receiver?: HMSPeerID;\n}) => {\n  const peerName = useHMSStore(selectPeerNameByID(receiver));\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  if (receiver) {\n    return (\n      <MessageTypeContainer\n        left={\n          hasCurrentUserSent ? `${peerName ? `to ${peerName}` : \"\"}` : \"to You\"\n        }\n        right=\"(DM)\"\n      />\n    );\n  }\n\n  if (roles && roles.length) {\n    return (\n      <MessageTypeContainer\n        left={`to ${hasCurrentUserSent ? roles[0] : localPeerRoleName}`}\n        right=\"(Group)\"\n      />\n    );\n  }\n  return null;\n};\n\nconst URL_REGEX =\n  /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nconst Link = styled(\"a\", {\n  color: \"$primary_default\",\n  wordBreak: \"break-word\",\n  \"&:hover\": {\n    textDecoration: \"underline\",\n  },\n});\n\nexport const AnnotisedMessage = ({\n  message,\n  length,\n}: {\n  message: string;\n  length?: number;\n}) => {\n  if (!message) {\n    return <Fragment />;\n  }\n\n  return (\n    <Fragment>\n      {message\n        .trim()\n        .split(/(\\s)/)\n        .map((part) =>\n          URL_REGEX.test(part) ? (\n            <Link\n              href={part}\n              key={part}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {part.slice(0, length)}\n            </Link>\n          ) : (\n            part.slice(0, length)\n          )\n        )}\n    </Fragment>\n  );\n};\n\nconst getMessageType = ({\n  roles,\n  receiver,\n}: {\n  roles?: HMSRoleName[];\n  receiver?: HMSPeerID;\n}) => {\n  if (roles && roles.length > 0) {\n    return \"role\";\n  }\n  return receiver ? \"private\" : \"\";\n};\n\nexport const SenderName = styled(Text, {\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\",\n  width: \"100%\",\n  minWidth: 0,\n  color: \"$on_surface_high\",\n  fontWeight: \"$semiBold\",\n});\n\nconst ChatMessage = React.memo(\n  ({\n    index,\n    style = {},\n    message,\n  }: {\n    message: HMSMessage;\n    index: number;\n    style: React.CSSProperties;\n  }) => {\n    const { elements } = useRoomLayoutConferencingScreen();\n    const rowRef = useRef<HTMLDivElement | null>(null);\n    const isMobile = useMedia(cssConfig.media.md);\n    const isPrivateChatEnabled = !!elements?.chat?.private_chat_enabled;\n    const isOverlay = elements?.chat?.is_overlay && isMobile;\n    const localPeerId = useHMSStore(selectLocalPeerID);\n    const [selectedRole, setRoleSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.ROLE\n    );\n    const [selectedPeer, setPeerSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.PEER\n    );\n    const messageType = getMessageType({\n      roles: message.recipientRoles,\n      receiver: message.recipientPeer,\n    });\n    const [openSheet, setOpenSheetBare] = useState(false);\n    const showPinAction = !!elements?.chat?.allow_pinning_messages;\n    const showReply =\n      message.sender !== selectedPeer.id &&\n      message.sender !== localPeerId &&\n      isPrivateChatEnabled;\n    useLayoutEffect(() => {\n      if (rowRef.current) {\n        setRowHeight(index, message.id, rowRef.current.clientHeight);\n      }\n    }, [index, message.id]);\n\n    const setOpenSheet = (\n      value: boolean,\n      e?: React.MouseEvent<HTMLElement, MouseEvent>\n    ) => {\n      e?.stopPropagation();\n      setOpenSheetBare(value);\n    };\n\n    return (\n      <Box\n        css={{\n          mb: \"$5\",\n          pr: \"$10\",\n          mt: \"$4\",\n          \"&:not(:hover} .chat_actions\": { display: \"none\" },\n          \"&:hover .chat_actions\": { display: \"flex\", opacity: 1 },\n        }}\n        style={style}\n      >\n        <Flex\n          ref={rowRef}\n          align=\"center\"\n          css={{\n            flexWrap: \"wrap\",\n            position: \"relative\",\n            // Theme independent color, token should not be used for transparent chat\n            background: getMessageBackgroundColor(\n              messageType,\n              selectedPeer.id,\n              selectedRole,\n              !!isOverlay\n            ),\n            r: \"$1\",\n            p: \"$4\",\n            userSelect: \"none\",\n            \"@md\": {\n              cursor: \"pointer\",\n            },\n            \"&:hover\": {\n              background:\n                \"linear-gradient(277deg, $surface_default 0%, $surface_dim 60.87%)\",\n            },\n          }}\n          data-testid=\"chat_msg\"\n          onClick={(e) => {\n            if (isMobile) {\n              setOpenSheet(true, e);\n            }\n          }}\n        >\n          <PinnedBy messageId={message.id} index={index} rowRef={rowRef} />\n          <Text\n            css={{\n              color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n              fontWeight: \"$semiBold\",\n              display: \"flex\",\n              alignItems: \"center\",\n              alignSelf: \"stretch\",\n              width: \"100%\",\n            }}\n            as=\"div\"\n          >\n            <Flex\n              align=\"baseline\"\n              css={{\n                flexWrap: \"nowrap\",\n                maxWidth: \"calc(100% - 10ch)\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {message.senderName === \"You\" || !message.senderName ? (\n                <SenderName\n                  as=\"span\"\n                  variant=\"sub2\"\n                  css={{\n                    color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n                    fontWeight: \"$semiBold\",\n                  }}\n                >\n                  {message.senderName || \"Anonymous\"}\n                </SenderName>\n              ) : (\n                <Tooltip\n                  title={message.senderName}\n                  side=\"top\"\n                  align=\"start\"\n                  boxCss={{ zIndex: 50 }}\n                >\n                  <SenderName\n                    as=\"span\"\n                    variant=\"sub2\"\n                    css={{\n                      color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n                      fontWeight: \"$semiBold\",\n                    }}\n                  >\n                    {message.sender === localPeerId\n                      ? `${message.senderName} (You)`\n                      : message.senderName}\n                  </SenderName>\n                </Tooltip>\n              )}\n              <MessageType\n                hasCurrentUserSent={message.sender === localPeerId}\n                receiver={message.recipientPeer}\n                roles={message.recipientRoles}\n              />\n            </Flex>\n\n            {!isOverlay ? (\n              <Text\n                as=\"span\"\n                variant=\"caption\"\n                css={{\n                  color: \"$on_surface_medium\",\n                  flexShrink: 0,\n                  position: \"absolute\",\n                  right: 0,\n                  zIndex: 1,\n                  mr: \"$4\",\n                  p: \"$2\",\n                }}\n              >\n                {formatTime(message.time)}\n              </Text>\n            ) : null}\n            <ChatActions\n              showPinAction={showPinAction}\n              message={message}\n              sentByLocalPeer={message.sender === localPeerId}\n              onReply={() => {\n                setRoleSelector(\"\");\n                setPeerSelector({\n                  id: message.sender,\n                  name: message.senderName,\n                });\n              }}\n              onReplyGroup={() => {\n                if (message.senderRole) {\n                  setRoleSelector(message.senderRole);\n                  setPeerSelector({});\n                }\n              }}\n              showReply={showReply}\n              isMobile={isMobile}\n              openSheet={openSheet}\n              setOpenSheet={setOpenSheet}\n            />\n          </Text>\n          <Text\n            variant=\"sm\"\n            css={{\n              w: \"100%\",\n              mt: \"$2\",\n              wordBreak: \"break-word\",\n              whiteSpace: \"pre-wrap\",\n              userSelect: \"all\",\n              color: isOverlay ? \"#FFF\" : \"$on_surface_high\",\n            }}\n            onClick={(e) => {\n              setOpenSheet(true, e);\n            }}\n          >\n            <AnnotisedMessage message={message.message} />\n          </Text>\n        </Flex>\n      </Box>\n    );\n  }\n);\n\nconst MessageWrapper = React.memo(\n  ({\n    index,\n    style,\n    data,\n  }: {\n    index: number;\n    style: React.CSSProperties;\n    data: HMSMessage[];\n  }) => {\n    return (\n      <ChatMessage\n        style={style}\n        index={index}\n        key={data[index].id}\n        message={data[index]}\n      />\n    );\n  }\n);\n\nconst VirtualizedChatMessages = React.forwardRef<\n  VariableSizeList,\n  { messages: HMSMessage[]; scrollToBottom: (count: number) => void }\n>(({ messages, scrollToBottom }, listRef) => {\n  const hmsActions = useHMSActions();\n  const itemKey = useCallback((index: number, data: HMSMessage[]) => {\n    return data[index].id;\n  }, []);\n  useEffect(() => {\n    requestAnimationFrame(() => scrollToBottom(1));\n  }, [scrollToBottom]);\n  return (\n    <Box\n      css={{\n        mr: \"-$10\",\n        h: \"100%\",\n      }}\n    >\n      <AutoSizer\n        style={{\n          width: \"90%\",\n        }}\n      >\n        {({ height, width }: { height: number; width: number }) => (\n          <VariableSizeList\n            ref={(node) => {\n              if (node) {\n                // @ts-ignore\n                listRef.current = node;\n                listInstance = node;\n              }\n            }}\n            itemCount={messages.length}\n            itemSize={getRowHeight}\n            itemData={messages}\n            width={width}\n            height={height}\n            style={{\n              overflowX: \"hidden\",\n            }}\n            itemKey={itemKey}\n            onItemsRendered={({ visibleStartIndex, visibleStopIndex }) => {\n              for (let i = visibleStartIndex; i <= visibleStopIndex; i++) {\n                if (!messages[i].read) {\n                  hmsActions.setMessageRead(true, messages[i].id);\n                }\n              }\n            }}\n          >\n            {MessageWrapper}\n          </VariableSizeList>\n        )}\n      </AutoSizer>\n    </Box>\n  );\n});\n\nexport const ChatBody = React.forwardRef<\n  VariableSizeList,\n  { scrollToBottom: (count: number) => void }\n>(\n  (\n    { scrollToBottom }: { scrollToBottom: (count: number) => void },\n    listRef\n  ) => {\n    const messages = useHMSStore(selectHMSMessages);\n    const blacklistedMessageIDs = useHMSStore(\n      selectSessionStore(SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST)\n    );\n    const filteredMessages = useMemo(() => {\n      const blacklistedMessageIDSet = new Set(blacklistedMessageIDs || []);\n      return (\n        messages?.filter(\n          (message) =>\n            message.type === \"chat\" && !blacklistedMessageIDSet.has(message.id)\n        ) || []\n      );\n    }, [blacklistedMessageIDs, messages]);\n\n    const vanillaStore = useHMSVanillaStore();\n    const rerenderOnFirstMount = useRef(false);\n\n    useEffect(() => {\n      const unsubscribe = vanillaStore.subscribe(() => {\n        // @ts-ignore\n        if (!listRef.current) {\n          return;\n        }\n        // @ts-ignore\n        const outerElement = listRef.current._outerRef;\n        if (\n          outerElement &&\n          outerElement.clientHeight +\n            outerElement.scrollTop +\n            outerElement.offsetTop >=\n            outerElement.scrollHeight\n        ) {\n          requestAnimationFrame(() => scrollToBottom(1));\n        }\n      }, selectUnreadHMSMessagesCount);\n      return unsubscribe;\n    }, [vanillaStore, listRef, scrollToBottom]);\n\n    useEffect(() => {\n      // @ts-ignore\n      if (\n        filteredMessages.length > 0 &&\n        listRef?.current &&\n        !rerenderOnFirstMount.current\n      ) {\n        rerenderOnFirstMount.current = true;\n        // @ts-ignore\n        listRef.current.resetAfterIndex(0);\n      }\n    }, [listRef, filteredMessages]);\n\n    return filteredMessages.length === 0 ? (\n      <EmptyChat />\n    ) : (\n      <VirtualizedChatMessages\n        messages={filteredMessages}\n        ref={listRef}\n        scrollToBottom={scrollToBottom}\n      />\n    );\n  }\n);\n\nconst PinnedBy = ({\n  messageId,\n  index,\n  rowRef,\n}: {\n  messageId: string;\n  index: number;\n  rowRef?: React.MutableRefObject<HTMLDivElement | null>;\n}) => {\n  const pinnedBy = usePinnedBy(messageId);\n  const localPeerName = useHMSStore(selectLocalPeerName);\n\n  useLayoutEffect(() => {\n    if (rowRef?.current) {\n      if (pinnedBy) {\n        rowRef.current.style.background =\n          \"linear-gradient(277deg, var(--hms-ui-colors-surface_default) 0%, var(--hms-ui-colors-surface_dim) 60.87%)\";\n      } else {\n        rowRef.current.style.background = \"\";\n      }\n      setRowHeight(index, messageId, rowRef?.current.clientHeight);\n    }\n  }, [index, messageId, pinnedBy, rowRef]);\n\n  if (!pinnedBy) {\n    return null;\n  }\n\n  return (\n    <Flex\n      align=\"center\"\n      css={{ gap: \"$2\", mb: \"$2\", color: \"$on_surface_low\" }}\n    >\n      <SolidPinIcon height={12} width={12} />\n      <Text variant=\"xs\" css={{ color: \"inherit\" }}>\n        Pinned by {localPeerName === pinnedBy ? \"you\" : pinnedBy}\n      </Text>\n    </Flex>\n  );\n};\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  HMSMessage,\n  selectLocalPeerName,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  CopyIcon,\n  CrossCircleIcon,\n  CrossIcon,\n  EyeCloseIcon,\n  PeopleRemoveIcon,\n  PinIcon,\n  ReplyGroupIcon,\n  ReplyIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { Tooltip } from \"../../../Tooltip\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { MwebChatOption } from \"./MwebChatOption\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport {\n  useChatBlacklist,\n  useIsPeerBlacklisted,\n} from \"../hooks/useChatBlacklist\";\nimport { usePinnedMessages } from \"../hooks/usePinnedMessages\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst iconStyle = { height: \"1.125rem\", width: \"1.125rem\" };\nconst tooltipBoxCSS = {\n  fontSize: \"$xs\",\n  backgroundColor: \"$surface_default\",\n  p: \"$1 $5\",\n  fontWeight: \"$regular\",\n  borderRadius: \"$3\",\n};\n\nexport const ChatActions = ({\n  showPinAction,\n  onReply,\n  onReplyGroup,\n  showReply,\n  message,\n  sentByLocalPeer,\n  isMobile,\n  openSheet,\n  setOpenSheet,\n}: {\n  showPinAction: boolean;\n  onReply: () => void;\n  onReplyGroup: () => void;\n  showReply: boolean;\n  message: HMSMessage;\n  sentByLocalPeer: boolean;\n  isMobile: boolean;\n  openSheet: boolean;\n  setOpenSheet: (\n    value: boolean,\n    e?: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => void;\n}) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const { can_hide_message = false, can_block_user = false } =\n    elements?.chat?.real_time_controls || {};\n  const { roles_whitelist = [] } = elements?.chat || {};\n\n  const [open, setOpen] = useState(false);\n  const actions = useHMSActions();\n  const canRemoveOthers = useHMSStore(selectPermissions)?.removeOthers;\n  const { blacklistItem: blacklistPeer } = useChatBlacklist(\n    SESSION_STORE_KEY.CHAT_PEER_BLACKLIST\n  );\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const { setPinnedMessages, unpinBlacklistedMessages } = usePinnedMessages();\n\n  const {\n    blacklistItem: blacklistMessage,\n    blacklistedIDs: blacklistedMessageIDs,\n  } = useChatBlacklist(SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST);\n\n  const isSenderBlocked = useIsPeerBlacklisted({\n    peerCustomerUserId: message.senderUserId,\n  });\n\n  const updatePinnedMessages = useCallback(\n    (messageID = \"\") => {\n      const blacklistedMessageIDSet = new Set([\n        ...(blacklistedMessageIDs || []),\n        messageID,\n      ]);\n      unpinBlacklistedMessages(blacklistedMessageIDSet);\n    },\n    [blacklistedMessageIDs, unpinBlacklistedMessages]\n  );\n\n  const copyMessageContent = useCallback(() => {\n    try {\n      navigator?.clipboard.writeText(message.message);\n      ToastManager.addToast({\n        title: \"Message copied successfully\",\n      });\n    } catch (e) {\n      console.log(e);\n      ToastManager.addToast({\n        title: \"Could not copy message\",\n      });\n    }\n  }, [message]);\n\n  const options: Record<\n    string,\n    {\n      text: string;\n      tooltipText?: string;\n      icon: React.ReactNode;\n      onClick: () => void | Promise<void>;\n      show: boolean;\n      color?: string;\n    }\n  > = {\n    reply: {\n      text: \"Reply privately\",\n      tooltipText: \"Reply privately\",\n      icon: <ReplyIcon style={iconStyle} />,\n      onClick: onReply,\n      show: showReply,\n    },\n    replyGroup: {\n      text: \"Reply to group\",\n      tooltipText: \"Reply to group\",\n      icon: <ReplyGroupIcon style={iconStyle} />,\n      onClick: onReplyGroup,\n      show:\n        !!message.senderRole && roles_whitelist.includes(message.senderRole),\n    },\n    pin: {\n      text: \"Pin message\",\n      tooltipText: \"Pin\",\n      icon: <PinIcon style={iconStyle} />,\n      onClick: () => setPinnedMessages(message, localPeerName || \"\"),\n      show: showPinAction,\n    },\n    copy: {\n      text: \"Copy text\",\n      tooltipText: \"Copy\",\n      icon: <CopyIcon style={iconStyle} />,\n      onClick: copyMessageContent,\n      show: true,\n    },\n    hide: {\n      text: message.recipientPeer ? \"Hide for both\" : \"Hide for everyone\",\n      icon: <EyeCloseIcon style={iconStyle} />,\n      onClick: async () => {\n        blacklistMessage(message.id);\n        updatePinnedMessages(message.id);\n      },\n      show: !!can_hide_message,\n    },\n    block: {\n      text: \"Block from chat\",\n      icon: <CrossCircleIcon style={iconStyle} />,\n      onClick: async () => {\n        if (message.senderUserId) {\n          blacklistPeer(message.senderUserId);\n        }\n      },\n      color: \"$alert_error_default\",\n      show: !!can_block_user && !sentByLocalPeer && !isSenderBlocked,\n    },\n    remove: {\n      text: \"Remove participant\",\n      icon: <PeopleRemoveIcon style={iconStyle} />,\n      color: \"$alert_error_default\",\n      show: !!canRemoveOthers && !sentByLocalPeer,\n      onClick: async () => {\n        if (!message.sender) {\n          return;\n        }\n        try {\n          await actions.removePeer(message.sender, \"\");\n        } catch (error) {\n          ToastManager.addToast({\n            title: (error as Error).message,\n            variant: \"error\",\n          });\n        }\n      },\n    },\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root open={openSheet} onOpenChange={setOpenSheet}>\n        <Sheet.Content\n          css={{ bg: \"$surface_default\", pb: \"$14\" }}\n          onClick={(e) => setOpenSheet(false, e)}\n        >\n          <Sheet.Title\n            css={{\n              display: \"flex\",\n              color: \"$on_surface_high\",\n              w: \"100%\",\n              justifyContent: \"space-between\",\n              mt: \"$8\",\n              fontSize: \"$md\",\n              px: \"$10\",\n              pb: \"$8\",\n              borderBottom: \"1px solid $border_bright\",\n              alignItems: \"center\",\n            }}\n          >\n            Message options\n            <Sheet.Close\n              css={{ color: \"$on_surface_high\" }}\n              onClick={(e) => setOpenSheet(false, e)}\n            >\n              <CrossIcon />\n            </Sheet.Close>\n          </Sheet.Title>\n\n          {Object.keys(options).map((optionKey) => {\n            const option = options[optionKey];\n            return option.show ? (\n              <MwebChatOption\n                key={optionKey}\n                text={option.text}\n                icon={option.icon}\n                onClick={option.onClick}\n                color={option?.color}\n              />\n            ) : null;\n          })}\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dropdown.Root\n      open={open}\n      onOpenChange={setOpen}\n      css={{ \"@md\": { display: \"none\" } }}\n    >\n      <Flex\n        className=\"chat_actions\"\n        css={{\n          background: \"$surface_bright\",\n          borderRadius: \"$1\",\n          p: \"$2\",\n          opacity: open ? 1 : 0,\n          position: \"absolute\",\n          top: 0,\n          right: 0,\n          zIndex: 1,\n          \"@md\": { opacity: 1 },\n        }}\n      >\n        {options.reply.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title={options.reply.tooltipText}>\n            <IconButton\n              data-testid=\"reply_message_btn\"\n              onClick={options.reply.onClick}\n            >\n              {options.reply.icon}\n            </IconButton>\n          </Tooltip>\n        ) : null}\n        {options.replyGroup.show ? (\n          <Tooltip\n            boxCss={tooltipBoxCSS}\n            title={options.replyGroup.tooltipText}\n          >\n            <IconButton\n              data-testid=\"reply_group_message_btn\"\n              onClick={options.replyGroup.onClick}\n            >\n              {options.replyGroup.icon}\n            </IconButton>\n          </Tooltip>\n        ) : null}\n        {options.pin.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title={options.pin.tooltipText}>\n            <IconButton\n              data-testid=\"pin_message_btn\"\n              onClick={options.pin.onClick}\n            >\n              {options.pin.icon}\n            </IconButton>\n          </Tooltip>\n        ) : null}\n\n        {options.copy.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title={options.copy.tooltipText}>\n            <IconButton\n              onClick={options.copy.onClick}\n              data-testid=\"copy_message_btn\"\n            >\n              <CopyIcon style={iconStyle} />\n            </IconButton>\n          </Tooltip>\n        ) : null}\n\n        {options.block.show || options.hide.show || options.remove.show ? (\n          <Tooltip boxCss={tooltipBoxCSS} title=\"More actions\">\n            <Dropdown.Trigger asChild>\n              <IconButton>\n                <VerticalMenuIcon style={iconStyle} />\n              </IconButton>\n            </Dropdown.Trigger>\n          </Tooltip>\n        ) : null}\n      </Flex>\n      <Dropdown.Portal>\n        <Dropdown.Content\n          sideOffset={5}\n          align=\"end\"\n          css={{\n            width: \"$48\",\n            backgroundColor: \"$surface_bright\",\n            py: \"$0\",\n            border: \"1px solid $border_bright\",\n          }}\n        >\n          {options.hide.show ? (\n            <Dropdown.Item\n              data-testid=\"hide_message_btn\"\n              onClick={options.hide.onClick}\n            >\n              {options.hide.icon}\n              <Text variant=\"sm\" css={{ ml: \"$4\", fontWeight: \"$semiBold\" }}>\n                {options.hide.text}\n              </Text>\n            </Dropdown.Item>\n          ) : null}\n\n          {options.block.show ? (\n            <Dropdown.Item\n              data-testid=\"block_peer_btn\"\n              onClick={options.block.onClick}\n              css={{ color: options.block.color }}\n            >\n              {options.block.icon}\n              <Text\n                variant=\"sm\"\n                css={{ ml: \"$4\", color: \"inherit\", fontWeight: \"$semiBold\" }}\n              >\n                {options.block.text}\n              </Text>\n            </Dropdown.Item>\n          ) : null}\n          {options.remove.show ? (\n            <Dropdown.Item\n              data-testid=\"remove_peer_btn\"\n              onClick={options.remove.onClick}\n              css={{ color: options.remove.color }}\n            >\n              {options.remove.icon}\n              <Text\n                variant=\"sm\"\n                css={{ ml: \"$4\", color: \"inherit\", fontWeight: \"$semiBold\" }}\n              >\n                {options.remove.text}\n              </Text>\n            </Dropdown.Item>\n          ) : null}\n        </Dropdown.Content>\n      </Dropdown.Portal>\n    </Dropdown.Root>\n  );\n};\n", "import React from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const MwebChatOption = ({\n  icon,\n  text,\n  onClick,\n  color = \"$on_surface_high\",\n}: {\n  icon: React.ReactNode;\n  text: string;\n  onClick: () => void | Promise<void>;\n  color?: string;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{ w: \"100%\", color, cursor: \"pointer\", gap: \"$4\", p: \"$8\" }}\n      onClick={onClick}\n    >\n      {icon}\n      <Text variant=\"sm\" css={{ color, fontWeight: \"$semiBold\" }}>\n        {text}\n      </Text>\n    </Flex>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectLocalPeer,\n  selectSessionStore,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const useChatBlacklist = (\n  sessionStoreKey:\n    | SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST\n    | SESSION_STORE_KEY.CHAT_PEER_BLACKLIST\n) => {\n  const hmsActions = useHMSActions();\n  const blacklistedIDs = useHMSStore(selectSessionStore(sessionStoreKey));\n\n  const blacklistItem = useCallback(\n    async (blacklistID: string) => {\n      await hmsActions.sessionStore\n        .set(sessionStoreKey, [...(blacklistedIDs || []), blacklistID])\n        .catch((err) => ToastManager.addToast({ title: err.description }));\n    },\n    [hmsActions, sessionStoreKey, blacklistedIDs]\n  );\n\n  return { blacklistItem, blacklistedIDs };\n};\n\nexport const useIsPeerBlacklisted = ({\n  local = false,\n  peerCustomerUserId = \"\",\n}) => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const blacklistedPeerIDs =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_PEER_BLACKLIST)) ||\n    [];\n  return blacklistedPeerIDs?.includes(\n    local ? localPeer?.customerUserId : peerCustomerUserId\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  HMSMessage,\n  selectPeerNameByID,\n  selectSessionStore,\n  useHMSActions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport type PinnedMessage = {\n  text: string;\n  id: string;\n  pinnedBy: string;\n};\n\n/**\n * set pinned chat message by updating the session store\n */\nexport const usePinnedMessages = () => {\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n\n  const setPinnedMessages = useCallback(\n    async (message: HMSMessage, pinnedBy: string) => {\n      const peerName =\n        vanillaStore.getState(selectPeerNameByID(message?.sender)) ||\n        message?.senderName;\n      const newPinnedMessage = { text: \"\", id: message.id, pinnedBy };\n\n      if (message && peerName) {\n        newPinnedMessage[\"text\"] = `${peerName}: ${message.message}`;\n      } else if (message) {\n        newPinnedMessage[\"text\"] = message.message;\n      }\n\n      const pinnedMessages =\n        vanillaStore.getState(\n          selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n        ) || [];\n      if (\n        !pinnedMessages?.find(\n          (pinnedMessage: PinnedMessage) =>\n            pinnedMessage.id === newPinnedMessage.id\n        )\n      ) {\n        await hmsActions.sessionStore\n          .set(\n            SESSION_STORE_KEY.PINNED_MESSAGES,\n            [...pinnedMessages, newPinnedMessage].slice(-3)\n          ) // Limiting to maximum of 3 messages - FIFO\n          .catch((err) => ToastManager.addToast({ title: err.description }));\n      }\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  const removePinnedMessage = useCallback(\n    async (indexToRemove: number) => {\n      const pinnedMessages =\n        vanillaStore.getState(\n          selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n        ) || [];\n      if (pinnedMessages[indexToRemove]) {\n        await hmsActions.sessionStore\n          .set(\n            SESSION_STORE_KEY.PINNED_MESSAGES,\n            pinnedMessages.filter(\n              (_: PinnedMessage, index: number) => index !== indexToRemove\n            )\n          )\n          .catch((err) => ToastManager.addToast({ title: err.description }));\n      }\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  const unpinBlacklistedMessages = useCallback(\n    async (blacklistedMessageIDSet: Set<string>) => {\n      const pinnedMessages =\n        vanillaStore.getState(\n          selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n        ) || [];\n      const filteredPinnedMessages = pinnedMessages?.filter(\n        (pinnedMessage: PinnedMessage) =>\n          !blacklistedMessageIDSet?.has(pinnedMessage.id)\n      );\n\n      await hmsActions.sessionStore\n        .set(SESSION_STORE_KEY.PINNED_MESSAGES, filteredPinnedMessages)\n        .catch((err) => ToastManager.addToast({ title: err.description }));\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  return { setPinnedMessages, removePinnedMessage, unpinBlacklistedMessages };\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\n// @ts-ignore\nimport emptyChat from \"../../images/empty-chat.svg\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\n\nexport const EmptyChat = () => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  const isMobile = useMedia(cssConfig.media.md);\n  const canSendMessages =\n    elements.chat &&\n    (elements.chat.public_chat_enabled ||\n      elements.chat.private_chat_enabled ||\n      (elements.chat.roles_whitelist &&\n        elements.chat.roles_whitelist.length)) &&\n    !isLocalPeerBlacklisted;\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeStream = useLandscapeHLSStream();\n  const streaming = isMobileHLSStream || isLandscapeStream;\n\n  if (isMobile && elements?.chat?.is_overlay && !streaming) return <></>;\n\n  return (\n    <Flex\n      css={{\n        width: \"100%\",\n        flex: \"1 1 0\",\n        textAlign: \"center\",\n        px: \"$4\",\n      }}\n      align=\"center\"\n      justify=\"center\"\n    >\n      <Box>\n        <Box\n          css={{\n            m: \"0 auto\",\n            mt: \"$4\",\n            \"@media (max-height: 575px)\": { display: \"none\" },\n          }}\n        >\n          <img\n            src={emptyChat}\n            style={{ display: \"inline\" }}\n            alt=\"Empty Chat\"\n            height={132}\n            width={185}\n          />\n        </Box>\n\n        <Text variant=\"h5\" css={{ mt: \"$8\", c: \"$on_surface_high\" }}>\n          {canSendMessages ? \"Start a conversation\" : \"No messages yet\"}\n        </Text>\n        {canSendMessages ? (\n          <Text\n            variant=\"sm\"\n            css={{\n              mt: \"$4\",\n              maxWidth: \"80%\",\n              textAlign: \"center\",\n              mx: \"auto\",\n              c: \"$on_surface_medium\",\n            }}\n          >\n            There are no messages here yet. Start a conversation by sending a\n            message.\n          </Text>\n        ) : null}\n      </Box>\n    </Flex>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport { selectSessionStore, useHMSStore } from \"@100mslive/react-sdk\";\nimport { PinnedMessage } from \"./usePinnedMessages\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const usePinnedBy = (messageId: string) => {\n  const pinnedMessages = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n  );\n  const [pinnedBy, setPinnedBy] = useState(\"\");\n\n  useEffect(() => {\n    let match = \"\";\n    pinnedMessages?.forEach((pinnedMessage: PinnedMessage) => {\n      if (pinnedMessage.id === messageId) {\n        match = pinnedMessage.pinnedBy;\n      }\n    });\n\n    setPinnedBy(match);\n  }, [messageId, pinnedMessages]);\n\n  return pinnedBy;\n};\n", "export const formatTime = (date: Date) => {\n  if (!(date instanceof Date)) {\n    return \"\";\n  }\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const suffix = hours > 11 ? \"PM\" : \"AM\";\n  return `${hours < 10 ? \"0\" : \"\"}${hours}:${\n    minutes < 10 ? \"0\" : \"\"\n  }${minutes} ${suffix}`;\n};\n\nexport const CHAT_MESSAGE_LIMIT = 2000;\n", "import React from \"react\";\nimport { ExternalLinkIcon } from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Text } from \"../../../Text\";\n\nexport const PIPChatOption = ({\n  openChat,\n  showPIPChat,\n}: {\n  openChat: () => void;\n  showPIPChat: boolean;\n}) => {\n  if (!showPIPChat) {\n    return <></>;\n  }\n  return (\n    <Dropdown.Item onClick={openChat} data-testid=\"pip_chat_btn\">\n      <ExternalLinkIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\", color: \"$on_surface_high\" }}>\n        Pop out Chat\n      </Text>\n    </Dropdown.Item>\n  );\n};\n", "import React from \"react\";\nimport { createPortal } from \"react-dom\";\n\ntype PIPWindowProps = {\n  pipWindow: Window;\n  children: React.ReactNode;\n};\n\nexport const PIPWindow = ({ pipWindow, children }: PIPWindowProps) => {\n  pipWindow.document.body.style.margin = \"0\";\n  pipWindow.document.body.style.overflow = \"clip\";\n  return createPortal(children, pipWindow.document.body);\n};\n", "import React, { useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSPeer,\n  selectAvailableRoleNames,\n  selectPeerByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  CrossIcon,\n} from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { Sheet } from \"../../Sheet\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\n\nconst HighlightTerm = ({ value }: { value: string | undefined }) => {\n  return value ? (\n    <Tooltip side=\"top\" title={value}>\n      <Text\n        variant=\"body2\"\n        css={{\n          color: \"$on_surface_medium\",\n          fontWeight: \"$semiBold\",\n        }}\n      >\n        '{value.slice(0, 100)}\n        {value.length > 100 ? \"...\" : \"\"}'\n      </Text>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n};\n\nconst RoleChangeContent = ({\n  peer,\n  onOpenChange,\n  isMobile = false,\n}: {\n  peer: HMSPeer;\n  onOpenChange: (open: boolean) => void;\n  isMobile?: boolean;\n}) => {\n  const roles = useHMSStore(selectAvailableRoleNames).filter(\n    (role) => role !== peer?.roleName && role !== \"__internal_recorder\"\n  );\n  const [selectedRole, setRole] = useState(\n    roles.filter((role) => role !== peer?.roleName)?.[0] || peer?.roleName\n  );\n  const hmsActions = useHMSActions();\n  const [open, setOpen] = useState(false);\n  const triggerRef = useRef<HTMLButtonElement | undefined>();\n\n  return (\n    <>\n      <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\" }}>\n        <Text as=\"h6\" variant=\"h6\">\n          Switch Role\n        </Text>\n        {isMobile && <CrossIcon onClick={() => onOpenChange(false)} />}\n      </Flex>\n\n      <Box>\n        <Text\n          variant=\"sm\"\n          css={{\n            mt: \"$4\",\n            mb: \"$8\",\n            c: \"$on_surface_medium\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            columnGap: \"4px\",\n          }}\n        >\n          Switch the role of\n          <HighlightTerm value={peer.name} />\n          from <HighlightTerm value={peer.roleName} /> to\n        </Text>\n      </Box>\n      <Flex\n        align=\"center\"\n        css={{\n          w: \"100%\",\n          mb: \"$10\",\n        }}\n      >\n        <Box\n          css={{\n            position: \"relative\",\n            flex: \"1 1 0\",\n            minWidth: 0,\n          }}\n        >\n          <Dropdown.Root\n            open={open}\n            onOpenChange={setOpen}\n            css={{ width: \"100%\" }}\n          >\n            <Dropdown.Trigger\n              // @ts-ignore\n              ref={triggerRef}\n              data-testid=\"open_role_selection_dropdown\"\n              asChild\n              css={{\n                bg: \"$surface_default\",\n                r: \"$1\",\n                p: \"$6 $9\",\n              }}\n            >\n              <Flex align=\"center\" justify=\"between\" css={{ width: \"100%\" }}>\n                <Text>{selectedRole}</Text>\n                {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n              </Flex>\n            </Dropdown.Trigger>\n\n            <Dropdown.Content\n              align=\"start\"\n              sideOffset={8}\n              css={{ zIndex: 1000, w: \"100%\" }}\n            >\n              {roles.map((role) => (\n                <Dropdown.Item\n                  data-testid={role}\n                  key={role}\n                  onSelect={() => setRole(role)}\n                  css={{ w: `${triggerRef.current?.clientWidth}px` }}\n                >\n                  {role}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </Box>\n      </Flex>\n      <Flex justify=\"center\" align=\"center\" css={{ width: \"100%\", gap: \"$md\" }}>\n        {!isMobile && (\n          <Button\n            variant=\"standard\"\n            outlined\n            css={{ width: \"100%\" }}\n            onClick={() => onOpenChange(false)}\n            data-testid=\"cancel_button\"\n          >\n            Cancel\n          </Button>\n        )}\n\n        <Button\n          data-testid=\"change_button\"\n          variant=\"primary\"\n          css={{ width: \"100%\" }}\n          onClick={async () => {\n            if (selectedRole) {\n              await hmsActions.changeRoleOfPeer(peer.id, selectedRole, true);\n              onOpenChange(false);\n            }\n          }}\n        >\n          Switch Role\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nexport const RoleChangeModal = ({\n  peerId,\n  onOpenChange,\n}: {\n  peerId: string;\n  onOpenChange: (open: boolean) => void;\n}) => {\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (!peer) {\n    return null;\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet.Root\n        open={true}\n        onOpenChange={onOpenChange}\n        css={{ borderRadius: \"$0 $0 0 0\" }}\n      >\n        <Sheet.Content\n          css={{\n            p: \"$10 $8\",\n            background: \"$surface_dim\",\n            border: \"1px solid $border_default\",\n          }}\n        >\n          <RoleChangeContent peer={peer} onOpenChange={onOpenChange} isMobile />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ width: \"min(400px,80%)\", p: \"$10\", overflow: \"visible\" }}\n        >\n          <RoleChangeContent peer={peer} onOpenChange={onOpenChange} />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React, { useState } from \"react\";\nimport {\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { AlertTriangleIcon } from \"@100mslive/react-icons\";\nimport { Button, Dialog, Flex, Text } from \"../../../\";\nimport { ResolutionInput } from \"../Streaming/ResolutionInput\";\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useRecordingHandler } from \"../../common/hooks\";\nimport { RTMP_RECORD_DEFAULT_RESOLUTION } from \"../../common/constants\";\n\nconst StartRecording = ({ open, onOpenChange }) => {\n  const permissions = useHMSStore(selectPermissions);\n  const [resolution, setResolution] = useState(RTMP_RECORD_DEFAULT_RESOLUTION);\n  const { startRecording, recordingStarted } = useRecordingHandler();\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const hmsActions = useHMSActions();\n  if (!permissions?.browserRecording || isHLSRunning) {\n    return null;\n  }\n  if (isBrowserRecordingOn) {\n    return (\n      <Dialog.Root open={open} onOpenChange={onOpenChange}>\n        <Dialog.Portal>\n          <Dialog.Content\n            css={{\n              width: \"min(400px,80%)\",\n              p: \"$10\",\n              bg: \"#201617\",\n            }}\n          >\n            <Dialog.Title>\n              <Flex gap={2} css={{ c: \"$alert_error_default\" }}>\n                <AlertTriangleIcon />\n                <Text css={{ c: \"inherit\" }} variant=\"h6\">\n                  End Recording\n                </Text>\n              </Flex>\n            </Dialog.Title>\n            <Text variant=\"sm\" css={{ c: \"$on_surface_medium\", my: \"$8\" }}>\n              Are you sure you want to end recording? You can\u2019t undo this\n              action.\n            </Text>\n            <Flex justify=\"end\" css={{ mt: \"$12\" }}>\n              <Dialog.Close asChild>\n                <Button\n                  outlined\n                  css={{ borderColor: \"$secondary_bright\", mr: \"$4\" }}\n                >\n                  Don't end\n                </Button>\n              </Dialog.Close>\n              <Button\n                data-testid=\"stop_recording_confirm_mobile\"\n                variant=\"danger\"\n                icon\n                onClick={async () => {\n                  try {\n                    await hmsActions.stopRTMPAndRecording();\n                  } catch (error) {\n                    ToastManager.addToast({\n                      title: error.message,\n                      variant: \"error\",\n                    });\n                  }\n                  onOpenChange(false);\n                }}\n              >\n                End recording\n              </Button>\n            </Flex>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    );\n  }\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n        <Dialog.Title>\n          <Text variant=\"h6\">Start Recording</Text>\n        </Dialog.Title>\n        <ResolutionInput\n          testId=\"recording_resolution_mobile\"\n          css={{ flexDirection: \"column\", alignItems: \"start\" }}\n          onResolutionChange={setResolution}\n        />\n        <Button\n          data-testid=\"start_recording_confirm_mobile\"\n          variant=\"primary\"\n          icon\n          css={{ ml: \"auto\" }}\n          type=\"submit\"\n          disabled={recordingStarted || isStreamingOn}\n          onClick={async () => {\n            await startRecording(resolution);\n            onOpenChange(false);\n          }}\n        >\n          Start\n        </Button>\n      </Dialog.Content>\n    </Dialog.Root>\n  );\n};\n\nexport default StartRecording;\n", "import React, { useCallback, useState } from \"react\";\nimport { InfoIcon } from \"@100mslive/react-icons\";\nimport { Flex, Input, Label, Text, Tooltip } from \"../../../\";\nimport { DialogRow } from \"../../primitives/DialogContent\";\nimport {\n  RTMP_RECORD_DEFAULT_RESOLUTION,\n  RTMP_RECORD_RESOLUTION_MAX,\n  RTMP_RECORD_RESOLUTION_MIN,\n} from \"../../common/constants\";\n\nexport const ResolutionInput = ({\n  onResolutionChange,\n  disabled,\n  tooltipText,\n  css,\n  testId,\n}) => {\n  const [resolution, setResolution] = useState(RTMP_RECORD_DEFAULT_RESOLUTION);\n\n  const resolutionChangeHandler = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      let width = name === \"resWidth\" ? Number(value) : resolution.width;\n      let height = name === \"resHeight\" ? Number(value) : resolution.height;\n\n      if (width === 0) {\n        width = null;\n      }\n      if (height === 0) {\n        height = null;\n      }\n      const newResolution = {\n        width: !isNaN(width) ? width : RTMP_RECORD_DEFAULT_RESOLUTION.width,\n        height: !isNaN(height) ? height : RTMP_RECORD_DEFAULT_RESOLUTION.height,\n      };\n      setResolution(newResolution);\n    },\n    [resolution]\n  );\n\n  return (\n    <DialogRow breakSm css={css}>\n      <Flex gap={1}>\n        <Label css={{ mb: \"$8\" }}>Resolution</Label>\n        {tooltipText && (\n          <Tooltip title={tooltipText}>\n            <div>\n              <InfoIcon color=\"#B0C3DB\" />\n            </div>\n          </Tooltip>\n        )}\n      </Flex>\n      <Flex\n        justify=\"between\"\n        css={{ width: !tooltipText ? \"100%\" : \"70%\", \"@sm\": { width: \"100%\" } }}\n        gap={2}\n        direction=\"column\"\n      >\n        <Flex justify=\"between\" gap={2}>\n          <Flex direction=\"column\" css={{ width: \"50%\" }}>\n            <Text variant=\"xs\">Width</Text>\n            <Input\n              data-testid={`${testId}_width`}\n              css={{ width: \"100%\", mt: \"$4\" }}\n              name=\"resWidth\"\n              value={resolution.width}\n              onChange={resolutionChangeHandler}\n              readOnly={disabled}\n              min={RTMP_RECORD_RESOLUTION_MIN}\n              max={RTMP_RECORD_RESOLUTION_MAX}\n              onBlur={() => onResolutionChange(resolution)}\n              type=\"number\"\n            />\n          </Flex>\n          <Flex direction=\"column\" css={{ width: \"50%\" }}>\n            <Text variant=\"xs\">Height</Text>\n            <Input\n              data-testid={`${testId}_height`}\n              css={{ width: \"100%\", mt: \"$4\" }}\n              name=\"resHeight\"\n              value={resolution.height}\n              onChange={resolutionChangeHandler}\n              onBlur={() => onResolutionChange(resolution)}\n              readOnly={disabled}\n              min={RTMP_RECORD_RESOLUTION_MIN}\n              max={RTMP_RECORD_RESOLUTION_MAX}\n              type=\"number\"\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    </DialogRow>\n  );\n};\n", "import React, { useRef } from \"react\";\nimport { CheckIcon, CloudUploadIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Checkbox } from \"../../Checkbox\";\nimport { HorizontalDivider } from \"../../Divider\";\nimport { IconButton } from \"../../IconButton\";\nimport { Input } from \"../../Input\";\nimport { Label } from \"../../Label\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { Select } from \"../../Select\";\nimport { Switch } from \"../../Switch\";\nimport { Text } from \"../../Text\";\nimport { flexCenter } from \"../../utils\";\n\nexport const DialogContent = ({\n  Icon,\n  title,\n  closeable = true,\n  children,\n  css,\n  iconCSS = {},\n  ...props\n}) => {\n  return (\n    <Dialog.Portal>\n      <Dialog.Overlay />\n      <Dialog.Content css={{ width: \"min(600px, 100%)\", ...css }} {...props}>\n        <Dialog.Title>\n          <Flex justify=\"between\">\n            <Flex align=\"center\" css={{ mb: \"$1\" }}>\n              {Icon ? (\n                <Flex\n                  css={{\n                    mr: \"$2\",\n                    color: \"$on_primary_high\",\n                    ...flexCenter,\n                    ...iconCSS,\n                  }}\n                >\n                  <Icon />\n                </Flex>\n              ) : null}\n              <Text variant=\"h6\" inline>\n                {title}\n              </Text>\n            </Flex>\n            {closeable && (\n              <Dialog.DefaultClose data-testid=\"dialoge_cross_icon\" />\n            )}\n          </Flex>\n        </Dialog.Title>\n        <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n        <Box>{children}</Box>\n      </Dialog.Content>\n    </Dialog.Portal>\n  );\n};\n\nexport const ErrorDialog = ({\n  open = true,\n  onOpenChange,\n  title,\n  children,\n  ...props\n}) => {\n  return (\n    <Dialog.Root open={open} onOpenChange={onOpenChange}>\n      <DialogContent\n        Icon={CrossIcon}\n        title={title}\n        onInteractOutside={(e) => e.preventDefault()}\n        onEscapeKeyDown={(e) => e.preventDefault()}\n        onPointerDownOutside={(e) => e.preventDefault()}\n        closeable={false}\n        iconCSS={{ color: \"$alert_error_default\" }}\n        {...props}\n      >\n        <Box css={{ mt: \"$lg\" }}>{children}</Box>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n\nexport const RequestDialog = ({\n  open = true,\n  onOpenChange,\n  title,\n  body,\n  actionText = \"Accept\",\n  onAction,\n  Icon,\n}) => (\n  <Dialog.Root open={open} onOpenChange={onOpenChange}>\n    <Dialog.Portal>\n      <Dialog.Overlay />\n      <Dialog.Content css={{ width: \"min(400px,80%)\", p: \"$10\" }}>\n        <Dialog.Title\n          css={{ p: 0, display: \"flex\", flexDirection: \"row\", gap: \"$md\" }}\n        >\n          {Icon ? Icon : null}\n          <Text variant=\"h6\">{title}</Text>\n        </Dialog.Title>\n        {typeof body === \"string\" ? (\n          <Text\n            variant=\"md\"\n            css={{\n              fontWeight: 400,\n              mt: \"$4\",\n              mb: \"$10\",\n              c: \"$on_surface_medium\",\n            }}\n          >\n            {body}\n          </Text>\n        ) : (\n          <Box css={{ mt: \"$4\", mb: \"$10\" }}>{body}</Box>\n        )}\n        <Flex\n          justify=\"center\"\n          align=\"center\"\n          css={{ width: \"100%\", gap: \"$md\" }}\n        >\n          <Box css={{ width: \"50%\" }}>\n            <Dialog.Close css={{ width: \"100%\" }}>\n              <Button variant=\"standard\" outlined css={{ width: \"100%\" }}>\n                Cancel\n              </Button>\n            </Dialog.Close>\n          </Box>\n          <Box css={{ width: \"50%\" }}>\n            <Button\n              variant=\"primary\"\n              css={{ width: \"100%\" }}\n              onClick={onAction}\n            >\n              {actionText}\n            </Button>\n          </Box>\n        </Flex>\n      </Dialog.Content>\n    </Dialog.Portal>\n  </Dialog.Root>\n);\n\n/**\n * a row of items which breaks into column on small screen. For example title on left and options to select\n * from on right for select component.\n */\nexport const DialogRow = ({\n  children,\n  breakSm = false,\n  css,\n  justify = \"between\",\n}) => {\n  let finalCSS = {\n    margin: \"$10 0\",\n    w: \"100%\",\n  };\n  if (breakSm) {\n    finalCSS[\"@sm\"] = {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n    };\n  }\n  if (css) {\n    finalCSS = Object.assign(finalCSS, css);\n  }\n  return (\n    <Flex align=\"center\" justify={justify} css={finalCSS}>\n      {children}\n    </Flex>\n  );\n};\n\nexport const DialogCol = ({\n  children,\n  breakSm = false,\n  css,\n  align = \"center\",\n  justify = \"between\",\n  ...props\n}) => {\n  let finalCSS = {\n    margin: \"$10 0\",\n    w: \"100%\",\n  };\n  if (breakSm) {\n    finalCSS[\"@sm\"] = {\n      alignItems: \"flex-start\",\n    };\n  }\n  if (css) {\n    finalCSS = Object.assign(finalCSS, css);\n  }\n  return (\n    <Flex\n      direction=\"column\"\n      align={align}\n      justify={justify}\n      css={finalCSS}\n      {...props}\n    >\n      {children}\n    </Flex>\n  );\n};\n\n/**\n * key field and label field are optional, option is directly used if not passed\n */\nexport const DialogSelect = ({\n  title,\n  options,\n  keyField,\n  labelField,\n  selected,\n  onChange,\n  ...props\n}) => {\n  return (\n    <DialogRow breakSm>\n      <Label>{title}</Label>\n      <Select.Root\n        data-testid={`dialog_select_${title}`}\n        css={{ width: \"70%\", \"@sm\": { width: \"100%\" } }}\n        {...props}\n      >\n        <Select.DefaultDownIcon />\n        <Select.Select\n          onChange={(e) => onChange(e.target.value)}\n          value={selected}\n          css={{ width: \"100%\" }}\n        >\n          {options.map((option) => {\n            const id = keyField ? option[keyField] : option;\n            const label = labelField ? option[labelField] : option;\n            return (\n              <option value={id} key={id}>\n                {label}\n              </option>\n            );\n          })}\n        </Select.Select>\n      </Select.Root>\n    </DialogRow>\n  );\n};\n\nexport const DialogInput = ({\n  title,\n  value,\n  onChange,\n  placeholder,\n  disabled,\n  type,\n  ...props\n}) => {\n  return (\n    <DialogRow breakSm>\n      <Label>{title}</Label>\n      <Input\n        css={{ width: \"70%\", \"@sm\": { width: \"100%\" }, bg: \"$surface_bright\" }}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        placeholder={placeholder}\n        disabled={disabled}\n        type={type}\n        {...props}\n      />\n    </DialogRow>\n  );\n};\n\nexport const DialogInputFile = ({\n  value,\n  onChange,\n  placeholder,\n  disabled,\n  type,\n  ...props\n}) => {\n  const inputRef = useRef();\n  return (\n    <DialogCol\n      breakSm\n      onClick={() => inputRef.current?.click()}\n      css={{\n        justifyContent: \"center\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        py: \"$12\",\n        border: \"1px dashed $border_bright\",\n        r: \"$1\",\n        height: \"max(140px, 30%)\",\n        alignItems: \"center\",\n        m: \"$6 0\",\n      }}\n      gap=\"8\"\n    >\n      <IconButton\n        variant=\"standard\"\n        css={{\n          border: \"none\",\n          background: \"none\",\n          \"&:hover\": {\n            border: \"none\",\n            background: \"none\",\n            bg: \"transparent !important\",\n          },\n        }}\n      >\n        <CloudUploadIcon\n          style={{\n            width: \"3rem\",\n            height: \"3rem\",\n          }}\n        />\n      </IconButton>\n      <Flex direction=\"row\">\n        <Input\n          ref={inputRef}\n          css={{ width: \"70%\", \"@sm\": { width: \"100%\" } }}\n          value={value}\n          onChange={(e) => onChange(e.target)}\n          placeholder={placeholder}\n          disabled={disabled}\n          type={type}\n          hidden={true}\n          {...props}\n        />\n        <IconButton\n          variant=\"standard\"\n          css={{\n            background: \"none\",\n            border: \"none\",\n            textDecoration: \"underline\",\n            \"&:hover\": {\n              background: \"none !important\",\n              border: \"none !important\",\n            },\n          }}\n        >\n          <Text variant=\"md\">{placeholder}</Text>\n        </IconButton>\n      </Flex>\n    </DialogCol>\n  );\n};\n\nexport const DialogSwitch = ({ title, value, onChange, disabled }) => {\n  return (\n    <DialogRow>\n      <Text>{title}</Text>\n      <Flex justify=\"end\" css={{ width: \"70%\" }}>\n        <Switch\n          checked={value}\n          disabled={disabled}\n          onCheckedChange={onChange}\n        />\n      </Flex>\n    </DialogRow>\n  );\n};\n\nexport const DialogCheckbox = ({\n  title,\n  value,\n  onChange,\n  disabled,\n  css,\n  id,\n}) => {\n  return (\n    <DialogRow css={css}>\n      <Label htmlFor={id} css={{ cursor: \"pointer\" }}>\n        {title}\n      </Label>\n      <Checkbox.Root\n        checked={value}\n        onCheckedChange={(value) => onChange(value)}\n        disabled={disabled}\n        id={id}\n      >\n        <Checkbox.Indicator>\n          <CheckIcon width={16} height={16} />\n        </Checkbox.Indicator>\n      </Checkbox.Root>\n    </DialogRow>\n  );\n};\n", "import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { match, P } from \"ts-pattern\";\nimport {\n  selectHMSStats,\n  selectLocalPeerID,\n  selectPeersMap,\n  selectTracksMap,\n  useHMSStatsStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { HorizontalDivider } from \"../../Divider\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Label } from \"../../Label\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { formatBytes } from \"../../Stats\";\nimport { Switch } from \"../../Switch\";\nimport { Text } from \"../../Text\";\nimport { DialogDropdownTrigger } from \"../primitives/DropdownTrigger\";\nimport { useSetUiSettings } from \"./AppData/useUISettings\";\nimport { useDropdownSelection } from \"./hooks/useDropdownSelection\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const StatsForNerds = ({ onOpenChange }) => {\n  const tracksWithLabels = useTracksWithLabel();\n  const statsOptions = useMemo(\n    () => [\n      { id: \"local-peer\", label: \"Local Peer Stats\" },\n      ...tracksWithLabels,\n    ],\n    [tracksWithLabels]\n  );\n  const [selectedStat, setSelectedStat] = useState(statsOptions[0]);\n  const [showStatsOnTiles, setShowStatsOnTiles] = useSetUiSettings(\n    UI_SETTINGS.showStatsOnTiles\n  );\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const selectionBg = useDropdownSelection();\n\n  useEffect(() => {\n    if (\n      selectedStat.id !== \"local-peer\" &&\n      !tracksWithLabels.find((track) => track.id === selectedStat.id)\n    ) {\n      setSelectedStat(\"local-peer\");\n    }\n  }, [tracksWithLabels, selectedStat]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            width: \"min(500px, 95%)\",\n            maxHeight: \"100%\",\n            overflowY: \"auto\",\n          }}\n        >\n          {/* Title */}\n          <Dialog.Title css={{ p: \"$4 0\" }}>\n            <Flex justify=\"between\">\n              <Flex align=\"center\" css={{ mb: \"$1\" }}>\n                <Text variant=\"h6\" inline>\n                  Stats For Nerds\n                </Text>\n              </Flex>\n              <Dialog.DefaultClose data-testid=\"stats_dialog_close_icon\" />\n            </Flex>\n          </Dialog.Title>\n          <HorizontalDivider css={{ mt: \"0.8rem\" }} />\n          {/* Switch */}\n          <Flex justify=\"start\" gap={4} css={{ m: \"$10 0\" }}>\n            <Switch\n              checked={showStatsOnTiles}\n              onCheckedChange={setShowStatsOnTiles}\n            />\n            <Text variant=\"body2\" css={{ fontWeight: \"$semiBold\" }}>\n              Show Stats on Tiles\n            </Text>\n          </Flex>\n          {/* Select */}\n          <Flex\n            direction=\"column\"\n            css={{\n              mb: \"$12\",\n              position: \"relative\",\n              minWidth: 0,\n            }}\n          >\n            <Label variant=\"body2\" css={{ c: \"$on_surface_high\" }}>\n              Stats For\n            </Label>\n            <Dropdown.Root\n              data-testid=\"dialog_select_Stats For\"\n              open={open}\n              onOpenChange={setOpen}\n            >\n              <DialogDropdownTrigger\n                title={selectedStat.label || \"Select Stats\"}\n                css={{ mt: \"$4\" }}\n                titleCSS={{ mx: 0 }}\n                open={open}\n                ref={ref}\n              />\n              <Dropdown.Portal>\n                <Dropdown.Content\n                  align=\"start\"\n                  sideOffset={8}\n                  css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n                >\n                  {statsOptions.map((option) => {\n                    const isSelected =\n                      option.id === selectedStat.id &&\n                      option.layer === selectedStat.layer;\n                    return (\n                      <Dropdown.Item\n                        key={`${option.id}-${option.layer || \"\"}`}\n                        onClick={() => {\n                          setSelectedStat(option);\n                        }}\n                        css={{\n                          px: \"$9\",\n                          bg: isSelected ? selectionBg : undefined,\n                          c: isSelected\n                            ? \"$on_primary_high\"\n                            : \"$on_primary_high\",\n                        }}\n                      >\n                        {option.label}\n                      </Dropdown.Item>\n                    );\n                  })}\n                </Dropdown.Content>\n              </Dropdown.Portal>\n            </Dropdown.Root>\n          </Flex>\n          {/* Stats */}\n          {selectedStat.id === \"local-peer\" ? (\n            <LocalPeerStats />\n          ) : (\n            <TrackStats\n              trackID={selectedStat.id}\n              layer={selectedStat.layer}\n              local={selectedStat.local}\n            />\n          )}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst useTracksWithLabel = () => {\n  const tracksMap = useHMSStore(selectTracksMap);\n  const peersMap = useHMSStore(selectPeersMap);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const tracksWithLabels = useMemo(\n    () =>\n      Object.values(tracksMap).reduce((res, track) => {\n        const peerName = peersMap[track.peerId]?.name;\n        const isLocalTrack = track.peerId === localPeerID;\n        if (isLocalTrack && track.layerDefinitions?.length) {\n          res = res.concat(\n            track.layerDefinitions.map(({ layer }) => {\n              return {\n                id: track.id,\n                layer,\n                local: true,\n                label: `${peerName} ${track.source} ${track.type} - ${layer}`,\n              };\n            })\n          );\n          return res;\n        }\n        res.push({\n          id: track.id,\n          local: isLocalTrack,\n          label: `${peerName} ${track.source} ${track.type}`,\n        });\n        return res;\n      }, []),\n    [tracksMap, peersMap, localPeerID]\n  );\n  return tracksWithLabels;\n};\n\nconst LocalPeerStats = () => {\n  const stats = useHMSStatsStore(selectHMSStats.localPeerStats);\n\n  if (!stats) {\n    return null;\n  }\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Packets Lost\" value={stats.subscribe?.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.subscribe?.jitter} />\n      <StatsRow\n        label=\"Publish Bitrate\"\n        value={formatBytes(stats.publish?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Subscribe Bitrate\"\n        value={formatBytes(stats.subscribe?.bitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Available Outgoing Bitrate\"\n        value={formatBytes(stats.publish?.availableOutgoingBitrate, \"b/s\")}\n      />\n      <StatsRow\n        label=\"Total Bytes Sent\"\n        value={formatBytes(stats.publish?.bytesSent)}\n      />\n      <StatsRow\n        label=\"Total Bytes Received\"\n        value={formatBytes(stats.subscribe?.bytesReceived)}\n      />\n      <StatsRow\n        label=\"Round Trip Time\"\n        value={`${\n          (\n            ((stats.publish?.currentRoundTripTime || 0) +\n              (stats.subscribe?.currentRoundTripTime || 0)) /\n            2\n          ).toFixed(3) * 1000\n        } ms`}\n      />\n    </Flex>\n  );\n};\n\nconst TrackStats = ({ trackID, layer, local }) => {\n  const selector = match({ trackID, layer, local })\n    .with(\n      {\n        layer: P.when((layer) => !!layer),\n      },\n      () => selectHMSStats.localVideoTrackStatsByLayer(layer)(trackID)\n    )\n    .with({ local: P.when((local) => !!local) }, () =>\n      selectHMSStats.localAudioTrackStatsByID(trackID)\n    )\n    .otherwise(() => selectHMSStats.trackStatsByID(trackID));\n  const stats = useHMSStatsStore(selector);\n  if (!stats) {\n    return null;\n  }\n  const inbound = stats.type.includes(\"inbound\");\n\n  return (\n    <Flex css={{ flexWrap: \"wrap\", gap: \"$10\" }}>\n      <StatsRow label=\"Type\" value={stats.type + \" \" + stats.kind} />\n      <StatsRow label=\"Bitrate\" value={formatBytes(stats.bitrate, \"b/s\")} />\n      <StatsRow label=\"Packets Lost\" value={stats.packetsLost} />\n      <StatsRow label=\"Jitter\" value={stats.jitter?.toFixed(3)} />\n      <StatsRow\n        label={inbound ? \"Bytes Received\" : \"Bytes Sent\"}\n        value={formatBytes(inbound ? stats.bytesReceived : stats.bytesSent)}\n      />\n      {stats.kind === \"video\" && (\n        <>\n          <StatsRow label=\"Framerate\" value={stats.framesPerSecond} />\n          {!inbound && (\n            <StatsRow\n              label=\"Quality Limitation Reason\"\n              value={stats.qualityLimitationReason}\n            />\n          )}\n        </>\n      )}\n      <StatsRow\n        label=\"Round Trip Time\"\n        value={\n          stats.roundTripTime\n            ? `${(stats.roundTripTime * 1000).toFixed(3)} ms`\n            : \"-\"\n        }\n      />\n    </Flex>\n  );\n};\n\nconst StatsRow = React.memo(({ label, value }) => (\n  <Box css={{ bg: \"$surface_bright\", w: \"calc(50% - $6)\", p: \"$8\", r: \"$3\" }}>\n    <Text\n      variant=\"overline\"\n      css={{\n        fontWeight: \"$semiBold\",\n        color: \"$on_surface_medium\",\n        textTransform: \"uppercase\",\n      }}\n    >\n      {label}\n    </Text>\n    <Text\n      variant=\"sub1\"\n      css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}\n    >\n      {value || \"-\"}\n    </Text>\n  </Box>\n));\n", "import React, { useCallback, useRef, useState } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  ChangeRoleIcon,\n  CheckIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Dropdown,\n  Flex,\n  Loading,\n  Text,\n} from \"../../../\";\nimport { DialogContent, DialogRow } from \"../../primitives/DialogContent\";\nimport { DialogDropdownTrigger } from \"../../primitives/DropdownTrigger\";\nimport { useFilteredRoles } from \"../../common/hooks\";\n\nexport const BulkRoleChangeModal = ({ onOpenChange }) => {\n  const roles = useFilteredRoles();\n  const hmsActions = useHMSActions();\n  const ref = useRef(null);\n  const roleRef = useRef(null);\n  const [selectedBulkRole, setBulkRole] = useState([]);\n  const [selectedRole, setRole] = useState(\"\");\n  const [bulkRoleDialog, setBulkRoleDialog] = useState(false);\n  const [roleDialog, setRoleDialog] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSubmiting, setIsSubmiting] = useState(false);\n\n  const changeBulkRole = useCallback(async () => {\n    if (selectedBulkRole.length > 0 && selectedRole) {\n      try {\n        setIsSubmiting(true);\n        await hmsActions.changeRoleOfPeersWithRoles(\n          selectedBulkRole,\n          selectedRole\n        );\n        setIsSubmiting(false);\n        setErrorMessage(\"\");\n        onOpenChange(false);\n      } catch (err) {\n        setErrorMessage(err?.message ? err?.message : \"Unknown error\");\n        setIsSubmiting(false);\n      }\n    }\n  }, [selectedBulkRole, selectedRole, hmsActions, onOpenChange]);\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Bulk Role Change\" Icon={ChangeRoleIcon}>\n        <DialogRow>\n          <Text>For Roles: </Text>\n          <Dropdown.Root\n            open={bulkRoleDialog}\n            onOpenChange={(value) => {\n              if (value) {\n                setBulkRoleDialog(value);\n              }\n            }}\n            modal={false}\n          >\n            <DialogDropdownTrigger\n              ref={ref}\n              title={\n                selectedBulkRole.length === 0\n                  ? \"Select Multiple Roles\"\n                  : selectedBulkRole.toString()\n              }\n              css={{\n                w: \"70%\",\n                p: \"$8\",\n              }}\n              open={bulkRoleDialog}\n            />\n            <Dropdown.Content\n              css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n              onInteractOutside={() => {\n                if (bulkRoleDialog) {\n                  setBulkRoleDialog(false);\n                }\n              }}\n            >\n              {roles &&\n                roles.map((role) => {\n                  return (\n                    <Dropdown.CheckboxItem\n                      key={role}\n                      checked={selectedBulkRole.includes(role)}\n                      onCheckedChange={(value) => {\n                        setBulkRole((selection) => {\n                          return value\n                            ? [...selection, role]\n                            : selection.filter(\n                                (selectedRole) => selectedRole !== role\n                              );\n                        });\n                        setErrorMessage(\"\");\n                      }}\n                    >\n                      <Checkbox.Root\n                        css={{ margin: \"$2\" }}\n                        checked={selectedBulkRole.includes(role)}\n                      >\n                        <Checkbox.Indicator>\n                          <CheckIcon width={16} height={16} />\n                        </Checkbox.Indicator>\n                      </Checkbox.Root>\n                      {role}\n                    </Dropdown.CheckboxItem>\n                  );\n                })}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </DialogRow>\n        <DialogRow>\n          <Text>To Role: </Text>\n          <Dropdown.Root\n            open={roleDialog}\n            onOpenChange={(value) => setRoleDialog(value)}\n          >\n            <DialogDropdownTrigger\n              ref={roleRef}\n              title={selectedRole || \"Select Role\"}\n              css={{\n                w: \"70%\",\n                p: \"$8\",\n              }}\n              open={roleDialog}\n            />\n            <Dropdown.Content\n              css={{ w: roleRef.current?.clientWidth, zIndex: 1000 }}\n            >\n              {roles &&\n                roles.map((role) => {\n                  return (\n                    <Dropdown.Item\n                      key={role}\n                      onSelect={() => {\n                        setRole(role);\n                        setErrorMessage(\"\");\n                      }}\n                    >\n                      {role}\n                    </Dropdown.Item>\n                  );\n                })}\n            </Dropdown.Content>\n          </Dropdown.Root>\n        </DialogRow>\n        <DialogRow>\n          {errorMessage && (\n            <Flex\n              gap={2}\n              css={{ c: \"$alert_error_default\", w: \"70%\", ml: \"auto\" }}\n            >\n              <AlertTriangleIcon />\n              <Text css={{ c: \"inherit\" }}>{errorMessage}</Text>\n            </Flex>\n          )}\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={changeBulkRole}\n            disabled={!(selectedRole && selectedBulkRole.length > 0)}\n          >\n            {isSubmiting && <Loading css={{ color: \"$on_primary_medium\" }} />}\n            Apply\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { config as cssConfig, Dialog } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\nimport { CaptionContent } from \"./CaptionContent\";\n\nexport const CaptionModal = ({\n  onOpenChange,\n}: {\n  onOpenChange: (value: boolean) => void;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const props = {\n    isMobile,\n    onExit: () => {\n      onOpenChange(false);\n    },\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root defaultOpen onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ bg: \"$surface_dim\", p: \"$8 0\" }}>\n          <CaptionContent {...props} />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ bg: \"$surface_dim\", width: \"min(400px,80%)\", p: \"$10\" }}\n        >\n          <CaptionContent {...props} />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport {\n  HMSTranscriptionMode,\n  selectIsTranscriptionEnabled,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Loading } from \"../../../Loading\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetAppDataByKey,\n  useSetIsCaptionEnabled,\n} from \"../AppData/useUISettings\";\nimport { CAPTION_TOAST } from \"../../common/constants\";\n\nexport const CaptionContent = ({\n  isMobile,\n  onExit,\n}: {\n  isMobile: boolean;\n  onExit: () => void;\n}) => {\n  const DURATION = 2000;\n  const actions = useHMSActions();\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n  const [toastId, setToastId] = useSetAppDataByKey(CAPTION_TOAST.captionToast);\n\n  const [isCaptionEnabled, setIsCaptionEnabled] = useSetIsCaptionEnabled();\n\n  return (\n    <>\n      <Text\n        variant={isMobile ? \"md\" : \"lg\"}\n        css={{\n          color: \"$on_surface_high\",\n          fontWeight: \"$semiBold\",\n          display: \"flex\",\n          \"@md\": { px: \"$8\" },\n        }}\n      >\n        {isTranscriptionEnabled ? \"Disable\" : \"Enable\"} Closed Caption (CC) for\n        this session?\n        <Box\n          css={{\n            color: \"inherit\",\n            ml: \"auto\",\n            \"&:hover\": { color: \"$on_surface_medium\", cursor: \"pointer\" },\n          }}\n          onClick={onExit}\n        >\n          <CrossIcon />\n        </Box>\n      </Text>\n      {!isMobile ? (\n        <Text\n          variant=\"sm\"\n          css={{ color: \"$on_surface_medium\", mt: \"$4\", \"@md\": { px: \"$8\" } }}\n        >\n          This will {isTranscriptionEnabled ? \"disable\" : \"enable\"} Closed\n          Captions for everyone in this room. You can&nbsp;\n          {isTranscriptionEnabled ? \"enable\" : \"disable\"} it later.\n        </Text>\n      ) : null}\n\n      <Flex\n        justify=\"between\"\n        align=\"center\"\n        css={{\n          width: \"100%\",\n          gap: \"$md\",\n          mt: \"$10\",\n          \"@md\": { px: \"$4\" },\n        }}\n      >\n        {isMobile ? null : (\n          <Button\n            variant=\"standard\"\n            css={{ w: \"100%\" }}\n            outlined\n            onClick={onExit}\n          >\n            Cancel\n          </Button>\n        )}\n        <Flex\n          direction=\"column\"\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            width: \"100%\",\n            \"@md\": { px: \"$4\" },\n          }}\n        >\n          {isMobile && isTranscriptionEnabled ? (\n            <Button\n              variant=\"standard\"\n              css={{ w: \"100%\", mb: \"$4\" }}\n              outlined\n              onClick={() => {\n                setIsCaptionEnabled(!isCaptionEnabled);\n                onExit();\n              }}\n            >\n              {isCaptionEnabled ? \"Hide For Me\" : \"Show For Me\"}\n            </Button>\n          ) : null}\n          <Button\n            variant={isTranscriptionEnabled ? \"danger\" : \"primary\"}\n            css={{ width: \"100%\" }}\n            data-testid=\"popup_change_btn\"\n            onClick={async () => {\n              try {\n                if (isTranscriptionEnabled) {\n                  await actions.stopTranscription({\n                    mode: HMSTranscriptionMode.CAPTION,\n                  });\n                  setIsCaptionEnabled(false);\n                  const id = ToastManager.replaceToast(toastId, {\n                    title: `Disabling Closed Caption for everyone.`,\n                    variant: \"standard\",\n                    duration: DURATION,\n                    icon: <Loading color=\"currentColor\" />,\n                  });\n                  setToastId(id);\n                  onExit();\n                  return;\n                }\n                await actions.startTranscription({\n                  mode: HMSTranscriptionMode.CAPTION,\n                });\n                const id = ToastManager.replaceToast(toastId, {\n                  title: `Enabling Closed Caption for everyone.`,\n                  variant: \"standard\",\n                  duration: DURATION,\n                  icon: <Loading color=\"currentColor\" />,\n                });\n                setToastId(id);\n              } catch (err) {\n                const id = ToastManager.replaceToast(toastId, {\n                  title: `Failed to ${\n                    isTranscriptionEnabled ? \"disable\" : \"enable\"\n                  } closed caption`,\n                  variant: \"error\",\n                  icon: <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />,\n                });\n                setToastId(id);\n              } finally {\n                setIsCaptionEnabled(true);\n              }\n              onExit();\n            }}\n          >\n            {isTranscriptionEnabled ? \"Disable\" : \"Enable\"} for Everyone\n          </Button>\n        </Flex>\n      </Flex>\n      {isMobile && (\n        <Text\n          variant=\"sm\"\n          css={{\n            color: \"$on_surface_medium\",\n            pb: \"$4\",\n            mb: \"$8\",\n            \"@md\": { px: \"$8\", mt: \"$4\" },\n          }}\n        >\n          This will {isTranscriptionEnabled ? \"disable\" : \"enable\"} Closed\n          Captions for everyone in this room. You can&nbsp;\n          {isTranscriptionEnabled ? \"enable\" : \"disable\"} it later.\n        </Text>\n      )}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Dropdown, Text } from \"../../..\";\nimport { useFullscreen } from \"../hooks/useFullscreen\";\n\nexport const FullScreenItem = () => {\n  const { allowed, isFullscreen, toggleFullscreen } = useFullscreen();\n\n  if (!allowed) {\n    return null;\n  }\n\n  return (\n    <Dropdown.Item\n      onClick={() => {\n        toggleFullscreen();\n      }}\n      data-testid=\"full_screen_btn\"\n    >\n      <ExpandIcon />\n      <Text variant=\"sm\" css={{ ml: \"$4\" }}>\n        {isFullscreen ? \"Exit \" : \"Go \"}Fullscreen\n      </Text>\n    </Dropdown.Item>\n  );\n};\n", "import { useCallback, useEffect, useState } from \"react\";\nimport screenfull from \"screenfull\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { DEFAULT_PORTAL_CONTAINER } from \"../../common/constants\";\n\nexport const useFullscreen = () => {\n  const [isFullScreenEnabled, setIsFullScreenEnabled] = useState(\n    screenfull.isFullscreen\n  );\n\n  const toggle = useCallback(async () => {\n    if (!screenfull.isEnabled) {\n      ToastManager.addToast({ title: \"Fullscreen feature not supported\" });\n      return;\n    }\n    try {\n      const container = document.querySelector(DEFAULT_PORTAL_CONTAINER);\n      if (isFullScreenEnabled) {\n        await screenfull.exit();\n      } else if (container) {\n        await screenfull.request(container);\n      }\n    } catch (err) {\n      ToastManager.addToast({ title: (err as Error).message });\n    }\n  }, [isFullScreenEnabled]);\n\n  useEffect(() => {\n    const onChange = () => {\n      setIsFullScreenEnabled(screenfull.isFullscreen);\n    };\n    if (screenfull.isEnabled) {\n      screenfull.on(\"change\", onChange);\n    }\n    return () => {\n      if (screenfull.isEnabled) {\n        screenfull.off(\"change\", onChange);\n      }\n    };\n  }, []);\n\n  return {\n    allowed: screenfull.isEnabled,\n    isFullscreen: isFullScreenEnabled,\n    toggleFullscreen: toggle,\n  };\n};\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  HMSRoleName,\n  HMSTrackSource,\n  HMSTrackType,\n  selectAvailableRoleNames,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { MicOffIcon } from \"@100mslive/react-icons\";\nimport { Dialog } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n// @ts-ignore: No implicit any\nimport { DialogContent } from \"../../primitives/DialogContent\";\nimport { MuteAllContent } from \"./MuteAllContent\";\n\nexport const MuteAllModal = ({\n  onOpenChange,\n  isMobile = false,\n}: {\n  onOpenChange: (value: boolean) => void;\n  isMobile?: boolean;\n}) => {\n  const roles = useHMSStore(selectAvailableRoleNames);\n  const hmsActions = useHMSActions();\n  const [enabled, setEnabled] = useState(false);\n  const [trackType, setTrackType] = useState<HMSTrackType>();\n  const [selectedRole, setRole] = useState<HMSRoleName>();\n  const [selectedSource, setSource] = useState<HMSTrackSource>();\n\n  const muteAll = useCallback(async () => {\n    await hmsActions.setRemoteTracksEnabled({\n      enabled: enabled,\n      type: trackType,\n      source: selectedSource,\n      roles: selectedRole ? [selectedRole] : undefined,\n    });\n    onOpenChange(false);\n  }, [\n    selectedRole,\n    enabled,\n    trackType,\n    selectedSource,\n    hmsActions,\n    onOpenChange,\n  ]);\n\n  const props = {\n    muteAll,\n    roles,\n    enabled,\n    setEnabled,\n    trackType,\n    setTrackType,\n    selectedRole,\n    setRole,\n    selectedSource,\n    setSource,\n    isMobile,\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root defaultOpen onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ px: \"$10\" }}>\n          <MuteAllContent {...props} />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <DialogContent title=\"Mute/Unmute Remote Tracks\" Icon={MicOffIcon}>\n        <MuteAllContent {...props} />\n      </DialogContent>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport {\n  HMSRoleName,\n  HMSTrackSource,\n  HMSTrackType,\n  selectPermissions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Button } from \"../../../Button\";\nimport { Label } from \"../../../Label\";\nimport { Flex } from \"../../../Layout\";\nimport { RadioGroup } from \"../../../RadioGroup\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit any\nimport { DialogRow, DialogSelect } from \"../../primitives/DialogContent\";\nimport { trackSourceOptions, trackTypeOptions } from \"./constants\";\n\nexport const MuteAllContent = (props: {\n  muteAll: () => Promise<void>;\n  roles?: HMSRoleName[];\n  enabled: boolean;\n  setEnabled: (value: boolean) => void;\n  trackType?: HMSTrackType;\n  setTrackType: (value: HMSTrackType) => void;\n  selectedRole?: HMSRoleName;\n  setRole: (value: HMSRoleName) => void;\n  selectedSource?: HMSTrackSource;\n  setSource: (value: HMSTrackSource) => void;\n  isMobile: boolean;\n}) => {\n  const roles = props.roles || [];\n  const permissions = useHMSStore(selectPermissions);\n  return (\n    <>\n      <DialogSelect\n        title=\"Role\"\n        options={[\n          { label: \"All Roles\", value: \"\" },\n          ...roles.map((role) => ({ label: role, value: role })),\n        ]}\n        selected={props.selectedRole}\n        keyField=\"value\"\n        labelField=\"label\"\n        onChange={props.setRole}\n      />\n      <DialogSelect\n        title=\"Track type\"\n        options={trackTypeOptions}\n        selected={props.trackType}\n        onChange={props.setTrackType}\n        keyField=\"value\"\n        labelField=\"label\"\n      />\n      <DialogSelect\n        title=\"Track source\"\n        options={trackSourceOptions}\n        selected={props.selectedSource}\n        onChange={props.setSource}\n        keyField=\"value\"\n        labelField=\"label\"\n      />\n      <DialogRow>\n        <Text variant=\"md\">Track status</Text>\n        <RadioGroup.Root\n          value={String(props.enabled)}\n          onValueChange={(value) => props.setEnabled(value === \"true\")}\n        >\n          {permissions?.mute && (\n            <Flex align=\"center\" css={{ mr: \"$8\" }}>\n              <RadioGroup.Item\n                value=\"false\"\n                id=\"trackDisableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackDisableRadio\">Mute</Label>\n            </Flex>\n          )}\n          {permissions?.unmute && (\n            <Flex align=\"center\" css={{ cursor: \"pointer\" }}>\n              <RadioGroup.Item\n                value=\"true\"\n                id=\"trackEnableRadio\"\n                css={{ mr: \"$4\" }}\n              >\n                <RadioGroup.Indicator />\n              </RadioGroup.Item>\n              <Label htmlFor=\"trackEnableRadio\">Request Unmute</Label>\n            </Flex>\n          )}\n        </RadioGroup.Root>\n      </DialogRow>\n      <DialogRow justify=\"end\">\n        <Button\n          variant=\"primary\"\n          onClick={props.muteAll}\n          css={{ w: props?.isMobile ? \"100%\" : \"\" }}\n        >\n          Apply\n        </Button>\n      </DialogRow>\n    </>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectHasPeerHandRaised,\n  selectLocalPeerID,\n  selectPeerMetadata,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n\nexport const useMyMetadata = () => {\n  const hmsActions = useHMSActions();\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const vanillaStore = useHMSVanillaStore();\n  const metaData = useHMSStore(selectPeerMetadata(localPeerId));\n  const isHandRaised = useHMSStore(selectHasPeerHandRaised(localPeerId));\n\n  const update = async (updatedFields: Record<string, any>) => {\n    try {\n      // get current state from store and merge updated fields\n      const currentMetadata = vanillaStore.getState(\n        selectPeerMetadata(localPeerId)\n      );\n      await hmsActions.changeMetadata(\n        Object.assign(currentMetadata, updatedFields)\n      );\n      return true;\n    } catch (error) {\n      console.error(\"failed to update metadata \", updatedFields);\n    }\n    return false;\n  };\n\n  const toggleHandRaise = useCallback(async () => {\n    if (isHandRaised) {\n      await hmsActions.lowerLocalPeerHand();\n      await update({ handRaisedAt: undefined });\n    } else {\n      await hmsActions.raiseLocalPeerHand();\n      await update({ isBRBOn: false, handRaisedAt: Date.now() });\n    }\n  }, [isHandRaised]); //eslint-disable-line\n\n  const toggleBRB = useCallback(async () => {\n    const newValue = !metaData?.isBRBOn;\n    await update({ isBRBOn: newValue });\n    if (newValue) {\n      await hmsActions.lowerLocalPeerHand();\n    }\n  }, [metaData?.isBRBOn]); //eslint-disable-line\n\n  return {\n    isHandRaised,\n    isBRBOn: !!metaData?.isBRBOn,\n    metaData,\n    updateMetaData: update,\n    toggleHandRaise,\n    toggleBRB,\n  };\n};\n", "import { useEffect } from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { getCssText } from \"../../../Theme\";\nimport { usePIPWindow } from \"./usePIPWindow\";\n\nexport const usePIPChat = () => {\n  const hmsActions = useHMSActions();\n  const { isSupported, requestPipWindow, pipWindow, closePipWindow } =\n    usePIPWindow();\n\n  useEffect(() => {\n    if (document && pipWindow) {\n      const style = document.createElement(\"style\");\n      style.id = \"stitches\";\n      style.textContent = getCssText();\n      pipWindow.document.head.appendChild(style);\n    }\n  }, [pipWindow]);\n\n  // @ts-ignore\n  useEffect(() => {\n    if (pipWindow) {\n      const chatContainer = pipWindow.document.getElementById(\"chat-container\");\n      const selector = pipWindow.document.getElementById(\n        \"selector\"\n      ) as HTMLSelectElement;\n      const sendBtn = pipWindow.document.getElementById(\"send-btn\");\n      const pipChatInput = pipWindow.document.getElementById(\n        \"chat-input\"\n      ) as HTMLTextAreaElement;\n      const marker = pipWindow.document.getElementById(\"marker\");\n\n      marker?.scrollIntoView({ block: \"end\" });\n\n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting && entry.target.id) {\n              hmsActions.setMessageRead(true, entry.target.id);\n            }\n          });\n        },\n        {\n          root: chatContainer,\n          threshold: 0.8,\n        }\n      );\n\n      const mutationObserver = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.addedNodes.length > 0) {\n            const newMessages = mutation.addedNodes;\n            newMessages.forEach((message) => {\n              const messageId = (message as Element)?.id;\n              if (messageId === \"new-message-notif\") {\n                message.addEventListener(\"click\", () =>\n                  setTimeout(\n                    () =>\n                      marker?.scrollIntoView({\n                        block: \"end\",\n                        behavior: \"smooth\",\n                      }),\n                    0\n                  )\n                );\n              } else if (messageId) observer.observe(message as Element);\n            });\n          }\n        });\n      });\n      mutationObserver.observe(chatContainer as Node, {\n        childList: true,\n      });\n\n      const sendMessage = async () => {\n        const selection = selector?.value || \"Everyone\";\n        if (selection === \"Everyone\") {\n          await hmsActions.sendBroadcastMessage(pipChatInput.value.trim());\n        } else {\n          await hmsActions.sendGroupMessage(pipChatInput.value.trim(), [\n            selection,\n          ]);\n        }\n        pipChatInput.value = \"\";\n        setTimeout(\n          () => marker?.scrollIntoView({ block: \"end\", behavior: \"smooth\" }),\n          0\n        );\n      };\n\n      if (sendBtn && hmsActions && pipChatInput) {\n        const pipMessages =\n          pipWindow.document.getElementsByClassName(\"pip-message\");\n        // @ts-ignore\n        [...pipMessages].forEach((message) => {\n          if (message.id) {\n            hmsActions.setMessageRead(true, message.id);\n          }\n        });\n        // @ts-ignore\n        const sendOnEnter = (e) => {\n          if (e.key === \"Enter\") sendMessage();\n        };\n        sendBtn.addEventListener(\"click\", sendMessage);\n        pipChatInput.addEventListener(\"keypress\", sendOnEnter);\n        return () => {\n          sendBtn.removeEventListener(\"click\", sendMessage);\n          pipChatInput.removeEventListener(\"keypress\", sendOnEnter);\n          mutationObserver.disconnect();\n          observer.disconnect();\n        };\n      }\n    }\n  }, [pipWindow, hmsActions]);\n\n  useEffect(() => {\n    return () => {\n      pipWindow && closePipWindow();\n    };\n  }, [closePipWindow, pipWindow]);\n\n  return { isSupported, requestPipWindow, pipWindow };\n};\n", "import { useContext } from \"react\";\nimport { PIPContext, PIPContextType } from \"./context\";\n\nexport const usePIPWindow = (): PIPContextType => {\n  const context = useContext(PIPContext);\n\n  if (context === undefined) {\n    throw new Error(\"usePIPWindow must be used within a PIPContext\");\n  }\n\n  return context;\n};\n", "import { createContext } from \"react\";\n\nexport type PIPContextType = {\n  isSupported: boolean;\n  pipWindow: Window | null;\n  requestPipWindow: (width: number, height: number) => Promise<void>;\n  closePipWindow: () => void;\n};\n\nexport const PIPContext = createContext<PIPContextType | undefined>(undefined);\n", "import React, { useRef, useState } from \"react\";\nimport { useClickAway } from \"react-use\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSTranscriptionMode,\n  selectIsConnectedToRoom,\n  selectIsLocalVideoEnabled,\n  selectIsTranscriptionAllowedByMode,\n  selectIsTranscriptionEnabled,\n  selectPeerCount,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport {\n  BrbIcon,\n  ClosedCaptionIcon,\n  CrossIcon,\n  EmojiIcon,\n  HamburgerMenuIcon,\n  HandIcon,\n  HandRaiseSlashedIcon,\n  InfoIcon,\n  OpenCaptionIcon,\n  PeopleIcon,\n  QuizActiveIcon,\n  QuizIcon,\n  RecordIcon,\n  SettingsIcon,\n  VirtualBackgroundIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Loading, Tooltip } from \"../../../..\";\nimport { Sheet } from \"../../../../Sheet\";\n// @ts-ignore: No implicit any\nimport IconButton from \"../../../IconButton\";\nimport { NoiseCancellation } from \"../../AudioVideoToggle\";\n// @ts-ignore: No implicit any\nimport { EmojiReaction } from \"../../EmojiReaction\";\n// @ts-ignore: No implicit any\nimport { StopRecordingInSheet } from \"../../Header/StreamActions\";\n// @ts-ignore: No implicit any\nimport SettingsModal from \"../../Settings/SettingsModal\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../../Toast/ToastManager\";\n// @ts-ignore: No implicit any\nimport { ActionTile } from \"../ActionTile\";\nimport { CaptionModal } from \"../CaptionModal\";\n// @ts-ignore: No implicit any\nimport { ChangeNameModal } from \"../ChangeNameModal\";\n// @ts-ignore: No implicit any\nimport { MuteAllModal } from \"../MuteAllModal\";\nimport { useRoomLayoutHeader } from \"../../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useSheetToggle } from \"../../AppData/useSheet\";\n// @ts-ignore: No implicit any\nimport {\n  usePollViewToggle,\n  useSidepaneToggle,\n} from \"../../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetIsCaptionEnabled,\n  useShowPolls,\n} from \"../../AppData/useUISettings\";\n// @ts-ignore: No implicit any\nimport { useDropdownList } from \"../../hooks/useDropdownList\";\nimport { useMyMetadata } from \"../../hooks/useMetadata\";\nimport { useUnreadPollQuizPresent } from \"../../hooks/useUnreadPollQuizPresent\";\nimport {\n  useLandscapeHLSStream,\n  useMobileHLSStream,\n  useRecordingHandler,\n} from \"../../../common/hooks\";\n// @ts-ignore: No implicit any\nimport { getFormattedCount } from \"../../../common/utils\";\n// @ts-ignore: No implicit any\nimport { SHEET_OPTIONS, SIDE_PANE_OPTIONS } from \"../../../common/constants\";\n\nconst MODALS = {\n  CHANGE_NAME: \"changeName\",\n  SELF_ROLE_CHANGE: \"selfRoleChange\",\n  MORE_SETTINGS: \"moreSettings\",\n  START_RECORDING: \"startRecording\",\n  DEVICE_SETTINGS: \"deviceSettings\",\n  STATS_FOR_NERDS: \"statsForNerds\",\n  BULK_ROLE_CHANGE: \"bulkRoleChange\",\n  MUTE_ALL: \"muteAll\",\n  EMBED_URL: \"embedUrl\",\n  CAPTION: \"caption\",\n};\n\nexport const MwebOptions = ({\n  elements,\n  screenType,\n}: {\n  elements: DefaultConferencingScreen_Elements;\n  screenType: keyof ConferencingScreen;\n}) => {\n  const hmsActions = useHMSActions();\n  const permissions = useHMSStore(selectPermissions);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const [openModals, setOpenModals] = useState(new Set());\n  const [openOptionsSheet, setOpenOptionsSheet] = useState(false);\n  const [openSettingsSheet, setOpenSettingsSheet] = useState(false);\n  const [showEmojiCard, setShowEmojiCard] = useState(false);\n  const [showRecordingOn, setShowRecordingOn] = useState(false);\n  const toggleParticipants = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n  const { showPolls } = useShowPolls();\n  const togglePollView = usePollViewToggle();\n  const peerCount = useHMSStore(selectPeerCount);\n  const emojiCardRef = useRef(null);\n  const { isBRBOn, toggleBRB, isHandRaised, toggleHandRaise } = useMyMetadata();\n  const { unreadPollQuiz, setUnreadPollQuiz } = useUnreadPollQuizPresent();\n  const { title, description } = useRoomLayoutHeader();\n  const toggleDetailsSheet = useSheetToggle(SHEET_OPTIONS.ROOM_DETAILS);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const isLocalVideoEnabled = useHMSStore(selectIsLocalVideoEnabled);\n  const { startRecording, isRecordingLoading } = useRecordingHandler();\n  const isTranscriptionAllowed = useHMSStore(\n    selectIsTranscriptionAllowedByMode(HMSTranscriptionMode.CAPTION)\n  );\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n\n  const [isCaptionEnabled] = useSetIsCaptionEnabled();\n  useDropdownList({\n    open: openModals.size > 0 || openOptionsSheet || openSettingsSheet,\n    name: \"MoreSettings\",\n  });\n\n  const updateState = (modalName: string, value: boolean) => {\n    setOpenModals((modals) => {\n      const copy = new Set(modals);\n      if (value) {\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n\n  useClickAway(emojiCardRef, () => setShowEmojiCard(false));\n\n  return (\n    <>\n      <Sheet.Root open={openOptionsSheet} onOpenChange={setOpenOptionsSheet}>\n        <Tooltip title=\"More options\">\n          <Sheet.Trigger asChild data-testid=\"more_settings_btn\">\n            <IconButton\n              css={{\n                bg:\n                  isMobileHLSStream || isLandscapeHLSStream\n                    ? \"$surface_default\"\n                    : \"\",\n              }}\n            >\n              <HamburgerMenuIcon />\n            </IconButton>\n          </Sheet.Trigger>\n        </Tooltip>\n        <Sheet.Content css={{ bg: \"$surface_dim\", pb: \"$14\" }}>\n          <Sheet.Title\n            css={{\n              display: \"flex\",\n              color: \"$on_surface_high\",\n              w: \"100%\",\n              justifyContent: \"space-between\",\n              fontSize: \"$md\",\n              mt: \"$8\",\n              px: \"$10\",\n              pb: \"$8\",\n              borderBottom: \"1px solid $border_default\",\n              mb: \"$8\",\n              alignItems: \"center\",\n            }}\n          >\n            Options\n            <Sheet.Close>\n              <Box css={{ color: \"$on_surface_high\" }}>\n                <CrossIcon />\n              </Box>\n            </Sheet.Close>\n          </Sheet.Title>\n          <Box\n            css={{\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr 1fr\",\n              gridTemplateRows: \"auto\",\n              gridColumnGap: \"$6\",\n              gridRowGap: \"$8\",\n              px: \"$9\",\n            }}\n          >\n            {elements?.participant_list && (\n              <ActionTile.Root\n                onClick={() => {\n                  toggleParticipants();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                <ActionTile.Count>\n                  {getFormattedCount(peerCount)}\n                </ActionTile.Count>\n                <PeopleIcon />\n                <ActionTile.Title>Participants</ActionTile.Title>\n              </ActionTile.Root>\n            )}\n\n            {elements.hand_raise ? (\n              <ActionTile.Root\n                active={isHandRaised}\n                onClick={() => {\n                  toggleHandRaise();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                {isHandRaised ? <HandRaiseSlashedIcon /> : <HandIcon />}\n                <ActionTile.Title>\n                  {isHandRaised ? \"Lower\" : \"Raise\"} Hand\n                </ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n            <NoiseCancellation\n              setOpenOptionsSheet={setOpenOptionsSheet}\n              actionTile\n            />\n            {isTranscriptionAllowed ? (\n              <ActionTile.Root\n                onClick={() => {\n                  setOpenOptionsSheet(false);\n                  updateState(MODALS.CAPTION, true);\n                }}\n              >\n                {isTranscriptionEnabled && isCaptionEnabled ? (\n                  <ClosedCaptionIcon />\n                ) : (\n                  <OpenCaptionIcon />\n                )}\n                <ActionTile.Title>Closed Caption</ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n            {isLocalVideoEnabled && !!elements?.virtual_background ? (\n              <ActionTile.Root\n                onClick={() => {\n                  toggleVB();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                <VirtualBackgroundIcon />\n                <ActionTile.Title>Virtual Background</ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n\n            {elements?.emoji_reactions &&\n              !(isLandscapeHLSStream || isMobileHLSStream) && (\n                <ActionTile.Root\n                  onClick={() => {\n                    setShowEmojiCard(true);\n                    setOpenOptionsSheet(false);\n                  }}\n                >\n                  <EmojiIcon />\n                  <ActionTile.Title>Emoji Reactions</ActionTile.Title>\n                </ActionTile.Root>\n              )}\n\n            {showPolls && (\n              <ActionTile.Root\n                onClick={() => {\n                  togglePollView();\n                  setOpenOptionsSheet(false);\n                  setUnreadPollQuiz(false);\n                }}\n              >\n                {unreadPollQuiz ? <QuizActiveIcon /> : <QuizIcon />}\n                <ActionTile.Title>Polls and Quizzes</ActionTile.Title>\n              </ActionTile.Root>\n            )}\n\n            {elements?.brb && (\n              <ActionTile.Root\n                active={isBRBOn}\n                onClick={() => {\n                  toggleBRB();\n                  setOpenOptionsSheet(false);\n                }}\n              >\n                <BrbIcon />\n                <ActionTile.Title>Be Right Back</ActionTile.Title>\n              </ActionTile.Root>\n            )}\n\n            <ActionTile.Root\n              onClick={() => {\n                setOpenSettingsSheet(true);\n                setOpenOptionsSheet(false);\n              }}\n            >\n              <SettingsIcon />\n              <ActionTile.Title>Settings</ActionTile.Title>\n            </ActionTile.Root>\n\n            {isConnected && permissions?.browserRecording ? (\n              <ActionTile.Root\n                disabled={isHLSRunning}\n                onClick={async () => {\n                  if (isRecordingLoading) {\n                    return;\n                  }\n                  if (isBrowserRecordingOn || isStreamingOn) {\n                    setOpenOptionsSheet(false);\n                    setShowRecordingOn(true);\n                  } else {\n                    // start recording\n                    await startRecording();\n                    setOpenOptionsSheet(false);\n                  }\n                  if (isHLSRunning) {\n                    setOpenOptionsSheet(false);\n                  }\n                }}\n              >\n                {isRecordingLoading ? <Loading /> : <RecordIcon />}\n                <ActionTile.Title>\n                  {match({ isBrowserRecordingOn, isRecordingLoading })\n                    .with(\n                      { isBrowserRecordingOn: true, isRecordingLoading: false },\n                      () => \"Recording On\"\n                    )\n                    .with(\n                      { isRecordingLoading: true },\n                      () => \"Starting Recording\"\n                    )\n                    .with(\n                      { isRecordingLoading: false },\n                      () => \"Start Recording\"\n                    )\n                    .otherwise(() => null)}\n                </ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n\n            {title || description ? (\n              <ActionTile.Root\n                onClick={() => {\n                  setOpenOptionsSheet(false);\n                  toggleDetailsSheet();\n                }}\n              >\n                <InfoIcon />\n                <ActionTile.Title>About Session</ActionTile.Title>\n              </ActionTile.Root>\n            ) : null}\n          </Box>\n        </Sheet.Content>\n      </Sheet.Root>\n      <SettingsModal\n        open={openSettingsSheet}\n        onOpenChange={setOpenSettingsSheet}\n        screenType={screenType}\n      />\n      {openModals.has(MODALS.MUTE_ALL) && (\n        <MuteAllModal\n          onOpenChange={(value: boolean) => updateState(MODALS.MUTE_ALL, value)}\n          isMobile\n        />\n      )}\n      {openModals.has(MODALS.CHANGE_NAME) && (\n        <ChangeNameModal\n          onOpenChange={(value: boolean) =>\n            updateState(MODALS.CHANGE_NAME, value)\n          }\n          openParentSheet={() => setOpenOptionsSheet(true)}\n        />\n      )}\n      {openModals.has(MODALS.CAPTION) && (\n        <CaptionModal\n          onOpenChange={(value: boolean) => updateState(MODALS.CAPTION, value)}\n        />\n      )}\n      {showEmojiCard && (\n        <Box\n          ref={emojiCardRef}\n          css={{\n            maxWidth: \"100%\",\n            w: \"100%\",\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            bottom: \"$18\",\n            bg: \"$surface_default\",\n            zIndex: \"10\",\n            p: \"$8\",\n            pb: 0,\n            r: \"$1\",\n            mx: \"$4\",\n          }}\n        >\n          <EmojiReaction showCard />\n        </Box>\n      )}\n      {showRecordingOn && (\n        <StopRecordingInSheet\n          onClose={() => setShowRecordingOn(false)}\n          onStopRecording={async () => {\n            try {\n              await hmsActions.stopRTMPAndRecording();\n              setShowRecordingOn(false);\n            } catch (error) {\n              ToastManager.addToast({\n                // @ts-ignore\n                title: error.message,\n                variant: \"error\",\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n};\n", "import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { HMSRecordingState } from \"@100mslive/hms-video-store\";\nimport {\n  HMSRoomState,\n  selectHLSState,\n  selectIsConnectedToRoom,\n  selectPermissions,\n  selectRecordingState,\n  selectRoomState,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  CrossIcon,\n  PauseCircleIcon,\n  RecordIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Button,\n  config as cssConfig,\n  Flex,\n  HorizontalDivider,\n  Loading,\n  Popover,\n  Text,\n  Tooltip,\n} from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useRecordingHandler } from \"../../common/hooks\";\n// @ts-ignore\nimport { formatTime } from \"../../common/utils\";\n\nexport const getRecordingText = (\n  {\n    isBrowserRecordingOn,\n    isServerRecordingOn,\n    isHLSRecordingOn,\n  }: {\n    isBrowserRecordingOn: boolean;\n    isServerRecordingOn: boolean;\n    isHLSRecordingOn: boolean;\n  },\n  delimiter = \", \"\n) => {\n  if (!isBrowserRecordingOn && !isServerRecordingOn && !isHLSRecordingOn) {\n    return \"\";\n  }\n  const title: string[] = [];\n  if (isBrowserRecordingOn) {\n    title.push(\"Browser\");\n  }\n  if (isServerRecordingOn) {\n    title.push(\"Server\");\n  }\n  if (isHLSRecordingOn) {\n    title.push(\"HLS\");\n  }\n  return title.join(delimiter);\n};\n\nexport const LiveStatus = () => {\n  const { isHLSRunning, isRTMPRunning } = useRecordingStreaming();\n  const hlsState = useHMSStore(selectHLSState);\n  const isMobile = useMedia(cssConfig.media.md);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const { screenType } = useRoomLayoutConferencingScreen();\n  const [liveTime, setLiveTime] = useState(0);\n\n  const startTimer = useCallback(() => {\n    intervalRef.current = setInterval(() => {\n      const timeStamp =\n        hlsState?.variants[0]?.[\n          screenType === \"hls_live_streaming\" ? \"startedAt\" : \"initialisedAt\"\n        ];\n      if (hlsState?.running && timeStamp) {\n        setLiveTime(Date.now() - timeStamp.getTime());\n      }\n    }, 1000);\n  }, [hlsState?.running, hlsState?.variants, screenType]);\n\n  useEffect(() => {\n    if (hlsState?.running) {\n      startTimer();\n    }\n    if (!hlsState?.running && intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [hlsState.running, isMobile, startTimer]);\n\n  if (!isHLSRunning && !isRTMPRunning) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      gap=\"1\"\n      css={{\n        border: \"1px solid $border_default\",\n        padding: \"$4 $6 $4 $6\",\n        borderRadius: \"$1\",\n      }}\n    >\n      <Box\n        css={{\n          w: \"$4\",\n          h: \"$4\",\n          r: \"$round\",\n          bg: \"$alert_error_default\",\n          mr: \"$2\",\n        }}\n      />\n      <Flex align=\"center\" gap=\"2\">\n        <Text variant={!isMobile ? \"button\" : \"body2\"}>LIVE</Text>\n        <Text variant=\"caption\">\n          {hlsState?.variants?.length > 0 && isHLSRunning\n            ? formatTime(liveTime)\n            : \"\"}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const RecordingStatus = () => {\n  const {\n    isBrowserRecordingOn,\n    isServerRecordingOn,\n    isHLSRecordingOn,\n    isRecordingOn,\n  } = useRecordingStreaming();\n  const permissions = useHMSStore(selectPermissions);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (\n    !isRecordingOn ||\n    // if only browser recording is enabled, stop recording is shown\n    // so no need to show this as it duplicates\n    [\n      permissions?.browserRecording,\n      !isServerRecordingOn,\n      !isHLSRecordingOn,\n      isBrowserRecordingOn,\n    ].every((value) => !!value)\n  ) {\n    // show recording icon in mobile without popover\n    if (!(isMobile && isRecordingOn)) return null;\n  }\n\n  return (\n    <Tooltip\n      boxCss={{ zIndex: 1 }}\n      title={getRecordingText({\n        isBrowserRecordingOn,\n        isServerRecordingOn,\n        isHLSRecordingOn,\n      })}\n    >\n      <Flex\n        css={{\n          color: \"$alert_error_default\",\n          alignItems: \"center\",\n        }}\n      >\n        <RecordIcon width={24} height={24} />\n      </Flex>\n    </Tooltip>\n  );\n};\n\nexport const RecordingPauseStatus = () => {\n  const recording = useHMSStore(selectRecordingState);\n  if (recording.hls && recording.hls.state === HMSRecordingState.PAUSED) {\n    return (\n      <Tooltip\n        boxCss={{ zIndex: 1 }}\n        title={getRecordingText({\n          isBrowserRecordingOn: false,\n          isServerRecordingOn: false,\n          isHLSRecordingOn: true,\n        })}\n      >\n        <Flex\n          css={{\n            color: \"$on_surface_high\",\n            alignItems: \"center\",\n          }}\n        >\n          <PauseCircleIcon width={24} height={24} />\n        </Flex>\n      </Tooltip>\n    );\n  }\n  return null;\n};\n\nconst StartRecording = () => {\n  const permissions = useHMSStore(selectPermissions);\n  const [open, setOpen] = useState(false);\n  const { startRecording, recordingStarted } = useRecordingHandler();\n  const { isBrowserRecordingOn, isStreamingOn, isHLSRunning } =\n    useRecordingStreaming();\n  const hmsActions = useHMSActions();\n  if (!permissions?.browserRecording || isHLSRunning) {\n    return null;\n  }\n  if (isBrowserRecordingOn) {\n    return (\n      <Popover.Root open={open} onOpenChange={setOpen}>\n        <Popover.Trigger asChild>\n          <Button\n            variant=\"danger\"\n            data-testid=\"stop_recording\"\n            icon\n            outlined\n            onClick={() => setOpen(true)}\n          >\n            <RecordIcon />\n            <Text\n              as=\"span\"\n              css={{ \"@md\": { display: \"none\" }, color: \"currentColor\" }}\n            >\n              Stop Recording\n            </Text>\n          </Button>\n        </Popover.Trigger>\n        <Popover.Portal>\n          <Popover.Content align=\"end\" sideOffset={8} css={{ w: \"$64\" }}>\n            <Text variant=\"body1\" css={{ color: \"$on_surface_medium\" }}>\n              Are you sure you want to end the recording?\n            </Text>\n            <Button\n              data-testid=\"stop_recording_confirm\"\n              variant=\"danger\"\n              icon\n              css={{ ml: \"auto\" }}\n              onClick={async () => {\n                try {\n                  await hmsActions.stopRTMPAndRecording();\n                } catch (error) {\n                  const err = error as Error;\n                  ToastManager.addToast({\n                    title: err.message,\n                    variant: \"error\",\n                  });\n                }\n                setOpen(false);\n              }}\n            >\n              Stop\n            </Button>\n          </Popover.Content>\n        </Popover.Portal>\n      </Popover.Root>\n    );\n  }\n  return (\n    <Button\n      data-testid=\"start_recording\"\n      variant=\"standard\"\n      icon\n      disabled={recordingStarted || isStreamingOn}\n      onClick={async () => {\n        await startRecording();\n      }}\n    >\n      {recordingStarted ? (\n        <Loading size={24} color=\"currentColor\" />\n      ) : (\n        <RecordIcon />\n      )}\n      <Text\n        as=\"span\"\n        css={{ \"@md\": { display: \"none\" }, color: \"currentColor\" }}\n      >\n        {recordingStarted ? \"Starting\" : \"Start\"} Recording\n      </Text>\n    </Button>\n  );\n};\n\n/**\n * @description only start recording button will be shown.\n */\nexport const StreamActions = () => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const isMobile = useMedia(cssConfig.media.md);\n  const roomState = useHMSStore(selectRoomState);\n\n  return (\n    <Flex align=\"center\" css={{ gap: \"$4\" }}>\n      {!isMobile && (\n        <Flex align=\"center\" css={{ gap: \"$4\" }}>\n          <RecordingPauseStatus />\n          <RecordingStatus />\n          {roomState !== HMSRoomState.Preview ? <LiveStatus /> : null}\n        </Flex>\n      )}\n      {isConnected && !isMobile ? <StartRecording /> : null}\n    </Flex>\n  );\n};\n\nexport const StopRecordingInSheet = ({\n  onStopRecording,\n  onClose,\n}: {\n  onStopRecording: () => void;\n  onClose: () => void;\n}) => {\n  return (\n    <Sheet.Root open={true}>\n      <Sheet.Content>\n        <Sheet.Title css={{ p: \"$10\" }}>\n          <Flex\n            direction=\"row\"\n            justify=\"between\"\n            css={{ w: \"100%\", c: \"$alert_error_default\" }}\n          >\n            <Flex justify=\"start\" align=\"center\" gap=\"3\">\n              <AlertTriangleIcon />\n              <Text variant=\"h5\" css={{ c: \"$alert_error_default\" }}>\n                Stop Recording\n              </Text>\n            </Flex>\n            <Sheet.Close css={{ color: \"white\" }} onClick={onClose}>\n              <CrossIcon />\n            </Sheet.Close>\n          </Flex>\n        </Sheet.Title>\n        <HorizontalDivider />\n        <Box\n          as=\"div\"\n          css={{ p: \"$10\", overflowY: \"scroll\", maxHeight: \"70vh\" }}\n        >\n          <Text variant=\"caption\" css={{ c: \"$on_surface_medium\", pb: \"$8\" }}>\n            Are you sure you want to stop recording? You can\u2019t undo this action.\n          </Text>\n          <Button\n            variant=\"danger\"\n            css={{ width: \"100%\" }}\n            type=\"submit\"\n            data-testid=\"popup_change_btn\"\n            onClick={onStopRecording}\n          >\n            Stop\n          </Button>\n        </Box>\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectLocalPeerName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig, Dialog } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore: No implicit Any\nimport { ChangeNameContent } from \"./ChangeNameContent\";\n// @ts-ignore: No implicit Any\nimport {\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n\nexport const ChangeNameModal = ({\n  onOpenChange,\n  openParentSheet = undefined,\n}: {\n  onOpenChange: (value: boolean) => void;\n  openParentSheet?: () => void;\n}) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW\n  );\n  const hmsActions = useHMSActions();\n  const localPeerName = useHMSStore(selectLocalPeerName);\n  const [currentName, setCurrentName] = useState(localPeerName);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const changeName = async () => {\n    const name = currentName?.trim() || \"\";\n    if (!name || name === localPeerName) {\n      return;\n    }\n    try {\n      await hmsActions.changeName(name);\n      setPreviewPreference({\n        ...(previewPreference || {}),\n        name,\n      });\n    } catch (error) {\n      console.error(\"failed to update name\", error);\n      ToastManager.addToast({ title: (error as Error).message });\n    } finally {\n      onOpenChange(false);\n    }\n  };\n\n  const props = {\n    changeName,\n    setCurrentName,\n    currentName,\n    localPeerName,\n    isMobile,\n    onExit: () => onOpenChange(false),\n    onBackClick: () => {\n      onOpenChange(false);\n      openParentSheet?.();\n    },\n  };\n\n  if (isMobile) {\n    return (\n      <Sheet.Root defaultOpen onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ bg: \"$surface_dim\", p: \"$8 0\" }}>\n          <ChangeNameContent {...props} />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ bg: \"$surface_dim\", width: \"min(400px,80%)\", p: \"$10\" }}\n        >\n          <ChangeNameContent {...props} />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport { ChevronLeftIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Input } from \"../../../Input\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nexport const ChangeNameContent = ({\n  changeName,\n  setCurrentName,\n  currentName,\n  localPeerName,\n  isMobile,\n  onExit,\n  onBackClick,\n}: {\n  changeName: () => Promise<void>;\n  setCurrentName: (name: string) => void;\n  currentName?: string;\n  localPeerName?: string;\n  isMobile: boolean;\n  onExit: () => void;\n  onBackClick: () => void;\n}) => {\n  return (\n    <form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        await changeName();\n      }}\n    >\n      <Text\n        variant={isMobile ? \"md\" : \"lg\"}\n        css={{\n          color: \"$on_surface_high\",\n          fontWeight: \"$semiBold\",\n          display: \"flex\",\n          pb: \"$4\",\n          \"@md\": { px: \"$8\", borderBottom: \"1px solid $border_default\" },\n        }}\n      >\n        {isMobile ? (\n          <ChevronLeftIcon\n            onClick={onBackClick}\n            style={{ marginRight: \"0.5rem\" }}\n          />\n        ) : null}\n        Change Name\n        <Box\n          css={{\n            color: \"inherit\",\n            ml: \"auto\",\n            \"&:hover\": { color: \"$on_surface_medium\", cursor: \"pointer\" },\n          }}\n          onClick={onExit}\n        >\n          <CrossIcon />\n        </Box>\n      </Text>\n      <Text\n        variant=\"sm\"\n        css={{\n          color: \"$on_surface_medium\",\n          pb: \"$6\",\n          mb: \"$8\",\n          \"@md\": { px: \"$8\", mt: \"$4\" },\n        }}\n      >\n        Your name will be visible to other participants in the session.\n      </Text>\n      <Flex\n        justify=\"center\"\n        align=\"center\"\n        css={{ my: \"$8\", w: \"100%\", \"@md\": { px: \"$8\" } }}\n      >\n        <Input\n          css={{ width: \"100%\", bg: \"$surface_default\" }}\n          value={currentName}\n          // Prevents popup from showing up on chrome mweb\n          type={isMobile ? \"search\" : \"text\"}\n          onChange={(e) => {\n            setCurrentName(e.target.value);\n          }}\n          autoComplete=\"name\"\n          required\n          data-testid=\"change_name_field\"\n          onKeyDown={async (e) => {\n            if (\n              e.key === \"Enter\" &&\n              currentName &&\n              currentName.trim().length > 0 &&\n              currentName !== localPeerName\n            ) {\n              e.preventDefault();\n              if (isMobile) {\n                return;\n              }\n              changeName();\n            }\n          }}\n        />\n      </Flex>\n\n      <Flex\n        justify=\"between\"\n        align=\"center\"\n        css={{\n          width: \"100%\",\n          gap: \"$md\",\n          mt: \"$10\",\n          \"@md\": { px: \"$4\" },\n        }}\n      >\n        {isMobile ? null : (\n          <Button\n            variant=\"standard\"\n            css={{ w: \"100%\" }}\n            outlined\n            type=\"submit\"\n            disabled={!localPeerName}\n            onClick={onExit}\n          >\n            Cancel\n          </Button>\n        )}\n\n        <Button\n          variant=\"primary\"\n          css={{ width: \"100%\" }}\n          type=\"submit\"\n          disabled={\n            !currentName?.trim() || currentName?.trim() === localPeerName\n          }\n          data-testid=\"popup_change_btn\"\n        >\n          Change\n        </Button>\n      </Flex>\n    </form>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectAppData,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useIsSheetTypeOpen = (sheetType: string) => {\n  if (!sheetType) {\n    throw Error(\"Pass one of the sheet options\");\n  }\n  return useHMSStore(selectAppData(APP_DATA.sheet)) === sheetType;\n};\n\nexport const useSheetState = () => {\n  const sheet = useHMSStore(selectAppData(APP_DATA.sheet));\n  return sheet;\n};\n\nexport const useSheetToggle = (sheetType: string) => {\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const toggleSheet = useCallback(() => {\n    const isOpen =\n      vanillaStore.getState(selectAppData(APP_DATA.sheet)) === sheetType;\n    hmsActions.setAppData(APP_DATA.sheet, !isOpen ? sheetType : \"\");\n  }, [vanillaStore, hmsActions, sheetType]);\n  return toggleSheet;\n};\n\nexport const useSheetReset = () => {\n  const hmsActions = useHMSActions();\n  const resetSheet = useCallback(() => {\n    hmsActions.setAppData(APP_DATA.sheet, \"\");\n  }, [hmsActions]);\n  return resetSheet;\n};\n", "import { useEffect, useState } from \"react\";\nimport { selectLocalPeerID } from \"@100mslive/hms-video-store\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const useUnreadPollQuizPresent = () => {\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const notification = useHMSNotifications(HMSNotificationTypes.POLL_STARTED);\n  const [unreadPollQuiz, setUnreadPollQuiz] = useState(false);\n\n  useEffect(() => {\n    if (!notification) {\n      return;\n    }\n    setUnreadPollQuiz(notification.data.startedBy !== localPeerID);\n  }, [localPeerID, notification]);\n  return { unreadPollQuiz, setUnreadPollQuiz };\n};\n", "import React from \"react\";\nimport { HandIcon, HandRaiseSlashedIcon } from \"@100mslive/react-icons\";\nimport { CSS } from \"../../Theme\";\nimport { Tooltip } from \"../../Tooltip\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../IconButton\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useMyMetadata } from \"./hooks/useMetadata\";\n\nexport const RaiseHand = ({ css }: { css?: CSS }) => {\n  const { isHandRaised, toggleHandRaise } = useMyMetadata();\n  const { elements } = useRoomLayoutConferencingScreen();\n\n  if (!elements.hand_raise) {\n    return null;\n  }\n\n  return (\n    <Tooltip title={isHandRaised ? \"Lower hand\" : \"Raise hand\"}>\n      <IconButton\n        data-testid=\"hand_raise_btn\"\n        css={css}\n        active={!isHandRaised}\n        onClick={async () => await toggleHandRaise()}\n      >\n        {isHandRaised ? <HandRaiseSlashedIcon /> : <HandIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React, { Fragment } from \"react\";\nimport {\n  selectIsAllowedToPublish,\n  useAwayNotifications,\n  useHMSStore,\n  useScreenShare,\n} from \"@100mslive/react-sdk\";\nimport { ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { ShareScreenOptions } from \"./pdfAnnotator/shareScreenOptions\";\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Tooltip } from \"../../Tooltip\";\nimport { ScreenShareButton } from \"./ShareMenuIcon\";\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { isScreenshareSupported } from \"../common/utils\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const ScreenshareToggle = ({ css = {} }) => {\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n\n  const {\n    amIScreenSharing,\n    screenShareVideoTrackId: video,\n    toggleScreenShare,\n  } = useScreenShare((error) => {\n    ToastManager.addToast({\n      title: error.message,\n      variant: \"error\",\n      duration: 2000,\n    });\n  });\n  const { requestPermission } = useAwayNotifications();\n  const isVideoScreenshare = amIScreenSharing && !!video;\n  if (!isAllowedToPublish.screen || !isScreenshareSupported()) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Flex direction=\"row\">\n        <ScreenShareButton\n          variant=\"standard\"\n          key=\"ShareScreen\"\n          active={!isVideoScreenshare}\n          css={css}\n          disabled={isAudioOnly}\n          onClick={async () => {\n            await toggleScreenShare();\n            await requestPermission();\n          }}\n        >\n          <Tooltip\n            title={`${!isVideoScreenshare ? \"Start\" : \"Stop\"} screen sharing`}\n          >\n            <Box>\n              <ShareScreenIcon />\n            </Box>\n          </Tooltip>\n        </ScreenShareButton>\n        <ShareScreenOptions />\n      </Flex>\n    </Fragment>\n  );\n};\n", "import React, { Fragment, useState } from \"react\";\nimport { useScreenShare } from \"@100mslive/react-sdk\";\nimport { StarIcon, VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport PDFShareImg from \"./../../images/pdf-share.png\";\nimport ScreenShareImg from \"./../../images/screen-share.png\";\nimport { Box, Dropdown, Flex, IconButton, Text, Tooltip } from \"../../../\";\nimport { ShareMenuIcon } from \"../ShareMenuIcon\";\nimport { PDFFileOptions } from \"./pdfFileOptions\";\n\nconst MODALS = {\n  SHARE: \"share\",\n  SCREEN_SHARE: \"screenShare\",\n  PDF_SHARE: \"pdfShare\",\n};\n\nexport function ShareScreenOptions() {\n  const [openModals, setOpenModals] = useState(new Set());\n  const { amIScreenSharing } = useScreenShare();\n  const updateState = (modalName, value) => {\n    setOpenModals((modals) => {\n      const copy = new Set(modals);\n      if (value) {\n        copy.add(modalName);\n      } else {\n        copy.delete(modalName);\n      }\n      return copy;\n    });\n  };\n  const { toggleScreenShare } = useScreenShare();\n  return (\n    <Fragment>\n      <Dropdown.Root\n        open={openModals.has(MODALS.SHARE)}\n        onOpenChange={(value) => updateState(MODALS.SHARE, value)}\n        modal={false}\n      >\n        <Dropdown.Trigger\n          asChild\n          data-testid=\"sharing_btn\"\n          disabled={amIScreenSharing}\n        >\n          <ShareMenuIcon disabled={amIScreenSharing}>\n            <Tooltip title=\"Share\">\n              <Box>\n                <VerticalMenuIcon />\n              </Box>\n            </Tooltip>\n          </ShareMenuIcon>\n        </Dropdown.Trigger>\n        <Dropdown.Content\n          sideOffset={5}\n          css={{\n            w: \"$96\",\n            maxHeight: \"$96\",\n            p: 0,\n            bg: \"$surface_dim\",\n          }}\n        >\n          <Dropdown.Item\n            css={{\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              px: \"$10\",\n              pt: \"$10\",\n              pb: \"$6\",\n              \"&:hover\": {\n                bg: \"transparent\",\n                cursor: \"default\",\n              },\n            }}\n          >\n            <Text variant=\"h6\">Start Sharing</Text>\n            <Text variant=\"sm\">Choose what you want to share</Text>\n          </Dropdown.Item>\n          <Dropdown.Item\n            css={{\n              flexDirection: \"row\",\n              alignItems: \"flex-start\",\n              gap: \"$8\",\n              px: \"$10\",\n              pt: \"$6\",\n              pb: \"$10\",\n              \"&:hover\": {\n                bg: \"transparent\",\n                cursor: \"default\",\n              },\n            }}\n          >\n            <Flex\n              direction=\"column\"\n              align=\"center\"\n              css={{\n                gap: \"$6\",\n              }}\n            >\n              <IconButton\n                as=\"div\"\n                onClick={toggleScreenShare}\n                css={{\n                  p: \"$6\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  border: \"1px solid $border_bright\",\n                  r: \"$2\",\n                  bg: \"$surface_brighter\",\n                  pb: \"0\",\n                }}\n              >\n                <img\n                  src={ScreenShareImg}\n                  alt=\"screen-share\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    borderTopLeftRadius: \"0.5rem\", // TODO: create image component to solve for style hardcoding\n                    borderTopRightRadius: \"0.5rem\",\n                  }}\n                />\n              </IconButton>\n              <Flex direction=\"column\" align=\"center\">\n                <Text variant=\"body2\">Share Screen</Text>\n                <Text\n                  variant=\"caption\"\n                  css={{\n                    c: \"$on_surface_low\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Share your tab, window or your entire screen\n                </Text>\n              </Flex>\n            </Flex>\n            <Flex\n              direction=\"column\"\n              align=\"center\"\n              css={{\n                gap: \"$6\",\n              }}\n            >\n              <IconButton\n                onClick={() => {\n                  updateState(MODALS.PDF_SHARE, true);\n                }}\n                disabled={amIScreenSharing}\n                css={{\n                  p: \"$6\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  border: \"$border_bright 1px solid\",\n                  r: \"$2\",\n                  bg: \"$surface_bright\",\n                  pb: \"0\",\n                }}\n              >\n                <img\n                  src={PDFShareImg}\n                  alt=\"pdf-share\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    borderTopLeftRadius: \"0.5rem\", // TODO: create image component to solve for style hardcoding\n                    borderTopRightRadius: \"0.5rem\",\n                  }}\n                />\n                <Flex\n                  direction=\"row\"\n                  align=\"center\"\n                  css={{\n                    position: \"absolute\",\n                    top: \"35%\",\n                    left: \"54%\",\n                    padding: \"$2 $4\",\n                    r: \"$2\",\n                    bg: \"$primary_bright\",\n                    zIndex: \"2\",\n                    gap: \"$2\",\n                  }}\n                >\n                  <StarIcon height={14} width={14} />\n\n                  <Text\n                    variant=\"xs\"\n                    css={{\n                      fontWeight: \"$semiBold\",\n                      c: \"$on_primary_high\",\n                      pr: \"$4\",\n                    }}\n                  >\n                    New\n                  </Text>\n                </Flex>\n              </IconButton>\n              <Flex direction=\"column\" align=\"center\">\n                <Text variant=\"body2\">Share PDF</Text>\n                <Text\n                  variant=\"caption\"\n                  css={{\n                    c: \"$on_surface_low\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Annotate, draw shapes, and more over PDFs\n                </Text>\n              </Flex>\n            </Flex>\n          </Dropdown.Item>\n        </Dropdown.Content>\n      </Dropdown.Root>\n      {openModals.has(MODALS.PDF_SHARE) && (\n        <PDFFileOptions\n          onOpenChange={(value) => updateState(MODALS.PDF_SHARE, value)}\n        />\n      )}\n    </Fragment>\n  );\n}\n", "import { styled } from \"../../Theme\";\nimport IconButton from \"../IconButton\";\n\nexport const ScreenShareButton = styled(IconButton, {\n  h: \"$14\",\n  px: \"$8\",\n  r: \"$1\",\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  \"@md\": {\n    px: \"$4\",\n    mx: 0,\n  },\n});\n\nexport const ShareMenuIcon = styled(ScreenShareButton, {\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  borderTopRightRadius: \"$1\",\n  borderBottomRightRadius: \"$1\",\n  borderLeftWidth: 0,\n  w: \"$4\",\n  \"@md\": {\n    w: \"unset\",\n    px: \"$2\",\n  },\n});\n", "import React, { useState } from \"react\";\nimport { Dialog, Flex } from \"../../../\";\nimport { DialogInputFile } from \"../../primitives/DialogContent\";\nimport { PDFHeader } from \"./pdfHeader\";\nimport { SubmitPDF } from \"./submitPdf\";\nimport { UploadedFile } from \"./uploadedFile\";\n\nexport function PDFFileOptions({ onOpenChange }) {\n  const [pdfFile, setPDFFile] = useState(null);\n\n  return !pdfFile ? (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(420px,80%)\",\n            overflow: \"auto\",\n            p: \"$10\",\n            bg: \"$surface_dim\",\n          }}\n        >\n          <Flex direction=\"column\">\n            <PDFHeader />\n            <DialogInputFile\n              onChange={(target) => {\n                setPDFFile(target.files[0]);\n              }}\n              placeholder=\"Click to upload\"\n              type=\"file\"\n              accept=\".pdf\"\n            />\n\n            <SubmitPDF pdfFile={pdfFile} onOpenChange={onOpenChange} />\n          </Flex>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  ) : (\n    <UploadedFile\n      pdfFile={pdfFile}\n      setPDFFile={setPDFFile}\n      onOpenChange={onOpenChange}\n    />\n  );\n}\n", "import React from \"react\";\nimport { Dialog, Text } from \"../../../\";\nimport { DialogCol } from \"../../primitives/DialogContent\";\n\nexport const PDFHeader = () => {\n  return (\n    <DialogCol\n      align=\"start\"\n      css={{\n        mt: 0,\n        mb: \"$6\",\n      }}\n    >\n      <Dialog.Title asChild>\n        <Text as=\"h6\" variant=\"h6\">\n          Share PDF\n        </Text>\n      </Dialog.Title>\n      <Dialog.Description asChild>\n        <Text\n          variant=\"sm\"\n          css={{\n            c: \"$on_surface_medium\",\n          }}\n        >\n          Choose PDF you want to annotate and share\n        </Text>\n      </Dialog.Description>\n    </DialogCol>\n  );\n};\n", "import React from \"react\";\nimport { Button, Flex } from \"../../../\";\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const SubmitPDF = ({ pdfFile, onOpenChange }) => {\n  const [, setPDFConfig] = useSetAppDataByKey(APP_DATA.pdfConfig);\n\n  return (\n    <Flex\n      direction=\"row\"\n      css={{\n        mb: \"0\",\n        mt: \"auto\",\n        gap: \"$8\",\n      }}\n    >\n      <Button\n        variant=\"standard\"\n        outlined\n        type=\"submit\"\n        onClick={() => {\n          onOpenChange(false);\n        }}\n        css={{ w: \"50%\" }}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={() => {\n          if (pdfFile) {\n            setPDFConfig(pdfFile);\n            onOpenChange(false);\n          }\n        }}\n        disabled={!pdfFile}\n        data-testid=\"share_pdf_btn\"\n        css={{\n          w: \"50%\",\n        }}\n      >\n        Start Sharing\n      </Button>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { TrashIcon } from \"@100mslive/react-icons\";\nimport { Dialog, Flex, Text } from \"../../../\";\nimport { DialogRow } from \"../../primitives/DialogContent\";\nimport { PDFHeader } from \"./pdfHeader\";\nimport { PDFInfo } from \"./pdfInfo\";\nimport { SubmitPDF } from \"./submitPdf\";\n\nexport const UploadedFile = ({ pdfFile, setPDFFile, onOpenChange }) => {\n  const [fileName, ext] = pdfFile.name.split(\".\");\n  return (\n    <Dialog.Root defaultOpen onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(420px,80%)\",\n            overflow: \"auto\",\n            p: \"$10\",\n            bg: \"$surface_dim\",\n          }}\n        >\n          <Flex direction=\"column\">\n            <PDFHeader />\n            <DialogRow\n              css={{\n                fontFamily: \"$sans\",\n                bg: \"$surface_bright\",\n                r: \"$1\",\n                outline: \"none\",\n                border: \"1px solid $border_bright\",\n                p: \"$4 $6\",\n                minHeight: \"$11\",\n                c: \"$on_primary_high\",\n                fs: \"$md\",\n                w: \"100%\",\n                \"&:focus\": {\n                  boxShadow: \"0 0 0 1px $colors$primary_default\",\n                  border: \"1px solid transparent\",\n                },\n                mb: 0,\n                mt: \"$6\",\n              }}\n            >\n              <Flex direction=\"row\" css={{ flexGrow: \"1\", maxWidth: \"88%\" }}>\n                <Text\n                  css={{\n                    textOverflow: \"ellipsis\",\n                    overflow: \"hidden\",\n                    whiteSpace: \"nowrap\",\n                  }}\n                >\n                  {fileName}\n                </Text>\n                <Text css={{ whiteSpace: \"nowrap\" }}>.{ext}</Text>\n              </Flex>\n              <TrashIcon\n                onClick={() => setPDFFile(null)}\n                style={{\n                  cursor: \"pointer\",\n                }}\n              />\n            </DialogRow>\n            <PDFInfo />\n            <SubmitPDF pdfFile={pdfFile} onOpenChange={onOpenChange} />\n          </Flex>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport { InfoIcon } from \"@100mslive/react-icons\";\nimport { Text } from \"../../../\";\nimport { DialogRow } from \"../../primitives/DialogContent\";\n\nexport const PDFInfo = () => {\n  return (\n    <DialogRow\n      css={{\n        px: \"$8\",\n        py: \"$3\",\n        bg: \"$surface_default\",\n        r: \"$1\",\n        outline: \"none\",\n        border: \"1px solid $border_bright\",\n        minHeight: \"$11\",\n      }}\n    >\n      <InfoIcon\n        width=\"64px\"\n        height=\"64px\"\n        style={{\n          paddingRight: \"16px\",\n        }}\n      />\n      <Text variant=\"caption\">\n        On the next screen, ensure you select \u201CThis Tab\u201D and click on share.\n        Only the PDF viewer will be seen by other participants\n      </Text>\n    </DialogRow>\n  );\n};\n", "import React, { useEffect } from \"react\";\n// eslint-disable-next-line\nimport { HMSVirtualBackgroundTypes } from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport {\n  selectAppData,\n  selectIsEffectsEnabled,\n  selectIsLocalVideoEnabled,\n  selectIsVBEnabled,\n  useAVToggle,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { VirtualBackgroundIcon } from \"@100mslive/react-icons\";\nimport { Loading } from \"../../../Loading\";\nimport { Tooltip } from \"../../../Tooltip\";\nimport IconButton from \"../../IconButton\";\nimport { VBHandler } from \"./VBHandler\";\n// @ts-ignore\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { APP_DATA, isSafari, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const VBToggle = () => {\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const isVBOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.VB);\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  const isVBEnabled = useHMSStore(selectIsVBEnabled);\n  const isEffectsEnabled = useHMSStore(selectIsEffectsEnabled);\n  const loadingEffects = useHMSStore(selectAppData(APP_DATA.loadingEffects));\n  const hmsActions = useHMSActions();\n  const { toggleVideo } = useAVToggle();\n\n  useEffect(() => {\n    if (!toggleVideo) {\n      VBHandler?.reset();\n      hmsActions.setAppData(\n        APP_DATA.background,\n        HMSVirtualBackgroundTypes.NONE\n      );\n    }\n  }, [hmsActions, toggleVideo]);\n\n  if (!isVideoOn || (!isEffectsEnabled && isSafari) || !isVBEnabled) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      side=\"top\"\n      disabled={isVBOpen}\n      title=\"Configure Virtual Background\"\n    >\n      <IconButton\n        active={!isVBOpen}\n        onClick={toggleVB}\n        data-testid=\"virtual_bg_btn\"\n      >\n        {loadingEffects ? <Loading size={18} /> : <VirtualBackgroundIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChatIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex, Text, Tooltip } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ChatToggle = ({ onClick }: { onClick?: () => void }) => {\n  const countUnreadMessages = useHMSStore(selectUnreadHMSMessagesCount);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n\n  return (\n    <Box\n      css={{\n        position: \"relative\",\n      }}\n    >\n      <Tooltip key=\"chat\" title={`${isChatOpen ? \"Close\" : \"Open\"} chat`}>\n        <IconButton\n          onClick={() => (onClick ? onClick() : toggleChat())}\n          css={{ bg: isChatOpen ? \"$surface_brighter\" : \"\" }}\n          data-testid=\"chat_btn\"\n        >\n          <ChatIcon />\n        </IconButton>\n      </Tooltip>\n      {countUnreadMessages > 0 && (\n        <Flex\n          css={{\n            height: \"$8\",\n            p: \"$4 4.5px\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            position: \"absolute\",\n            top: \"-$4\",\n            right: \"-$4\",\n            borderRadius: \"$space$14\",\n            background: \"$primary_default\",\n          }}\n        >\n          <Text variant=\"overline\">\n            {countUnreadMessages > 99 ? \"99+\" : countUnreadMessages}\n          </Text>\n        </Flex>\n      )}\n    </Box>\n  );\n};\n", "import React, { Fragment, useCallback, useState } from \"react\";\nimport { useDebounce, useMedia } from \"react-use\";\nimport {\n  HMSPeer,\n  HMSPeerType,\n  HMSRoleName,\n  selectAvailableRoleNames,\n  selectHandRaisedPeers,\n  selectHasPeerHandRaised,\n  selectIsLargeRoom,\n  selectIsPeerAudioEnabled,\n  selectLocalPeerID,\n  selectPeerCount,\n  selectPermissions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  AddIcon,\n  CallIcon,\n  ChangeRoleIcon,\n  CrossIcon,\n  HandIcon,\n  MicOffIcon,\n  PeopleIcon,\n  PersonSettingsIcon,\n  SearchIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Accordion,\n  Box,\n  Button,\n  config as cssConfig,\n  Dropdown,\n  Flex,\n  Input,\n  Text,\n  textEllipsis,\n} from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\nimport { ConnectionIndicator } from \"../Connection/ConnectionIndicator\";\nimport { RemoveParticipant } from \"../RemoveParticipant\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport { RoleAccordion } from \"./RoleAccordion\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { useSidepaneResetOnLayoutUpdate } from \"../AppData/useSidepaneResetOnLayoutUpdate\";\nimport { usePeerOnStageActions } from \"../hooks/usePeerOnStageActions\";\nimport { useParticipants } from \"../../common/hooks\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../../common/utils\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const ParticipantList = ({\n  offStageRoles = [],\n  onActive,\n}: {\n  offStageRoles: HMSRoleName[];\n  onActive: (role: string) => void;\n}) => {\n  const [filter, setFilter] = useState<{ search?: string } | undefined>();\n  const { participants, isConnected, peerCount } = useParticipants(filter);\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n  const peersOrderedByRoles: Record<string, HMSPeer[]> = {};\n\n  const handRaisedPeers = useHMSStore(selectHandRaisedPeers);\n\n  participants.forEach((participant) => {\n    if (participant.roleName) {\n      if (peersOrderedByRoles[participant.roleName] === undefined) {\n        peersOrderedByRoles[participant.roleName] = [];\n      }\n      peersOrderedByRoles[participant.roleName].push(participant);\n    }\n  });\n\n  // prefill off_stage roles of large rooms to load more peers\n  if (isLargeRoom) {\n    offStageRoles.forEach((role) => {\n      if (!peersOrderedByRoles[role]) {\n        peersOrderedByRoles[role] = [];\n      }\n    });\n  }\n\n  useSidepaneResetOnLayoutUpdate(\n    \"participant_list\",\n    SIDE_PANE_OPTIONS.PARTICIPANTS\n  );\n\n  const onSearch = useCallback((value: string) => {\n    setFilter((filterValue) => {\n      if (!filterValue) {\n        filterValue = {};\n      }\n      filterValue.search = value.toLowerCase();\n      return { ...filterValue };\n    });\n  }, []);\n\n  if (peerCount === 0) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <Flex\n        direction=\"column\"\n        css={{\n          size: \"100%\",\n          gap: \"$4\",\n        }}\n      >\n        {!filter?.search && participants.length === 0 ? null : (\n          <ParticipantSearch onSearch={onSearch} inSidePane />\n        )}\n        <VirtualizedParticipants\n          peersOrderedByRoles={peersOrderedByRoles}\n          handRaisedList={handRaisedPeers}\n          isConnected={!!isConnected}\n          filter={filter}\n          offStageRoles={offStageRoles}\n          isLargeRoom={isLargeRoom}\n          onActive={onActive}\n        >\n          {participants.length === 0 ? (\n            <Flex\n              align=\"center\"\n              justify=\"center\"\n              className=\"emptyParticipants\"\n              css={{ w: \"100%\", p: \"$8 0\", display: \"none\" }}\n            >\n              <Text variant=\"sm\">\n                {!filter ? \"No participants\" : \"No matching participants\"}\n              </Text>\n            </Flex>\n          ) : null}\n        </VirtualizedParticipants>\n      </Flex>\n    </Fragment>\n  );\n};\n\nexport const ParticipantCount = () => {\n  const peerCount = useHMSStore(selectPeerCount);\n  const toggleSidepane = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n  const isPeerListOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.PARTICIPANTS);\n\n  if (peerCount === 0) {\n    return null;\n  }\n  return (\n    <IconButton\n      css={{\n        w: \"auto\",\n        p: \"$4\",\n        h: \"auto\",\n        bg: isPeerListOpen ? \"$surface_brighter\" : \"\",\n      }}\n      onClick={() => {\n        if (peerCount > 0) {\n          toggleSidepane();\n        }\n      }}\n      data-testid=\"participant_list\"\n    >\n      <PeopleIcon />\n      <Text variant=\"sm\" css={{ mx: \"$4\", c: \"inherit\" }}>\n        {getFormattedCount(peerCount)}\n      </Text>\n    </IconButton>\n  );\n};\n\nexport const Participant = ({\n  peer,\n  isConnected,\n  isHandRaisedAccordion,\n  style,\n}: {\n  peer: HMSPeer;\n  isConnected: boolean;\n  isHandRaisedAccordion?: boolean;\n  style: React.CSSProperties;\n}) => {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  return (\n    <Flex\n      key={peer.id}\n      css={{\n        w: \"100%\",\n        p: \"$4 $8\",\n        pr: \"$6\",\n        h: \"$16\",\n        \"&:hover .participant_item\": { display: \"flex\" },\n      }}\n      align=\"center\"\n      justify=\"between\"\n      data-testid={\"participant_\" + peer.name}\n      style={style}\n    >\n      <Text\n        variant=\"sm\"\n        css={{\n          ...textEllipsis(\"100%\"),\n          flex: \"1 1 0\",\n          mr: \"$8\",\n          fontWeight: \"$semiBold\",\n          color: \"$on_surface_high\",\n        }}\n      >\n        {peer.name} {localPeerId === peer.id ? \"(You)\" : \"\"}\n      </Text>\n      {isConnected && peer.roleName ? (\n        <ParticipantActions\n          peerId={peer.id}\n          peerType={peer.type}\n          role={peer.roleName}\n          isHandRaisedAccordion={isHandRaisedAccordion}\n        />\n      ) : null}\n    </Flex>\n  );\n};\n\nconst VirtualizedParticipants = ({\n  peersOrderedByRoles = {},\n  isConnected,\n  filter,\n  handRaisedList = [],\n  offStageRoles,\n  isLargeRoom,\n  onActive,\n  children,\n}: {\n  peersOrderedByRoles: Record<string, HMSPeer[]>;\n  isConnected: boolean;\n  filter: undefined | { search?: string };\n  handRaisedList: HMSPeer[];\n  offStageRoles: HMSRoleName[];\n  isLargeRoom: boolean;\n  onActive: (role: string) => void;\n  children: React.ReactNode;\n}) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        gap: \"$8\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        pr: \"$10\",\n        mr: \"-$10\",\n        flex: \"1 1 0\",\n        \"& > div:empty ~ .emptyParticipants\": {\n          display: \"flex\",\n        },\n      }}\n    >\n      <Accordion.Root type={isLargeRoom ? \"single\" : \"multiple\"} collapsible>\n        {handRaisedList.length > 0 ? (\n          <RoleAccordion\n            peerList={handRaisedList}\n            roleName=\"Hand Raised\"\n            filter={filter}\n            isConnected={isConnected}\n            isHandRaisedAccordion\n            offStageRoles={offStageRoles}\n          />\n        ) : null}\n        {Object.keys(peersOrderedByRoles).map((role) => (\n          <RoleAccordion\n            key={role}\n            peerList={peersOrderedByRoles[role]}\n            roleName={role}\n            isConnected={isConnected}\n            filter={filter}\n            offStageRoles={offStageRoles}\n            onActive={onActive}\n          />\n        ))}\n      </Accordion.Root>\n      {children}\n    </Flex>\n  );\n};\n\n/**\n * shows settings to change for a participant like changing their role\n */\nconst ParticipantActions = React.memo(\n  ({\n    peerId,\n    peerType,\n    role,\n    isHandRaisedAccordion,\n  }: {\n    peerId: string;\n    role: string;\n    isHandRaisedAccordion?: boolean;\n    peerType: HMSPeerType;\n  }) => {\n    const isHandRaised = useHMSStore(selectHasPeerHandRaised(peerId));\n    const canChangeRole = useHMSStore(selectPermissions)?.changeRole;\n    const canRemoveOthers = useHMSStore(selectPermissions)?.removeOthers;\n    const { elements } = useRoomLayoutConferencingScreen();\n    const { on_stage_exp } = elements || {};\n    const shouldShowMoreActions =\n      (on_stage_exp && canChangeRole) || canRemoveOthers;\n    const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n\n    return (\n      <Flex\n        align=\"center\"\n        css={{\n          flexShrink: 0,\n          gap: \"$8\",\n        }}\n      >\n        {isHandRaisedAccordion ? (\n          <HandRaisedAccordionParticipantActions peerId={peerId} role={role} />\n        ) : (\n          <>\n            <ConnectionIndicator peerId={peerId} />\n            {peerType === HMSPeerType.SIP && (\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  p: \"$1\",\n                  c: \"$on_surface_high\",\n                  bg: \"$surface_bright\",\n                  borderRadius: \"$round\",\n                }}\n              >\n                <CallIcon width={19} height={19} />\n              </Flex>\n            )}\n            {isHandRaised && (\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  p: \"$1\",\n                  c: \"$on_surface_high\",\n                  bg: \"$surface_bright\",\n                  borderRadius: \"$round\",\n                }}\n              >\n                <HandIcon height={19} width={19} />\n              </Flex>\n            )}\n            {isAudioMuted ? (\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  p: \"$2\",\n                  c: \"$on_surface_high\",\n                  bg: \"$surface_bright\",\n                  borderRadius: \"$round\",\n                }}\n              >\n                <MicOffIcon height={19} width={19} />\n              </Flex>\n            ) : null}\n\n            {shouldShowMoreActions ? (\n              <ParticipantMoreActions peerId={peerId} role={role} />\n            ) : null}\n          </>\n        )}\n      </Flex>\n    );\n  }\n);\n\nconst quickActionStyle = { p: \"$1\", borderRadius: \"$round\" };\nconst HandRaisedAccordionParticipantActions = ({\n  peerId,\n  role,\n}: {\n  peerId: string;\n  role: string;\n}) => {\n  const {\n    handleStageAction,\n    lowerPeerHand,\n    shouldShowStageRoleChange,\n    isInStage,\n  } = usePeerOnStageActions({\n    peerId,\n    role,\n  });\n  if (!shouldShowStageRoleChange) {\n    return null;\n  }\n  return (\n    <>\n      <Button variant=\"standard\" css={quickActionStyle} onClick={lowerPeerHand}>\n        <CrossIcon height={18} width={18} />\n      </Button>\n      {!isInStage && (\n        <Button\n          variant=\"primary\"\n          onClick={handleStageAction}\n          css={quickActionStyle}\n        >\n          <AddIcon height={18} width={18} />\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst ParticipantMoreActions = ({\n  peerId,\n  role,\n}: {\n  peerId: string;\n  role: string;\n}) => {\n  const {\n    open,\n    setOpen,\n    bring_to_stage_label,\n    remove_from_stage_label,\n    handleStageAction,\n    isInStage,\n    shouldShowStageRoleChange,\n  } = usePeerOnStageActions({ peerId, role });\n  const canChangeRole = !!useHMSStore(selectPermissions)?.changeRole;\n  const [openRoleChangeModal, setOpenRoleChangeModal] = useState(false);\n  const roles = useHMSStore(selectAvailableRoleNames);\n\n  return (\n    <>\n      <Dropdown.Root\n        open={open}\n        onOpenChange={(value) => setOpen(value)}\n        modal={false}\n      >\n        <Dropdown.Trigger\n          asChild\n          data-testid=\"participant_more_actions\"\n          className=\"participant_item\"\n          css={{\n            p: \"$1\",\n            r: \"$0\",\n            c: \"$on_surface_high\",\n            display: open ? \"flex\" : \"none\",\n            \"&:hover\": {\n              bg: \"$surface_bright\",\n            },\n            \"@md\": {\n              display: \"flex\",\n            },\n          }}\n          tabIndex={0}\n        >\n          <Box css={{ my: \"auto\" }}>\n            <VerticalMenuIcon />\n          </Box>\n        </Dropdown.Trigger>\n        <Dropdown.Portal>\n          <Dropdown.Content\n            align=\"end\"\n            sideOffset={8}\n            css={{ w: \"$64\", bg: \"$surface_default\" }}\n          >\n            {shouldShowStageRoleChange ? (\n              <Dropdown.Item\n                css={{ bg: \"$surface_default\" }}\n                onClick={() => handleStageAction()}\n              >\n                <ChangeRoleIcon />\n                <Text\n                  variant=\"sm\"\n                  css={{\n                    ml: \"$4\",\n                    fontWeight: \"$semiBold\",\n                    c: \"$on_surface_high\",\n                  }}\n                >\n                  {isInStage ? remove_from_stage_label : bring_to_stage_label}\n                </Text>\n              </Dropdown.Item>\n            ) : null}\n\n            {canChangeRole && roles.length > 1 ? (\n              <Dropdown.Item\n                css={{ bg: \"$surface_default\" }}\n                onClick={() => setOpenRoleChangeModal(true)}\n              >\n                <PersonSettingsIcon />\n                <Text\n                  variant=\"sm\"\n                  css={{\n                    ml: \"$4\",\n                    fontWeight: \"$semiBold\",\n                    c: \"$on_surface_high\",\n                  }}\n                >\n                  Switch Role\n                </Text>\n              </Dropdown.Item>\n            ) : null}\n            <RemoveParticipant peerId={peerId} />\n          </Dropdown.Content>\n        </Dropdown.Portal>\n      </Dropdown.Root>\n      {openRoleChangeModal && (\n        <RoleChangeModal\n          peerId={peerId}\n          onOpenChange={setOpenRoleChangeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport const ParticipantSearch = ({\n  onSearch,\n  placeholder = \"Search for participants\",\n  inSidePane = false,\n}: {\n  inSidePane?: boolean;\n  placeholder?: string;\n  onSearch: (val: string) => void;\n}) => {\n  const [value, setValue] = React.useState(\"\");\n  const isMobile = useMedia(cssConfig.media.md);\n\n  useDebounce(\n    () => {\n      onSearch(value);\n    },\n    300,\n    [value, onSearch]\n  );\n\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        p: isMobile ? \"0\" : \"$2 0\",\n        mb: \"$2\",\n        position: \"relative\",\n        color: \"$on_surface_medium\",\n        mt: inSidePane ? \"$4\" : \"\",\n      }}\n      onClick={(e) => e.stopPropagation()}\n    >\n      <SearchIcon style={{ position: \"absolute\", left: \"0.5rem\" }} />\n      <Input\n        type=\"text\"\n        placeholder={placeholder}\n        css={{\n          w: \"100%\",\n          p: \"$6\",\n          pl: \"$14\",\n          bg: inSidePane ? \"$surface_default\" : \"$surface_dim\",\n        }}\n        value={value}\n        onKeyDown={(event) => {\n          event.stopPropagation();\n        }}\n        onChange={(event) => {\n          setValue(event.currentTarget.value);\n        }}\n        autoComplete=\"off\"\n        aria-autocomplete=\"none\"\n      />\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport {\n  HMSPeerType,\n  selectConnectionQualityByPeerID,\n  selectPeerTypeByID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PoorConnectivityIcon } from \"@100mslive/react-icons\";\nimport { styled, Tooltip, useTheme } from \"../../..\";\n// @ts-ignore\nimport { getColor, getTooltipText } from \"./connectionQualityUtils\";\n\nconst Wrapper = styled(\"span\", {\n  width: \"28px\",\n  height: \"28px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  borderRadius: \"$round\",\n  variants: {\n    isTile: {\n      true: {\n        width: \"unset\",\n        height: \"unset\",\n      },\n    },\n  },\n});\n\nexport const ConnectionIndicator = ({\n  peerId,\n  isTile = false,\n  hideBg = false,\n}: {\n  peerId: string;\n  isTile?: boolean;\n  hideBg?: boolean;\n}) => {\n  const downlinkQuality = useHMSStore(\n    selectConnectionQualityByPeerID(peerId)\n  )?.downlinkQuality;\n  const peerType = useHMSStore(selectPeerTypeByID(peerId));\n  const { theme } = useTheme();\n  const defaultColor = theme.colors.on_surface_low;\n  if (\n    downlinkQuality === -1 ||\n    downlinkQuality === undefined ||\n    peerType === HMSPeerType.SIP\n  ) {\n    return null;\n  }\n  if (downlinkQuality === 0) {\n    return (\n      <Tooltip side=\"left\" title={getTooltipText(downlinkQuality)}>\n        <Wrapper\n          isTile={isTile}\n          css={{ color: \"#ED4C5A\" }}\n          data-testid=\"tile_network\"\n        >\n          <PoorConnectivityIcon />\n        </Wrapper>\n      </Tooltip>\n    );\n  }\n  const size = isTile ? 12 : 16;\n  return (\n    <Tooltip side=\"left\" title={getTooltipText(downlinkQuality)}>\n      <Wrapper\n        isTile={isTile}\n        data-testid=\"tile_network\"\n        css={{ backgroundColor: hideBg ? \"\" : \"$surface_bright\" }}\n      >\n        <svg\n          width={size}\n          height={size}\n          viewBox=\"0 0 14 12\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlSpace=\"preserve\"\n          style={{\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            strokeLinejoin: \"round\",\n            strokeMiterlimit: 2,\n          }}\n        >\n          <path\n            d=\"M6.875 0c2.549.035 4.679.902 6.445 2.648.366.362.45.796.216 1.096-.239.306-.714.34-1.142.072a2.28 2.28 0 0 1-.341-.271C9.24.862 4.924.775 1.992 3.346c-.284.249-.594.419-.983.393-.272-.019-.49-.135-.613-.388-.125-.261-.05-.498.114-.713.073-.092.156-.177.245-.254C2.516.804 4.591.039 6.875 0Z\"\n            fill={getColor(4, downlinkQuality, defaultColor, theme)}\n            transform=\"translate(-.333)\"\n          />\n          <path\n            d=\"M7.056 2.964c1.756.035 3.208.7 4.499 1.763.162.134.277.315.354.512.098.251.114.503-.075.72-.193.222-.452.259-.725.198-.293-.066-.518-.247-.738-.443a4.859 4.859 0 0 0-6.198-.26c-.166.127-.318.271-.475.409-.242.211-.513.343-.843.317-.43-.034-.679-.397-.561-.81.062-.211.181-.4.345-.546 1.265-1.162 2.733-1.836 4.417-1.86Z\"\n            fill={getColor(3, downlinkQuality, defaultColor, theme)}\n            transform=\"translate(-.333)\"\n          />\n          <path\n            d=\"M7.384,6.052C8.293,6.068 9.157,6.449 9.783,7.108C10.005,7.339 10.157,7.6 10.07,7.942C9.959,8.377 9.435,8.581 9.071,8.243C7.935,7.191 6.356,7.183 5.152,8.183C4.816,8.462 4.6,8.485 4.332,8.27C4.063,8.055 3.998,7.691 4.177,7.358C4.273,7.179 4.414,7.038 4.57,6.911C5.26,6.349 6.149,6.05 7.384,6.052L7.384,6.052Z\"\n            fill={getColor(2, downlinkQuality, defaultColor, theme)}\n          />\n          <path\n            d=\"M8.214,9.941C8.214,10.234 8.097,10.515 7.888,10.721C7.68,10.928 7.398,11.042 7.104,11.039C6.471,11.036 5.982,10.541 5.993,9.912C6.004,9.259 6.499,8.766 7.133,8.779C7.744,8.791 8.22,9.301 8.214,9.941Z\"\n            fill={getColor(1, downlinkQuality, defaultColor, theme)}\n          />\n        </svg>\n      </Wrapper>\n    </Tooltip>\n  );\n};\n", "const connectionTooltip = {\n  0: \"Reconnecting\",\n  1: \"Very Bad Connection\",\n  2: \"Bad Connection\",\n  3: \"Moderate Connection\",\n  4: \"Good Connection\",\n  5: \"Excellent Connection\",\n};\nconnectionTooltip[-1] = \"Network Unknown\";\n\n/**\n * @param connectionScore -> 1-5 connection score for network quality\n */\nexport const getTooltipText = (connectionScore) => {\n  return connectionTooltip[connectionScore];\n};\n\n/**\n * position is needed here as we don't want all the dots/arcs to be colored,\n * the non colored ones will be passed in the default color. If user is\n * disconnected(score=0), no dot/arc will be colored.\n * @param position -> 1 to 5\n * @param connectionScore -> 0 to 5, 0 means disconnected\n * @param defaultColor -> color for components not taking the connection color\n */\nexport const getColor = (position, connectionScore, defaultColor, theme) => {\n  const shouldBeColored = position <= connectionScore;\n  if (!shouldBeColored) {\n    return defaultColor;\n  }\n  if (connectionScore >= 4) {\n    return theme.colors.alert_success;\n  } else if (connectionScore >= 1) {\n    return theme.colors.alert_warning;\n  }\n  return defaultColor;\n};\n", "import React from \"react\";\nimport {\n  HMSPeerID,\n  selectLocalPeerID,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PeopleRemoveIcon } from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { Dropdown } from \"../../Dropdown\";\nimport { Text } from \"../../Text\";\n\nexport const RemoveParticipant = ({ peerId }: { peerId: HMSPeerID }) => {\n  const canRemoveOthers = useHMSStore(selectPermissions)?.removeOthers;\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const actions = useHMSActions();\n\n  if (peerId === localPeerId || !canRemoveOthers) {\n    return null;\n  }\n  return (\n    <Dropdown.Item\n      css={{ color: \"$alert_error_default\", bg: \"$surface_default\" }}\n      onClick={async () => {\n        try {\n          await actions.removePeer(peerId, \"\");\n        } catch (error) {\n          const ex = error as Error;\n          ToastManager.addToast({ title: ex.message, variant: \"error\" });\n        }\n      }}\n    >\n      <PeopleRemoveIcon />\n      <Text\n        variant=\"sm\"\n        css={{ ml: \"$4\", color: \"inherit\", fontWeight: \"$semiBold\" }}\n      >\n        Remove Participant\n      </Text>\n    </Dropdown.Item>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { useMeasure } from \"react-use\";\nimport { FixedSizeList } from \"react-window\";\nimport {\n  HMSPeer,\n  selectIsLargeRoom,\n  useHMSStore,\n  usePaginatedParticipants,\n} from \"@100mslive/react-sdk\";\nimport { AddIcon, ChevronRightIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Accordion } from \"../../../Accordion\";\nimport { Button } from \"../../../Button\";\nimport { HorizontalDivider } from \"../../../Divider\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { Participant } from \"./ParticipantList\";\nimport { RoleOptions } from \"./RoleOptions\";\nimport { useGroupOnStageActions } from \"../hooks/useGroupOnStageActions\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../../common/utils\";\n\nexport const ROW_HEIGHT = 50;\nconst ITER_TIMER = 5000;\n\nexport interface ItemData {\n  peerList: HMSPeer[];\n  isHandRaisedAccordion?: boolean;\n  isConnected: boolean;\n}\n\nexport function itemKey(index: number, data: ItemData) {\n  return data.peerList[index]?.id;\n}\n\nexport const VirtualizedParticipantItem = React.memo(\n  ({\n    index,\n    data,\n    style,\n  }: {\n    index: number;\n    data: ItemData;\n    style: React.CSSProperties;\n  }) => {\n    return (\n      <Participant\n        key={data.peerList[index].id}\n        peer={data.peerList[index]}\n        isHandRaisedAccordion={data.isHandRaisedAccordion}\n        isConnected={data.isConnected}\n        style={style}\n      />\n    );\n  }\n);\n\nexport const RoleAccordion = ({\n  peerList = [],\n  roleName,\n  isConnected,\n  filter,\n  isHandRaisedAccordion = false,\n  offStageRoles,\n  onActive,\n}: ItemData & {\n  roleName: string;\n  isHandRaisedAccordion?: boolean;\n  filter?: { search?: string };\n  offStageRoles: string[];\n  onActive?: (role: string) => void;\n}) => {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n  const { peers, total, loadPeers } = usePaginatedParticipants({\n    role: roleName,\n    limit: 10,\n  });\n  const isOffStageRole = roleName && offStageRoles.includes(roleName);\n  let peersInAccordion = peerList;\n  // for large rooms, peer list would be empty\n  if (isOffStageRole && isLargeRoom) {\n    peersInAccordion = peers;\n    if (filter?.search) {\n      peersInAccordion = peersInAccordion.filter((peer) =>\n        peer.name.toLowerCase().includes(filter.search || \"\")\n      );\n    }\n  }\n  const {\n    bringAllToStage,\n    bring_to_stage_label,\n    canBringToStage,\n    lowerAllHands,\n  } = useGroupOnStageActions({\n    peers: peersInAccordion,\n  });\n\n  useEffect(() => {\n    if (!isOffStageRole || !isLargeRoom) {\n      return;\n    }\n    loadPeers();\n    const interval = setInterval(() => {\n      loadPeers();\n    }, ITER_TIMER);\n    return () => clearInterval(interval);\n  }, [isOffStageRole, isLargeRoom]); //eslint-disable-line\n\n  if (\n    peersInAccordion.length === 0 ||\n    (isHandRaisedAccordion && filter?.search)\n  ) {\n    return null;\n  }\n\n  const height = ROW_HEIGHT * peersInAccordion.length;\n  const hasNext = total > peersInAccordion.length && !filter?.search;\n\n  return (\n    <Accordion.Item\n      value={roleName}\n      css={{ \"&:hover .role_actions\": { visibility: \"visible\" }, mb: \"$8\" }}\n      ref={ref}\n    >\n      <Accordion.Header\n        chevronID={`role_accordion_btn_${roleName}`}\n        iconStyles={{ c: \"$on_surface_high\" }}\n        css={{\n          textTransform: \"capitalize\",\n          p: \"$6 $8\",\n          fontSize: \"$sm\",\n          fontWeight: \"$semiBold\",\n          c: \"$on_surface_medium\",\n          borderRadius: \"$1\",\n          border: \"1px solid $border_default\",\n          '&[data-state=\"open\"]': {\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0,\n          },\n        }}\n      >\n        <Flex justify=\"between\" align=\"center\" css={{ flexGrow: 1, pr: \"$6\" }}>\n          <Text\n            variant=\"sm\"\n            css={{\n              fontWeight: \"$semiBold\",\n              textTransform: \"capitalize\",\n              color: \"$on_surface_medium\",\n            }}\n          >\n            {roleName}{\" \"}\n            {`(${getFormattedCount(\n              isLargeRoom && isOffStageRole ? total : peerList.length\n            )})`}\n          </Text>\n          <RoleOptions roleName={roleName} peerList={peersInAccordion} />\n        </Flex>\n      </Accordion.Header>\n      <Accordion.Content\n        contentStyles={{\n          border: \"1px solid $border_default\",\n          borderTop: \"none\",\n        }}\n      >\n        <FixedSizeList\n          itemSize={ROW_HEIGHT}\n          itemData={{\n            peerList: isHandRaisedAccordion\n              ? peersInAccordion.sort((a, b) => {\n                  try {\n                    const aHandRaisedAt = JSON.parse(\n                      a.metadata || \"{}\"\n                    ).handRaisedAt;\n                    const bHandRaisedAt = JSON.parse(\n                      b.metadata || \"{}\"\n                    ).handRaisedAt;\n                    return aHandRaisedAt - bHandRaisedAt;\n                  } catch (err) {\n                    return 0;\n                  }\n                })\n              : peersInAccordion,\n            isConnected,\n            isHandRaisedAccordion,\n          }}\n          itemKey={itemKey}\n          itemCount={peersInAccordion.length}\n          width={width}\n          height={height}\n        >\n          {VirtualizedParticipantItem}\n        </FixedSizeList>\n        {offStageRoles?.includes(roleName) && hasNext ? (\n          <Flex\n            align=\"center\"\n            justify=\"end\"\n            css={{\n              gap: \"$1\",\n              cursor: \"pointer\",\n              color: \"$on_surface_high\",\n              p: \"$6\",\n              borderTop: \"1px solid $border_default\",\n            }}\n            onClick={() => onActive?.(roleName)}\n          >\n            <Text variant=\"sm\" css={{ color: \"inherit\" }}>\n              View All\n            </Text>\n            <ChevronRightIcon />\n          </Flex>\n        ) : null}\n        {isHandRaisedAccordion && canBringToStage && (\n          <>\n            <HorizontalDivider />\n            <Flex css={{ w: \"100%\", p: \"$6\", gap: \"$4\" }} justify=\"center\">\n              <Button\n                variant=\"standard\"\n                onClick={lowerAllHands}\n                icon\n                css={{ pl: \"$2\" }}\n              >\n                <CrossIcon /> Lower all hands\n              </Button>\n\n              <Button onClick={bringAllToStage} icon css={{ pl: \"$2\" }}>\n                <AddIcon /> {bring_to_stage_label}\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Accordion.Content>\n    </Accordion.Item>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSPeer,\n  selectPermissions,\n  selectRoleByRoleName,\n  selectTracksMap,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  MicOffIcon,\n  MicOnIcon,\n  PersonRectangleIcon,\n  RemoveUserIcon,\n  VerticalMenuIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { getMetadata } from \"../../common/utils\";\n\nconst dropdownItemCSS = {\n  backgroundColor: \"$surface_default\",\n  gap: \"$4\",\n  p: \"$8\",\n};\nconst optionTextCSS = {\n  fontWeight: \"$semiBold\",\n  color: \"$on_surface_high\",\n  textTransform: \"none\",\n  whiteSpace: \"nowrap\",\n};\n\nconst DropdownWrapper = ({ children }: { children: React.ReactNode }) => {\n  const [openOptions, setOpenOptions] = useState(false);\n  if (React.Children.toArray(children).length === 0) {\n    return null;\n  }\n  return (\n    <Dropdown.Root open={openOptions} onOpenChange={setOpenOptions}>\n      <Dropdown.Trigger\n        data-testid=\"role_group_options\"\n        onClick={(e) => e.stopPropagation()}\n        className=\"role_actions\"\n        asChild\n        css={{\n          p: \"$1\",\n          r: \"$0\",\n          c: \"$on_surface_high\",\n          visibility: openOptions ? \"visible\" : \"hidden\",\n          \"&:hover\": {\n            c: \"$on_surface_medium\",\n          },\n          \"@md\": {\n            visibility: \"visible\",\n          },\n        }}\n      >\n        <Flex>\n          <VerticalMenuIcon />\n        </Flex>\n      </Dropdown.Trigger>\n      <Dropdown.Content\n        onClick={(e) => e.stopPropagation()}\n        css={{ w: \"max-content\", bg: \"$surface_default\", py: 0 }}\n        align=\"end\"\n      >\n        {children}\n      </Dropdown.Content>\n    </Dropdown.Root>\n  );\n};\n\nexport const RoleOptions = ({\n  roleName,\n  peerList,\n}: {\n  roleName: string;\n  peerList: HMSPeer[];\n}) => {\n  const permissions = useHMSStore(selectPermissions);\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const { on_stage_role, off_stage_roles = [] } =\n    (elements as DefaultConferencingScreen_Elements)?.on_stage_exp || {};\n  const canRemoveRoleFromStage =\n    permissions?.changeRole && roleName === on_stage_role;\n  const role = useHMSStore(selectRoleByRoleName(roleName));\n  const tracks = useHMSStore(selectTracksMap);\n  if (!role) {\n    return null;\n  }\n  const canPublishAudio = role.publishParams.allowed.includes(\"audio\");\n  const canPublishVideo = role.publishParams.allowed.includes(\"video\");\n\n  let isVideoOnForSomePeers = false;\n  let isAudioOnForSomePeers = false;\n\n  peerList.forEach((peer) => {\n    if (peer.isLocal) {\n      return;\n    }\n    const isAudioOn = !!peer.audioTrack && tracks[peer.audioTrack]?.enabled;\n    const isVideoOn = !!peer.videoTrack && tracks[peer.videoTrack]?.enabled;\n    isAudioOnForSomePeers = isAudioOnForSomePeers || isAudioOn;\n    isVideoOnForSomePeers = isVideoOnForSomePeers || isVideoOn;\n  });\n\n  const setTrackEnabled = async (type: \"audio\" | \"video\", enabled = false) => {\n    try {\n      await hmsActions.setRemoteTracksEnabled({\n        roles: [roleName],\n        source: \"regular\",\n        type,\n        enabled,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // on stage and off stage roles\n  const canRemoveRoleFromRoom =\n    permissions?.removeOthers &&\n    (on_stage_role === roleName || off_stage_roles?.includes(roleName));\n\n  if (\n    peerList.length === 0 ||\n    // if only local peer is present no need to show any options\n    (peerList.length === 1 && peerList[0].isLocal) ||\n    !role\n  ) {\n    return null;\n  }\n\n  const removeAllFromStage = () => {\n    peerList.forEach((peer) => {\n      const prevRole = getMetadata(peer.metadata).prevRole;\n      if (prevRole) {\n        hmsActions.changeRoleOfPeer(peer.id, prevRole, true);\n      }\n    });\n  };\n\n  const removePeersFromRoom = async () => {\n    try {\n      peerList.forEach(async (peer) => {\n        await hmsActions.removePeer(peer.id, \"\");\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <DropdownWrapper>\n      {canRemoveRoleFromStage ? (\n        <Dropdown.Item\n          css={{ ...dropdownItemCSS, borderBottom: \"1px solid $border_bright\" }}\n          onClick={removeAllFromStage}\n        >\n          <PersonRectangleIcon />\n          <Text variant=\"sm\" css={optionTextCSS}>\n            Remove all from Stage\n          </Text>\n        </Dropdown.Item>\n      ) : null}\n\n      {match({\n        canPublishAudio,\n        isAudioOnForSomePeers,\n        canMute: permissions?.mute,\n        canUnmute: permissions?.unmute,\n      })\n        .with(\n          { canPublishAudio: true, isAudioOnForSomePeers: true, canMute: true },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"audio\", false)}\n              >\n                <MicOffIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Mute Audio for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .with(\n          {\n            canPublishAudio: true,\n            isAudioOnForSomePeers: false,\n            canUnmute: true,\n          },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"audio\", true)}\n              >\n                <MicOnIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Request to Unmute Audio for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .otherwise(() => null)}\n      {match({\n        canPublishVideo,\n        isVideoOnForSomePeers,\n        canMute: permissions?.mute,\n        canUnmute: permissions?.unmute,\n      })\n        .with(\n          { canPublishVideo: true, isVideoOnForSomePeers: true, canMute: true },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"video\", false)}\n              >\n                <VideoOffIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Mute Video for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .with(\n          {\n            canPublishVideo: true,\n            isVideoOnForSomePeers: false,\n            canUnmute: true,\n          },\n          () => {\n            return (\n              <Dropdown.Item\n                css={dropdownItemCSS}\n                onClick={() => setTrackEnabled(\"video\", true)}\n              >\n                <VideoOnIcon />\n                <Text variant=\"sm\" css={optionTextCSS}>\n                  Request to Unmute Video for All\n                </Text>\n              </Dropdown.Item>\n            );\n          }\n        )\n        .otherwise(() => null)}\n\n      {canRemoveRoleFromRoom ? (\n        <Dropdown.Item\n          css={{\n            ...dropdownItemCSS,\n            borderTop: \"1px solid $border_bright\",\n            color: \"$alert_error_default\",\n          }}\n          onClick={removePeersFromRoom}\n        >\n          <RemoveUserIcon />\n          <Text variant=\"sm\" css={{ ...optionTextCSS, color: \"inherit\" }}>\n            Remove all from Room\n          </Text>\n        </Dropdown.Item>\n      ) : null}\n    </DropdownWrapper>\n  );\n};\n", "import { match, P } from \"ts-pattern\";\nimport {\n  HMSPeer,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const useGroupOnStageActions = ({ peers }: { peers: HMSPeer[] }) => {\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const {\n    bring_to_stage_label,\n    remove_from_stage_label,\n    on_stage_role,\n    off_stage_roles = [],\n    skip_preview_for_role_change = false,\n  } = elements.on_stage_exp || {};\n  const canChangeRole = useHMSStore(selectPermissions)?.changeRole;\n\n  const offStageRolePeers = peers.filter((peer) =>\n    match({ on_stage_role, bring_to_stage_label, roleName: peer.roleName })\n      .with(\n        {\n          on_stage_role: P.when((role) => !!role),\n          bring_to_stage_label: P.when((label) => !!label),\n          roleName: P.when((role) => !!role && off_stage_roles.includes(role)),\n        },\n        () => true\n      )\n      .otherwise(() => false)\n  );\n\n  const lowerAllHands = async () => {\n    return Promise.all(\n      peers.map((peer) => hmsActions.lowerRemotePeerHand(peer.id))\n    );\n  };\n\n  const bringAllToStage = () => {\n    if (!canChangeRole || !on_stage_role) {\n      return;\n    }\n    return Promise.all(\n      offStageRolePeers.map((peer) => {\n        return hmsActions\n          .changeRoleOfPeer(\n            peer.id,\n            on_stage_role,\n            skip_preview_for_role_change\n          )\n          .then(() => {\n            return skip_preview_for_role_change\n              ? hmsActions.lowerRemotePeerHand(peer.id)\n              : null;\n          });\n      })\n    );\n  };\n\n  return {\n    lowerAllHands,\n    bringAllToStage,\n    canBringToStage: canChangeRole && offStageRolePeers.length > 0,\n    bring_to_stage_label,\n    remove_from_stage_label,\n  };\n};\n", "import { useEffect } from \"react\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { selectAppData, useHMSStore } from \"@100mslive/react-sdk\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSidepaneReset } from \"./useSidepane\";\nimport { APP_DATA, SidePaneOption } from \"../../common/constants\";\n\n// Closes the sidepane if an element is removed from the layout via the customiser\nexport const useSidepaneResetOnLayoutUpdate = (\n  layoutKey: keyof DefaultConferencingScreen_Elements,\n  sidepaneOption: SidePaneOption\n) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const resetSidePane = useSidepaneReset();\n  useEffect(() => {\n    if (sidepane === sidepaneOption && !elements?.[layoutKey]) {\n      resetSidePane();\n    }\n  }, [\n    elements,\n    elements?.[layoutKey],\n    resetSidePane,\n    sidepane,\n    layoutKey,\n    sidepaneOption,\n  ]);\n};\n", "import { useState } from \"react\";\nimport {\n  selectPeerMetadata,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const usePeerOnStageActions = ({\n  peerId,\n  role,\n}: {\n  peerId: string;\n  role: string;\n}) => {\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const {\n    bring_to_stage_label,\n    remove_from_stage_label,\n    on_stage_role,\n    off_stage_roles = [],\n    skip_preview_for_role_change = false,\n  } = elements.on_stage_exp || {};\n  const isInStage = role === on_stage_role;\n  const canChangeRole = useHMSStore(selectPermissions)?.changeRole;\n  const shouldShowStageRoleChange =\n    canChangeRole &&\n    ((isInStage && remove_from_stage_label) ||\n      (off_stage_roles?.includes(role) && bring_to_stage_label));\n  const prevRole = useHMSStore(selectPeerMetadata(peerId))?.prevRole;\n  const [open, setOpen] = useState(false);\n\n  const lowerPeerHand = async () => {\n    await hmsActions.lowerRemotePeerHand(peerId);\n  };\n\n  const handleStageAction = async () => {\n    if (isInStage) {\n      prevRole && hmsActions.changeRoleOfPeer(peerId, prevRole, true);\n    } else if (on_stage_role) {\n      await hmsActions.changeRoleOfPeer(\n        peerId,\n        on_stage_role,\n        skip_preview_for_role_change\n      );\n      if (skip_preview_for_role_change) {\n        await lowerPeerHand();\n      }\n    }\n    setOpen(false);\n  };\n\n  return {\n    open,\n    setOpen,\n    lowerPeerHand,\n    handleStageAction,\n    shouldShowStageRoleChange,\n    isInStage,\n    bring_to_stage_label,\n    remove_from_stage_label,\n  };\n};\n", "import React, { useEffect } from \"react\";\nimport { QuizActiveIcon, QuizIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  usePollViewToggle,\n} from \"../AppData/useSidepane\";\nimport { useUnreadPollQuizPresent } from \"../hooks/useUnreadPollQuizPresent\";\n// @ts-ignore: No implicit Any\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const PollsToggle = () => {\n  const isPollsOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.POLLS);\n  const togglePollView = usePollViewToggle();\n  const { unreadPollQuiz, setUnreadPollQuiz } = useUnreadPollQuizPresent();\n\n  useEffect(() => {\n    if (unreadPollQuiz && isPollsOpen) {\n      setUnreadPollQuiz(false);\n    }\n  }, [isPollsOpen, unreadPollQuiz, setUnreadPollQuiz]);\n\n  return (\n    <Tooltip\n      key=\"polls\"\n      title={`${isPollsOpen ? \"Close\" : \"Open\"} polls and quizzes`}\n    >\n      <IconButton\n        onClick={() => {\n          togglePollView();\n          setUnreadPollQuiz(false);\n        }}\n        css={{ bg: isPollsOpen ? \"$surface_brighter\" : \"\" }}\n        data-testid=\"polls_btn\"\n      >\n        {unreadPollQuiz ? <QuizActiveIcon /> : <QuizIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectPeerScreenSharing,\n  useHMSStore,\n  useWhiteboard,\n} from \"@100mslive/react-sdk\";\nimport { PencilDrawIcon } from \"@100mslive/react-icons\";\nimport { Tooltip } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../../IconButton\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const WhiteboardToggle = () => {\n  const { toggle, open, isOwner } = useWhiteboard();\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const disabled = !!peerSharing || (open && !isOwner);\n\n  if (!toggle) {\n    return null;\n  }\n\n  return (\n    <Tooltip\n      key=\"whiteboard\"\n      title={\n        peerSharing\n          ? \"Cannot open whiteboard when viewing a shared screen\"\n          : `${open ? \"Close\" : \"Open\"} Whiteboard`\n      }\n    >\n      <IconButton\n        onClick={async () => {\n          if (disabled) {\n            return;\n          }\n          try {\n            await toggle();\n          } catch (error) {\n            ToastManager.addToast({\n              title: (error as Error).message,\n              variant: \"error\",\n            });\n          }\n        }}\n        active={!open}\n        disabled={disabled}\n        data-testid=\"whiteboard_btn\"\n      >\n        <PencilDrawIcon />\n      </IconButton>\n    </Tooltip>\n  );\n};\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  selectHLSState,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { Button } from \"../../../Button\";\nimport { Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { APP_DATA } from \"../../common/constants\";\n\nexport function HLSFailureModal() {\n  const hlsError = useHMSStore(selectHLSState).error || false;\n  const [openModal, setOpenModal] = useState(!!hlsError);\n  const hmsActions = useHMSActions();\n  const { isRTMPRunning } = useRecordingStreaming();\n  const [isHLSStarted, setHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const startHLS = useCallback(async () => {\n    try {\n      if (isHLSStarted || isRTMPRunning) {\n        return;\n      }\n      setHLSStarted(true);\n      await hmsActions.startHLSStreaming({});\n    } catch (error) {\n      console.error(error);\n      setHLSStarted(false);\n    }\n  }, [hmsActions, isHLSStarted, setHLSStarted, isRTMPRunning]);\n\n  return hlsError ? (\n    <Dialog.Root\n      open={openModal}\n      onOpenChange={(value) => {\n        if (!value) {\n          setOpenModal(false);\n        }\n      }}\n    >\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content css={{ w: \"min(360px, 90%)\" }}>\n          <Dialog.Title\n            css={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              borderBottom: \"1px solid $border_default\",\n              mt: \"$4\",\n            }}\n          >\n            <Text variant=\"h6\" css={{ fontWeight: \"$semiBold\" }}>\n              Failed to Go Live\n            </Text>\n          </Dialog.Title>\n          <Text variant=\"sm\" css={{ mb: \"$10\", color: \"$on_surface_medium\" }}>\n            Something went wrong and your live broadcast failed. Please try\n            again.\n          </Text>\n          <Flex align=\"center\" justify=\"between\" css={{ w: \"100%\", gap: \"$8\" }}>\n            <Button\n              outlined\n              variant=\"standard\"\n              css={{ w: \"100%\" }}\n              onClick={() => setOpenModal(false)}\n            >\n              Dismiss\n            </Button>\n            <Button css={{ w: \"100%\" }} onClick={startHLS}>\n              Go Live\n            </Button>\n          </Flex>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  ) : null;\n}\n", "import React, { useEffect } from \"react\";\nimport {\n  selectIsInPreview,\n  selectLocalPeerName,\n  selectLocalPeerRoleName,\n  selectRoleChangeRequest,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Flex, Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { PreviewControls, PreviewTile } from \"../Preview/PreviewJoin\";\nimport { RequestPrompt } from \"./RequestPrompt\";\nimport { useRoomLayoutPreviewScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useMyMetadata } from \"../hooks/useMetadata\";\n// @ts-ignore: No implicit Any\nimport { ROLE_CHANGE_DECLINED } from \"../../common/constants\";\n\nexport const RoleChangeRequestModal = () => {\n  const hmsActions = useHMSActions();\n  const { updateMetaData } = useMyMetadata();\n  const isPreview = useHMSStore(selectIsInPreview);\n  const currentRole = useHMSStore(selectLocalPeerRoleName);\n  const roleChangeRequest = useHMSStore(selectRoleChangeRequest);\n  const name = useHMSStore(selectLocalPeerName);\n  const { sendEvent } = useCustomEvent({ type: ROLE_CHANGE_DECLINED });\n  const { elements = {} } = useRoomLayoutPreviewScreen();\n  const { virtual_background } = elements || {};\n\n  useEffect(() => {\n    if (!roleChangeRequest?.role) {\n      return;\n    }\n    (async () => {\n      await hmsActions.preview({ asRole: roleChangeRequest.role.name });\n    })();\n  }, [hmsActions, roleChangeRequest, currentRole, updateMetaData]);\n\n  if (!roleChangeRequest?.role) {\n    return null;\n  }\n\n  const body = (\n    <>\n      <Text\n        variant=\"xs\"\n        css={{\n          c: \"$on_surface_medium\",\n          textAlign: \"center\",\n          \"@md\": {\n            textAlign: \"left\",\n            borderBottom: \"1px solid $border_bright\",\n            pb: \"$4\",\n            px: \"$8\",\n          },\n        }}\n      >\n        Setup your audio and video before joining\n      </Text>\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        css={{\n          \"@sm\": { width: \"100%\" },\n          flexDirection: \"column\",\n          mt: \"$6\",\n          \"@md\": { px: \"$8\" },\n        }}\n      >\n        <PreviewTile name={name || \"\"} />\n\n        <PreviewControls hideSettings={true} vbEnabled={!!virtual_background} />\n      </Flex>\n    </>\n  );\n\n  return (\n    <RequestPrompt\n      title=\"You're invited to join the stage\"\n      onOpenChange={async (value) => {\n        if (!value) {\n          hmsActions.rejectChangeRole(roleChangeRequest);\n          sendEvent(\n            { ...roleChangeRequest, peerName: name },\n            { peerId: roleChangeRequest.requestedBy?.id }\n          );\n          await hmsActions.cancelMidCallPreview();\n          await hmsActions.lowerLocalPeerHand();\n        }\n      }}\n      body={body}\n      onAction={async () => {\n        await hmsActions.acceptChangeRole(roleChangeRequest);\n        await updateMetaData({ prevRole: currentRole });\n        await hmsActions.lowerLocalPeerHand();\n      }}\n      actionText=\"Accept\"\n      disableActions={!isPreview}\n    />\n  );\n};\n", "import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useMeasure, useMedia } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectAppData,\n  selectIsLocalVideoEnabled,\n  selectIsVBEnabled,\n  selectLocalPeer,\n  selectRoomState,\n  selectVideoTrackByID,\n  useAVToggle,\n  useAwayNotifications,\n  useHMSStore,\n  useParticipants,\n  usePreviewJoin,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { MicOffIcon, SettingsIcon } from \"@100mslive/react-icons\";\nimport {\n  Avatar,\n  Box,\n  config as cssConfig,\n  Flex,\n  flexCenter,\n  styled,\n  StyledVideoTile,\n  Text,\n  Video,\n} from \"../../..\";\nimport { AudioLevel } from \"../../../AudioLevel\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\nimport IconButton from \"../../IconButton\";\nimport SidePane from \"../../layouts/SidePane\";\nimport { AudioVideoToggle, NoiseCancellation } from \"../AudioVideoToggle\";\nimport Chip from \"../Chip\";\nimport TileConnection from \"../Connection/TileConnection\";\nimport FullPageProgress from \"../FullPageProgress\";\n// @ts-ignore: No implicit Any\nimport { Logo } from \"../Header/HeaderComponents\";\n// @ts-ignore: No implicit Any\nimport SettingsModal from \"../Settings/SettingsModal\";\nimport { VBToggle } from \"../VirtualBackground/VBToggle\";\nimport PreviewForm from \"./PreviewForm\";\nimport { useRoomLayoutPreviewScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport {\n  useAuthToken,\n  useUISettings,\n  // @ts-ignore: No implicit Any\n} from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport {\n  defaultPreviewPreference,\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"../hooks/useUserPreferences\";\n// @ts-ignore: No implicit Any\nimport {\n  calculateAvatarAndAttribBoxSize,\n  getFormattedCount,\n} from \"../../common/utils\";\nimport { APP_DATA, UI_SETTINGS } from \"../../common/constants\";\n\nconst getParticipantChipContent = (peerCount = 0) => {\n  if (peerCount === 0) {\n    return \"You are the first to join\";\n  }\n  const formattedNum = getFormattedCount(peerCount);\n  return `${formattedNum} other${\n    parseInt(formattedNum) === 1 ? \"\" : \"s\"\n  } in the session`;\n};\n\nconst useLocalTileAspectRatio = () => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const videoTrack = useHMSStore(selectVideoTrackByID(localPeer?.videoTrack));\n  const isMobile = useMedia(cssConfig.media.md);\n  let aspectRatio = 0;\n  if (videoTrack?.width && videoTrack?.height) {\n    aspectRatio = videoTrack.width / videoTrack.height;\n  } else {\n    aspectRatio = isMobile ? 9 / 16 : 16 / 9;\n  }\n  return aspectRatio;\n};\n\nconst PreviewJoin = ({\n  skipPreview,\n  initialName,\n  asRole,\n}: {\n  skipPreview?: boolean;\n  initialName?: string;\n  asRole?: string;\n}) => {\n  const [previewPreference, setPreviewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW,\n    defaultPreviewPreference\n  );\n  const { isStreamingOn } = useRecordingStreaming();\n  const authToken = useAuthToken();\n  const [name, setName] = useState(initialName || previewPreference.name);\n  const { toggleAudio, toggleVideo } = useAVToggle();\n  const [previewError, setPreviewError] = useState(false);\n  const { endpoints } = useHMSPrebuiltContext();\n  const { peerCount } = useParticipants();\n  const loadingEffects = useHMSStore(selectAppData(APP_DATA.loadingEffects));\n  const { enableJoin, preview, join } = usePreviewJoin({\n    name,\n    token: authToken,\n    initEndpoint: endpoints?.init,\n    initialSettings: {\n      isAudioMuted: skipPreview || previewPreference.isAudioMuted,\n      isVideoMuted: skipPreview || previewPreference.isVideoMuted,\n      speakerAutoSelectionBlacklist: [\"Yeti Stereo Microphone\"],\n    },\n    captureNetworkQualityInPreview: true,\n    handleError: (_, method) => {\n      if (method === \"preview\") {\n        setPreviewError(true);\n      }\n    },\n    asRole,\n  });\n  const { requestPermission } = useAwayNotifications();\n  const roomState = useHMSStore(selectRoomState);\n  const savePreferenceAndJoin = useCallback(() => {\n    setPreviewPreference({\n      name,\n    });\n    join();\n  }, [join, name, setPreviewPreference]);\n  const { elements = {} } = useRoomLayoutPreviewScreen();\n  const { preview_header: previewHeader = {}, virtual_background } =\n    elements || {};\n  const aspectRatio = useLocalTileAspectRatio();\n  useEffect(() => {\n    if (authToken) {\n      if (skipPreview) {\n        savePreferenceAndJoin();\n      } else {\n        preview().then(() => requestPermission());\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authToken, skipPreview]);\n\n  useEffect(() => {\n    if (initialName) {\n      setName(initialName);\n    }\n  }, [initialName]);\n\n  return roomState === HMSRoomState.Preview ? (\n    <Flex justify=\"center\" css={{ size: \"100%\", position: \"relative\" }}>\n      <Container\n        css={{\n          h: \"100%\",\n          pt: \"$6\",\n          \"@md\": { justifyContent: \"space-between\", pt: \"$10\" },\n        }}\n      >\n        {toggleVideo ? null : <Box />}\n        <Flex\n          direction=\"column\"\n          justify=\"center\"\n          css={{ w: \"100%\", maxWidth: \"600px\", gap: \"$8\" }}\n        >\n          <Logo />\n          <Text\n            variant=\"h4\"\n            css={{ wordBreak: \"break-word\", textAlign: \"center\" }}\n          >\n            {previewHeader.title}\n          </Text>\n          <Text\n            css={{\n              c: \"$on_surface_medium\",\n              textAlign: \"center\",\n              maxWidth: \"100%\",\n              wordWrap: \"break-word\",\n            }}\n            variant=\"sm\"\n          >\n            {previewHeader.sub_title}\n          </Text>\n          <Flex justify=\"center\" css={{ gap: \"$4\" }}>\n            {isStreamingOn ? (\n              <Chip\n                content=\"LIVE\"\n                backgroundColor=\"$alert_error_default\"\n                textColor=\"#FFF\"\n                icon={\n                  <Box\n                    css={{\n                      h: \"$sm\",\n                      w: \"$sm\",\n                      backgroundColor: \"$on_primary_high\",\n                      borderRadius: \"$round\",\n                    }}\n                  />\n                }\n              />\n            ) : null}\n            <Chip\n              content={getParticipantChipContent(peerCount)}\n              hideIfNoContent\n            />\n          </Flex>\n        </Flex>\n        {toggleVideo ? <PreviewTile name={name} error={previewError} /> : null}\n        <Box\n          css={{ w: \"100%\", maxWidth: `${Math.max(aspectRatio, 1) * 340}px` }}\n        >\n          <PreviewControls\n            hideSettings={!toggleVideo && !toggleAudio}\n            vbEnabled={!!virtual_background}\n          />\n          <PreviewForm\n            name={name}\n            disabled={!!initialName}\n            onChange={setName}\n            enableJoin={enableJoin && !loadingEffects}\n            onJoin={savePreferenceAndJoin}\n            cannotPublishVideo={!toggleVideo}\n            cannotPublishAudio={!toggleAudio}\n          />\n        </Box>\n      </Container>\n      <Box\n        css={{\n          position: \"absolute\",\n          right: \"0\",\n          top: 0,\n          height: \"100%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <SidePane />\n      </Box>\n    </Flex>\n  ) : (\n    <FullPageProgress />\n  );\n};\n\nconst Container = styled(\"div\", {\n  width: \"100%\",\n  ...flexCenter,\n  flexDirection: \"column\",\n  px: \"$10\",\n});\n\nexport const PreviewTile = ({\n  name,\n  error,\n}: {\n  name: string;\n  error?: boolean;\n}) => {\n  const localPeer = useHMSStore(selectLocalPeer);\n  const { isLocalAudioEnabled, toggleAudio } = useAVToggle();\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const trackSelector = selectVideoTrackByID(localPeer?.videoTrack);\n  const track = useHMSStore(trackSelector);\n  const showMuteIcon = !isLocalAudioEnabled || !toggleAudio;\n  const aspectRatio = useLocalTileAspectRatio();\n  const [ref, { width: calculatedWidth, height: calculatedHeight }] =\n    useMeasure<HTMLDivElement>();\n  const [avatarSize, attribBoxSize] = useMemo(\n    () => calculateAvatarAndAttribBoxSize(calculatedWidth, calculatedHeight),\n    [calculatedWidth, calculatedHeight]\n  );\n\n  return (\n    <StyledVideoTile.Container\n      ref={ref}\n      css={{\n        bg: \"$surface_default\",\n        aspectRatio,\n        height: \"min(340px, 70vh)\",\n        width: \"auto\",\n        maxWidth: \"600px\",\n        overflow: \"clip\",\n        mt: \"$10\",\n        \"@md\": {\n          mt: 0,\n          width: \"min(220px, 70vw)\",\n          maxWidth: \"100%\",\n          my: \"$4\",\n        },\n      }}\n    >\n      {localPeer ? (\n        <>\n          <TileConnection name=\"\" peerId={localPeer.id} hideLabel={false} />\n          <Video\n            mirror={track?.facingMode !== \"environment\" && mirrorLocalVideo}\n            trackId={localPeer.videoTrack}\n            data-testid=\"preview_tile\"\n          />\n\n          {!isVideoOn ? (\n            <StyledVideoTile.AvatarContainer>\n              <Avatar\n                name={name}\n                data-testid=\"preview_avatar_tile\"\n                size={avatarSize}\n              />\n            </StyledVideoTile.AvatarContainer>\n          ) : null}\n        </>\n      ) : null}\n      {!localPeer && !error ? <FullPageProgress /> : null}\n\n      {showMuteIcon ? (\n        <StyledVideoTile.AudioIndicator size={attribBoxSize}>\n          <MicOffIcon />\n        </StyledVideoTile.AudioIndicator>\n      ) : (\n        <StyledVideoTile.AudioIndicator size={attribBoxSize}>\n          <AudioLevel trackId={localPeer?.audioTrack} />\n        </StyledVideoTile.AudioIndicator>\n      )}\n    </StyledVideoTile.Container>\n  );\n};\n\nexport const PreviewControls = ({\n  hideSettings,\n  vbEnabled,\n}: {\n  hideSettings: boolean;\n  vbEnabled: boolean;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isVBEnabledForUser = useHMSStore(selectIsVBEnabled);\n  return (\n    <Flex\n      justify={hideSettings && isMobile ? \"center\" : \"between\"}\n      css={{\n        width: \"100%\",\n        mt: \"$6\",\n      }}\n    >\n      <Flex css={{ gap: \"$4\" }}>\n        <AudioVideoToggle />\n        {vbEnabled && isVBEnabledForUser ? <VBToggle /> : null}\n      </Flex>\n      <Flex align=\"center\" gap=\"1\">\n        {isMobile && <NoiseCancellation iconOnly />}\n        {!hideSettings ? <PreviewSettings /> : null}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const PreviewSettings = React.memo(() => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Fragment>\n      <IconButton\n        data-testid=\"preview_setting_btn\"\n        css={{ flexShrink: 0 }}\n        onClick={() => setOpen((value) => !value)}\n      >\n        <SettingsIcon />\n      </IconButton>\n      {open && <SettingsModal open={open} onOpenChange={setOpen} />}\n    </Fragment>\n  );\n});\n\nexport default PreviewJoin;\n", "import React, { useEffect } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectAppData,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Polls } from \"../components/Polls/Polls\";\nimport { RoomDetailsPane } from \"../components/RoomDetails/RoomDetailsPane\";\nimport { LayoutMode } from \"../components/Settings/LayoutSettings\";\nimport { SidePaneTabs } from \"../components/SidePaneTabs\";\nimport { TileCustomisationProps } from \"../components/VideoLayouts/GridLayout\";\nimport VideoTile from \"../components/VideoTile\";\nimport { VBPicker } from \"../components/VirtualBackground/VBPicker\";\nimport { Flex } from \"../../Layout\";\nimport { config as cssConfig, styled } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport { useSidepaneReset } from \"../components/AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"../components/AppData/useUISettings\";\nimport {\n  useRoomLayoutConferencingScreen,\n  useRoomLayoutPreviewScreen,\n} from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../common/hooks\";\nimport { translateAcross } from \"../../utils\";\nimport { APP_DATA, SIDE_PANE_OPTIONS, UI_SETTINGS } from \"../common/constants\";\n\nconst Wrapper = styled(\"div\", {\n  w: \"$100\",\n  h: \"100%\",\n  p: \"$10\",\n  flex: \"1 1 0\",\n  background: \"$surface_dim\",\n  r: \"$1\",\n  position: \"relative\",\n  \"@lg\": {\n    w: \"100%\",\n    h: \"100%\",\n    ml: 0,\n    right: 0,\n    position: \"fixed\",\n    bottom: 0,\n    borderRadius: 0,\n    zIndex: 10,\n  },\n  \"@md\": {\n    p: \"$6 $8\",\n    animation: `${translateAcross({\n      yFrom: \"100%\",\n    })} 150ms cubic-bezier(0.22, 1, 0.36, 1)`,\n  },\n  variants: {\n    landscapeStream: {\n      true: {\n        \"@lg\": {\n          position: \"unset\",\n          minHeight: \"100%\",\n        },\n      },\n    },\n    mobileStream: {\n      true: {\n        \"@md\": {\n          position: \"unset\",\n        },\n      },\n    },\n    overlayChat: {\n      true: {\n        \"@lg\": {\n          maxHeight: \"300px\",\n          background:\n            \"linear-gradient(180deg, rgba(0, 0, 0, 0.00) 35.94%, rgba(0, 0, 0, 0.64) 100%)\",\n          position: \"fixed\",\n          zIndex: 12,\n          bottom: 0,\n        },\n      },\n    },\n    roomDescription: {\n      true: {\n        overflowY: \"auto\",\n      },\n    },\n    hideControls: {\n      true: {},\n    },\n    virtualBackground: {\n      true: {\n        maxHeight: \"100%\",\n        background: \"$surface_dim\",\n      },\n    },\n  },\n  compoundVariants: [\n    {\n      landscapeStream: true,\n      overlayChat: true,\n      css: {\n        position: \"unset\",\n        height: \"100%\",\n        maxHeight: \"unset\",\n        \"@md\": {\n          pb: 0,\n        },\n      },\n    },\n    {\n      mobileStream: true,\n      overlayChat: true,\n      css: {\n        position: \"unset\",\n        height: \"100%\",\n        maxHeight: \"unset\",\n      },\n    },\n    {\n      hideControls: false,\n      overlayChat: true,\n      css: {\n        pb: \"$17\",\n      },\n    },\n  ],\n});\n\nconst SidePane = ({\n  tileProps,\n  hideControls = false,\n}: {\n  tileProps?: TileCustomisationProps;\n  hideControls?: boolean;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const sidepane = useHMSStore(selectAppData(APP_DATA.sidePane));\n  const activeScreensharePeerId = useHMSStore(\n    selectAppData(APP_DATA.activeScreensharePeerId)\n  );\n  const trackId = useHMSStore(\n    selectVideoTrackByPeerID(activeScreensharePeerId)\n  )?.id;\n  const { elements } = useRoomLayoutConferencingScreen();\n  const { elements: preview_elements } = useRoomLayoutPreviewScreen();\n  const layoutMode = useUISettings(UI_SETTINGS.layoutMode);\n\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const isMobileHLSStream = useMobileHLSStream();\n\n  const backgroundMedia = preview_elements?.virtual_background?.background_media\n    ?.length\n    ? preview_elements?.virtual_background?.background_media\n    : elements?.virtual_background?.background_media || [];\n\n  const tileLayout = {\n    hideParticipantNameOnTile: tileProps?.hide_participant_name_on_tile,\n    roundedVideoTile: tileProps?.rounded_video_tile,\n    hideAudioMuteOnTile: tileProps?.hide_audio_mute_on_tile,\n    hideMetadataOnTile: tileProps?.hide_metadata_on_tile,\n    objectFit: tileProps?.video_object_fit,\n  };\n  const mwebStreamingChat =\n    isMobile &&\n    sidepane === SIDE_PANE_OPTIONS.CHAT &&\n    elements?.chat?.is_overlay;\n  const commonProps = {\n    landscapeStream: isLandscapeHLSStream,\n    mobileStream: isMobileHLSStream,\n    hideControls,\n    overlayChat: !!elements?.chat?.is_overlay,\n    roomDescription: sidepane === SIDE_PANE_OPTIONS.ROOM_DETAILS,\n    virtualBackground: sidepane === SIDE_PANE_OPTIONS.VB,\n  };\n\n  const SidepaneComponent = match(sidepane)\n    .with(SIDE_PANE_OPTIONS.POLLS, () => (\n      <Wrapper\n        css={{\n          \"@md\": {\n            borderTopLeftRadius: \"$2\",\n            borderTopRightRadius: \"$2\",\n          },\n        }}\n        {...commonProps}\n      >\n        <Polls />\n      </Wrapper>\n    ))\n    .with(SIDE_PANE_OPTIONS.VB, () => (\n      <Wrapper css={{ p: \"$10 $6 $10 $10\" }} {...commonProps}>\n        <VBPicker backgroundMedia={backgroundMedia} />\n      </Wrapper>\n    ))\n    .with(SIDE_PANE_OPTIONS.CHAT, SIDE_PANE_OPTIONS.PARTICIPANTS, () => (\n      <Wrapper {...commonProps} overlayChat={mwebStreamingChat}>\n        <SidePaneTabs\n          active={sidepane}\n          hideTab={isMobileHLSStream || isLandscapeHLSStream}\n        />\n      </Wrapper>\n    ))\n    .with(SIDE_PANE_OPTIONS.ROOM_DETAILS, () => (\n      <Wrapper {...commonProps}>\n        <RoomDetailsPane />\n      </Wrapper>\n    ))\n    .otherwise(() => {\n      return null;\n    });\n\n  const resetSidePane = useSidepaneReset();\n\n  useEffect(() => {\n    return () => {\n      resetSidePane();\n    };\n  }, [resetSidePane]);\n\n  if (!SidepaneComponent && !trackId) {\n    return null;\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"center\"\n      css={{\n        w: match({ isMobileHLSStream, isLandscapeHLSStream })\n          .with({ isLandscapeHLSStream: true }, () => \"340px\")\n          .with({ isMobileHLSStream: true }, () => \"100%\")\n          .otherwise(() => \"$100\"),\n        h: \"100%\",\n        flexShrink: 0,\n        gap: \"$4\",\n        position: \"relative\",\n        \"&:empty\": { display: \"none\" },\n        \"@md\": {\n          position: \"absolute\",\n          zIndex: 12,\n        },\n      }}\n    >\n      {trackId && layoutMode === LayoutMode.GALLERY && (\n        <VideoTile\n          peerId={activeScreensharePeerId}\n          trackId={trackId}\n          width=\"100%\"\n          height={225}\n          rootCSS={{ p: 0, alignSelf: \"start\", flexShrink: 0 }}\n          {...tileLayout}\n        />\n      )}\n      {SidepaneComponent}\n    </Flex>\n  );\n};\n\nexport default SidePane;\n", "import React from \"react\";\n// @ts-ignore: No implicit Any\nimport { PollsQuizMenu } from \"./CreatePollQuiz/PollsQuizMenu\";\n// @ts-ignore: No implicit Any\nimport { CreateQuestions } from \"./CreateQuestions/CreateQuestions\";\nimport { LeaderboardSummary } from \"./Voting/LeaderboardSummary\";\n// @ts-ignore: No implicit Any\nimport { Voting } from \"./Voting/Voting\";\n// @ts-ignore: No implicit Any\nimport { usePollViewToggle } from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { usePollViewState } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { POLL_VIEWS } from \"../../common/constants\";\n\nexport const Polls = () => {\n  const togglePollView = usePollViewToggle();\n  const { pollInView: pollID, view } = usePollViewState();\n\n  if (view === POLL_VIEWS.CREATE_POLL_QUIZ) {\n    return <PollsQuizMenu />;\n  } else if (view === POLL_VIEWS.CREATE_QUESTIONS) {\n    return <CreateQuestions />;\n  } else if (view === POLL_VIEWS.VOTE) {\n    return <Voting toggleVoting={togglePollView} id={pollID} />;\n  } else if (view === POLL_VIEWS.RESULTS) {\n    return <LeaderboardSummary pollID={pollID} />;\n  } else {\n    return null;\n  }\n};\n", "import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  HMSPollState,\n  selectLocalPeerRoleName,\n  selectPermissions,\n  selectPolls,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { QuestionIcon, StatsIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Input, Switch, Text } from \"../../../..\";\n// @ts-ignore\nimport { Container, ContentHeader, ErrorText } from \"../../Streaming/Common\";\n// @ts-ignore\nimport { usePollViewToggle } from \"../../AppData/useSidepane\";\n// @ts-ignore\nimport { usePollViewState } from \"../../AppData/useUISettings\";\n// @ts-ignore\nimport { isValidTextInput } from \"../../../common/utils\";\nimport { StatusIndicator } from \"../common/StatusIndicator\";\nimport {\n  INTERACTION_TYPE,\n  POLL_STATE,\n  POLL_VIEWS,\n} from \"../../../common/constants\";\n\nexport const PollsQuizMenu = () => {\n  const togglePollView = usePollViewToggle();\n  const permissions = useHMSStore(selectPermissions);\n\n  return (\n    <Container rounded>\n      <ContentHeader content=\"Polls and Quizzes\" onClose={togglePollView} />\n      <Flex\n        direction=\"column\"\n        css={{ px: \"$10\", pb: \"$10\", overflowY: \"auto\" }}\n      >\n        {permissions?.pollWrite && <AddMenu />}\n        <PrevMenu />\n      </Flex>\n    </Container>\n  );\n};\n\nfunction InteractionSelectionCard({\n  title,\n  icon,\n  active,\n  onClick,\n}: {\n  title: string;\n  icon: React.JSX.Element;\n  active: boolean;\n  onClick: () => void;\n}) {\n  const activeBorderStyle = active\n    ? \"$space$px solid $primary_default\"\n    : \"$space$px solid $border_bright\";\n  return (\n    <Flex\n      onClick={onClick}\n      css={{\n        border: activeBorderStyle,\n        p: \"$4\",\n        r: \"$2\",\n        w: \"100%\",\n        cursor: \"pointer\",\n      }}\n      align=\"center\"\n    >\n      <Flex\n        css={{\n          border: activeBorderStyle,\n          p: \"$4\",\n          bg: \"$surface_bright\",\n          c: \"$on_surface_high\",\n          r: \"$0\",\n        }}\n      >\n        {icon}\n      </Flex>\n      <Text variant=\"sub1\" css={{ ml: \"$md\" }}>\n        {title}\n      </Text>\n    </Flex>\n  );\n}\n\nconst AddMenu = () => {\n  const actions = useHMSActions();\n  const [title, setTitle] = useState(\"\");\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  const [hideVoteCount, setHideVoteCount] = useState(false);\n  const [error, setError] = useState();\n  const [titleError, setTitleError] = useState(\"\");\n  const { setPollState } = usePollViewState();\n  const [interactionType, setInteractionType] = useState(INTERACTION_TYPE.POLL);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [interactionType]);\n\n  const handleCreate = (id: string) => {\n    setPollState({\n      [POLL_STATE.pollInView]: id,\n      [POLL_STATE.view]: POLL_VIEWS.CREATE_QUESTIONS,\n    });\n  };\n\n  const validateTitle = useMemo(() => {\n    if (!isValidTextInput(title)) {\n      if (title) {\n        setTitleError(\"The title should have between 2-100 characters\");\n      }\n      return true;\n    } else {\n      setTitleError(\"\");\n      return false;\n    }\n  }, [title]);\n\n  return (\n    <>\n      <Text variant=\"caption\" css={{ c: \"$on_surface_medium\", mb: \"$md\" }}>\n        Select the type you want to continue with\n      </Text>\n      <Flex css={{ w: \"100%\", gap: \"$10\", mb: \"$md\" }}>\n        <InteractionSelectionCard\n          title={INTERACTION_TYPE.POLL}\n          icon={<StatsIcon width={32} height={32} />}\n          onClick={() => setInteractionType(INTERACTION_TYPE.POLL)}\n          active={interactionType === INTERACTION_TYPE.POLL}\n        />\n        <InteractionSelectionCard\n          title={INTERACTION_TYPE.QUIZ}\n          icon={<QuestionIcon width={32} height={32} />}\n          onClick={() => setInteractionType(INTERACTION_TYPE.QUIZ)}\n          active={interactionType === INTERACTION_TYPE.QUIZ}\n        />\n      </Flex>\n      <Flex direction=\"column\" css={{ mb: \"$10\" }}>\n        <Text\n          variant=\"body2\"\n          css={{ mb: \"$4\" }}\n        >{`Name this ${interactionType.toLowerCase()}`}</Text>\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          placeholder=\"Enter a name to continue\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value.trimStart())}\n          css={{\n            backgroundColor: \"$surface_bright\",\n            border: \"1px solid $border_default\",\n          }}\n        />\n        <Flex align=\"center\" css={{ mt: \"$10\" }}>\n          <Switch\n            onCheckedChange={(value) => setHideVoteCount(value)}\n            css={{ mr: \"$6\" }}\n          />\n          <Text variant=\"body2\" css={{ c: \"$on_surface_medium\" }}>\n            Hide Vote Count\n          </Text>\n        </Flex>\n\n        <Button\n          variant=\"primary\"\n          disabled={validateTitle}\n          css={{ mt: \"$10\" }}\n          onClick={async () => {\n            const id = Date.now().toString();\n            await actions.interactivityCenter\n              .createPoll({\n                id,\n                title,\n                anonymous: false,\n                rolesThatCanViewResponses:\n                  hideVoteCount && localPeerRoleName\n                    ? [localPeerRoleName]\n                    : undefined,\n                // @ts-ignore\n                type: interactionType.toLowerCase(),\n              })\n              .then(() => handleCreate(id))\n              .catch((err) => setError(err.message));\n          }}\n        >\n          Create {interactionType}\n        </Button>\n        <ErrorText error={error || titleError} />\n      </Flex>\n    </>\n  );\n};\n\nconst PrevMenu = () => {\n  const hmsActions = useHMSActions();\n  const polls = useHMSStore(selectPolls);\n  const sortedPolls = useMemo(\n    () =>\n      polls\n        ?.sort(\n          (a, b) =>\n            (b?.createdAt?.getTime?.() || 0) - (a?.createdAt?.getTime?.() || 0)\n        )\n        ?.sort(\n          (a, b) =>\n            (b?.state === \"started\" ? 1 : 0) - (a?.state === \"started\" ? 1 : 0)\n        ),\n    [polls]\n  );\n  const permissions = useHMSStore(selectPermissions);\n\n  useEffect(() => {\n    const updatePolls = async () => {\n      await hmsActions.interactivityCenter.getPolls();\n    };\n    updatePolls();\n  }, [hmsActions.interactivityCenter]);\n\n  return polls?.length ? (\n    <Flex\n      direction=\"column\"\n      css={{\n        width: \"100%\",\n        ...(permissions?.pollWrite\n          ? { borderTop: \"$space$px solid $border_bright\", paddingTop: \"$10\" }\n          : {}),\n      }}\n    >\n      <Text variant=\"h6\" css={{ c: \"$on_surface_high\" }}>\n        Previous Polls and Quizzes\n      </Text>\n      <Flex direction=\"column\" css={{ gap: \"$10\", mt: \"$8\" }}>\n        {sortedPolls?.map((poll) => (\n          <InteractionCard\n            key={poll.id}\n            id={poll.id}\n            title={poll.title}\n            status={poll.state}\n          />\n        ))}\n      </Flex>\n    </Flex>\n  ) : null;\n};\n\nconst InteractionCard = ({\n  id,\n  title,\n  status,\n}: {\n  id: string;\n  title: string;\n  status?: HMSPollState;\n}) => {\n  const { setPollState } = usePollViewState();\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ backgroundColor: \"$surface_bright\", borderRadius: \"$1\", p: \"$8\" }}\n    >\n      <Flex css={{ w: \"100%\", justifyContent: \"space-between\", mb: \"$sm\" }}>\n        <Text\n          variant=\"sub1\"\n          css={{ c: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n        >\n          {title}\n        </Text>\n        <StatusIndicator status={status} />\n      </Flex>\n      <Flex css={{ w: \"100%\", gap: \"$4\" }} justify=\"end\">\n        <Button\n          variant=\"primary\"\n          onClick={() =>\n            setPollState({\n              [POLL_STATE.pollInView]: id,\n              [POLL_STATE.view]:\n                status === \"created\"\n                  ? POLL_VIEWS.CREATE_QUESTIONS\n                  : POLL_VIEWS.VOTE,\n            })\n          }\n        >\n          View\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { selectPermissions, useHMSStore } from \"@100mslive/react-sdk\";\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  CrossIcon,\n  RecordIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  slideLeftAndFade,\n  Switch,\n  Text,\n} from \"../../../\";\n\nexport const StreamCard = ({\n  title,\n  subtitle,\n  Icon,\n  imgSrc = \"\",\n  css = {},\n  onClick,\n  testId,\n}) => {\n  return (\n    <Flex\n      css={{\n        w: \"100%\",\n        p: \"$10\",\n        r: \"$1\",\n        cursor: \"pointer\",\n        bg: \"$surface_bright\",\n        mb: \"$10\",\n        mt: \"$8\",\n        ...css,\n      }}\n      data-testid={testId}\n      onClick={onClick}\n    >\n      <Text css={{ alignSelf: \"center\", p: \"$4\" }}>\n        {imgSrc ? (\n          <img src={imgSrc} height={40} width={40} alt=\"Streaming\" />\n        ) : (\n          <Icon width={40} height={40} />\n        )}\n      </Text>\n      <Box css={{ flex: \"1 1 0\", mx: \"$8\" }}>\n        <Text variant=\"h6\" css={{ mb: \"$4\" }}>\n          {title}\n        </Text>\n        <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n          {subtitle}\n        </Text>\n      </Box>\n      <Text css={{ alignSelf: \"center\" }}>\n        <ChevronRightIcon />\n      </Text>\n    </Flex>\n  );\n};\n\nexport const ContentHeader = ({ onBack, onClose, title = \"\", content }) => {\n  return (\n    <Flex\n      css={{\n        w: \"100%\",\n        py: \"$8\",\n        px: \"$10\",\n        cursor: \"pointer\",\n        borderBottom: \"1px solid $border_bright\",\n        mb: \"$8\",\n      }}\n    >\n      {onBack ? (\n        <Flex\n          align=\"center\"\n          css={{\n            mr: \"$8\",\n            color: \"$on_surface_high\",\n          }}\n          onClick={onBack}\n          data-testid=\"go_back\"\n        >\n          <ChevronLeftIcon />\n        </Flex>\n      ) : null}\n      <Box css={{ flex: \"1 1 0\", display: \"flex\", alignItems: \"center\" }}>\n        {title ? (\n          <Text\n            variant=\"tiny\"\n            css={{\n              textTransform: \"uppercase\",\n              fontWeight: \"$semiBold\",\n              color: \"$on_surface_medium\",\n            }}\n          >\n            {title}\n          </Text>\n        ) : null}\n        <Text variant=\"h6\">{content}</Text>\n      </Box>\n      {onClose ? (\n        <IconButton\n          onClick={onClose}\n          css={{ alignSelf: \"flex-start\" }}\n          data-testid=\"close_stream_section\"\n        >\n          <CrossIcon />\n        </IconButton>\n      ) : null}\n    </Flex>\n  );\n};\nexport const Container = ({ children, rounded = false }) => {\n  return (\n    <Box\n      css={{\n        size: \"100%\",\n        zIndex: 2,\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bg: \"$surface_dim\",\n        transform: \"translateX(10%)\",\n        animation: `${slideLeftAndFade(\"10%\")} 100ms ease-out forwards`,\n        display: \"flex\",\n        flexDirection: \"column\",\n        borderRadius: rounded ? \"$2\" : \"0\",\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport const ContentBody = ({\n  Icon,\n  title,\n  removeVerticalPadding = false,\n  children,\n}) => {\n  return (\n    <Box css={{ p: removeVerticalPadding ? \"$0 $10\" : \"$10\" }}>\n      <Text css={{ display: \"flex\", alignItems: \"center\", mb: \"$4\" }}>\n        <Icon />\n        <Text as=\"span\" css={{ fontWeight: \"$semiBold\", ml: \"$4\" }}>\n          {title}\n        </Text>\n      </Text>\n      <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n        {children}\n      </Text>\n    </Box>\n  );\n};\n\nexport const RecordStream = ({ record, setRecord, testId }) => {\n  const permissions = useHMSStore(selectPermissions);\n  return permissions?.browserRecording ? (\n    <Flex\n      align=\"center\"\n      css={{ bg: \"$surface_bright\", m: \"$8 $10\", p: \"$8\", r: \"$0\" }}\n    >\n      <Text css={{ color: \"$alert_error_default\" }}>\n        <RecordIcon />\n      </Text>\n      <Text variant=\"sm\" css={{ flex: \"1 1 0\", mx: \"$8\" }}>\n        Record the stream\n      </Text>\n      <Switch\n        checked={record}\n        onCheckedChange={setRecord}\n        data-testid={testId}\n      />\n    </Flex>\n  ) : null;\n};\n\nexport const ErrorText = ({ error }) => {\n  if (!error) {\n    return null;\n  }\n  return (\n    <Text variant=\"sm\" css={{ my: \"$4\", color: \"$alert_error_default\" }}>\n      {error}\n    </Text>\n  );\n};\n", "import React from \"react\";\nimport { HMSPollState } from \"@100mslive/react-sdk\";\nimport { Flex, Text } from \"../../../../\";\nimport { PollStage } from \"./constants\";\n\nconst statusMap: Record<HMSPollState, PollStage> = {\n  created: PollStage.DRAFT,\n  started: PollStage.LIVE,\n  stopped: PollStage.ENDED,\n};\n\nexport const StatusIndicator = ({ status }: { status?: HMSPollState }) => {\n  if (!status) return null;\n  return (\n    <Flex align=\"center\">\n      <Flex\n        css={{\n          backgroundColor:\n            statusMap[status] === PollStage.LIVE\n              ? \"$alert_error_default\"\n              : \"$secondary_default\",\n          p: \"$2 $4\",\n          borderRadius: \"$0\",\n        }}\n      >\n        <Text\n          variant=\"caption\"\n          css={{\n            fontWeight: \"$semiBold\",\n            color: \"$on_primary_high\",\n          }}\n        >\n          {statusMap[status]}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n", "// @ts-check\nimport React, { useMemo, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  selectPollByID,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\nimport { AddCircleIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"../../../../\";\nimport { Container, ContentHeader } from \"../../Streaming/Common\";\nimport { isValidQuestion, QuestionForm } from \"./QuestionForm\";\nimport { SavedQuestion } from \"./SavedQuestion\";\nimport { usePollViewToggle } from \"../../AppData/useSidepane\";\nimport { usePollViewState } from \"../../AppData/useUISettings\";\nimport { POLL_VIEWS } from \"../../../common/constants\";\n\nconst getEditableFormat = (questions) => {\n  const editableQuestions = questions.map((question) => {\n    return { ...question, saved: true, draftID: uuid() };\n  });\n  return editableQuestions;\n};\n\nexport function CreateQuestions() {\n  const actions = useHMSActions();\n  const { isHLSRunning } = useRecordingStreaming();\n  const togglePollView = usePollViewToggle();\n  const { pollInView: id, setPollView } = usePollViewState();\n  const interaction = useHMSStore(selectPollByID(id));\n  const [questions, setQuestions] = useState(\n    interaction.questions?.length\n      ? getEditableFormat(interaction.questions)\n      : [{ draftID: uuid() }]\n  );\n\n  const isValidPoll = useMemo(\n    () => questions.length > 0 && questions.every(isValidQuestion),\n    [questions]\n  );\n\n  const launchPoll = async () => {\n    await actions.interactivityCenter.startPoll(id);\n    await sendTimedMetadata(id);\n    setPollView(POLL_VIEWS.VOTE);\n  };\n\n  const sendTimedMetadata = async (poll_id) => {\n    // send hls timedmetadata when it is running\n    if (poll_id && isHLSRunning) {\n      try {\n        await actions.sendHLSTimedMetadata([\n          {\n            payload: `poll:${poll_id}`,\n            duration: 100,\n          },\n        ]);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n\n  const headingTitle = interaction?.type\n    ? interaction?.type?.[0]?.toUpperCase() + interaction?.type?.slice(1)\n    : \"Polls and Quizzes\";\n  const isQuiz = interaction?.type === \"quiz\";\n  return (\n    <Container rounded>\n      <ContentHeader\n        content={headingTitle}\n        onClose={togglePollView}\n        onBack={() => setPollView(POLL_VIEWS.CREATE_POLL_QUIZ)}\n      />\n      <Flex direction=\"column\" css={{ p: \"$10\", overflowY: \"auto\" }}>\n        <Flex direction=\"column\">\n          {questions.map((question, index) => (\n            <QuestionCard\n              key={question.draftID}\n              question={question}\n              index={index}\n              length={questions.length}\n              onSave={async (questionParams) => {\n                const updatedQuestions = [\n                  ...questions.slice(0, index),\n                  questionParams,\n                  ...questions.slice(index + 1),\n                ];\n                setQuestions(updatedQuestions);\n                const validQuestions = updatedQuestions.filter((question) =>\n                  isValidQuestion(question)\n                );\n                await actions.interactivityCenter.addQuestionsToPoll(\n                  id,\n                  validQuestions\n                );\n              }}\n              isQuiz={isQuiz}\n              removeQuestion={async (questionID) => {\n                const updatedQuestions = questions.filter(\n                  (questionFromSet) => questionID !== questionFromSet?.draftID\n                );\n                setQuestions(updatedQuestions);\n                const validQuestions = updatedQuestions.filter((question) =>\n                  isValidQuestion(question)\n                );\n                await actions.interactivityCenter.addQuestionsToPoll(\n                  id,\n                  validQuestions\n                );\n              }}\n              convertToDraft={(questionID) =>\n                setQuestions((prev) => {\n                  const copyOfQuestions = [...prev];\n                  copyOfQuestions.forEach((question) => {\n                    if (questionID && question.draftID === questionID) {\n                      question.saved = false;\n                    }\n                  });\n                  return copyOfQuestions;\n                })\n              }\n            />\n          ))}\n        </Flex>\n        <Flex\n          css={{\n            c: \"$on_surface_low\",\n            my: \"$sm\",\n            cursor: \"pointer\",\n            \"&:hover\": { c: \"$on_surface_medium\" },\n          }}\n          onClick={() => setQuestions([...questions, { draftID: uuid() }])}\n        >\n          <AddCircleIcon />\n          <Text variant=\"body1\" css={{ ml: \"$md\", c: \"$inherit\" }}>\n            Add another question\n          </Text>\n        </Flex>\n        <Flex css={{ w: \"100%\" }} justify=\"end\">\n          <Button disabled={!isValidPoll} onClick={async () => launchPoll()}>\n            Launch {interaction?.type}\n          </Button>\n        </Flex>\n      </Flex>\n    </Container>\n  );\n}\n\nconst QuestionCard = ({\n  question,\n  onSave,\n  index,\n  length,\n  removeQuestion,\n  isQuiz,\n  convertToDraft,\n}) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ p: \"$md\", bg: \"$surface_default\", r: \"$1\", mb: \"$sm\" }}\n    >\n      {question.saved ? (\n        <SavedQuestion\n          question={question}\n          index={index}\n          length={length}\n          convertToDraft={convertToDraft}\n        />\n      ) : (\n        <QuestionForm\n          question={question}\n          removeQuestion={() => removeQuestion(question.draftID)}\n          onSave={(params) => onSave(params)}\n          index={index}\n          length={length}\n          isQuiz={isQuiz}\n        />\n      )}\n    </Flex>\n  );\n};\n", "// @ts-check\nimport React, { useCallback, useRef, useState } from \"react\";\nimport {\n  HMSPollQuestionCreateParams,\n  HMSPollQuestionOptionCreateParams,\n  HMSPollQuestionType,\n} from \"@100mslive/react-sdk\";\nimport { AddCircleIcon, TrashIcon } from \"@100mslive/react-icons\";\n// import { Button, Dropdown, Flex, IconButton, Input, Switch, Text, TextArea, Tooltip } from '../../../..';\nimport {\n  Button,\n  Dropdown,\n  Flex,\n  IconButton,\n  Input,\n  Text,\n  TextArea,\n  Tooltip,\n} from \"../../../..\";\n// @ts-ignore\nimport { DialogDropdownTrigger } from \"../../../primitives/DropdownTrigger\";\n// @ts-ignore\nimport { DeleteQuestionModal } from \"./DeleteQuestionModal\";\n// @ts-ignore\nimport { useDropdownSelection } from \"../../hooks/useDropdownSelection\";\n// @ts-ignore\nimport { isValidTextInput } from \"../../../common/utils\";\nimport { Line } from \"../common/Line\";\n// @ts-ignore\nimport { MultipleChoiceOptionInputs } from \"../common/MultipleChoiceOptions\";\n// @ts-ignore\nimport { SingleChoiceOptionInputs } from \"../common/SingleChoiceOptions\";\nimport { QUESTION_TYPE, QUESTION_TYPE_TITLE } from \"../../../common/constants\";\n\nexport const QuestionForm = ({\n  question,\n  index,\n  length,\n  onSave,\n  removeQuestion,\n  isQuiz,\n}: {\n  question: HMSPollQuestionCreateParams & { draftID: number };\n  index: number;\n  length: number;\n  onSave: (\n    optionParams: HMSPollQuestionCreateParams & {\n      draftID: number;\n      saved: boolean;\n    }\n  ) => void;\n  removeQuestion: () => void;\n  isQuiz: boolean;\n}) => {\n  const ref = useRef(null);\n  const selectionBg = useDropdownSelection();\n  const [openDelete, setOpenDelete] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [type, setType] = useState<HMSPollQuestionType>(\n    question.type || QUESTION_TYPE.SINGLE_CHOICE\n  );\n  const [text, setText] = useState(question.text);\n  const [weight, setWeight] = useState(isQuiz ? 10 : 1);\n  const [options, setOptions] = useState(\n    question?.options || [\n      { text: \"\", isCorrectAnswer: false },\n      { text: \"\", isCorrectAnswer: false },\n    ]\n  );\n  // const [skippable, setSkippable] = useState(false);\n  const isValid = isValidQuestion({\n    text,\n    type,\n    options,\n    weight,\n    isQuiz,\n  });\n\n  const handleOptionTextChange = useCallback(\n    (index: number, text: string) => {\n      setOptions((options) => [\n        ...options.slice(0, index),\n        { ...options[index], text },\n        ...options.slice(index + 1),\n      ]);\n    },\n    [setOptions]\n  );\n\n  const removeOption = useCallback(\n    (index: number) =>\n      setOptions((options) => {\n        const newOptions = [...options];\n        newOptions.splice(index, 1);\n        return newOptions;\n      }),\n    [setOptions]\n  );\n\n  const selectSingleChoiceAnswer = useCallback(\n    (answerIndex: number) => {\n      if (!isQuiz) {\n        return;\n      }\n      setOptions((options) =>\n        options.map((option, index) => ({\n          ...option,\n          isCorrectAnswer: index === answerIndex,\n        }))\n      );\n    },\n    [setOptions, isQuiz]\n  );\n\n  const selectMultipleChoiceAnswer = useCallback(\n    (checked: boolean, index: number) => {\n      if (!isQuiz) {\n        return;\n      }\n      setOptions((options) => [\n        ...options.slice(0, index),\n        { ...options[index], isCorrectAnswer: checked },\n        ...options.slice(index + 1),\n      ]);\n    },\n    [setOptions, isQuiz]\n  );\n\n  return (\n    <>\n      <Text\n        variant=\"overline\"\n        css={{ c: \"$on_surface_low\", textTransform: \"uppercase\" }}\n      >\n        Question {index + 1} of {length}\n      </Text>\n      <Text variant=\"body2\" css={{ mt: \"$4\", mb: \"$md\" }}>\n        Question Type\n      </Text>\n      <Dropdown.Root open={open} onOpenChange={setOpen}>\n        <DialogDropdownTrigger\n          ref={ref}\n          // @ts-ignore\n          title={QUESTION_TYPE_TITLE[type]}\n          css={{\n            backgroundColor: \"$surface_bright\",\n            border: \"1px solid $border_bright\",\n          }}\n          open={open}\n        />\n        <Dropdown.Portal>\n          {/* @ts-ignore */}\n          <Dropdown.Content\n            align=\"start\"\n            sideOffset={8}\n            css={{ w: ref.current?.clientWidth, zIndex: 1000 }}\n          >\n            {Object.keys(QUESTION_TYPE_TITLE).map((value) => {\n              return (\n                <Dropdown.Item\n                  key={value}\n                  // @ts-ignore\n                  onSelect={() => setType(value)}\n                  css={{\n                    px: \"$9\",\n                    bg: type === value ? selectionBg : undefined,\n                  }}\n                >\n                  {/* @ts-ignore */}\n                  {QUESTION_TYPE_TITLE[value]}\n                </Dropdown.Item>\n              );\n            })}\n          </Dropdown.Content>\n        </Dropdown.Portal>\n      </Dropdown.Root>\n      <TextArea\n        maxLength={1024}\n        placeholder=\"Ask a question\"\n        css={{\n          mt: \"$md\",\n          backgroundColor: \"$surface_bright\",\n          border: \"1px solid $border_bright\",\n          minHeight: \"$14\",\n          resize: \"vertical\",\n          maxHeight: \"$32\",\n        }}\n        value={text}\n        onChange={(event) => setText(event.target.value.trimStart())}\n      />\n      <Text\n        variant=\"xs\"\n        css={{ color: \"$on_surface_medium\", textAlign: \"end\", mt: \"$4\" }}\n      >\n        {text?.length || 0}/1024\n      </Text>\n      <Line />\n      {/* @ts-ignore */}\n      {type === QUESTION_TYPE.SINGLE_CHOICE ||\n      type === QUESTION_TYPE.MULTIPLE_CHOICE ? (\n        <>\n          <Text variant=\"body2\" css={{ mb: \"$6\", c: \"$on_surface_medium\" }}>\n            Options\n          </Text>\n\n          {isQuiz && (\n            <Text variant=\"xs\" css={{ c: \"$on_surface_medium\", mb: \"$md\" }}>\n              {type === QUESTION_TYPE.SINGLE_CHOICE\n                ? \"Use the radio buttons to indicate the correct answer\"\n                : \"Use the checkboxes to indicate the correct answer(s)\"}\n            </Text>\n          )}\n\n          {type === QUESTION_TYPE.SINGLE_CHOICE && (\n            <SingleChoiceOptionInputs\n              isQuiz={isQuiz}\n              options={options}\n              selectAnswer={selectSingleChoiceAnswer}\n              handleOptionTextChange={handleOptionTextChange}\n              removeOption={removeOption}\n            />\n          )}\n\n          {type === QUESTION_TYPE.MULTIPLE_CHOICE && (\n            <MultipleChoiceOptionInputs\n              isQuiz={isQuiz}\n              options={options}\n              selectAnswer={selectMultipleChoiceAnswer}\n              handleOptionTextChange={handleOptionTextChange}\n              removeOption={removeOption}\n            />\n          )}\n\n          {options?.length < 20 && (\n            <Flex\n              css={{\n                c: \"$on_surface_medium\",\n                cursor: \"pointer\",\n                \"&:hover\": { c: \"$on_surface_high\" },\n              }}\n              onClick={() =>\n                setOptions([...options, { text: \"\", isCorrectAnswer: false }])\n              }\n            >\n              <AddCircleIcon style={{ position: \"relative\", left: \"-2px\" }} />\n\n              <Text\n                variant=\"sm\"\n                css={{\n                  ml: \"$4\",\n                  c: \"inherit\",\n                }}\n              >\n                Add an option\n              </Text>\n            </Flex>\n          )}\n          <Line />\n          {isQuiz ? (\n            <>\n              <Flex\n                justify=\"between\"\n                align=\"center\"\n                css={{ gap: \"$6\", w: \"100%\" }}\n              >\n                <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n                  Point Weightage\n                </Text>\n                <Input\n                  type=\"number\"\n                  value={weight}\n                  min={1}\n                  max={999}\n                  onChange={(e) =>\n                    setWeight(Math.min(Number(e.target.value), 999))\n                  }\n                  css={{\n                    backgroundColor: \"$surface_bright\",\n                    border: \"1px solid $border_bright\",\n                    maxWidth: \"$20\",\n                  }}\n                />\n              </Flex>\n              {/* <Flex justify=\"between\" css={{ mt: '$md', gap: '$6', w: '100%' }}>\n                <Text variant=\"sm\" css={{ color: '$on_surface_medium' }}>\n                  Allow to skip\n                </Text>\n                <Switch defaultChecked={skippable} onCheckedChange={checked => setSkippable(checked)} />\n              </Flex> */}\n            </>\n          ) : null}\n        </>\n      ) : null}\n\n      <Flex justify=\"end\" align=\"center\" css={{ mt: \"$12\", gap: \"$8\" }}>\n        <IconButton css={{ border: \"1px solid $border_bright\" }}>\n          <TrashIcon onClick={() => setOpenDelete(!open)} />\n        </IconButton>\n        <Tooltip\n          disabled={isValid}\n          title={\n            options.length < 2\n              ? \"At least two options must be added\"\n              : `Please fill all the fields ${\n                  isQuiz ? \"and mark the correct answer(s)\" : \"\"\n                } to continue`\n          }\n          boxCss={{ maxWidth: \"$40\" }}\n        >\n          <Button\n            variant=\"standard\"\n            disabled={!isValid}\n            onClick={() => {\n              onSave({\n                saved: true,\n                text,\n                type,\n                options,\n                skippable: false,\n                draftID: question.draftID,\n                weight,\n              });\n            }}\n          >\n            Save\n          </Button>\n        </Tooltip>\n      </Flex>\n\n      <DeleteQuestionModal\n        open={openDelete}\n        setOpen={setOpenDelete}\n        removeQuestion={removeQuestion}\n      />\n    </>\n  );\n};\n\nexport const isValidQuestion = ({\n  text,\n  type,\n  options,\n  weight,\n  isQuiz = false,\n}: {\n  text: string;\n  type: string;\n  options: HMSPollQuestionOptionCreateParams[];\n  weight: number;\n  isQuiz?: boolean;\n}) => {\n  if (!isValidTextInput(text) || !type) {\n    return false;\n  }\n\n  const everyOptionHasText =\n    options.length > 1 &&\n    options.every((option) => option && isValidTextInput(option.text, 1));\n  const hasCorrectAnswer = options.some((option) => option.isCorrectAnswer);\n\n  if (!isQuiz) {\n    return everyOptionHasText;\n  }\n\n  // The minimum acceptable value of weight is 1\n  if (isQuiz && weight < 1) {\n    return false;\n  }\n\n  return everyOptionHasText && hasCorrectAnswer;\n};\n", "import React from \"react\";\nimport { AlertTriangleIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../../Button\";\nimport { Box, Flex } from \"../../../../Layout\";\nimport { Dialog } from \"../../../../Modal\";\nimport { Text } from \"../../../../Text\";\n\nexport const DeleteQuestionModal = ({\n  open,\n  setOpen,\n  removeQuestion,\n}: {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  removeQuestion: () => void;\n}) => {\n  return (\n    <Dialog.Root open={open}>\n      <Dialog.Overlay />\n      <Dialog.Portal>\n        <Dialog.Content css={{ p: \"$10\" }}>\n          <Box>\n            <Flex\n              css={{\n                color: \"$alert_error_default\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />\n              <Text\n                variant=\"lg\"\n                css={{ color: \"inherit\", fontWeight: \"$semiBold\" }}\n              >\n                Delete Question?\n              </Text>\n\n              <Box\n                css={{\n                  ml: \"auto\",\n                  color: \"$on_surface_medium\",\n                  \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n                }}\n                onClick={() => setOpen(false)}\n              >\n                <CrossIcon />\n              </Box>\n            </Flex>\n            <Text\n              variant=\"sm\"\n              css={{ color: \"$on_surface_medium\", mb: \"$8\", mt: \"$4\" }}\n            >\n              The question will be deleted. You can't undo this action.\n            </Text>\n            <Flex css={{ w: \"100%\", mt: \"$12\", gap: \"$md\" }}>\n              <Button\n                variant=\"standard\"\n                outlined\n                onClick={() => setOpen(false)}\n                css={{ w: \"100%\", fontSize: \"$md\", fontWeight: \"$semiBold\" }}\n              >\n                Cancel\n              </Button>\n              <Button\n                css={{ w: \"100%\", fontSize: \"$md\", fontWeight: \"$semiBold\" }}\n                variant=\"danger\"\n                onClick={() => {\n                  removeQuestion();\n                  setOpen(false);\n                }}\n              >\n                Delete\n              </Button>\n            </Flex>\n          </Box>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "import React from \"react\";\nimport { Flex } from \"../../../../Layout\";\n\nexport const Line = () => (\n  <Flex\n    css={{\n      w: \"100%\",\n      borderBottom: \"1px solid $border_bright\",\n      h: \"1px\",\n      my: \"$8\",\n    }}\n  />\n);\n", "// @ts-check\nimport React from \"react\";\nimport { CheckCircleIcon, CheckIcon } from \"@100mslive/react-icons\";\nimport { Checkbox, Flex, Label, Text } from \"../../../../\";\nimport { OptionInputWithDelete } from \"./OptionInputWithDelete\";\nimport { VoteCount } from \"./VoteCount\";\nimport { VoteProgress } from \"./VoteProgress\";\n\nexport const MultipleChoiceOptions = ({\n  questionIndex,\n  options,\n  canRespond,\n  totalResponses,\n  selectedOptions,\n  setSelectedOptions,\n  showVoteCount,\n  isQuiz,\n  correctOptionIndexes,\n  localPeerResponse,\n  isStopped,\n}) => {\n  const handleCheckedChange = (checked, index) => {\n    const newSelected = new Set(selectedOptions);\n    if (checked) {\n      newSelected.add(index);\n    } else {\n      newSelected.delete(index);\n    }\n    setSelectedOptions(newSelected);\n  };\n\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n      {options.map((option) => {\n        return (\n          <Flex\n            align=\"center\"\n            key={`${questionIndex}-${option.index}`}\n            css={{ w: \"100%\", gap: \"$4\" }}\n          >\n            {!isStopped || !isQuiz ? (\n              <Checkbox.Root\n                id={`${questionIndex}-${option.index}`}\n                disabled={!canRespond}\n                checked={localPeerResponse?.options?.includes(option.index)}\n                onCheckedChange={(checked) =>\n                  handleCheckedChange(checked, option.index)\n                }\n                css={{\n                  cursor: canRespond ? \"pointer\" : \"not-allowed\",\n                  flexShrink: 0,\n                }}\n              >\n                <Checkbox.Indicator>\n                  <CheckIcon width={16} height={16} />\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n            ) : null}\n\n            {isStopped && correctOptionIndexes?.includes(option.index) ? (\n              <Flex align=\"center\" css={{ color: \"$on_surface_high\" }}>\n                <CheckCircleIcon height={20} width={20} />\n              </Flex>\n            ) : null}\n\n            <Flex direction=\"column\" css={{ flexGrow: \"1\" }}>\n              <Flex css={{ w: \"100%\" }}>\n                <Text css={{ display: \"flex\", flexGrow: \"1\" }}>\n                  <Label htmlFor={`${questionIndex}-${option.index}`}>\n                    {option.text}\n                  </Label>\n                </Text>\n                {showVoteCount && <VoteCount voteCount={option.voteCount} />}\n              </Flex>\n              {showVoteCount && (\n                <VoteProgress option={option} totalResponses={totalResponses} />\n              )}\n            </Flex>\n\n            {isStopped &&\n            isQuiz &&\n            localPeerResponse?.options.includes(option.index) ? (\n              <Text\n                variant=\"sm\"\n                css={{ color: \"$on_surface_medium\", maxWidth: \"max-content\" }}\n              >\n                Your Answer\n              </Text>\n            ) : null}\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport const MultipleChoiceOptionInputs = ({\n  isQuiz,\n  options,\n  selectAnswer,\n  handleOptionTextChange,\n  removeOption,\n}) => {\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n      {options.map((option, index) => {\n        return (\n          <Flex align=\"center\" key={index} css={{ w: \"100%\", gap: \"$4\" }}>\n            {isQuiz && (\n              <Checkbox.Root\n                onCheckedChange={(checked) => selectAnswer(checked, index)}\n                checked={option.isCorrectAnswer}\n                css={{\n                  cursor: \"pointer\",\n                  width: \"$9\",\n                }}\n              >\n                <Checkbox.Indicator>\n                  <CheckIcon width={16} height={16} />\n                </Checkbox.Indicator>\n              </Checkbox.Root>\n            )}\n            <OptionInputWithDelete\n              index={index}\n              option={option}\n              handleOptionTextChange={handleOptionTextChange}\n              removeOption={removeOption}\n            />\n          </Flex>\n        );\n      })}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { HMSPollQuestionOption } from \"@100mslive/react-sdk\";\nimport { TrashIcon } from \"@100mslive/react-icons\";\nimport { Input } from \"../../../../Input\";\n// @ts-ignore\nimport IconButton from \"../../../IconButton\";\n\nexport const OptionInputWithDelete = ({\n  index,\n  option,\n  handleOptionTextChange,\n  removeOption,\n}: {\n  index: number;\n  option: HMSPollQuestionOption;\n  handleOptionTextChange: (index: number, value: string) => void;\n  removeOption: (index: number) => void;\n}) => {\n  return (\n    <>\n      <Input\n        placeholder={`Option ${index + 1}`}\n        css={{\n          w: \"100%\",\n          backgroundColor: \"$surface_bright\",\n          border: \"1px solid $border_bright\",\n        }}\n        value={option?.text || \"\"}\n        key={index}\n        onChange={(event) =>\n          handleOptionTextChange(index, event.target.value.trimStart())\n        }\n        maxLength={250}\n      />\n      <IconButton\n        onClick={() => removeOption(index)}\n        css={{ bg: \"transparent\", border: \"none\" }}\n      >\n        <TrashIcon />\n      </IconButton>\n    </>\n  );\n};\n", "import React from \"react\";\nimport { Flex, Text } from \"../../../../\";\n\nexport const VoteCount = ({ voteCount }: { voteCount: number }) => {\n  return (\n    <Flex css={{ alignItems: \"center\" }}>\n      {voteCount ? (\n        <Text variant=\"sm\" css={{ color: \"$on_surface_medium\" }}>\n          {voteCount}&nbsp;\n          {voteCount === 1 ? \"vote\" : \"votes\"}\n        </Text>\n      ) : null}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { HMSPollQuestionOption } from \"@100mslive/react-sdk\";\nimport { Progress } from \"../../../../\";\n\nexport const VoteProgress = ({\n  option,\n  totalResponses,\n}: {\n  option: HMSPollQuestionOption;\n  totalResponses: number;\n}) => {\n  const showProgress =\n    typeof option.voteCount === \"number\" &&\n    typeof totalResponses === \"number\" &&\n    totalResponses > 0;\n  const progressValue = (100 * (option.voteCount || 0)) / totalResponses;\n\n  return showProgress ? (\n    <Progress.Root value={progressValue} css={{ mt: \"$4\" }}>\n      <Progress.Content\n        style={{\n          transform: `translateX(-${100 - progressValue}%)`,\n        }}\n      />\n    </Progress.Root>\n  ) : null;\n};\n", "// @ts-check\nimport React from \"react\";\nimport { CheckCircleIcon } from \"@100mslive/react-icons\";\nimport { Flex, Label, RadioGroup, Text } from \"../../../..\";\nimport { OptionInputWithDelete } from \"./OptionInputWithDelete\";\nimport { VoteCount } from \"./VoteCount\";\nimport { VoteProgress } from \"./VoteProgress\";\n\nexport const SingleChoiceOptions = ({\n  questionIndex,\n  options,\n  canRespond,\n  setAnswer,\n  totalResponses,\n  showVoteCount,\n  correctOptionIndex,\n  isStopped,\n  isQuiz,\n  localPeerResponse,\n}) => {\n  return (\n    <RadioGroup.Root\n      value={localPeerResponse?.option}\n      onValueChange={(value) => setAnswer(value)}\n    >\n      <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n        {options.map((option) => {\n          return (\n            <Flex\n              align=\"center\"\n              key={`${questionIndex}-${option.index}`}\n              css={{ w: \"100%\", gap: \"$4\" }}\n            >\n              {!isStopped || !isQuiz ? (\n                <RadioGroup.Item\n                  css={{\n                    background: \"none\",\n                    h: \"$9\",\n                    w: \"$9\",\n                    border: \"2px solid\",\n                    borderColor: \"$on_surface_high\",\n                    display: \"flex\",\n                    flexShrink: 0,\n                    pt: \"$1\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: canRespond ? \"pointer\" : \"not-allowed\",\n                    '&[data-state=\"checked\"]': {\n                      borderColor: \"$primary_bright\",\n                      borderWidth: \"2px\",\n                    },\n                  }}\n                  disabled={!canRespond}\n                  value={option.index}\n                  id={`${questionIndex}-${option.index}`}\n                >\n                  <RadioGroup.Indicator\n                    css={{\n                      h: \"80%\",\n                      w: \"80%\",\n                      background: \"$primary_bright\",\n                      borderRadius: \"$round\",\n                    }}\n                  />\n                </RadioGroup.Item>\n              ) : null}\n\n              {isStopped && correctOptionIndex === option.index && isQuiz ? (\n                <Flex css={{ color: \"$on_surface_high\" }}>\n                  <CheckCircleIcon height={20} width={20} />\n                </Flex>\n              ) : null}\n\n              <Flex direction=\"column\" css={{ flexGrow: \"1\" }}>\n                <Flex css={{ w: \"100%\" }}>\n                  <Text\n                    css={{\n                      display: \"flex\",\n                      flexGrow: \"1\",\n                      color: \"$on_surface_high\",\n                    }}\n                  >\n                    <Label\n                      style={{ color: \"inherit\" }}\n                      htmlFor={`${questionIndex}-${option.index}`}\n                    >\n                      {option.text}\n                    </Label>\n                  </Text>\n                  {showVoteCount && <VoteCount voteCount={option.voteCount} />}\n                </Flex>\n                {showVoteCount && (\n                  <VoteProgress\n                    option={option}\n                    totalResponses={totalResponses}\n                  />\n                )}\n              </Flex>\n              {isStopped &&\n              isQuiz &&\n              localPeerResponse?.option === option.index ? (\n                <Text\n                  variant=\"sm\"\n                  css={{ color: \"$on_surface_medium\", maxWidth: \"max-content\" }}\n                >\n                  Your Answer\n                </Text>\n              ) : null}\n            </Flex>\n          );\n        })}\n      </Flex>\n    </RadioGroup.Root>\n  );\n};\n\nexport const SingleChoiceOptionInputs = ({\n  isQuiz,\n  options,\n  selectAnswer,\n  handleOptionTextChange,\n  removeOption,\n}) => {\n  const correctOptionIndex = options.findIndex(\n    (option) => option.isCorrectAnswer\n  );\n\n  return (\n    <RadioGroup.Root value={correctOptionIndex} onValueChange={selectAnswer}>\n      <Flex direction=\"column\" css={{ gap: \"$md\", w: \"100%\", mb: \"$md\" }}>\n        {options.map((option, index) => {\n          return (\n            <Flex\n              align=\"center\"\n              key={`option-${index}`}\n              css={{ w: \"100%\", gap: \"$4\" }}\n            >\n              {isQuiz && (\n                <RadioGroup.Item\n                  css={{\n                    background: \"none\",\n                    w: \"$9\",\n                    border: \"2px solid\",\n                    borderColor: \"$on_surface_high\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\",\n                    '&[data-state=\"checked\"]': {\n                      borderColor: \"$primary_bright\",\n                      borderWidth: \"2px\",\n                    },\n                  }}\n                  value={index}\n                >\n                  <RadioGroup.Indicator\n                    css={{\n                      h: \"80%\",\n                      w: \"80%\",\n                      background: \"$primary_bright\",\n                      borderRadius: \"$round\",\n                    }}\n                  />\n                </RadioGroup.Item>\n              )}\n              <OptionInputWithDelete\n                index={index}\n                option={option}\n                handleOptionTextChange={handleOptionTextChange}\n                removeOption={removeOption}\n              />\n            </Flex>\n          );\n        })}\n      </Flex>\n    </RadioGroup.Root>\n  );\n};\n", "import React, { useMemo } from \"react\";\nimport { HMSPollQuestion } from \"@100mslive/react-sdk\";\nimport { CheckCircleIcon } from \"@100mslive/react-icons\";\nimport { Button, Flex, Text } from \"../../../../\";\nimport { QUESTION_TYPE_TITLE } from \"../../../common/constants\";\n\nexport const SavedQuestion = ({\n  question,\n  index,\n  length,\n  convertToDraft,\n}: {\n  question: HMSPollQuestion & { draftID: number };\n  index: number;\n  length: number;\n  convertToDraft: (draftID: number) => void;\n}) => {\n  const answerArray = useMemo(() => {\n    const updatedAnswerArray = [];\n    const { option, options } = question?.answer ?? {};\n    if (option) {\n      updatedAnswerArray.push(option);\n    }\n    if (options) {\n      updatedAnswerArray.push(...options);\n    }\n    return updatedAnswerArray;\n  }, [question?.answer]);\n\n  return (\n    <>\n      <Text\n        variant=\"overline\"\n        css={{ c: \"$on_surface_low\", textTransform: \"uppercase\" }}\n      >\n        {/* @ts-ignore */}\n        Question {index + 1} of {length}: {QUESTION_TYPE_TITLE[question.type]}\n      </Text>\n      <Text variant=\"body2\" css={{ mt: \"$4\", mb: \"$md\" }}>\n        {question.text}\n      </Text>\n      {question.options?.map((option, index) => (\n        <Flex\n          key={`${option.text}-${index}`}\n          css={{ alignItems: \"center\", my: \"$xs\" }}\n        >\n          <Text variant=\"body2\" css={{ c: \"$on_surface_medium\" }}>\n            {option.text}\n          </Text>\n          {/* @ts-ignore */}\n          {(answerArray.includes(index + 1) || option.isCorrectAnswer) && (\n            <Flex css={{ color: \"$alert_success\", mx: \"$xs\" }}>\n              <CheckCircleIcon height={24} width={24} />\n            </Flex>\n          )}\n        </Flex>\n      ))}\n      {question.skippable ? (\n        <Text variant=\"sm\" css={{ color: \"$on_surface_low\", my: \"$md\" }}>\n          Not required to answer\n        </Text>\n      ) : null}\n      <Flex justify=\"end\" css={{ w: \"100%\", alignItems: \"center\" }}>\n        <Button\n          variant=\"standard\"\n          css={{ fontWeight: \"$semiBold\" }}\n          onClick={() => convertToDraft(question.draftID)}\n        >\n          Edit\n        </Button>\n      </Flex>\n    </>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { selectPollByID, useHMSStore } from \"@100mslive/react-sdk\";\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  CrossIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../../Layout\";\nimport { Loading } from \"../../../../Loading\";\nimport { Text } from \"../../../../Text\";\n// @ts-ignore\nimport { Container } from \"../../Streaming/Common\";\nimport { LeaderboardEntry } from \"./LeaderboardEntry\";\nimport { PeerParticipationSummary } from \"./PeerParticipationSummary\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../../AppData/useSidepane\";\n// @ts-ignore\nimport { usePollViewState } from \"../../AppData/useUISettings\";\nimport { useQuizSummary } from \"./useQuizSummary\";\n// @ts-ignore\nimport { StatusIndicator } from \"../common/StatusIndicator\";\nimport { POLL_VIEWS } from \"../../../common/constants\";\n\nexport const LeaderboardSummary = ({ pollID }: { pollID: string }) => {\n  const quiz = useHMSStore(selectPollByID(pollID));\n  const { quizLeaderboard, maxPossibleScore } = useQuizSummary(pollID);\n  const [viewAllEntries, setViewAllEntries] = useState(false);\n  const { setPollView } = usePollViewState();\n  const toggleSidepane = useSidepaneToggle();\n\n  if (!quiz || !quizLeaderboard)\n    return (\n      <Flex align=\"center\" justify=\"center\" css={{ size: \"100%\" }}>\n        <Loading />\n      </Flex>\n    );\n\n  const questionCount = quiz.questions?.length || 0;\n\n  return (\n    <Container rounded>\n      <Flex direction=\"column\" css={{ size: \"100%\", p: \"$8\" }}>\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{ pb: \"$6\", borderBottom: \"1px solid $border_bright\", mb: \"$8\" }}\n        >\n          <Flex align=\"center\" css={{ gap: \"$4\" }}>\n            <Flex\n              css={{\n                color: \"$on_surface_medium\",\n                \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n              }}\n              onClick={() => setPollView(POLL_VIEWS.VOTE)}\n            >\n              <ChevronLeftIcon />\n            </Flex>\n            <Text variant=\"lg\" css={{ fontWeight: \"$semiBold\" }}>\n              {quiz.title}\n            </Text>\n            <StatusIndicator status={quiz.state} />\n          </Flex>\n          <Flex\n            css={{\n              color: \"$on_surface_medium\",\n              \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n            }}\n            onClick={toggleSidepane}\n          >\n            <CrossIcon />\n          </Flex>\n        </Flex>\n        <Box css={{ overflowY: \"auto\", mr: \"-$4\", pr: \"$4\" }}>\n          {!viewAllEntries ? <PeerParticipationSummary quiz={quiz} /> : null}\n\n          <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\", mt: \"$4\" }}>\n            Leaderboard\n          </Text>\n          <Text variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n            Based on score and time taken to cast the correct answer\n          </Text>\n          <Box\n            css={{\n              mt: \"$8\",\n              overflowY: \"auto\",\n              flex: viewAllEntries ? \"1 1 0\" : \"unset\",\n              mr: viewAllEntries ? \"-$6\" : \"unset\",\n              px: viewAllEntries ? \"0\" : \"$4\",\n              pr: viewAllEntries ? \"$6\" : \"$4\",\n              backgroundColor: viewAllEntries ? \"\" : \"$surface_default\",\n              borderRadius: \"$1\",\n            }}\n          >\n            {quizLeaderboard?.entries &&\n              quizLeaderboard.entries\n                .slice(0, viewAllEntries ? undefined : 5)\n                .map((question) => (\n                  <LeaderboardEntry\n                    key={question.position}\n                    position={question.position}\n                    score={question.score}\n                    questionCount={questionCount}\n                    correctResponses={question.correctResponses}\n                    userName={question.peer.username || \"\"}\n                    maxPossibleScore={maxPossibleScore}\n                    duration={question.duration}\n                  />\n                ))}\n            {quizLeaderboard?.entries?.length > 5 && !viewAllEntries ? (\n              <Flex\n                align=\"center\"\n                justify=\"end\"\n                css={{\n                  w: \"100%\",\n                  borderTop: \"1px solid $border_bright\",\n                  cursor: \"pointer\",\n                  color: \"$on_surface_high\",\n                  p: \"$6 $2\",\n                }}\n                onClick={() => setViewAllEntries(true)}\n              >\n                <Text variant=\"sm\">View All</Text> <ChevronRightIcon />\n              </Flex>\n            ) : null}\n          </Box>\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n", "import React from \"react\";\nimport {\n  CheckCircleIcon,\n  ClockIcon,\n  TrophyFilledIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../../Layout\";\nimport { Text } from \"../../../../Text\";\nimport { getFormattedTime } from \"../common/utils\";\n\nconst positionColorMap: Record<number, string> = {\n  1: \"#D69516\",\n  2: \"#3E3E3E\",\n  3: \"#583B0F\",\n};\n\nexport const LeaderboardEntry = ({\n  position,\n  score,\n  questionCount,\n  correctResponses,\n  userName,\n  maxPossibleScore,\n  duration,\n}: {\n  position: number;\n  score: number;\n  questionCount: number;\n  correctResponses: number;\n  userName: string;\n  maxPossibleScore: number;\n  duration: number;\n}) => {\n  return (\n    <Flex align=\"center\" justify=\"between\" css={{ my: \"$8\" }}>\n      <Flex align=\"center\" css={{ gap: \"$6\" }}>\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            backgroundColor: positionColorMap[position] || \"\",\n            h: \"$10\",\n            w: \"$10\",\n            borderRadius: \"$round\",\n            color: position > 3 ? \"$on_surface_low\" : \"#FFF\",\n            fontSize: \"$xs\",\n            fontWeight: \"$semiBold\",\n          }}\n        >\n          {position}\n        </Flex>\n\n        <Box>\n          <Text\n            variant=\"sm\"\n            css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}\n          >\n            {userName}\n          </Text>\n\n          <Text variant=\"sm\" css={{ mt: \"$1\" }}>\n            {score} / {maxPossibleScore} points\n          </Text>\n        </Box>\n      </Flex>\n\n      <Flex align=\"center\" css={{ gap: \"$4\", color: \"$on_surface_medium\" }}>\n        {position === 1 && score ? (\n          <TrophyFilledIcon height={16} width={16} />\n        ) : null}\n        {questionCount ? (\n          <>\n            <CheckCircleIcon height={16} width={16} />\n            <Text variant=\"xs\">\n              {correctResponses}/{questionCount}\n            </Text>\n          </>\n        ) : null}\n\n        {duration ? (\n          <Flex align=\"center\" css={{ gap: \"$2\", color: \"$on_surface_medium\" }}>\n            <ClockIcon height={16} width={16} />\n            <Text variant=\"xs\">{getFormattedTime(duration)}</Text>\n          </Flex>\n        ) : null}\n      </Flex>\n    </Flex>\n  );\n};\n", "export const getFormattedTime = (\n  milliseconds: number | undefined,\n  precise = true\n) => {\n  if (!milliseconds) return \"-\";\n\n  const totalSeconds = milliseconds / 1000;\n  const hours = Math.floor(totalSeconds / 3600);\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\n  const seconds = totalSeconds % 60;\n\n  let formattedTime = \"\";\n  if (hours) {\n    formattedTime += `${hours}h `;\n  }\n  if (minutes || hours) {\n    formattedTime += `${minutes}m `;\n  }\n  if (!precise && (hours || minutes)) {\n    return formattedTime;\n  }\n  formattedTime += `${precise ? seconds.toFixed(3) : Math.floor(seconds)}s`;\n\n  return formattedTime;\n};\n", "import React from \"react\";\nimport { HMSPoll, selectLocalPeerID, useHMSStore } from \"@100mslive/react-sdk\";\nimport { Box } from \"../../../../Layout\";\nimport { Text } from \"../../../../Text\";\nimport { StatisticBox } from \"./StatisticBox\";\nimport { useQuizSummary } from \"./useQuizSummary\";\nimport { getFormattedTime } from \"../common/utils\";\n\nexport const PeerParticipationSummary = ({ quiz }: { quiz: HMSPoll }) => {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const { quizLeaderboard, summary } = useQuizSummary(quiz.id);\n  if (quiz.state !== \"stopped\") {\n    return <></>;\n  }\n  const isLocalPeerQuizCreator = localPeerId === quiz.startedBy;\n  const peerEntry = quizLeaderboard?.entries.find(\n    (entry) => entry.peer?.peerid === localPeerId\n  );\n\n  const boxes = isLocalPeerQuizCreator\n    ? [\n        {\n          title: \"Voted\",\n          value: `${\n            summary.totalUsers\n              ? ((100 * summary.votedUsers) / summary.totalUsers).toFixed(0)\n              : 0\n          }% (${summary.votedUsers}/${summary.totalUsers})`,\n        },\n        {\n          title: \"Correct Answers\",\n          value: `${\n            summary.totalUsers\n              ? ((100 * summary.correctUsers) / summary.totalUsers).toFixed(0)\n              : 0\n          }% (${summary.correctUsers}/${summary.totalUsers})`,\n        },\n        // Time in ms\n        { title: \"Avg. Time Taken\", value: getFormattedTime(summary.avgTime) },\n        {\n          title: \"Avg. Score\",\n          value: Number.isInteger(summary.avgScore)\n            ? summary.avgScore\n            : summary.avgScore.toFixed(2),\n        },\n      ]\n    : [\n        { title: \"Your rank\", value: peerEntry?.position || \"-\" },\n        { title: \"Points\", value: peerEntry?.score || 0 },\n        // Time in ms\n        { title: \"Time Taken\", value: getFormattedTime(peerEntry?.duration) },\n        {\n          title: \"Correct Answers\",\n          value: peerEntry?.totalResponses\n            ? `${peerEntry?.correctResponses}/${peerEntry.totalResponses}`\n            : \"-\",\n        },\n      ];\n\n  return (\n    <Box>\n      <Text css={{ fontWeight: \"$semiBold\", my: \"$8\" }}>\n        Participation Summary\n      </Text>\n      <Box css={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: \"$4\" }}>\n        {boxes.map((box) => (\n          <StatisticBox key={box.title} title={box.title} value={box.value} />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n", "import React from \"react\";\nimport { Box } from \"../../../../Layout\";\nimport { Text } from \"../../../../Text\";\n\nexport const StatisticBox = ({\n  title,\n  value = 0,\n}: {\n  title: string;\n  value: string | number | undefined;\n}) => {\n  if (!value && !(typeof value === \"number\")) {\n    return <></>;\n  }\n  return (\n    <Box\n      css={{\n        p: \"$8\",\n        background: \"$surface_default\",\n        borderRadius: \"$1\",\n        w: \"100%\",\n      }}\n    >\n      <Text\n        variant=\"tiny\"\n        css={{\n          textTransform: \"uppercase\",\n          color: \"$on_surface_medium\",\n          fontWeight: \"$semiBold\",\n          my: \"$4\",\n        }}\n      >\n        {title}\n      </Text>\n      <Text css={{ fontWeight: \"$semiBold\" }}>{value}</Text>\n    </Box>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport {\n  HMSQuizLeaderboardResponse,\n  HMSQuizLeaderboardSummary,\n  selectPollByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\n\nexport const useQuizSummary = (quizID: string) => {\n  const hmsActions = useHMSActions();\n  const quiz = useHMSStore(selectPollByID(quizID));\n  const [quizLeaderboard, setQuizLeaderboard] = useState<\n    HMSQuizLeaderboardResponse | undefined\n  >();\n\n  const summary: HMSQuizLeaderboardSummary = quizLeaderboard?.summary || {\n    totalUsers: 0,\n    votedUsers: 0,\n    avgScore: 0,\n    avgTime: 0,\n    correctUsers: 0,\n  };\n  const [calculations, setCalculations] = useState({\n    maxPossibleScore: 0,\n    totalResponses: 0,\n  });\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      if (\n        !quizLeaderboard &&\n        quiz &&\n        !quiz?.anonymous &&\n        quiz.state === \"stopped\"\n      ) {\n        const leaderboardData =\n          await hmsActions.interactivityCenter.fetchLeaderboard(quiz.id, 0, 50);\n\n        const { maxPossibleScore, totalResponses } =\n          quiz?.questions?.reduce((accumulator, question) => {\n            accumulator.maxPossibleScore += question.weight || 0;\n            accumulator.totalResponses += question?.responses?.length || 0;\n            return accumulator;\n          }, calculations) || calculations;\n\n        setQuizLeaderboard(leaderboardData);\n        setCalculations({ maxPossibleScore, totalResponses });\n      }\n    };\n\n    fetchLeaderboardData();\n  }, [quiz, hmsActions.interactivityCenter, quizLeaderboard, calculations]);\n\n  return {\n    quizLeaderboard,\n    summary,\n    maxPossibleScore: calculations.maxPossibleScore,\n    totalResponses: calculations.totalResponses,\n  };\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  selectLocalPeer,\n  selectPeerNameByID,\n  selectPermissions,\n  selectPollByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChevronLeftIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Box, Button, Flex, Text } from \"../../../..\";\n// @ts-ignore\nimport { Container } from \"../../Streaming/Common\";\nimport { StandardView } from \"./StandardVoting\";\nimport { TimedView } from \"./TimedVoting\";\n// @ts-ignore\nimport { usePollViewState } from \"../../AppData/useUISettings\";\n// @ts-ignore\nimport { getPeerResponses } from \"../../../common/utils\";\nimport { StatusIndicator } from \"../common/StatusIndicator\";\nimport { POLL_VIEWS } from \"../../../common/constants\";\n\nexport const Voting = ({\n  id,\n  toggleVoting,\n}: {\n  id: string;\n  toggleVoting: () => void;\n}) => {\n  const actions = useHMSActions();\n  const poll = useHMSStore(selectPollByID(id));\n  const pollCreatorName = useHMSStore(selectPeerNameByID(poll?.createdBy));\n  const permissions = useHMSStore(selectPermissions);\n  const canEndActivity = !!permissions?.pollWrite;\n  const { setPollView } = usePollViewState();\n  // Sets view - linear or vertical, toggles timer indicator\n  const showSingleView = poll?.type === \"quiz\" && poll.state === \"started\";\n  const fetchedInitialResponses = useRef(false);\n  const [savedResponses, setSavedResponses] = useState<Record<any, any>>({});\n  const localPeer = useHMSStore(selectLocalPeer);\n  const localPeerId = localPeer?.id;\n  const customerUserId = localPeer?.customerUserId;\n\n  // To reset whenever a different poll is opened\n  useEffect(() => {\n    fetchedInitialResponses.current = false;\n    setSavedResponses({});\n  }, [id, setSavedResponses]);\n\n  useEffect(() => {\n    const getResponses = async () => {\n      if (\n        poll &&\n        actions.interactivityCenter &&\n        !fetchedInitialResponses.current\n      ) {\n        await actions.interactivityCenter.getPollResponses(poll, true);\n        fetchedInitialResponses.current = true;\n      }\n    };\n    getResponses();\n  }, [poll, actions.interactivityCenter]);\n\n  useEffect(() => {\n    if (poll?.questions) {\n      const localPeerResponses = getPeerResponses(\n        poll.questions,\n        localPeerId,\n        customerUserId\n      );\n      // @ts-ignore\n      localPeerResponses?.forEach((response) => {\n        if (response) {\n          setSavedResponses((prev) => {\n            const prevCopy = { ...prev };\n            prevCopy[response[0]?.questionIndex] = {\n              option: response[0]?.option,\n              options: response[0]?.options,\n            };\n            return prevCopy;\n          });\n        }\n      });\n    }\n  }, [localPeerId, poll?.questions, id, customerUserId]);\n\n  if (!poll) {\n    return null;\n  }\n\n  const canViewLeaderboard =\n    poll.type === \"quiz\" && poll.state === \"stopped\" && !poll.anonymous;\n\n  return (\n    <Container rounded>\n      <Flex\n        align=\"center\"\n        css={{\n          gap: \"$4\",\n          py: \"$6\",\n          px: \"$8\",\n          my: \"$4\",\n          w: \"100%\",\n          color: \"$on_surface_high\",\n          borderBottom: \"1px solid $border_default\",\n        }}\n      >\n        <Flex\n          onClick={() => setPollView(POLL_VIEWS.CREATE_POLL_QUIZ)}\n          css={{\n            cursor: \"pointer\",\n            c: \"$on_surface_medium\",\n            \"&:hover\": { color: \"$on_surface_high\" },\n          }}\n        >\n          <ChevronLeftIcon />\n        </Flex>\n        <Text variant=\"h6\">{poll.title}</Text>\n        <StatusIndicator status={poll.state} />\n        <Box\n          css={{\n            marginLeft: \"auto\",\n            cursor: \"pointer\",\n            \"&:hover\": { opacity: \"0.8\" },\n            height: \"fit-content\",\n          }}\n        >\n          <CrossIcon onClick={toggleVoting} />\n        </Box>\n      </Flex>\n\n      <Flex\n        direction=\"column\"\n        css={{ p: \"$8 $10\", flex: \"1 1 0\", overflowY: \"auto\" }}\n      >\n        {poll.state === \"started\" ? (\n          <Text css={{ color: \"$on_surface_medium\", fontWeight: \"$semiBold\" }}>\n            {pollCreatorName || \"Participant\"} started a {poll.type}\n          </Text>\n        ) : null}\n\n        {showSingleView ? (\n          <TimedView\n            poll={poll}\n            localPeerResponses={savedResponses}\n            updateSavedResponses={setSavedResponses}\n          />\n        ) : (\n          <StandardView\n            poll={poll}\n            localPeerResponses={savedResponses}\n            updateSavedResponses={setSavedResponses}\n          />\n        )}\n      </Flex>\n      <Flex\n        css={{\n          w: \"100%\",\n          justifyContent: \"end\",\n          alignItems: \"center\",\n          p: \"$8\",\n          borderTop: \"1px solid $border_bright\",\n        }}\n      >\n        {poll.state === \"started\" && canEndActivity && (\n          <Button\n            variant=\"danger\"\n            css={{ fontWeight: \"$semiBold\", w: \"max-content\" }}\n            onClick={() => actions.interactivityCenter.stopPoll(id)}\n          >\n            End {poll.type}\n          </Button>\n        )}\n        {canViewLeaderboard ? (\n          <Button\n            css={{ fontWeight: \"$semiBold\", w: \"max-content\" }}\n            onClick={() => setPollView(POLL_VIEWS.RESULTS)}\n          >\n            View Leaderboard\n          </Button>\n        ) : null}\n      </Flex>\n    </Container>\n  );\n};\n", "import React, { Dispatch, SetStateAction } from \"react\";\nimport { HMSPoll } from \"@100mslive/react-sdk\";\nimport { PeerParticipationSummary } from \"./PeerParticipationSummary\";\n// @ts-ignore\nimport { QuestionCard } from \"./QuestionCard\";\n\nexport const StandardView = ({\n  poll,\n  localPeerResponses,\n  updateSavedResponses,\n}: {\n  poll: HMSPoll;\n  localPeerResponses: Record<number, number | number[] | undefined>;\n  updateSavedResponses: Dispatch<SetStateAction<Record<any, any>>>;\n}) => {\n  if (!poll?.questions) {\n    return null;\n  }\n\n  const isQuiz = poll.type === \"quiz\";\n  const isStopped = poll.state === \"stopped\";\n\n  return (\n    <>\n      {isQuiz && isStopped ? <PeerParticipationSummary quiz={poll} /> : null}\n      {poll.questions?.map((question, index) => (\n        <QuestionCard\n          pollID={poll.id}\n          isQuiz={isQuiz}\n          startedBy={poll.startedBy}\n          pollState={poll.state}\n          key={`${question.text}-${index}`}\n          index={question.index}\n          text={question.text}\n          type={question.type}\n          result={question.result}\n          totalQuestions={poll.questions?.length || 0}\n          options={question.options}\n          localPeerResponse={localPeerResponses?.[question.index]}\n          answer={question.answer}\n          updateSavedResponses={updateSavedResponses}\n          rolesThatCanViewResponses={poll.rolesThatCanViewResponses}\n        />\n      ))}\n    </>\n  );\n};\n", "// @ts-check\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectLocalPeer,\n  selectLocalPeerRoleName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  CheckCircleIcon,\n  ChevronDownIcon,\n  CrossCircleIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Button, Flex, Text } from \"../../../../\";\nimport { checkCorrectAnswer } from \"../../../common/utils\";\nimport { MultipleChoiceOptions } from \"../common/MultipleChoiceOptions\";\nimport { SingleChoiceOptions } from \"../common/SingleChoiceOptions\";\nimport { QUESTION_TYPE } from \"../../../common/constants\";\n\nexport const QuestionCard = ({\n  pollID,\n  isQuiz,\n  startedBy,\n  pollState,\n  index,\n  totalQuestions,\n  result,\n  type,\n  text,\n  options = [],\n  answer,\n  localPeerResponse,\n  updateSavedResponses,\n  rolesThatCanViewResponses,\n}) => {\n  const actions = useHMSActions();\n  const localPeer = useHMSStore(selectLocalPeer);\n\n  const isLocalPeerCreator = localPeer?.id === startedBy;\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  const roleCanViewResponse =\n    !rolesThatCanViewResponses ||\n    rolesThatCanViewResponses.length === 0 ||\n    rolesThatCanViewResponses.includes(localPeerRoleName || \"\");\n  const [localPeerChoice, setLocalPeerChoice] = useState(localPeerResponse);\n\n  useEffect(() => {\n    setLocalPeerChoice(localPeerResponse);\n  }, [localPeerResponse]);\n\n  const showVoteCount =\n    roleCanViewResponse &&\n    (localPeerChoice || (isLocalPeerCreator && pollState === \"stopped\")) &&\n    !isQuiz;\n\n  const isLive = pollState === \"started\";\n  const pollEnded = pollState === \"stopped\";\n  const canRespond = isLive && !localPeerChoice;\n  const startTime = useRef(Date.now());\n  const isCorrectAnswer = checkCorrectAnswer(answer, localPeerChoice, type);\n\n  const [singleOptionAnswer, setSingleOptionAnswer] = useState();\n  const [multipleOptionAnswer, setMultipleOptionAnswer] = useState(new Set());\n  const [showOptions, setShowOptions] = useState(true);\n\n  const respondedToQuiz = isQuiz && localPeerChoice && !localPeerChoice.skipped;\n\n  const isValidVote = useMemo(() => {\n    if (type === QUESTION_TYPE.SINGLE_CHOICE) {\n      return singleOptionAnswer !== undefined;\n    } else if (type === QUESTION_TYPE.MULTIPLE_CHOICE) {\n      return multipleOptionAnswer.size > 0;\n    }\n  }, [singleOptionAnswer, multipleOptionAnswer, type]);\n\n  const handleVote = useCallback(async () => {\n    if (!isValidVote) {\n      return;\n    }\n    const submittedResponse = {\n      questionIndex: index,\n      option: singleOptionAnswer,\n      options: Array.from(multipleOptionAnswer),\n      duration: Date.now() - startTime.current,\n    };\n    await actions.interactivityCenter.addResponsesToPoll(pollID, [\n      submittedResponse,\n    ]);\n    updateSavedResponses((prev) => {\n      const prevCopy = { ...prev };\n      prevCopy[index] = {\n        option: singleOptionAnswer,\n        options: Array.from(multipleOptionAnswer),\n      };\n      return prevCopy;\n    });\n    startTime.current = Date.now();\n  }, [\n    isValidVote,\n    index,\n    singleOptionAnswer,\n    multipleOptionAnswer,\n    actions.interactivityCenter,\n    pollID,\n    updateSavedResponses,\n  ]);\n\n  return (\n    <Box\n      css={{\n        backgroundColor: \"$surface_bright\",\n        borderRadius: \"$1\",\n        p: \"$md\",\n        mt: \"$md\",\n        border:\n          respondedToQuiz && !isLive\n            ? `1px solid ${\n                isCorrectAnswer ? \"$alert_success\" : \"$alert_error_default\"\n              }`\n            : \"none\",\n      }}\n    >\n      <Flex align=\"center\" justify=\"between\">\n        <Text\n          variant=\"caption\"\n          css={{\n            color: match({ respondedToQuiz, isLive, isCorrectAnswer })\n              .when(\n                ({ respondedToQuiz, isLive }) => respondedToQuiz && !isLive,\n                ({ isCorrectAnswer }) =>\n                  isCorrectAnswer ? \"$alert_success\" : \"$alert_error_default\"\n              )\n              .otherwise(() => \"$on_surface_low\"),\n            fontWeight: \"$semiBold\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$4\",\n          }}\n        >\n          {match({ respondedToQuiz, pollEnded, isCorrectAnswer })\n            .when(\n              ({ respondedToQuiz, pollEnded }) => respondedToQuiz && pollEnded,\n              ({ isCorrectAnswer }) => {\n                return isCorrectAnswer ? (\n                  <CheckCircleIcon height={16} width={16} />\n                ) : (\n                  <CrossCircleIcon height={16} width={16} />\n                );\n              }\n            )\n            .otherwise(() => null)}\n          QUESTION {index} OF {totalQuestions}: {type.toUpperCase()}\n        </Text>\n      </Flex>\n\n      <Flex justify=\"between\" css={{ my: \"$md\" }}>\n        <Text css={{ color: \"$on_surface_high\" }}>{text}</Text>\n        <Box\n          css={{\n            color: \"$on_surface_medium\",\n            \"&:hover\": { color: \"$on_surface_high\", cursor: \"pointer\" },\n          }}\n          onClick={() => setShowOptions((prev) => !prev)}\n        >\n          <ChevronDownIcon\n            style={{\n              transform: showOptions ? \"rotate(180deg)\" : \"rotate(0deg)\",\n              transition: \"transform 0.3s ease\",\n            }}\n          />\n        </Box>\n      </Flex>\n\n      <Box\n        css={{\n          maxHeight: showOptions ? \"$80\" : \"0\",\n          transition: \"max-height 0.3s ease\",\n          overflowY: \"auto\",\n          mb: \"$4\",\n        }}\n      >\n        {type === QUESTION_TYPE.SINGLE_CHOICE ? (\n          <SingleChoiceOptions\n            key={index}\n            questionIndex={index}\n            isQuiz={isQuiz}\n            canRespond={canRespond}\n            correctOptionIndex={answer?.option}\n            options={options}\n            setAnswer={setSingleOptionAnswer}\n            totalResponses={result?.totalResponses}\n            showVoteCount={showVoteCount}\n            localPeerResponse={localPeerChoice}\n            isStopped={pollState === \"stopped\"}\n          />\n        ) : null}\n\n        {type === QUESTION_TYPE.MULTIPLE_CHOICE ? (\n          <MultipleChoiceOptions\n            questionIndex={index}\n            isQuiz={isQuiz}\n            canRespond={canRespond}\n            correctOptionIndexes={answer?.options}\n            options={options}\n            selectedOptions={multipleOptionAnswer}\n            setSelectedOptions={setMultipleOptionAnswer}\n            totalResponses={result?.totalResponses}\n            showVoteCount={showVoteCount}\n            localPeerResponse={localPeerChoice}\n            isStopped={pollState === \"stopped\"}\n          />\n        ) : null}\n      </Box>\n      {isLive && (\n        <QuestionActions\n          isValidVote={isValidVote}\n          onVote={handleVote}\n          response={localPeerChoice}\n          isQuiz={isQuiz}\n        />\n      )}\n    </Box>\n  );\n};\n\nconst QuestionActions = ({ isValidVote, response, isQuiz, onVote }) => {\n  return (\n    <Flex align=\"center\" justify=\"end\" css={{ gap: \"$4\", w: \"100%\" }}>\n      {response ? (\n        <Text css={{ fontWeight: \"$semiBold\", color: \"$on_surface_medium\" }}>\n          {response.skipped ? \"Skipped\" : null}\n          {isQuiz && !response.skipped ? \"Answered\" : null}\n          {!isQuiz && !response.skipped ? \"Voted\" : null}\n        </Text>\n      ) : (\n        <Button\n          css={{ p: \"$xs $10\", fontWeight: \"$semiBold\" }}\n          disabled={!isValidVote}\n          onClick={onVote}\n        >\n          {isQuiz ? \"Answer\" : \"Vote\"}\n        </Button>\n      )}\n    </Flex>\n  );\n};\n", "import React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { HMSPoll } from \"@100mslive/react-sdk\";\n// @ts-ignore\nimport { QuestionCard } from \"./QuestionCard\";\n// @ts-ignore\nimport { getIndexToShow } from \"../../../common/utils\";\n\nexport const TimedView = ({\n  poll,\n  localPeerResponses,\n  updateSavedResponses,\n}: {\n  poll: HMSPoll;\n  localPeerResponses?: Record<number, number | number[] | undefined>;\n  updateSavedResponses: Dispatch<SetStateAction<Record<any, any>>>;\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(\n    getIndexToShow(localPeerResponses)\n  );\n  const activeQuestion = poll.questions?.find(\n    (question) => question.index === currentIndex\n  );\n  const attemptedAll = (poll.questions?.length || 0) < currentIndex;\n\n  // Handles increments so only one question is shown at a time in quiz\n  useEffect(() => {\n    setCurrentIndex(getIndexToShow(localPeerResponses));\n  }, [localPeerResponses]);\n\n  if ((!activeQuestion && !attemptedAll) || !poll.questions?.length) {\n    return null;\n  }\n\n  return (\n    <>\n      {poll.questions.map((question) => {\n        return attemptedAll || activeQuestion?.index === question.index ? (\n          <QuestionCard\n            key={question.index}\n            pollID={poll.id}\n            isQuiz={poll.type === \"quiz\"}\n            startedBy={poll.startedBy}\n            pollState={poll.state}\n            index={question.index}\n            text={question.text}\n            type={question.type}\n            result={question?.result}\n            totalQuestions={poll.questions?.length || 0}\n            options={question.options}\n            localPeerResponse={localPeerResponses?.[question.index]}\n            answer={question.answer}\n            rolesThatCanViewResponses={poll.rolesThatCanViewResponses}\n            updateSavedResponses={updateSavedResponses}\n          />\n        ) : null;\n      })}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore: No implicit any\nimport { Logo } from \"../Header/HeaderComponents\";\nimport { RoomDetailsRow } from \"./RoomDetailsRow\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../AppData/useSidepane\";\nimport { useMobileHLSStream } from \"../../common/hooks\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const RoomDetailsPane = () => {\n  const { description } = useRoomLayoutHeader();\n  const isMwebHLSStream = useMobileHLSStream();\n  return (\n    <Box css={{ flex: \"1 1 0\", position: \"relative\" }}>\n      {isMwebHLSStream ? (\n        <Flex direction=\"row\" align=\"center\" gap=\"2\">\n          <Logo />\n          <ShowRoomDetailHeader />\n        </Flex>\n      ) : (\n        <ShowRoomDetailHeader />\n      )}\n      <Box css={{ mt: \"$10\" }}>\n        <Text\n          css={{\n            color: \"$on_surface_high\",\n            fontWeight: \"$semiBold\",\n            display: isMwebHLSStream ? \"none\" : \"\",\n          }}\n        >\n          Description\n        </Text>\n        <Text variant=\"sm\" css={{ c: \"$on_surface_medium\" }}>\n          {description}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nconst ShowRoomDetailHeader = () => {\n  const { title, details } = useRoomLayoutHeader();\n  const toggleDetailsPane = useSidepaneToggle(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n  const isMwebHLSStream = useMobileHLSStream();\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ position: \"sticky\", top: 0, bg: \"$surface_dim\" }}\n    >\n      <Flex justify=\"between\" align=\"center\" css={{ w: \"100%\" }}>\n        <Text variant=\"h6\">{title}</Text>\n        {!isMwebHLSStream && (\n          <Flex\n            onClick={toggleDetailsPane}\n            css={{\n              color: \"$on_surface_high\",\n              cursor: \"pointer\",\n              \"&:hover\": { opacity: \"0.8\" },\n            }}\n          >\n            <CrossIcon />\n          </Flex>\n        )}\n      </Flex>\n      <RoomDetailsRow details={details} />\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { selectDominantSpeaker, useHMSStore } from \"@100mslive/react-sdk\";\nimport { VolumeOneIcon } from \"@100mslive/react-icons\";\nimport { Flex, styled, Text, textEllipsis } from \"../../../\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\n\nexport const SpeakerTag = () => {\n  const dominantSpeaker = useHMSStore(selectDominantSpeaker);\n  return (\n    dominantSpeaker &&\n    dominantSpeaker.name && (\n      <Flex\n        align=\"center\"\n        justify=\"center\"\n        css={{\n          flex: \"1 1 0\",\n          color: \"$on_surface_high\",\n          \"@md\": { display: \"none\" },\n        }}\n      >\n        <VolumeOneIcon />\n        <Text\n          variant=\"sm\"\n          css={{ ...textEllipsis(200), ml: \"$2\" }}\n          title={dominantSpeaker.name}\n        >\n          {dominantSpeaker.name}\n        </Text>\n      </Flex>\n    )\n  );\n};\n\nconst LogoImg = styled(\"img\", {\n  maxHeight: \"$14\",\n  w: \"auto\",\n  objectFit: \"contain\",\n  \"@md\": {\n    maxHeight: \"$12\",\n  },\n});\n\nexport const Logo = () => {\n  const roomLayout = useRoomLayout();\n  const logo = roomLayout?.logo?.url;\n  const [hideImage, setHideImage] = useState(false);\n  // Hide logo for now as there is not enough space\n  useEffect(() => {\n    if (hideImage) {\n      setHideImage(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [logo]);\n\n  return logo && !hideImage ? (\n    <LogoImg\n      src={logo}\n      alt=\"Brand Logo\"\n      onError={(e) => {\n        e.target.onerror = null;\n        setHideImage(true);\n      }}\n    />\n  ) : null;\n};\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { Duration } from \"./Duration\";\n\nexport const RoomDetailsRow = ({ details }: { details: (string | Date)[] }) => {\n  return (\n    <Flex align=\"center\" css={{ w: \"100%\" }}>\n      {details.map((detail, index) => (\n        <React.Fragment key={detail.toString()}>\n          {index > 0 && (\n            <Box\n              css={{\n                h: \"$2\",\n                w: \"$2\",\n                r: \"$round\",\n                bg: \"$on_surface_medium\",\n                m: \"0 $2\",\n              }}\n            />\n          )}\n          {typeof detail !== \"string\" ? (\n            <Duration timestamp={detail} />\n          ) : (\n            <Text variant=\"xs\" css={{ c: \"$on_surface_medium\" }}>\n              {detail}\n            </Text>\n          )}\n        </React.Fragment>\n      ))}\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { getFormattedTime } from \"../Polls/common/utils\";\n\nexport const Duration = ({ timestamp }: { timestamp: Date }) => {\n  const [elapsedTime, setElapsedTime] = useState(\n    getFormattedTime(Date.now() - timestamp.getTime(), false)\n  );\n\n  useEffect(() => {\n    const timerAdded = setInterval(() => {\n      setElapsedTime(getFormattedTime(Date.now() - timestamp.getTime(), false));\n    }, 1000);\n\n    return () => {\n      clearInterval(timerAdded);\n    };\n  }, [timestamp]);\n\n  return (\n    <Flex css={{ color: \"$on_surface_medium\" }}>\n      <Text variant=\"xs\" css={{ color: \"inherit\" }}>\n        Started {elapsedTime} ago\n      </Text>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { DefaultConferencingScreen_Elements } from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport { selectPeerCount, useHMSStore } from \"@100mslive/react-sdk\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Chat } from \"./Chat/Chat\";\nimport { PaginatedParticipants } from \"./Footer/PaginatedParticipants\";\nimport { ParticipantList } from \"./Footer/ParticipantList\";\nimport { Box, config as cssConfig, Flex, IconButton, Tabs, Text } from \"../..\";\nimport { Tooltip } from \"../../Tooltip\";\nimport { ChatSettings } from \"./ChatSettings\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneReset,\n  useSidepaneToggle,\n} from \"./AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../common/utils\";\nimport { SIDE_PANE_OPTIONS } from \"../common/constants\";\n\nconst tabTriggerCSS = {\n  color: \"$on_surface_low\",\n  p: \"$4\",\n  fontWeight: \"$semiBold\",\n  fontSize: \"$sm\",\n  w: \"100%\",\n  justifyContent: \"center\",\n  '&[data-state=\"active\"]': {\n    color: \"$on_surface_high\",\n  },\n};\n\nconst ParticipantCount = ({ count }: { count: number }) => {\n  return count < 1000 ? (\n    <span>({count})</span>\n  ) : (\n    <Tooltip title={count}>\n      <span>({getFormattedCount(count)})</span>\n    </Tooltip>\n  );\n};\n\nexport const SidePaneTabs = React.memo<{\n  active: \"Participants | Chat\";\n  hideTab?: boolean;\n}>(({ active = SIDE_PANE_OPTIONS.CHAT, hideTab = false }) => {\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const toggleParticipants = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n  const resetSidePane = useSidepaneReset();\n  const [activeTab, setActiveTab] = useState(active);\n  const [activeRole, setActiveRole] = useState(\"\");\n  const peerCount = useHMSStore(selectPeerCount);\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const chat_title = elements?.chat?.chat_title || \"Chat\";\n  const showChat = !!elements?.chat;\n  const showParticipants = !!elements?.participant_list;\n  const hideTabs = !(showChat && showParticipants) || hideTab;\n  const isMobile = useMedia(cssConfig.media.md);\n  const isOverlayChat = !!elements?.chat?.is_overlay && isMobile;\n  const { off_stage_roles = [] } =\n    (elements as DefaultConferencingScreen_Elements)?.on_stage_exp || {};\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n  const showChatSettings =\n    showChat && isChatOpen && (!isMobile || !isOverlayChat);\n\n  useEffect(() => {\n    match({ activeTab, showChat, showParticipants })\n      .with(\n        {\n          activeTab: SIDE_PANE_OPTIONS.CHAT,\n          showChat: false,\n          showParticipants: true,\n        },\n        () => {\n          setActiveTab(SIDE_PANE_OPTIONS.PARTICIPANTS);\n        }\n      )\n      .with(\n        {\n          activeTab: SIDE_PANE_OPTIONS.PARTICIPANTS,\n          showChat: true,\n          showParticipants: false,\n        },\n        () => {\n          setActiveTab(SIDE_PANE_OPTIONS.CHAT);\n        }\n      )\n      .with({ showChat: false, showParticipants: false }, () => {\n        resetSidePane();\n      });\n  }, [showChat, activeTab, showParticipants, resetSidePane]);\n\n  useEffect(() => {\n    setActiveTab(active);\n  }, [active]);\n\n  if (activeRole) {\n    return (\n      <Flex\n        direction=\"column\"\n        css={{\n          color: \"$on_primary_high\",\n          h: \"100%\",\n          transition: \"margin 0.3s ease-in-out\",\n          position: \"relative\",\n        }}\n      >\n        <Box\n          css={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            size: \"100%\",\n            zIndex: 21,\n            bg: \"$surface_dim\",\n          }}\n        >\n          <PaginatedParticipants\n            roleName={activeRole}\n            onBack={() => setActiveRole(\"\")}\n          />\n        </Box>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        color: \"$on_primary_high\",\n        h: \"100%\",\n        transition: \"margin 0.3s ease-in-out\",\n      }}\n    >\n      {match({ isOverlayChat, isChatOpen, showChat, hideTabs })\n        .with({ isOverlayChat: true, isChatOpen: true, showChat: true }, () => (\n          <Chat />\n        ))\n        .with({ hideTabs: true }, () => {\n          return (\n            <>\n              <Flex\n                justify=\"between\"\n                css={{ w: \"100%\", \"&:empty\": { display: \"none\" } }}\n              >\n                <Text\n                  variant=\"sm\"\n                  css={{\n                    fontWeight: \"$semiBold\",\n                    p: \"$4\",\n                    c: \"$on_surface_high\",\n                    pr: \"$12\",\n                    \"&:empty\": { display: \"none\" },\n                  }}\n                >\n                  {activeTab === SIDE_PANE_OPTIONS.CHAT ? (\n                    screenType !== \"hls_live_streaming\" && chat_title\n                  ) : (\n                    <span>\n                      Participants&nbsp;\n                      <ParticipantCount count={peerCount} />\n                    </span>\n                  )}\n                </Text>\n                <Flex>\n                  {showChatSettings ? <ChatSettings /> : null}\n                  {isOverlayChat && isChatOpen ? null : (\n                    <IconButton\n                      css={{\n                        my: \"$1\",\n                        color: \"$on_surface_medium\",\n                        \"&:hover\": { color: \"$on_surface_high\" },\n                        \"&:empty\": { display: \"none\" },\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (activeTab === SIDE_PANE_OPTIONS.CHAT) {\n                          toggleChat();\n                        } else {\n                          toggleParticipants();\n                        }\n                      }}\n                      data-testid=\"close_chat\"\n                    >\n                      {screenType === \"hls_live_streaming\" &&\n                      isChatOpen ? null : (\n                        <CrossIcon />\n                      )}\n                    </IconButton>\n                  )}\n                </Flex>\n              </Flex>\n              {activeTab === SIDE_PANE_OPTIONS.CHAT ? (\n                <Chat />\n              ) : (\n                <ParticipantList\n                  offStageRoles={off_stage_roles}\n                  onActive={setActiveRole}\n                />\n              )}\n            </>\n          );\n        })\n        .otherwise(() => {\n          return (\n            <Tabs.Root\n              value={activeTab}\n              onValueChange={setActiveTab}\n              css={{\n                flexDirection: \"column\",\n                size: \"100%\",\n              }}\n            >\n              <Flex css={{ w: \"100%\" }}>\n                <Tabs.List\n                  css={{\n                    flexGrow: 1,\n                    borderRadius: \"$2\",\n                    bg: \"$surface_default\",\n                  }}\n                >\n                  <Tabs.Trigger\n                    value={SIDE_PANE_OPTIONS.CHAT}\n                    onClick={toggleChat}\n                    css={tabTriggerCSS}\n                  >\n                    {chat_title}\n                  </Tabs.Trigger>\n                  <Tabs.Trigger\n                    value={SIDE_PANE_OPTIONS.PARTICIPANTS}\n                    onClick={toggleParticipants}\n                    css={tabTriggerCSS}\n                  >\n                    Participants&nbsp;\n                    <ParticipantCount count={peerCount} />\n                  </Tabs.Trigger>\n                </Tabs.List>\n                {showChatSettings ? <ChatSettings /> : null}\n                {isOverlayChat && isChatOpen ? null : (\n                  <IconButton\n                    css={{\n                      my: \"$1\",\n                      color: \"$on_surface_medium\",\n                      \"&:hover\": { color: \"$on_surface_high\" },\n                    }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      if (activeTab === SIDE_PANE_OPTIONS.CHAT) {\n                        toggleChat();\n                      } else {\n                        toggleParticipants();\n                      }\n                    }}\n                    data-testid=\"close_chat\"\n                  >\n                    <CrossIcon />\n                  </IconButton>\n                )}\n              </Flex>\n              <Tabs.Content\n                value={SIDE_PANE_OPTIONS.PARTICIPANTS}\n                css={{ p: 0 }}\n              >\n                <ParticipantList\n                  offStageRoles={off_stage_roles}\n                  onActive={setActiveRole}\n                />\n              </Tabs.Content>\n              <Tabs.Content value={SIDE_PANE_OPTIONS.CHAT} css={{ p: 0 }}>\n                <Chat />\n              </Tabs.Content>\n            </Tabs.Root>\n          );\n        })}\n    </Flex>\n  );\n});\n", "import React, { MutableRefObject, useCallback, useRef } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { VariableSizeList } from \"react-window\";\nimport {\n  selectSessionStore,\n  selectUnreadHMSMessagesCount,\n} from \"@100mslive/hms-video-store\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectHMSMessagesCount,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { ChevronDownIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\n// @ts-ignore: No implicit any\nimport { EmojiReaction } from \"../EmojiReaction\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { RaiseHand } from \"../RaiseHand\";\nimport { ChatBody } from \"./ChatBody\";\nimport { ChatFooter } from \"./ChatFooter\";\nimport { ChatBlocked, ChatPaused } from \"./ChatStates\";\nimport { PinnedMessage } from \"./PinnedMessage\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useSidepaneResetOnLayoutUpdate } from \"../AppData/useSidepaneResetOnLayoutUpdate\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { useLandscapeHLSStream, useMobileHLSStream } from \"../../common/hooks\";\nimport { SESSION_STORE_KEY, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const Chat = () => {\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const listRef = useRef<VariableSizeList | null>(null);\n  const hmsActions = useHMSActions();\n  const vanillaStore = useHMSVanillaStore();\n  const { enabled: isChatEnabled = true } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n  const isMobile = useMedia(cssConfig.media.md);\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeStream = useLandscapeHLSStream();\n  useSidepaneResetOnLayoutUpdate(\"chat\", SIDE_PANE_OPTIONS.CHAT);\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n\n  const scrollToBottom = useCallback(\n    (unreadCount = 0) => {\n      if (listRef.current && listRef.current.scrollToItem && unreadCount > 0) {\n        const messagesCount = vanillaStore.getState(selectHMSMessagesCount);\n        listRef.current?.scrollToItem(messagesCount, \"end\");\n        requestAnimationFrame(() => {\n          listRef.current?.scrollToItem(messagesCount, \"end\");\n        });\n        hmsActions.setMessageRead(true);\n      }\n    },\n    [hmsActions, vanillaStore]\n  );\n\n  const streaming = isMobileHLSStream || isLandscapeStream;\n\n  return (\n    <Flex\n      direction=\"column\"\n      justify=\"end\"\n      css={{\n        size: \"100%\",\n        gap: \"$4\",\n      }}\n    >\n      {isMobile && elements?.chat?.is_overlay && !streaming ? null : (\n        <PinnedMessage />\n      )}\n      <ChatBody ref={listRef} scrollToBottom={scrollToBottom} />\n      <Flex align=\"center\" css={{ w: \"100%\", gap: \"$2\" }}>\n        <ChatPaused />\n        <ChatBlocked />\n        {streaming && (!isChatEnabled || isLocalPeerBlacklisted) && (\n          <>\n            <RaiseHand css={{ bg: \"$surface_default\" }} />\n            <MoreSettings elements={elements} screenType={screenType} />\n          </>\n        )}\n      </Flex>\n      {isMobile && elements?.chat?.is_overlay && !streaming ? (\n        <PinnedMessage />\n      ) : null}\n      {isChatEnabled ? (\n        <ChatFooter onSend={scrollToBottom}>\n          <NewMessageIndicator\n            scrollToBottom={scrollToBottom}\n            listRef={listRef}\n          />\n        </ChatFooter>\n      ) : null}\n      {streaming && (\n        <Box\n          css={{\n            position: \"absolute\",\n            ...match({\n              isLandscapeStream,\n              isMobileHLSStream,\n              isChatEnabled,\n              isLocalPeerBlacklisted,\n            })\n              .with(\n                {\n                  isLandscapeStream: true,\n                  isChatEnabled: true,\n                },\n                () => ({ bottom: \"$19\", right: \"$10\" })\n              )\n              .with(\n                {\n                  isLandscapeStream: true,\n                  isChatEnabled: false,\n                },\n                () => ({ bottom: \"$20\", right: \"$10\" })\n              )\n              .with(\n                {\n                  isMobileHLSStream: true,\n                  isChatEnabled: false,\n                },\n                () => ({ bottom: \"$19\", right: \"$8\" })\n              )\n              .with(\n                {\n                  isMobileHLSStream: true,\n                  isChatEnabled: true,\n                  isLocalPeerBlacklisted: false,\n                },\n                () => ({ bottom: \"$17\", right: \"$8\" })\n              )\n              .with(\n                {\n                  isLandscapeStream: false,\n                  isChatEnabled: true,\n                  isLocalPeerBlacklisted: true,\n                },\n                () => ({ bottom: \"$18\", right: \"$8\" })\n              )\n              .with(\n                {\n                  isMobileHLSStream: true,\n                  isLocalPeerBlacklisted: true,\n                },\n                () => ({ bottom: \"$20\", right: \"$8\" })\n              )\n              .otherwise(() => ({})),\n          }}\n        >\n          <EmojiReaction />\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nconst NewMessageIndicator = ({\n  scrollToBottom,\n  listRef,\n}: {\n  scrollToBottom: (count: number) => void;\n  listRef: MutableRefObject<VariableSizeList | null>;\n}) => {\n  const unreadCount = useHMSStore(selectUnreadHMSMessagesCount);\n  if (!unreadCount || !listRef.current) {\n    return null;\n  }\n  // @ts-ignore\n  const outerElement = listRef.current._outerRef;\n  if (\n    outerElement &&\n    outerElement.clientHeight +\n      outerElement.scrollTop +\n      outerElement.offsetTop >=\n      outerElement.scrollHeight\n  ) {\n    return null;\n  }\n\n  return (\n    <Flex\n      justify=\"center\"\n      css={{\n        width: \"100%\",\n        left: 0,\n        bottom: \"$28\",\n        position: \"absolute\",\n      }}\n    >\n      <Button\n        variant=\"standard\"\n        onClick={() => {\n          scrollToBottom(unreadCount);\n        }}\n        icon\n        css={{\n          p: \"$3 $4\",\n          pl: \"$6\",\n          \"& > svg\": { ml: \"$4\" },\n          borderRadius: \"$round\",\n          fontSize: \"$xs\",\n          fontWeight: \"$semiBold\",\n          c: \"$on_secondary_high\",\n        }}\n      >\n        New {unreadCount === 1 ? \"message\" : \"messages\"}\n        <ChevronDownIcon height={16} width={16} />\n      </Button>\n    </Flex>\n  );\n};\n", "import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useMedia } from \"react-use\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport {\n  HMSException,\n  selectLocalPeer,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  EmojiIcon,\n  PauseCircleIcon,\n  SendIcon,\n  VerticalMenuIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  config as cssConfig,\n  Flex,\n  IconButton as BaseIconButton,\n  Popover,\n  styled,\n  Text,\n} from \"../../..\";\nimport { IconButton } from \"../../../IconButton\";\nimport { MoreSettings } from \"../MoreSettings/MoreSettings\";\nimport { RaiseHand } from \"../RaiseHand\";\n// @ts-ignore: No implicit any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { ChatSelectorContainer } from \"./ChatSelectorContainer\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit any\nimport { useChatDraftMessage } from \"../AppData/useChatState\";\n// @ts-ignore: No implicit any\nimport {\n  useSetSubscribedChatSelector,\n  useSubscribeChatSelector,\n} from \"../AppData/useUISettings\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\n// @ts-ignore: No implicit any\nimport { useEmojiPickerStyles } from \"./useEmojiPickerStyles\";\nimport {\n  useDefaultChatSelection,\n  useLandscapeHLSStream,\n  useMobileHLSStream,\n} from \"../../common/hooks\";\nimport { CHAT_MESSAGE_LIMIT } from \"./utils\";\nimport { CHAT_SELECTOR, SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst TextArea = styled(\"textarea\", {\n  width: \"100%\",\n  bg: \"transparent\",\n  color: \"$on_primary_high\",\n  resize: \"none\",\n  lineHeight: \"1rem\",\n  position: \"relative\",\n  fontFamily: \"$sans\",\n  fontSize: \"100%\",\n  margin: 0,\n  padding: 0,\n  top: \"$3\",\n  \"&:focus\": {\n    boxShadow: \"none\",\n    outline: \"none\",\n  },\n});\n\nfunction EmojiPicker({ onSelect }: { onSelect: (emoji: any) => void }) {\n  const [showEmoji, setShowEmoji] = useState(false);\n  const ref = useEmojiPickerStyles(showEmoji);\n  return (\n    <Popover.Root open={showEmoji} onOpenChange={setShowEmoji}>\n      <Popover.Trigger asChild css={{ appearance: \"none\" }}>\n        <BaseIconButton as=\"div\">\n          <EmojiIcon />\n        </BaseIconButton>\n      </Popover.Trigger>\n      <Popover.Portal>\n        <Popover.Content\n          alignOffset={-40}\n          sideOffset={16}\n          align=\"end\"\n          css={{\n            p: 0,\n          }}\n        >\n          <Box\n            css={{\n              minWidth: 352,\n              minHeight: 435,\n            }}\n            ref={ref}\n          >\n            <Picker\n              onEmojiSelect={onSelect}\n              data={data}\n              previewPosition=\"none\"\n              skinPosition=\"search\"\n            />\n          </Box>\n        </Popover.Content>\n      </Popover.Portal>\n    </Popover.Root>\n  );\n}\n\nexport const ChatFooter = ({\n  onSend,\n  children,\n}: {\n  onSend: (count: number) => void;\n  children?: ReactNode;\n}) => {\n  const hmsActions = useHMSActions();\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const [draftMessage, setDraftMessage] = useChatDraftMessage();\n  const isMobile = useMedia(cssConfig.media.md);\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const message_placeholder =\n    elements?.chat?.message_placeholder || \"Send a message\";\n  const localPeer = useHMSStore(selectLocalPeer);\n  const isOverlayChat = elements?.chat?.is_overlay;\n  const canDisableChat = !!elements?.chat?.real_time_controls?.can_disable_chat;\n  const selectedPeer = useSubscribeChatSelector(CHAT_SELECTOR.PEER);\n  const [selectedRole, setRoleSelector] = useSetSubscribedChatSelector(\n    CHAT_SELECTOR.ROLE\n  );\n  const defaultSelection = useDefaultChatSelection();\n  const selection = selectedPeer.name || selectedRole || defaultSelection;\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  const isMwebHLSStream = useMobileHLSStream();\n  const [messageLengthExceeded, setMessageLengthExceeded] = useState(false);\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  useEffect(() => {\n    if (\n      !selectedPeer.id &&\n      !selectedRole &&\n      ![\"Everyone\", \"\"].includes(defaultSelection)\n    ) {\n      setRoleSelector(defaultSelection);\n    } else {\n      // @ts-ignore\n      if (\n        !(isMobile || isLandscapeHLSStream) &&\n        !elements?.chat?.disable_autofocus\n      ) {\n        inputRef.current?.focus();\n      }\n    }\n  }, [\n    defaultSelection,\n    selectedPeer,\n    selectedRole,\n    setRoleSelector,\n    isMobile,\n    isLandscapeHLSStream,\n    elements?.chat,\n  ]);\n\n  const resetInputHeight = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = `${Math.max(\n        32,\n        inputRef.current.value\n          ? Math.min(inputRef.current.scrollHeight, 24 * 4)\n          : 0\n      )}px`;\n    }\n  }, []);\n\n  const updateInputHeight = useCallback(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = `${Math.max(\n        32,\n        Math.min(inputRef.current.scrollHeight, 24 * 4)\n      )}px`;\n    }\n  }, []);\n\n  const sendMessage = useCallback(async () => {\n    const message = inputRef?.current?.value;\n    if (!message || !message.trim().length) {\n      return;\n    }\n    try {\n      if (selectedRole) {\n        await hmsActions.sendGroupMessage(message, [selectedRole]);\n      } else if (selectedPeer.id) {\n        await hmsActions.sendDirectMessage(message, selectedPeer.id);\n      } else {\n        await hmsActions.sendBroadcastMessage(message);\n      }\n      inputRef.current.value = \"\";\n      resetInputHeight();\n      setTimeout(() => {\n        onSend(1);\n      }, 0);\n    } catch (error) {\n      const err = error as HMSException;\n      ToastManager.addToast({\n        title: err.message.startsWith(\"Invalid peer\")\n          ? `${selectedPeer.name} is not in this room`\n          : err.message,\n      });\n    }\n  }, [selectedRole, selectedPeer, hmsActions, onSend]);\n\n  useEffect(() => {\n    const messageElement = inputRef.current;\n    if (messageElement) {\n      messageElement.value = draftMessage;\n      updateInputHeight();\n      setMessageLengthExceeded(draftMessage.length > CHAT_MESSAGE_LIMIT);\n    }\n  }, [draftMessage]);\n\n  useEffect(() => {\n    const messageElement = inputRef.current;\n    return () => {\n      setDraftMessage(messageElement?.value || \"\");\n    };\n  }, [setDraftMessage]);\n\n  if (isLocalPeerBlacklisted) {\n    return null;\n  }\n\n  return (\n    <Box css={{ position: \"relative\" }}>\n      <Flex>\n        <ChatSelectorContainer />\n        {canDisableChat && isMobile && isOverlayChat ? (\n          <Flex\n            align=\"center\"\n            justify=\"end\"\n            css={{ mb: \"$4\" }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <Popover.Root>\n              <Popover.Trigger asChild>\n                <IconButton css={{ border: \"1px solid $border_bright\" }}>\n                  <VerticalMenuIcon height=\"16\" width=\"16\" />\n                </IconButton>\n              </Popover.Trigger>\n              <Popover.Portal>\n                <Popover.Content\n                  align=\"end\"\n                  side=\"top\"\n                  onClick={() => {\n                    const chatState = {\n                      enabled: false,\n                      updatedBy: {\n                        peerId: localPeer?.id,\n                        userId: localPeer?.customerUserId,\n                        userName: localPeer?.name,\n                      },\n                      updatedAt: Date.now(),\n                    };\n                    hmsActions.sessionStore.set(\n                      SESSION_STORE_KEY.CHAT_STATE,\n                      chatState\n                    );\n                  }}\n                  css={{\n                    backgroundColor: \"$surface_default\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"$4\",\n                    borderRadius: \"$1\",\n                    color: \"$on_surface_high\",\n                    cursor: \"pointer\",\n                    \"&:hover\": { backgroundColor: \"$surface_dim\" },\n                  }}\n                >\n                  <PauseCircleIcon />\n                  <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\" }}>\n                    Pause Chat\n                  </Text>\n                </Popover.Content>\n              </Popover.Portal>\n            </Popover.Root>\n          </Flex>\n        ) : null}\n      </Flex>\n      {selection && (\n        <Flex\n          align={inputRef.current?.scrollHeight === 32 ? \"center\" : \"end\"}\n          css={{ gap: \"$4\", w: \"100%\" }}\n        >\n          <Flex\n            align=\"end\"\n            css={{\n              bg:\n                isOverlayChat && isMobile ? \"$surface_dim\" : \"$surface_default\",\n              minHeight: \"$16\",\n              position: \"relative\",\n              py: isOverlayChat && isMobile ? \"$2\" : \"$6\",\n              pl: \"$8\",\n              flexGrow: 1,\n              r: \"$1\",\n              \"@md\": {\n                minHeight: \"$14\",\n                boxSizing: \"border-box\",\n              },\n              ...(isLandscapeHLSStream ? { minHeight: \"$14\", py: 0 } : {}),\n            }}\n          >\n            {children}\n            <TextArea\n              maxLength={CHAT_MESSAGE_LIMIT + 10}\n              css={{\n                c: \"$on_surface_high\",\n                \"&:valid ~ .send-msg\": { color: \"$on_surface_high\" },\n                \"& ~ .send-msg\": { color: \"$on_surface_low\" },\n                \"&::placeholder\": { color: \"$on_surface_medium\" },\n                border: \"none\",\n              }}\n              placeholder={message_placeholder}\n              ref={inputRef}\n              required\n              autoFocus={!(isMobile || isLandscapeHLSStream)}\n              onKeyPress={async (event) => {\n                if (event.key === \"Enter\") {\n                  if (!event.shiftKey && !messageLengthExceeded) {\n                    event.preventDefault();\n                    await sendMessage();\n                  }\n                }\n              }}\n              autoComplete=\"off\"\n              aria-autocomplete=\"none\"\n              onChange={(e) => {\n                updateInputHeight();\n                setMessageLengthExceeded(\n                  e.target.value.length > CHAT_MESSAGE_LIMIT\n                );\n              }}\n              onBlur={resetInputHeight}\n              onPaste={(e) => e.stopPropagation()}\n              onCut={(e) => e.stopPropagation()}\n              onCopy={(e) => e.stopPropagation()}\n            />\n            {!isMobile && !isLandscapeHLSStream ? (\n              <EmojiPicker\n                onSelect={(emoji) => {\n                  if (inputRef.current) {\n                    inputRef.current.value += ` ${emoji.native} `;\n                  }\n                }}\n              />\n            ) : null}\n            <BaseIconButton\n              className=\"send-msg\"\n              onClick={sendMessage}\n              disabled={messageLengthExceeded}\n              css={{\n                ml: \"auto\",\n                height: \"max-content\",\n                mr: \"$4\",\n                \"&:hover\": { c: isMobile ? \"\" : \"$on_surface_medium\" },\n              }}\n              data-testid=\"send_msg_btn\"\n            >\n              <SendIcon />\n            </BaseIconButton>\n          </Flex>\n          {(isMwebHLSStream || isLandscapeHLSStream) && (\n            <>\n              <Flex\n                css={{\n                  alignItems: \"center\",\n                }}\n                gap=\"2\"\n              >\n                <RaiseHand css={{ bg: \"$surface_default\" }} />\n                <MoreSettings elements={elements} screenType={screenType} />\n              </Flex>\n            </>\n          )}\n        </Flex>\n      )}\n      {messageLengthExceeded && (\n        <Text\n          variant=\"xs\"\n          css={{\n            color: \"$alert_error_default\",\n            fontWeight: \"$semiBold\",\n            mt: \"$1\",\n            ml: \"$7\",\n          }}\n        >\n          Message cannot exceed 2000 characters\n        </Text>\n      )}\n    </Box>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  CrossIcon,\n  GroupIcon,\n  PersonIcon,\n} from \"@100mslive/react-icons\";\nimport { Dropdown } from \"../../../Dropdown\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { ChatSelector } from \"./ChatSelector\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSubscribeChatSelector } from \"../AppData/useUISettings\";\nimport { useDefaultChatSelection, useFilteredRoles } from \"../../common/hooks\";\nimport { CHAT_SELECTOR } from \"../../common/constants\";\n\nexport const ChatSelectorContainer = () => {\n  const [open, setOpen] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  const { elements } = useRoomLayoutConferencingScreen();\n  const isPrivateChatEnabled = !!elements?.chat?.private_chat_enabled;\n  const isPublicChatEnabled = !!elements?.chat?.public_chat_enabled;\n  const roles = useFilteredRoles();\n  const selectedPeer = useSubscribeChatSelector(CHAT_SELECTOR.PEER);\n  const selectedRole = useSubscribeChatSelector(CHAT_SELECTOR.ROLE);\n  const defaultSelection = useDefaultChatSelection();\n  const selection = selectedPeer.name || selectedRole || defaultSelection;\n\n  if (\n    !(isPrivateChatEnabled || isPublicChatEnabled || roles.length > 0) &&\n    !isPrivateChatEnabled &&\n    !selection\n  ) {\n    return null;\n  }\n  return (\n    <>\n      <Flex align=\"center\" css={{ mb: \"$8\", flex: \"1 1 0\", pl: \"$2\" }}>\n        <Text variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n          {selection ? \"To\" : \"Choose Participant\"}\n        </Text>\n\n        {isMobile ? (\n          <Flex\n            align=\"center\"\n            css={{\n              c: \"$on_surface_medium\",\n              border: \"1px solid $border_bright\",\n              r: \"$0\",\n              p: \"$1 $2\",\n              ml: \"$6\",\n            }}\n            gap=\"1\"\n            onClick={(e) => {\n              setOpen((value) => !value);\n              e.stopPropagation();\n            }}\n          >\n            <Text\n              variant=\"caption\"\n              css={{\n                c: \"$on_surface_high\",\n                pr: \"$2\",\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"$1\",\n                textTransform:\n                  selection !== selectedPeer.name ? \"capitalize\" : undefined,\n              }}\n            >\n              {selection === CHAT_SELECTOR.EVERYONE ? (\n                <GroupIcon width={16} height={16} />\n              ) : (\n                <PersonIcon width={16} height={16} />\n              )}\n              {selection || \"Search\"}\n            </Text>\n            {selection &&\n              (open ? (\n                <ChevronUpIcon width={16} height={16} />\n              ) : (\n                <ChevronDownIcon width={16} height={16} />\n              ))}\n          </Flex>\n        ) : (\n          <Dropdown.Root open={open} onOpenChange={(value) => setOpen(value)}>\n            <Dropdown.Trigger\n              asChild\n              data-testid=\"participant_list_filter\"\n              css={{\n                background: \"$primary_default\",\n                r: \"$0\",\n                p: \"$1 $2\",\n                ml: \"$6\",\n              }}\n              tabIndex={0}\n            >\n              <Flex align=\"center\" css={{ c: \"$on_surface_medium\" }} gap=\"1\">\n                <Text\n                  variant=\"caption\"\n                  css={{\n                    c: \"$on_surface_high\",\n                    pr: \"$2\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"$1\",\n                    textTransform:\n                      selection !== selectedPeer.name\n                        ? \"capitalize\"\n                        : undefined,\n                  }}\n                >\n                  {selection === CHAT_SELECTOR.EVERYONE ? (\n                    <GroupIcon width={16} height={16} />\n                  ) : (\n                    <PersonIcon width={16} height={16} />\n                  )}\n                  {selection || \"Search\"}\n                </Text>\n                {selection && (\n                  <ChevronDownIcon\n                    style={{\n                      transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                      transition: \"transform 150ms ease\",\n                    }}\n                    width={12}\n                    height={12}\n                  />\n                )}\n              </Flex>\n            </Dropdown.Trigger>\n\n            <Dropdown.Content\n              css={{\n                w: \"$64\",\n                overflow: \"hidden\",\n                maxHeight: \"unset\",\n                bg: \"$surface_default\",\n              }}\n              align=\"start\"\n              sideOffset={8}\n            >\n              <ChatSelector role={selectedRole} peerId={selectedPeer.id} />\n            </Dropdown.Content>\n          </Dropdown.Root>\n        )}\n      </Flex>\n      {isMobile ? (\n        <Sheet.Root open={open} onOpenChange={(value) => setOpen(value)}>\n          <Sheet.Content css={{ pt: \"$8\" }}>\n            <Sheet.Title\n              css={{\n                display: \"flex\",\n                w: \"100%\",\n                justifyContent: \"space-between\",\n                px: \"$10\",\n                pb: \"$4\",\n                mb: \"$8\",\n                borderBottom: \"1px solid $border_bright\",\n              }}\n            >\n              <Text\n                css={{ color: \"$on_surface_medium\", fontWeight: \"$semiBold\" }}\n              >\n                Chat with\n              </Text>\n              <Sheet.Close css={{ color: \"$on_surface_medium\" }}>\n                <CrossIcon />\n              </Sheet.Close>\n            </Sheet.Title>\n            <Box\n              onClick={() => {\n                setOpen(false);\n              }}\n            >\n              <ChatSelector role={selectedRole} peerId={selectedPeer.id} />\n            </Box>\n          </Sheet.Content>\n        </Sheet.Root>\n      ) : null}\n    </>\n  );\n};\n", "import React, { useMemo, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSPeer,\n  HMSPeerType,\n  selectMessagesUnreadCountByPeerID,\n  selectMessagesUnreadCountByRole,\n  selectRemotePeers,\n  selectUnreadHMSMessagesCount,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { CheckIcon, PeopleIcon } from \"@100mslive/react-icons\";\nimport {\n  Box,\n  CSS,\n  Dropdown,\n  Flex,\n  HorizontalDivider,\n  Text,\n  Tooltip,\n} from \"../../..\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { ParticipantSearch } from \"../Footer/ParticipantList\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore\nimport { useSetSubscribedChatSelector } from \"../AppData/useUISettings\";\nimport { useFilteredRoles } from \"../../common/hooks\";\nimport { CHAT_SELECTOR } from \"../../common/constants\";\n\nconst ChatDotIcon = () => {\n  return (\n    <Box css={{ size: \"$6\", bg: \"$primary_default\", mx: \"$2\", r: \"$round\" }} />\n  );\n};\n\nconst SelectorItem = ({\n  value,\n  active,\n  onClick,\n  unreadCount,\n  icon = undefined,\n}: {\n  value: string;\n  active: boolean;\n  onClick: () => void;\n  unreadCount: number;\n  icon?: React.JSX.Element;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const Root = !isMobile\n    ? Dropdown.Item\n    : ({ children, ...rest }: { children: React.ReactNode; css: CSS }) => (\n        <Flex {...rest} css={{ p: \"$6 $8\", ...rest.css }}>\n          {children}\n        </Flex>\n      );\n  return (\n    <Root\n      data-testid=\"chat_members\"\n      css={{ align: \"center\", px: \"$10\", py: \"$4\", bg: \"$surface_default\" }}\n      onClick={onClick}\n    >\n      <Text\n        variant=\"sm\"\n        css={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"$4\",\n          fontWeight: \"$semiBold\",\n          color: \"$on_surface_high\",\n        }}\n      >\n        {icon}\n        {value}\n      </Text>\n      <Flex align=\"center\" css={{ ml: \"auto\", color: \"$on_primary_high\" }}>\n        {unreadCount > 0 && (\n          <Tooltip title={`${unreadCount} unread`}>\n            <Box css={{ mr: active ? \"$3\" : 0 }}>\n              <ChatDotIcon />\n            </Box>\n          </Tooltip>\n        )}\n        {active && <CheckIcon width={16} height={16} />}\n      </Flex>\n    </Root>\n  );\n};\n\nconst SelectorHeader = React.memo(\n  ({\n    isHorizontalDivider = true,\n    children,\n  }: {\n    isHorizontalDivider?: boolean;\n    children: React.ReactNode;\n  }) => {\n    return (\n      <Box css={{ flexShrink: 0 }}>\n        {isHorizontalDivider && <HorizontalDivider space={4} />}\n        <Text\n          variant=\"overline\"\n          css={{\n            p: \"$4 $10\",\n            fontWeight: \"$semiBold\",\n            textTransform: \"uppercase\",\n            color: \"$on_surface_medium\",\n          }}\n        >\n          {children}\n        </Text>\n      </Box>\n    );\n  }\n);\n\nconst Everyone = React.memo(({ active }: { active: boolean }) => {\n  const unreadCount: number = useHMSStore(selectUnreadHMSMessagesCount);\n  const [, setPeerSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.PEER);\n  const [, setRoleSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.ROLE);\n  return (\n    <SelectorItem\n      value=\"Everyone\"\n      icon={<PeopleIcon />}\n      active={active}\n      unreadCount={unreadCount}\n      onClick={() => {\n        setPeerSelector({});\n        setRoleSelector(\"\");\n      }}\n    />\n  );\n});\n\nconst RoleItem = React.memo(\n  ({ role, active }: { role: string; active: boolean }) => {\n    const unreadCount: number = useHMSStore(\n      selectMessagesUnreadCountByRole(role)\n    );\n    const [, setPeerSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.PEER\n    );\n    const [, setRoleSelector] = useSetSubscribedChatSelector(\n      CHAT_SELECTOR.ROLE\n    );\n    return (\n      <SelectorItem\n        value={role}\n        active={active}\n        unreadCount={unreadCount}\n        onClick={() => {\n          setPeerSelector({});\n          setRoleSelector(role);\n        }}\n      />\n    );\n  }\n);\n\nconst PeerItem = ({\n  peerId,\n  name,\n  active,\n}: {\n  name: string;\n  peerId: string;\n  active: boolean;\n}) => {\n  const unreadCount: number = useHMSStore(\n    selectMessagesUnreadCountByPeerID(peerId)\n  );\n  const [, setPeerSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.PEER);\n  const [, setRoleSelector] = useSetSubscribedChatSelector(CHAT_SELECTOR.ROLE);\n\n  return (\n    <SelectorItem\n      value={name}\n      active={active}\n      unreadCount={unreadCount}\n      onClick={() => {\n        setPeerSelector({ id: peerId, name });\n        setRoleSelector(\"\");\n      }}\n    />\n  );\n};\n\nconst VirtualizedSelectItemList = ({\n  peers,\n  selectedRole,\n  selectedPeerId,\n  searchValue,\n  isPublicChatEnabled,\n}: {\n  peers: HMSPeer[];\n  selectedRole: string;\n  selectedPeerId: string;\n  searchValue: string;\n  isPublicChatEnabled: boolean;\n}) => {\n  const roles = useFilteredRoles();\n  const filteredPeers = useMemo(\n    () =>\n      peers.filter(\n        // search should be empty or search phrase should be included in name\n        (peer) =>\n          (!searchValue ||\n            peer.name.toLowerCase().includes(searchValue.toLowerCase())) &&\n          peer.type !== HMSPeerType.SIP\n      ),\n    [peers, searchValue]\n  );\n\n  const listItems = useMemo(() => {\n    let selectItems: React.ReactNode[] = [];\n    if (isPublicChatEnabled && !searchValue) {\n      selectItems = [<Everyone active={!selectedRole && !selectedPeerId} />];\n    }\n    if (roles.length > 0 && !searchValue) {\n      selectItems.push(\n        <SelectorHeader isHorizontalDivider={isPublicChatEnabled}>\n          Roles\n        </SelectorHeader>\n      );\n      roles.forEach((userRole) =>\n        selectItems.push(\n          <RoleItem\n            key={userRole}\n            active={selectedRole === userRole}\n            role={userRole}\n          />\n        )\n      );\n    }\n\n    if (filteredPeers.length > 0) {\n      selectItems.push(\n        <SelectorHeader\n          isHorizontalDivider={isPublicChatEnabled || roles.length > 0}\n        >\n          Participants\n        </SelectorHeader>\n      );\n    }\n    filteredPeers.forEach((peer) =>\n      selectItems.push(\n        <PeerItem\n          key={peer.id}\n          name={peer.name}\n          peerId={peer.id}\n          active={peer.id === selectedPeerId}\n        />\n      )\n    );\n\n    return selectItems;\n  }, [\n    isPublicChatEnabled,\n    searchValue,\n    selectedRole,\n    selectedPeerId,\n    roles,\n    filteredPeers,\n  ]);\n\n  return (\n    <Dropdown.Group\n      css={{ overflowY: \"auto\", maxHeight: \"$64\", bg: \"$surface_default\" }}\n    >\n      {listItems.map((item, index) => (\n        <Box key={index}>{item}</Box>\n      ))}\n    </Dropdown.Group>\n  );\n};\n\nexport const ChatSelector = ({\n  role,\n  peerId,\n}: {\n  role: string;\n  peerId: string;\n}) => {\n  const { elements } = useRoomLayoutConferencingScreen();\n  const peers = useHMSStore(selectRemotePeers);\n  const [search, setSearch] = useState(\"\");\n\n  const isPrivateChatEnabled = !!elements?.chat?.private_chat_enabled;\n  const isPublicChatEnabled = !!elements?.chat?.public_chat_enabled;\n\n  return (\n    <>\n      {peers.length > 0 && isPrivateChatEnabled && (\n        <Box css={{ px: \"$4\" }}>\n          <ParticipantSearch\n            onSearch={setSearch}\n            placeholder=\"Search for participants\"\n          />\n        </Box>\n      )}\n      <VirtualizedSelectItemList\n        selectedRole={role}\n        selectedPeerId={peerId}\n        peers={isPrivateChatEnabled ? peers : []}\n        isPublicChatEnabled={isPublicChatEnabled}\n        searchValue={search}\n      />\n    </>\n  );\n};\n", "import { useCallback } from \"react\";\nimport {\n  selectAppData,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useChatDraftMessage = () => {\n  const hmsActions = useHMSActions();\n  let chatDraftMessage = useHMSStore(selectAppData(APP_DATA.chatDraft));\n  if (chatDraftMessage === undefined || chatDraftMessage === null) {\n    chatDraftMessage = \"\";\n  }\n  const setDraftMessage = useCallback(\n    (message) => {\n      hmsActions.setAppData(APP_DATA.chatDraft, message, true);\n    },\n    [hmsActions]\n  );\n  return [chatDraftMessage, setDraftMessage];\n};\n", "import { useEffect, useRef } from \"react\";\n\nexport const useEmojiPickerStyles = (showing) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    if (showing) {\n      setTimeout(() => {\n        const root = ref.current?.querySelector(\"em-emoji-picker\")?.shadowRoot;\n        const style = document.createElement(\"style\");\n        style.textContent = `\n          #root {\n            --em-rgb-color: var(--hms-ui-colors-on_surface_high);\n            --em-rgb-input: var(--hms-ui-colors-on_primary_high);\n            --em-color-border: var(--hms-ui-colors-surface_bright);\n            --color-b: var(--hms-ui-colors-on_surface_high);\n            --rgb-background: transparent;\n            color: var(--hms-ui-colors-on_surface_high);\n            font-family: var(--hms-ui-fonts-sans);\n          }\n          .sticky {\n            top: 0.25rem;\n            background-color: var(--hms-ui-colors-surface_bright);\n            margin-top: 0.5rem;\n          }\n        `;\n        root?.appendChild(style);\n      }, 0);\n    }\n  }, [showing]);\n\n  return ref;\n};\n", "import React, { useCallback } from \"react\";\nimport {\n  selectLocalPeer,\n  selectSessionStore,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { Button } from \"../../../Button\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsPeerBlacklisted } from \"../hooks/useChatBlacklist\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nexport const ChatPaused = () => {\n  const hmsActions = useHMSActions();\n  const { elements } = useRoomLayoutConferencingScreen();\n  const can_disable_chat =\n    !!elements?.chat?.real_time_controls?.can_disable_chat;\n  const { enabled: isChatEnabled = true, updatedBy: chatStateUpdatedBy = \"\" } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n\n  const localPeer = useHMSStore(selectLocalPeer);\n\n  const unPauseChat = useCallback(\n    async () =>\n      await hmsActions.sessionStore.set(SESSION_STORE_KEY.CHAT_STATE, {\n        enabled: true,\n        updatedBy: {\n          userName: localPeer?.name,\n          userId: localPeer?.customerUserId,\n          peerId: localPeer?.id,\n        },\n        updatedAt: Date.now(),\n      }),\n    [hmsActions, localPeer]\n  );\n\n  return isChatEnabled ? null : (\n    <Flex\n      align=\"center\"\n      justify=\"between\"\n      css={{\n        borderRadius: \"$1\",\n        bg: \"$surface_default\",\n        p: \"$2 $4 $2 $8\",\n        w: \"100%\",\n      }}\n    >\n      <Box>\n        <Text\n          variant=\"sm\"\n          css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}\n        >\n          Chat paused\n        </Text>\n        <Text\n          variant=\"xs\"\n          css={{\n            color: \"$on_surface_medium\",\n            maxWidth: \"100%\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n          }}\n        >\n          Chat has been paused by{\" \"}\n          {chatStateUpdatedBy?.peerId === localPeer?.id\n            ? \"you\"\n            : chatStateUpdatedBy?.userName}\n        </Text>\n      </Box>\n      {can_disable_chat ? (\n        <Button\n          css={{ fontWeight: \"$semiBold\", fontSize: \"$sm\", borderRadius: \"$2\" }}\n          onClick={unPauseChat}\n        >\n          Resume\n        </Button>\n      ) : (\n        <></>\n      )}\n    </Flex>\n  );\n};\n\nexport const ChatBlocked = () => {\n  const isLocalPeerBlacklisted = useIsPeerBlacklisted({ local: true });\n  if (!isLocalPeerBlacklisted) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"between\"\n      css={{\n        borderRadius: \"$1\",\n        bg: \"$surface_default\",\n        p: \"$4 $4 $4 $8\",\n        w: \"100%\",\n      }}\n    >\n      <Text\n        variant=\"sm\"\n        css={{ color: \"$on_surface_medium\", textAlign: \"center\", w: \"100%\" }}\n      >\n        You've been blocked from sending messages\n      </Text>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { useMedia } from \"react-use\";\nimport { selectSessionStore, useHMSStore } from \"@100mslive/react-sdk\";\nimport { PinIcon, UnpinIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { ArrowNavigation } from \"./ArrowNavigation\";\n// @ts-ignore\nimport { AnnotisedMessage } from \"./ChatBody\";\nimport { StickIndicator } from \"./StickIndicator\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { usePinnedMessages } from \"../hooks/usePinnedMessages\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst PINNED_MESSAGE_LENGTH = 75;\n\nexport const PinnedMessage = () => {\n  const pinnedMessages = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.PINNED_MESSAGES)\n  );\n  const [pinnedMessageIndex, setPinnedMessageIndex] = useState(0);\n  const { removePinnedMessage } = usePinnedMessages();\n  const isMobile = useMedia(cssConfig.media.md);\n\n  const { elements } = useRoomLayoutConferencingScreen();\n  const canUnpinMessage = !!elements?.chat?.allow_pinning_messages;\n\n  const [hideOverflow, setHideOverflow] = useState(true);\n  const currentPinnedMessage = pinnedMessages?.[pinnedMessageIndex]?.text || \"\";\n  const canOverflow = currentPinnedMessage.length > PINNED_MESSAGE_LENGTH;\n\n  const showPreviousPinnedMessage = () => {\n    const previousIndex = Math.max(pinnedMessageIndex - 1, 0);\n    setHideOverflow(\n      pinnedMessages[previousIndex].text.length > PINNED_MESSAGE_LENGTH\n    );\n    setPinnedMessageIndex(previousIndex);\n  };\n\n  const showNextPinnedMessage = () => {\n    const nextIndex = Math.min(\n      pinnedMessageIndex + 1,\n      pinnedMessages.length - 1\n    );\n    setHideOverflow(\n      pinnedMessages[nextIndex].text.length > PINNED_MESSAGE_LENGTH\n    );\n    setPinnedMessageIndex(nextIndex);\n  };\n\n  const swipeHandlers = useSwipeable({\n    onSwipedUp: () => showNextPinnedMessage(),\n    onSwipedDown: () => showPreviousPinnedMessage(),\n  });\n\n  // Scenario: User is on a particular index but an earlier message is removed by another peer\n  useEffect(() => {\n    const count = pinnedMessages?.length || 1;\n    if (pinnedMessageIndex >= count) {\n      setPinnedMessageIndex(count - 1);\n    }\n  }, [pinnedMessageIndex, pinnedMessages]);\n\n  if (!pinnedMessages || pinnedMessages.length === 0) {\n    return null;\n  }\n\n  return (\n    <Flex align=\"center\" css={{ w: \"100%\", gap: \"$4\" }}>\n      {!isMobile ? (\n        <ArrowNavigation\n          index={pinnedMessageIndex}\n          total={pinnedMessages.length}\n          showPrevious={showPreviousPinnedMessage}\n          showNext={showNextPinnedMessage}\n        />\n      ) : null}\n      <Flex\n        css={{\n          p: \"$4\",\n          color: \"$on_surface_high\",\n          bg:\n            isMobile && elements?.chat?.is_overlay\n              ? \"rgba(0, 0, 0, 0.64)\"\n              : \"$surface_brighter\",\n          r: \"$1\",\n          gap: \"$4\",\n          mb: \"$8\",\n          mt: \"$8\",\n          flexGrow: 1,\n          border: \"1px solid $border_bright\",\n        }}\n        align=\"center\"\n        justify=\"between\"\n      >\n        {isMobile ? (\n          <StickIndicator\n            index={pinnedMessageIndex}\n            total={pinnedMessages.length}\n          />\n        ) : null}\n\n        <Box\n          css={{\n            w: \"100%\",\n            maxHeight: \"$18\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            wordBreak: \"break-word\",\n            \"& p span\": {\n              color: \"$primary_default\",\n            },\n          }}\n        >\n          <Text\n            variant=\"sm\"\n            css={{ color: \"$on_surface_high\" }}\n            {...swipeHandlers}\n            title={pinnedMessages[pinnedMessageIndex]?.text}\n          >\n            <AnnotisedMessage\n              message={currentPinnedMessage}\n              length={\n                hideOverflow\n                  ? PINNED_MESSAGE_LENGTH\n                  : currentPinnedMessage.length\n              }\n            />\n            {canOverflow ? (\n              <span\n                style={{ cursor: \"pointer\" }}\n                onClick={() => setHideOverflow((prev) => !prev)}\n              >\n                &nbsp;{hideOverflow ? \"... See more\" : \"Collapse\"}\n              </span>\n            ) : null}\n          </Text>\n        </Box>\n\n        {canUnpinMessage ? (\n          <Flex\n            onClick={() => {\n              removePinnedMessage(pinnedMessageIndex);\n              setPinnedMessageIndex(Math.max(0, pinnedMessageIndex - 1));\n            }}\n            css={{\n              cursor: \"pointer\",\n              color: \"$on_surface_medium\",\n              \"&:hover\": { color: \"$on_surface_high\" },\n              \"&:hover .hide-on-hover\": { display: \"none !important\" },\n              \"&:hover .show-on-hover\": { display: \"block !important\" },\n            }}\n            title=\"Unpin Message\"\n          >\n            <UnpinIcon\n              className=\"show-on-hover\"\n              style={{ display: \"none\" }}\n              height={20}\n              width={20}\n            />\n            <PinIcon\n              className=\"hide-on-hover\"\n              style={{ display: \"block\" }}\n              height={20}\n              width={20}\n            />\n          </Flex>\n        ) : null}\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\n\nexport const ArrowNavigation = ({\n  total,\n  index,\n  showPrevious,\n  showNext,\n}: {\n  total: number;\n  index: number;\n  showPrevious: () => void;\n  showNext: () => void;\n}) => {\n  if (total < 2) {\n    return null;\n  }\n\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$1\" }}>\n      <Flex\n        onClick={showPrevious}\n        css={\n          index === 0\n            ? { cursor: \"not-allowed\", color: \"$on_surface_low\" }\n            : { cursor: \"pointer\", color: \"$on_surface_medium\" }\n        }\n      >\n        <ChevronUpIcon height={20} width={20} />\n      </Flex>\n      <Flex\n        onClick={showNext}\n        css={\n          index === total - 1\n            ? { cursor: \"not-allowed\", color: \"$on_surface_low\" }\n            : { cursor: \"pointer\", color: \"$on_surface_medium\" }\n        }\n      >\n        <ChevronDownIcon height={20} width={20} />\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\n\nexport const StickIndicator = ({\n  total,\n  index,\n}: {\n  total: number;\n  index: number;\n}) => {\n  const sticksCount = Math.min(3, total);\n\n  if (total < 2) {\n    return null;\n  }\n\n  return (\n    <Flex direction=\"column\" css={{ gap: \"$1\" }}>\n      {[...Array(sticksCount)].map((_, i) => (\n        <Box\n          css={{\n            borderLeft: \"2px solid\",\n            height: \"$4\",\n            borderColor: i === index ? \"$on_surface_high\" : \"$on_surface_low\",\n          }}\n        />\n      ))}\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useMeasure } from \"react-use\";\nimport { VariableSizeList } from \"react-window\";\nimport {\n  selectIsConnectedToRoom,\n  useHMSStore,\n  usePaginatedParticipants,\n} from \"@100mslive/react-sdk\";\nimport { ChevronLeftIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { IconButton } from \"../../../IconButton\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Loading } from \"../../../Loading\";\nimport { Text } from \"../../../Text\";\nimport { Participant, ParticipantSearch } from \"./ParticipantList\";\nimport { ItemData, itemKey, ROW_HEIGHT } from \"./RoleAccordion\";\n// @ts-ignore: No implicit Any\nimport { useSidepaneReset } from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { getFormattedCount } from \"../../common/utils\";\n\nconst LoadMoreParticipants = ({\n  hasNext,\n  loadMore,\n  style,\n}: {\n  hasNext: boolean;\n  loadMore: () => Promise<void>;\n  style: React.CSSProperties;\n}) => {\n  const { ref, inView } = useInView();\n  const [inProgress, setInProgress] = useState(false);\n\n  useEffect(() => {\n    if (hasNext && inView && !inProgress) {\n      setInProgress(true);\n      loadMore()\n        .catch(console.error)\n        .finally(() => setInProgress(false));\n    }\n  }, [hasNext, loadMore, inView, inProgress]);\n  return (\n    <Flex ref={ref} style={style} align=\"center\" justify=\"center\">\n      {inProgress ? <Loading size={16} /> : null}\n    </Flex>\n  );\n};\n\nconst VirtualizedParticipantItem = React.memo(\n  ({\n    index,\n    data,\n    style,\n  }: {\n    index: number;\n    data: ItemData & { hasNext: boolean; loadMorePeers: () => Promise<void> };\n    style: React.CSSProperties;\n  }) => {\n    if (!data.peerList[index]) {\n      return (\n        <LoadMoreParticipants\n          hasNext={data.hasNext}\n          loadMore={data.loadMorePeers}\n          style={style}\n        />\n      );\n    }\n    return (\n      <Participant\n        key={data.peerList[index].id}\n        peer={data.peerList[index]}\n        isConnected={data.isConnected}\n        style={style}\n      />\n    );\n  }\n);\n\nexport const PaginatedParticipants = ({\n  roleName,\n  onBack,\n}: {\n  roleName: string;\n  onBack: () => void;\n}) => {\n  const { peers, total, hasNext, loadPeers, loadMorePeers } =\n    usePaginatedParticipants({ role: roleName, limit: 20 });\n  const [search, setSearch] = useState<string>(\"\");\n  const filteredPeers = peers.filter((p) =>\n    p.name?.toLowerCase().includes(search?.toLowerCase())\n  );\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n  const height = ROW_HEIGHT * (filteredPeers.length + 1);\n  const resetSidePane = useSidepaneReset();\n\n  useEffect(() => {\n    loadPeers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Flex ref={ref} direction=\"column\" css={{ size: \"100%\", gap: \"$4\" }}>\n      <Flex align=\"center\">\n        <Flex\n          align=\"center\"\n          css={{ flex: \"1 1 0\", cursor: \"pointer\" }}\n          onClick={onBack}\n        >\n          <ChevronLeftIcon />\n          <Text variant=\"lg\" css={{ flex: \"1 1 0\" }}>\n            Participants\n          </Text>\n        </Flex>\n        <IconButton\n          onClick={(e) => {\n            e.stopPropagation();\n            resetSidePane();\n          }}\n          data-testid=\"close_sidepane\"\n        >\n          <CrossIcon />\n        </IconButton>\n      </Flex>\n      <ParticipantSearch\n        onSearch={(search: string) => setSearch(search)}\n        placeholder={`Search for ${roleName}`}\n      />\n      <Flex\n        direction=\"column\"\n        css={{\n          border: \"1px solid $border_default\",\n          borderRadius: \"$1\",\n          flex: \"1 1 0\",\n        }}\n      >\n        <Flex\n          align=\"center\"\n          css={{\n            height: ROW_HEIGHT,\n            borderBottom: \"1px solid $border_default\",\n            px: \"$8\",\n          }}\n        >\n          <Text css={{ fontSize: \"$space$7\" }}>\n            {roleName}({getFormattedCount(peers.length)}/\n            {getFormattedCount(total)})\n          </Text>\n        </Flex>\n        <Box\n          css={{\n            flex: \"1 1 0\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            mr: \"-$10\",\n          }}\n        >\n          <VariableSizeList\n            itemSize={(index) =>\n              index === filteredPeers.length + 1 ? 16 : ROW_HEIGHT\n            }\n            itemData={{\n              peerList: filteredPeers,\n              hasNext: hasNext(),\n              loadMorePeers,\n              isConnected: isConnected === true,\n            }}\n            itemKey={itemKey}\n            itemCount={filteredPeers.length + 1}\n            width={width}\n            height={height}\n          >\n            {VirtualizedParticipantItem}\n          </VariableSizeList>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport {\n  selectLocalPeer,\n  selectSessionStore,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PauseCircleIcon, SettingsIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../Layout\";\nimport { Popover } from \"../../Popover\";\nimport { Text } from \"../../Text\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { SESSION_STORE_KEY } from \"../common/constants\";\n\nexport const ChatSettings = () => {\n  const hmsActions = useHMSActions();\n  const localPeer = useHMSStore(selectLocalPeer);\n  const { elements } = useRoomLayoutConferencingScreen();\n  const canPauseChat = !!elements?.chat?.real_time_controls?.can_disable_chat;\n  const { enabled: isChatEnabled = true } =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)) || {};\n  const showPause = canPauseChat && isChatEnabled;\n\n  if (!showPause) {\n    return null;\n  }\n\n  return (\n    <Popover.Root>\n      <Popover.Trigger asChild css={{ px: \"$4\" }}>\n        <Flex\n          align=\"center\"\n          css={{\n            color: \"$on_surface_medium\",\n            \"&:hover\": { color: \"$on_surface_high\" },\n            cursor: \"pointer\",\n          }}\n        >\n          <SettingsIcon />\n        </Flex>\n      </Popover.Trigger>\n      <Popover.Portal>\n        <Popover.Content\n          align=\"end\"\n          side=\"bottom\"\n          sideOffset={2}\n          onClick={() => {\n            const chatState = {\n              enabled: false,\n              updatedBy: {\n                peerId: localPeer?.id,\n                userId: localPeer?.customerUserId,\n                userName: localPeer?.name,\n              },\n              updatedAt: Date.now(),\n            };\n            hmsActions.sessionStore.set(\n              SESSION_STORE_KEY.CHAT_STATE,\n              chatState\n            );\n          }}\n          css={{\n            backgroundColor: \"$surface_default\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$4\",\n            borderRadius: \"$1\",\n            color: \"$on_surface_high\",\n            cursor: \"pointer\",\n            \"&:hover\": { backgroundColor: \"$surface_dim\" },\n          }}\n        >\n          <PauseCircleIcon />\n          <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\" }}>\n            Pause Chat\n          </Text>\n        </Popover.Content>\n      </Popover.Portal>\n    </Popover.Root>\n  );\n};\n", "import React, { useCallback, useMemo, useState } from \"react\";\nimport { useMeasure } from \"react-use\";\nimport {\n  selectAudioTrackByPeerID,\n  selectHasPeerHandRaised,\n  selectIsPeerAudioEnabled,\n  selectLocalPeerID,\n  selectPeerMetadata,\n  selectPeerNameByID,\n  selectVideoTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { BrbTileIcon, HandIcon, MicOffIcon } from \"@100mslive/react-icons\";\nimport TileConnection from \"./Connection/TileConnection\";\nimport TileMenu, { isSameTile } from \"./TileMenu/TileMenu\";\nimport { AudioLevel } from \"../../AudioLevel\";\nimport { Avatar } from \"../../Avatar\";\nimport { VideoTileStats } from \"../../Stats\";\nimport { CSS } from \"../../Theme\";\nimport { Video } from \"../../Video\";\nimport { StyledVideoTile } from \"../../VideoTile\";\n// @ts-ignore: No implicit Any\nimport { getVideoTileLabel } from \"./peerTileUtils\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey, useUISettings } from \"./AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { calculateAvatarAndAttribBoxSize } from \"../common/utils\";\nimport { APP_DATA, UI_SETTINGS } from \"../common/constants\";\n\nconst PeerMetadata = ({\n  peerId,\n  size,\n}: {\n  peerId: string;\n  size?: \"medium\" | \"small\";\n}) => {\n  const metaData = useHMSStore(selectPeerMetadata(peerId));\n  const isBRB = metaData?.isBRBOn || false;\n  const isHandRaised = useHMSStore(selectHasPeerHandRaised(peerId));\n\n  return (\n    <>\n      {isHandRaised ? (\n        <StyledVideoTile.AttributeBox\n          size={size}\n          data-testid=\"raiseHand_icon_onTile\"\n        >\n          <HandIcon width={24} height={24} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n      {isBRB ? (\n        <StyledVideoTile.AttributeBox size={size} data-testid=\"brb_icon_onTile\">\n          <BrbTileIcon width={22} height={22} />\n        </StyledVideoTile.AttributeBox>\n      ) : null}\n    </>\n  );\n};\n\nconst Tile = ({\n  peerId = \"\",\n  trackId = \"\",\n  width,\n  height,\n  objectFit = \"cover\",\n  canMinimise = false,\n  isDragabble = false,\n  rootCSS = {},\n  containerCSS = {},\n  enableSpotlightingPeer = true,\n  hideParticipantNameOnTile = false,\n  roundedVideoTile = true,\n  hideAudioMuteOnTile = false,\n  hideMetadataOnTile = false,\n}: {\n  peerId?: string;\n  trackId?: string;\n  width?: string | number;\n  height?: string | number;\n  objectFit?: string;\n  canMinimise?: boolean;\n  isDragabble?: boolean;\n  rootCSS?: CSS;\n  containerCSS?: CSS;\n  enableSpotlightingPeer?: boolean;\n  hideParticipantNameOnTile?: boolean;\n  roundedVideoTile?: boolean;\n  hideAudioMuteOnTile?: boolean;\n  hideMetadataOnTile?: boolean;\n}) => {\n  const trackSelector = trackId\n    ? selectVideoTrackByID(trackId)\n    : selectVideoTrackByPeerID(peerId);\n  const track = useHMSStore(trackSelector);\n  const peerName = useHMSStore(selectPeerNameByID(peerId));\n  const audioTrack = useHMSStore(selectAudioTrackByPeerID(peerId));\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const isAudioMuted = !useHMSStore(selectIsPeerAudioEnabled(peerId));\n  const isVideoMuted = !track?.enabled;\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const isVideoDegraded = track?.degraded;\n  const isLocal = localPeerID === peerId;\n  const [pinnedTrackId] = useSetAppDataByKey(APP_DATA.pinnedTrackId);\n  const pinned = isSameTile({\n    trackId: pinnedTrackId,\n    videoTrackID: track?.id,\n    audioTrackID: audioTrack?.id,\n  });\n  const label = getVideoTileLabel({\n    peerName,\n    track,\n    isLocal,\n  });\n  const onHoverHandler = useCallback((event: React.MouseEvent) => {\n    setIsMouseHovered(event.type === \"mouseenter\");\n  }, []);\n\n  const [ref, { width: calculatedWidth, height: calculatedHeight }] =\n    useMeasure<HTMLDivElement>();\n\n  const isTileBigEnoughToShowStats =\n    calculatedHeight >= 180 && calculatedWidth >= 180;\n\n  const [avatarSize, attribBoxSize] = useMemo(\n    () => calculateAvatarAndAttribBoxSize(calculatedWidth, calculatedHeight),\n    [calculatedWidth, calculatedHeight]\n  );\n\n  return (\n    <StyledVideoTile.Root\n      ref={ref}\n      css={{\n        width,\n        height,\n        ...rootCSS,\n      }}\n      data-testid={`participant_tile_${peerName}`}\n    >\n      {peerName !== undefined ? (\n        <StyledVideoTile.Container\n          onMouseEnter={onHoverHandler}\n          onMouseLeave={onHoverHandler}\n          noRadius={!roundedVideoTile}\n          css={containerCSS}\n        >\n          {showStatsOnTiles && isTileBigEnoughToShowStats ? (\n            <VideoTileStats\n              audioTrackID={audioTrack?.id}\n              videoTrackID={track?.id}\n              peerID={peerId}\n              isLocal={isLocal}\n            />\n          ) : null}\n\n          <Video\n            trackId={track?.id}\n            attach={isLocal ? undefined : !isAudioOnly}\n            mirror={\n              mirrorLocalVideo &&\n              peerId === localPeerID &&\n              track?.source === \"regular\" &&\n              track?.facingMode !== \"environment\"\n            }\n            noRadius={!roundedVideoTile}\n            data-testid=\"participant_video_tile\"\n            css={{\n              objectFit,\n              filter: isVideoDegraded ? \"blur($space$2)\" : undefined,\n              bg: \"transparent\",\n            }}\n          />\n          {calculatedWidth > 0 && calculatedHeight > 0 ? (\n            <>\n              {isVideoMuted || (!isLocal && isAudioOnly) ? (\n                <StyledVideoTile.AvatarContainer>\n                  <Avatar\n                    name={peerName || \"\"}\n                    data-testid=\"participant_avatar_icon\"\n                    size={avatarSize}\n                  />\n                </StyledVideoTile.AvatarContainer>\n              ) : null}\n              {!hideAudioMuteOnTile && isAudioMuted ? (\n                <StyledVideoTile.AudioIndicator\n                  data-testid=\"participant_audio_mute_icon\"\n                  size={attribBoxSize}\n                >\n                  <MicOffIcon />\n                </StyledVideoTile.AudioIndicator>\n              ) : null}\n              {!hideAudioMuteOnTile && !isAudioMuted ? (\n                <StyledVideoTile.AudioIndicator size={attribBoxSize}>\n                  <AudioLevel trackId={audioTrack?.id} size={attribBoxSize} />\n                </StyledVideoTile.AudioIndicator>\n              ) : null}\n              {!hideMetadataOnTile && (\n                <PeerMetadata peerId={peerId} size={attribBoxSize} />\n              )}\n            </>\n          ) : null}\n          {isMouseHovered || (isDragabble && navigator.maxTouchPoints > 0) ? (\n            <TileMenu\n              peerID={peerId}\n              audioTrackID={audioTrack?.id || \"\"}\n              videoTrackID={track?.id || \"\"}\n              canMinimise={canMinimise}\n              enableSpotlightingPeer={enableSpotlightingPeer}\n            />\n          ) : null}\n\n          <TileConnection\n            hideLabel={hideParticipantNameOnTile}\n            name={label}\n            peerId={peerId}\n            width={width}\n            pinned={pinned}\n          />\n        </StyledVideoTile.Container>\n      ) : null}\n    </StyledVideoTile.Root>\n  );\n};\n\nconst VideoTile = React.memo(Tile);\n\nexport default VideoTile;\n", "import React from \"react\";\nimport {\n  HMSPeerType,\n  selectPeerTypeByID,\n  selectScreenShareByPeerID,\n  selectSessionStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  CallIcon,\n  PinIcon,\n  ShareScreenIcon,\n  SpotlightIcon,\n} from \"@100mslive/react-icons\";\nimport { Flex, styled, Text, textEllipsis } from \"../../..\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst TileConnection = ({\n  name,\n  peerId,\n  hideLabel,\n  width,\n  pinned,\n}: {\n  name: string;\n  peerId: string;\n  hideLabel: boolean;\n  width?: string | number;\n  pinned?: boolean;\n}) => {\n  const spotlighted =\n    useHMSStore(selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)) === peerId;\n  const isPeerScreenSharing = !!useHMSStore(selectScreenShareByPeerID(peerId));\n  const peerType = useHMSStore(selectPeerTypeByID(peerId));\n  return (\n    <Wrapper>\n      {!hideLabel ? (\n        <>\n          {name ? (\n            <Flex align=\"center\">\n              {peerType === HMSPeerType.SIP && (\n                <IconWrapper>\n                  <CallIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              {isPeerScreenSharing && (\n                <IconWrapper>\n                  <ShareScreenIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              {pinned && (\n                <IconWrapper>\n                  <PinIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              {spotlighted && (\n                <IconWrapper>\n                  <SpotlightIcon width=\"15\" height=\"15\" />\n                </IconWrapper>\n              )}\n              <Text\n                css={{\n                  c: \"$on_surface_high\",\n                  verticalAlign: \"baseline\",\n                  ...(width ? textEllipsis((width as number) - 60) : {}),\n                }}\n                variant=\"xs\"\n              >\n                {name}\n              </Text>\n            </Flex>\n          ) : null}\n          <ConnectionIndicator isTile peerId={peerId} hideBg />\n        </>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nconst IconWrapper = styled(\"div\", {\n  c: \"$on_surface_high\",\n  ml: \"$3\",\n  mt: \"$1\",\n  display: \"flex\",\n});\n\nconst Wrapper = styled(\"div\", {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  position: \"absolute\",\n  bottom: \"$2\",\n  left: \"$2\",\n  backgroundColor: \"$background_dim\",\n  borderRadius: \"$1\",\n  maxWidth: \"85%\",\n  zIndex: 1,\n  \"& p,span\": {\n    p: \"$2 $3\",\n  },\n});\n\nexport default TileConnection;\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSVideoTrack,\n  selectLocalPeerID,\n  selectPeerByID,\n  selectPermissions,\n  selectTrackByID,\n  selectVideoTrackByPeerID,\n  useHMSStore,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport { CrossIcon, VerticalMenuIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig, useTheme } from \"../../../Theme\";\nimport { StyledMenuTile } from \"../../../TileMenu\";\nimport { ChangeNameModal } from \"../MoreSettings/ChangeNameModal\";\nimport { RoleChangeModal } from \"../RoleChangeModal\";\nimport { TileMenuContent } from \"./TileMenuContent\";\nimport { useDropdownList } from \"../hooks/useDropdownList\";\nimport { getDragClassName } from \"./utils\";\n\n/**\n * Taking peerID as peer won't necesarilly have tracks\n */\nconst TileMenu = ({\n  audioTrackID,\n  videoTrackID,\n  peerID,\n  isScreenshare = false,\n  canMinimise,\n  enableSpotlightingPeer = true,\n}: {\n  audioTrackID: string;\n  videoTrackID: string;\n  peerID: string;\n  isScreenshare?: boolean;\n  canMinimise?: boolean;\n  enableSpotlightingPeer?: boolean;\n}) => {\n  const [open, setOpen] = useState(false);\n  const { theme } = useTheme();\n\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const isLocal = localPeerID === peerID;\n  const { removeOthers } = useHMSStore(selectPermissions) || {};\n  const { setVolume, toggleAudio, toggleVideo } = useRemoteAVToggle(\n    audioTrackID,\n    videoTrackID\n  );\n  const showSpotlight = enableSpotlightingPeer;\n\n  const isPrimaryVideoTrack =\n    useHMSStore(selectVideoTrackByPeerID(peerID))?.id === videoTrackID;\n  const showPinAction = !!(\n    audioTrackID ||\n    (videoTrackID && isPrimaryVideoTrack)\n  );\n\n  const track = useHMSStore(selectTrackByID(videoTrackID)) as HMSVideoTrack;\n  const hideSimulcastLayers =\n    !track?.layerDefinitions?.length || track.degraded || !track.enabled;\n  const isMobile = useMedia(cssConfig.media.md);\n  const peer = useHMSStore(selectPeerByID(peerID));\n  const [showNameChangeModal, setShowNameChangeModal] = useState(false);\n  const [showRoleChangeModal, setShowRoleChangeModal] = useState(false);\n  useDropdownList({ open, name: \"TileMenu\" });\n  const dragClassName = getDragClassName();\n\n  if (\n    !(\n      removeOthers ||\n      toggleAudio ||\n      toggleVideo ||\n      setVolume ||\n      showPinAction\n    ) &&\n    hideSimulcastLayers\n  ) {\n    return null;\n  }\n\n  const openNameChangeModal = () => setShowNameChangeModal(true);\n  const openRoleChangeModal = () => setShowRoleChangeModal(true);\n\n  const props = {\n    isLocal,\n    isScreenshare,\n    audioTrackID,\n    videoTrackID,\n    peerID,\n    isPrimaryVideoTrack,\n    showSpotlight,\n    showPinAction,\n    canMinimise,\n    openNameChangeModal,\n    openRoleChangeModal,\n  };\n\n  return (\n    <>\n      <StyledMenuTile.Root open={open} onOpenChange={setOpen}>\n        <StyledMenuTile.Trigger\n          data-testid=\"participant_menu_btn\"\n          css={{\n            bg: `${theme.colors.background_dim.value}A3`,\n            p: \"$2\",\n            w: \"unset\",\n            h: \"unset\",\n          }}\n          onClick={(e) => e.stopPropagation()}\n          className={dragClassName}\n        >\n          <VerticalMenuIcon width={20} height={20} />\n        </StyledMenuTile.Trigger>\n\n        {isMobile ? (\n          <Sheet.Root open={open} onOpenChange={setOpen}>\n            <Sheet.Content css={{ bg: \"$surface_dim\", pt: \"$8\" }}>\n              <Flex\n                css={{\n                  color: \"$on_surface_high\",\n                  display: \"flex\",\n                  w: \"100%\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  px: \"$10\",\n                  pb: \"$8\",\n                  borderBottom: \"1px solid $border_default\",\n                }}\n              >\n                <Box>\n                  <Text\n                    css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n                  >\n                    {peer?.name}\n                    {isLocal ? ` (You)` : null}\n                  </Text>\n                  {peer?.roleName ? (\n                    <Text\n                      variant=\"xs\"\n                      css={{ color: \"$on_surface_low\", mt: \"$2\" }}\n                    >\n                      {peer.roleName}\n                    </Text>\n                  ) : null}\n                </Box>\n\n                <Sheet.Close css={{ color: \"inherit\" }}>\n                  <CrossIcon />\n                </Sheet.Close>\n              </Flex>\n              <Box\n                css={{\n                  px: \"$8\",\n                  pb: \"$8\",\n                  maxHeight: \"80vh\",\n                  overflowY: \"auto\",\n                }}\n              >\n                <TileMenuContent\n                  {...props}\n                  closeSheetOnClick={() => setOpen(false)}\n                />\n              </Box>\n            </Sheet.Content>\n          </Sheet.Root>\n        ) : (\n          <StyledMenuTile.Content\n            side=\"top\"\n            align=\"end\"\n            css={{ maxHeight: \"$80\", overflowY: \"auto\" }}\n          >\n            <TileMenuContent {...props} />\n          </StyledMenuTile.Content>\n        )}\n      </StyledMenuTile.Root>\n      {showNameChangeModal && (\n        <ChangeNameModal onOpenChange={setShowNameChangeModal} />\n      )}\n      {showRoleChangeModal && (\n        <RoleChangeModal\n          peerId={peerID}\n          onOpenChange={setShowRoleChangeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport { isSameTile } from \"./TileMenuContent\";\n\nexport default TileMenu;\n", "import React, { Fragment } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSException,\n  HMSSimulcastLayerDefinition,\n  HMSTrackID,\n  HMSVideoTrack,\n  selectAvailableRoleNames,\n  selectPermissions,\n  selectSessionStore,\n  selectTrackByID,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n  useRemoteAVToggle,\n} from \"@100mslive/react-sdk\";\nimport {\n  MicOffIcon,\n  MicOnIcon,\n  PencilIcon,\n  PersonSettingsIcon,\n  PinIcon,\n  RemoveUserIcon,\n  ShareScreenIcon,\n  ShrinkIcon,\n  SpeakerIcon,\n  StarIcon,\n  VideoOffIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Slider } from \"../../../Slider\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { StyledMenuTile } from \"../../../TileMenu\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\n// @ts-ignore\nimport { useDropdownSelection } from \"../hooks/useDropdownSelection\";\nimport { getDragClassName } from \"./utils\";\nimport {\n  APP_DATA,\n  REMOTE_STOP_SCREENSHARE_TYPE,\n  SESSION_STORE_KEY,\n} from \"../../common/constants\";\n\nexport const isSameTile = ({\n  trackId,\n  videoTrackID,\n  audioTrackID,\n}: {\n  trackId: HMSTrackID;\n  videoTrackID?: string;\n  audioTrackID?: string;\n}) =>\n  !!trackId &&\n  ((!!videoTrackID && videoTrackID === trackId) ||\n    (!!audioTrackID && audioTrackID === trackId));\n\nconst spacingCSS = {\n  \"@md\": { my: \"$8\", fontWeight: \"$semiBold\", fontSize: \"sm\" },\n};\n\nconst SpotlightActions = ({\n  peerId,\n  onSpotLightClick = () => {\n    return;\n  },\n}: {\n  peerId: string;\n  onSpotLightClick: () => void;\n}) => {\n  const hmsActions = useHMSActions();\n  const spotlightPeerId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const isTileSpotlighted = spotlightPeerId === peerId;\n  const dragClassName = getDragClassName();\n\n  const setSpotlightPeerId = (peerIdToSpotlight?: string) =>\n    hmsActions.sessionStore\n      .set(SESSION_STORE_KEY.SPOTLIGHT, peerIdToSpotlight)\n      .catch((err: HMSException) =>\n        ToastManager.addToast({ title: err.description })\n      );\n\n  return (\n    <StyledMenuTile.ItemButton\n      className={dragClassName}\n      css={spacingCSS}\n      onClick={() => {\n        if (isTileSpotlighted) {\n          setSpotlightPeerId();\n        } else {\n          setSpotlightPeerId(peerId);\n        }\n        onSpotLightClick();\n      }}\n    >\n      <StarIcon height={20} width={20} />\n      <span>\n        {isTileSpotlighted\n          ? \"Remove from Spotlight\"\n          : \"Spotlight Tile for everyone\"}\n      </span>\n    </StyledMenuTile.ItemButton>\n  );\n};\n\nconst PinActions = ({\n  audioTrackID,\n  videoTrackID,\n}: {\n  videoTrackID: string;\n  audioTrackID: string;\n}) => {\n  const [pinnedTrackId, setPinnedTrackId] = useSetAppDataByKey(\n    APP_DATA.pinnedTrackId\n  );\n  const dragClassName = getDragClassName();\n\n  const isTilePinned = isSameTile({\n    trackId: pinnedTrackId,\n    videoTrackID,\n    audioTrackID,\n  });\n\n  return (\n    <>\n      <StyledMenuTile.ItemButton\n        className={dragClassName}\n        css={spacingCSS}\n        onClick={() =>\n          isTilePinned\n            ? setPinnedTrackId()\n            : setPinnedTrackId(videoTrackID || audioTrackID)\n        }\n      >\n        <PinIcon height={20} width={20} />\n        <span>{isTilePinned ? \"Unpin\" : \"Pin\"} Tile for myself</span>\n      </StyledMenuTile.ItemButton>\n    </>\n  );\n};\n\nconst MinimiseInset = () => {\n  const [minimised, setMinimised] = useSetAppDataByKey(APP_DATA.minimiseInset);\n  const dragClassName = getDragClassName();\n\n  return (\n    <>\n      <StyledMenuTile.ItemButton\n        className={dragClassName}\n        css={spacingCSS}\n        onClick={() => setMinimised(!minimised)}\n      >\n        <ShrinkIcon height={20} width={20} />\n        <span>{minimised ? \"Show\" : \"Minimise\"} your video</span>\n      </StyledMenuTile.ItemButton>\n    </>\n  );\n};\n\nconst SimulcastLayers = ({ trackId }: { trackId: HMSTrackID }) => {\n  const track: HMSVideoTrack = useHMSStore(\n    selectTrackByID(trackId)\n  ) as HMSVideoTrack;\n  const actions = useHMSActions();\n  const bg = useDropdownSelection();\n  if (!track?.layerDefinitions?.length || track.degraded || !track.enabled) {\n    return null;\n  }\n  const currentLayer = track.layerDefinitions.find(\n    (layer: HMSSimulcastLayerDefinition) => layer.layer === track.layer\n  );\n  const dragClassName = getDragClassName();\n  return (\n    <Fragment>\n      <StyledMenuTile.ItemButton\n        className={dragClassName}\n        css={{ color: \"$on_surface_medium\", cursor: \"default\" }}\n      >\n        Select maximum resolution\n      </StyledMenuTile.ItemButton>\n      {track.layerDefinitions.map((layer: HMSSimulcastLayerDefinition) => {\n        return (\n          <StyledMenuTile.ItemButton\n            className={dragClassName}\n            key={layer.layer}\n            onClick={async () => {\n              await actions.setPreferredLayer(trackId, layer.layer);\n            }}\n            css={{\n              justifyContent: \"space-between\",\n              bg: track.preferredLayer === layer.layer ? bg : undefined,\n              \"&:hover\": {\n                bg: track.preferredLayer === layer.layer ? bg : undefined,\n              },\n            }}\n          >\n            <Text\n              as=\"span\"\n              css={{\n                textTransform: \"capitalize\",\n                mr: \"$2\",\n                fontWeight:\n                  track.preferredLayer === layer.layer\n                    ? \"$semiBold\"\n                    : \"$regular\",\n                color:\n                  track.preferredLayer === layer.layer\n                    ? \"$on_primary_high\"\n                    : \"$on_surface_high\",\n              }}\n            >\n              {layer.layer}\n            </Text>\n            <Text\n              as=\"span\"\n              variant=\"xs\"\n              css={{\n                color:\n                  track.preferredLayer === layer.layer\n                    ? \"$on_primary_high\"\n                    : \"$on_surface_high\",\n              }}\n            >\n              {layer.resolution.width}x{layer.resolution.height}\n            </Text>\n          </StyledMenuTile.ItemButton>\n        );\n      })}\n      <StyledMenuTile.ItemButton className={dragClassName}>\n        <Text as=\"span\" variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n          Currently streaming:\n          <Text\n            as=\"span\"\n            variant=\"xs\"\n            css={{\n              fontWeight: \"$semiBold\",\n              textTransform: \"capitalize\",\n              color: \"$on_surface_medium\",\n              ml: \"$2\",\n            }}\n          >\n            {currentLayer ? (\n              <>\n                {track.layer} ({currentLayer.resolution.width}x\n                {currentLayer.resolution.height})\n              </>\n            ) : (\n              \"-\"\n            )}\n          </Text>\n        </Text>\n      </StyledMenuTile.ItemButton>\n    </Fragment>\n  );\n};\n\nexport const TileMenuContent = ({\n  videoTrackID,\n  audioTrackID,\n  isLocal,\n  isScreenshare,\n  showSpotlight,\n  showPinAction,\n  peerID,\n  canMinimise,\n  closeSheetOnClick = () => {\n    return;\n  },\n  openNameChangeModal = () => {\n    return;\n  },\n  openRoleChangeModal = () => {\n    return;\n  },\n}: {\n  videoTrackID: string;\n  audioTrackID: string;\n  isLocal: boolean;\n  isScreenshare: boolean;\n  showSpotlight: boolean;\n  showPinAction: boolean;\n  peerID: string;\n  canMinimise?: boolean;\n  closeSheetOnClick?: () => void;\n  openNameChangeModal?: () => void;\n  openRoleChangeModal?: () => void;\n}) => {\n  const actions = useHMSActions();\n  const dragClassName = getDragClassName();\n  const permissions = useHMSStore(selectPermissions);\n  const canChangeRole = !!permissions?.changeRole;\n  const removeOthers = !!permissions?.removeOthers;\n  const { userName } = useHMSPrebuiltContext();\n  const roles = useHMSStore(selectAvailableRoleNames);\n\n  const {\n    isAudioEnabled,\n    isVideoEnabled,\n    setVolume,\n    toggleAudio,\n    toggleVideo,\n    volume,\n  } = useRemoteAVToggle(audioTrackID, videoTrackID);\n\n  const { sendEvent } = useCustomEvent({\n    type: REMOTE_STOP_SCREENSHARE_TYPE,\n  });\n\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (isLocal) {\n    return showPinAction || canMinimise || !userName || showSpotlight ? (\n      <>\n        {showPinAction && (\n          <PinActions audioTrackID={audioTrackID} videoTrackID={videoTrackID} />\n        )}\n        {showSpotlight && (\n          <SpotlightActions\n            peerId={peerID}\n            onSpotLightClick={() => closeSheetOnClick()}\n          />\n        )}\n        {canMinimise && <MinimiseInset />}\n        {!userName && (\n          <StyledMenuTile.ItemButton\n            className={dragClassName}\n            onClick={() => {\n              openNameChangeModal();\n              closeSheetOnClick();\n            }}\n          >\n            <PencilIcon height={20} width={20} />\n            <Text\n              variant=\"sm\"\n              css={{\n                \"@md\": { fontWeight: \"$semiBold\" },\n                c: \"$on_surface_high\",\n              }}\n            >\n              Change Name\n            </Text>\n          </StyledMenuTile.ItemButton>\n        )}\n      </>\n    ) : null;\n  }\n\n  return (\n    <>\n      {toggleVideo ? (\n        <StyledMenuTile.ItemButton\n          className={dragClassName}\n          css={spacingCSS}\n          onClick={() => {\n            toggleVideo();\n            closeSheetOnClick();\n          }}\n          data-testid={\n            isVideoEnabled\n              ? \"mute_video_participant_btn\"\n              : \"unmute_video_participant_btn\"\n          }\n        >\n          {isVideoEnabled ? (\n            <VideoOnIcon height={20} width={20} />\n          ) : (\n            <VideoOffIcon height={20} width={20} />\n          )}\n          <span>\n            {isVideoEnabled ? \"Mute Video\" : \"Request to Unmute Video\"}\n          </span>\n        </StyledMenuTile.ItemButton>\n      ) : null}\n\n      {toggleAudio ? (\n        <StyledMenuTile.ItemButton\n          css={spacingCSS}\n          className={dragClassName}\n          onClick={() => {\n            toggleAudio();\n            closeSheetOnClick();\n          }}\n          data-testid={\n            isAudioEnabled\n              ? \"mute_audio_participant_btn\"\n              : \"unmute_audio_participant_btn\"\n          }\n        >\n          {isAudioEnabled ? (\n            <MicOnIcon height={20} width={20} />\n          ) : (\n            <MicOffIcon height={20} width={20} />\n          )}\n          <span>\n            {isAudioEnabled ? \"Mute Audio\" : \"Request to Unmute Audio\"}\n          </span>\n        </StyledMenuTile.ItemButton>\n      ) : null}\n\n      {canChangeRole && roles.length > 1 ? (\n        <StyledMenuTile.ItemButton\n          className={dragClassName}\n          css={spacingCSS}\n          onClick={() => {\n            openRoleChangeModal();\n            closeSheetOnClick();\n          }}\n          data-testid=\"change_role_btn\"\n        >\n          <PersonSettingsIcon height={20} width={20} />\n          <span>Switch Role</span>\n        </StyledMenuTile.ItemButton>\n      ) : null}\n\n      {audioTrackID ? (\n        <StyledMenuTile.VolumeItem\n          data-testid=\"participant_volume_slider\"\n          css={{ ...spacingCSS, mb: \"$0\" }}\n        >\n          <Flex align=\"center\" gap={1}>\n            <SpeakerIcon height={20} width={20} />\n            <Box as=\"span\" css={{ ml: \"$4\" }}>\n              Volume ({volume})\n            </Box>\n          </Flex>\n          <Slider\n            css={{ my: \"0.5rem\" }}\n            step={5}\n            value={[typeof volume === \"number\" ? volume : 100]}\n            onValueChange={(e) => setVolume?.(e[0])}\n          />\n        </StyledMenuTile.VolumeItem>\n      ) : null}\n\n      {showPinAction && (\n        <>\n          <PinActions audioTrackID={audioTrackID} videoTrackID={videoTrackID} />\n          {showSpotlight && (\n            <SpotlightActions\n              peerId={peerID}\n              onSpotLightClick={() => closeSheetOnClick()}\n            />\n          )}\n        </>\n      )}\n\n      {isMobile ? null : <SimulcastLayers trackId={videoTrackID} />}\n\n      {removeOthers ? (\n        <StyledMenuTile.RemoveItem\n          css={{ ...spacingCSS, borderTop: \"none\" }}\n          onClick={async () => {\n            try {\n              await actions.removePeer(peerID, \"\");\n            } catch (error) {\n              // TODO: Toast here\n            }\n            closeSheetOnClick();\n          }}\n          data-testid=\"remove_participant_btn\"\n        >\n          <RemoveUserIcon height={20} width={20} />\n          <span>Remove Participant</span>\n        </StyledMenuTile.RemoveItem>\n      ) : null}\n\n      {removeOthers && isScreenshare ? (\n        <StyledMenuTile.RemoveItem\n          onClick={() => {\n            sendEvent({});\n            closeSheetOnClick();\n          }}\n          css={spacingCSS}\n        >\n          <ShareScreenIcon height={20} width={20} />\n          <span>Stop Screenshare</span>\n        </StyledMenuTile.RemoveItem>\n      ) : null}\n    </>\n  );\n};\n", "/**\n * Add __cancel-drag-event for the menu to open on touch devices on the draggdable element\n *\n */\nexport const getDragClassName = () => {\n  return navigator?.maxTouchPoints > 0 ? \"__cancel-drag-event\" : \"\";\n};\n", "const PEER_NAME_PLACEHOLDER = \"peerName\";\nconst labelMap = new Map([\n  [[true, \"screen\"].toString(), \"Your Screen\"],\n  [[true, \"regular\"].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, \"screen\"].toString(), `${PEER_NAME_PLACEHOLDER}'s Screen`],\n  [[false, \"regular\"].toString(), PEER_NAME_PLACEHOLDER],\n  [[true, undefined].toString(), `You (${PEER_NAME_PLACEHOLDER})`],\n  [[false, undefined].toString(), `${PEER_NAME_PLACEHOLDER}`],\n]);\n\nexport const getVideoTileLabel = ({ peerName, isLocal, track }) => {\n  const isPeerPresent = peerName !== undefined;\n  if (!isPeerPresent || !track) {\n    // for peers with only audio track\n    return isPeerPresent\n      ? labelMap\n          .get([isLocal, undefined].toString())\n          .replace(PEER_NAME_PLACEHOLDER, peerName)\n      : \"\";\n  }\n  const isLocallyMuted = track.volume === 0;\n  // Map [isLocal, videoSource] to the label to be displayed.\n  let label = labelMap.get([isLocal, track.source].toString());\n  if (label) {\n    label = label.replace(PEER_NAME_PLACEHOLDER, peerName);\n  } else {\n    label = `${peerName} ${track.source}`;\n  }\n  // label = `${label}${track.degraded ? '(Degraded)' : ''}`;\n  return `${label}${isLocallyMuted ? \" (Muted for you)\" : \"\"}`;\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSMediaStreamPlugin,\n  selectAppData,\n  selectEffectsKey,\n  selectIsEffectsEnabled,\n  selectLocalPeerRole,\n} from \"@100mslive/hms-video-store\";\n// Open issue with eslint-plugin-import https://github.com/import-js/eslint-plugin-import/issues/1810\n// eslint-disable-next-line\nimport {\n  HMSVBPlugin,\n  HMSVirtualBackgroundTypes,\n} from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport { VirtualBackgroundMedia } from \"@100mslive/types-prebuilt/elements/virtual_background\";\nimport {\n  HMSRoomState,\n  selectIsLargeRoom,\n  selectIsLocalVideoEnabled,\n  selectIsLocalVideoPluginPresent,\n  selectLocalPeer,\n  selectRoomState,\n  selectVideoTrackByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BlurPersonHighIcon,\n  CrossCircleIcon,\n  CrossIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  Box,\n  config as cssConfig,\n  Flex,\n  Loading,\n  Slider,\n  Video,\n} from \"../../../index\";\nimport { Text } from \"../../../Text\";\nimport { VBCollection } from \"./VBCollection\";\nimport { VBHandler } from \"./VBHandler\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../AppData/useSidepane\";\nimport { useSidepaneResetOnLayoutUpdate } from \"../AppData/useSidepaneResetOnLayoutUpdate\";\n// @ts-ignore\nimport { useSetAppDataByKey, useUISettings } from \"../AppData/useUISettings\";\nimport {\n  APP_DATA,\n  SIDE_PANE_OPTIONS,\n  UI_SETTINGS,\n} from \"../../common/constants\";\n\nconst iconDims = { height: \"40px\", width: \"40px\" };\n\nexport const VBPicker = ({\n  backgroundMedia = [],\n}: {\n  backgroundMedia: VirtualBackgroundMedia[];\n}) => {\n  const toggleVB = useSidepaneToggle(SIDE_PANE_OPTIONS.VB);\n  const hmsActions = useHMSActions();\n  const localPeer = useHMSStore(selectLocalPeer);\n  const role = useHMSStore(selectLocalPeerRole);\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n  const mirrorLocalVideo = useUISettings(UI_SETTINGS.mirrorLocalVideo);\n  const trackSelector = selectVideoTrackByID(localPeer?.videoTrack);\n  const track = useHMSStore(trackSelector);\n  const [blurAmount, setBlurAmount] = useState(\n    VBHandler.getBlurAmount() || 0.5\n  );\n  const roomState = useHMSStore(selectRoomState);\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n  const isEffectsSupported = VBHandler.isEffectsSupported();\n  const isEffectsEnabled = useHMSStore(selectIsEffectsEnabled);\n  const effectsKey = useHMSStore(selectEffectsKey);\n  const isMobile = useMedia(cssConfig.media.md);\n  const [loadingEffects, setLoadingEffects] = useSetAppDataByKey(\n    APP_DATA.loadingEffects\n  );\n  const isPluginAdded = useHMSStore(\n    selectIsLocalVideoPluginPresent(VBHandler?.getName() || \"\")\n  );\n  const background = useHMSStore(selectAppData(APP_DATA.background));\n  const mediaList = backgroundMedia.map(\n    (media: VirtualBackgroundMedia) => media.url || \"\"\n  );\n  const pluginLoadingRef = useRef(false);\n\n  const inPreview = roomState === HMSRoomState.Preview;\n  // Hidden in preview as the effect will be visible in the preview tile\n  const showVideoTile = isVideoOn && isLargeRoom && !inPreview;\n\n  useEffect(() => {\n    const addHMSVBPlugin = async () => {\n      setLoadingEffects(false);\n      if (!role) {\n        return;\n      }\n      await VBHandler.initialisePlugin();\n      await hmsActions.addPluginToVideoTrack(\n        VBHandler.getVBObject() as HMSVBPlugin,\n        Math.floor(role.publishParams.video.frameRate / 2)\n      );\n    };\n    const initializeVirtualBackground = async () => {\n      if (!track?.id || pluginLoadingRef.current || isPluginAdded) {\n        return;\n      }\n\n      try {\n        pluginLoadingRef.current = true;\n        if (isEffectsEnabled && isEffectsSupported && effectsKey) {\n          setLoadingEffects(true);\n          await VBHandler.initialisePlugin(effectsKey, () => {\n            setLoadingEffects(false);\n          });\n          const vbInstance = VBHandler.getVBObject();\n          if (vbInstance.getName() === \"HMSEffects\") {\n            hmsActions.addPluginsToVideoStream([\n              VBHandler.getVBObject() as HMSMediaStreamPlugin,\n            ]);\n          } else {\n            await addHMSVBPlugin();\n          }\n        } else {\n          await addHMSVBPlugin();\n        }\n\n        const handleDefaultBackground = async () => {\n          switch (background) {\n            case HMSVirtualBackgroundTypes.NONE:\n              break;\n            case HMSVirtualBackgroundTypes.BLUR:\n              await VBHandler.setBlur(blurAmount);\n              break;\n            default:\n              await VBHandler.setBackground(background);\n          }\n        };\n\n        await handleDefaultBackground();\n      } catch (error) {\n        console.error(\"Error initializing virtual background:\", error);\n        setLoadingEffects(false);\n      }\n    };\n\n    initializeVirtualBackground();\n  }, [\n    hmsActions,\n    role,\n    isPluginAdded,\n    isEffectsEnabled,\n    isEffectsSupported,\n    effectsKey,\n    track?.id,\n    background,\n    blurAmount,\n    setLoadingEffects,\n  ]);\n\n  useEffect(() => {\n    if (!isVideoOn) {\n      toggleVB();\n    }\n    return () => setLoadingEffects(false);\n  }, [isVideoOn, setLoadingEffects, toggleVB]);\n\n  useSidepaneResetOnLayoutUpdate(\"virtual_background\", SIDE_PANE_OPTIONS.VB);\n\n  return (\n    <Flex css={{ pr: \"$6\", size: \"100%\" }} direction=\"column\">\n      <Flex\n        align=\"center\"\n        justify=\"between\"\n        css={{ w: \"100%\", background: \"$surface_dim\", pb: \"$4\" }}\n      >\n        <Text\n          variant=\"h6\"\n          css={{\n            color: \"$on_surface_high\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          Virtual Background{\" \"}\n          {isMobile && loadingEffects ? (\n            <Loading size={18} style={{ marginLeft: \"0.5rem\" }} />\n          ) : (\n            \"\"\n          )}\n        </Text>\n        <Box\n          css={{\n            color: \"$on_surface_high\",\n            \"&:hover\": { color: \"$on_surface_medium\" },\n            cursor: \"pointer\",\n          }}\n          onClick={toggleVB}\n        >\n          <CrossIcon />\n        </Box>\n      </Flex>\n\n      {showVideoTile ? (\n        <Video\n          mirror={track?.facingMode !== \"environment\" && mirrorLocalVideo}\n          trackId={localPeer?.videoTrack}\n          data-testid=\"preview_tile\"\n          css={{ width: \"100%\", height: \"16rem\" }}\n        />\n      ) : null}\n      <Box\n        css={{\n          mt: \"$4\",\n          overflowY: \"auto\",\n          flex: \"1 1 0\",\n          mr: \"-$10\",\n          pr: \"$10\",\n        }}\n      >\n        <VBCollection\n          title=\"Effects\"\n          options={[\n            {\n              title: \"No effect\",\n              icon: <CrossCircleIcon style={iconDims} />,\n              value: HMSVirtualBackgroundTypes.NONE,\n              onClick: async () => {\n                await VBHandler.removeEffects();\n                hmsActions.setAppData(\n                  APP_DATA.background,\n                  HMSVirtualBackgroundTypes.NONE\n                );\n              },\n              supported: true,\n            },\n            {\n              title: \"Blur\",\n              icon: <BlurPersonHighIcon style={iconDims} />,\n              value: HMSVirtualBackgroundTypes.BLUR,\n              onClick: async () => {\n                await VBHandler?.setBlur(blurAmount);\n                hmsActions.setAppData(\n                  APP_DATA.background,\n                  HMSVirtualBackgroundTypes.BLUR\n                );\n              },\n              supported: isEffectsSupported && isEffectsEnabled,\n            },\n          ]}\n          activeBackground={background}\n        />\n\n        {/* Slider */}\n        <Flex direction=\"column\" css={{ w: \"100%\", gap: \"$8\", mt: \"$8\" }}>\n          {background === HMSVirtualBackgroundTypes.BLUR &&\n          isEffectsEnabled &&\n          effectsKey ? (\n            <Box>\n              <Text\n                variant=\"sm\"\n                css={{\n                  color: \"$on_surface_high\",\n                  fontWeight: \"$semiBold\",\n                  mb: \"$4\",\n                }}\n              >\n                Blur intensity\n              </Text>\n              <Flex\n                css={{\n                  w: \"100%\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  gap: \"$4\",\n                }}\n              >\n                <Text\n                  variant=\"caption\"\n                  css={{ fontWeight: \"$medium\", color: \"$on_surface_medium\" }}\n                >\n                  Low\n                </Text>\n                <Slider\n                  showTooltip={false}\n                  value={[blurAmount]}\n                  onValueChange={async (e) => {\n                    setBlurAmount(e[0]);\n                    await VBHandler.setBlur(e[0]);\n                  }}\n                  step={0.1}\n                  min={0.1}\n                  max={1}\n                />\n                <Text\n                  variant=\"caption\"\n                  css={{ fontWeight: \"$medium\", color: \"$on_surface_medium\" }}\n                >\n                  High\n                </Text>\n              </Flex>\n            </Box>\n          ) : null}\n        </Flex>\n\n        <VBCollection\n          title=\"Backgrounds\"\n          options={mediaList.map((mediaURL) => ({\n            mediaURL,\n            value: mediaURL,\n            onClick: async () => {\n              await VBHandler?.setBackground(mediaURL);\n              hmsActions.setAppData(APP_DATA.background, mediaURL);\n            },\n            supported: true,\n          }))}\n          activeBackground={background}\n        />\n      </Box>\n    </Flex>\n  );\n};\n", "import React from \"react\";\n// Open issue with eslint-plugin-import https://github.com/import-js/eslint-plugin-import/issues/1810\n// eslint-disable-next-line\nimport { HMSVirtualBackgroundTypes } from \"@100mslive/hms-virtual-background/hmsvbplugin\";\nimport { Box } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { VBOption } from \"./VBOption\";\n\nexport const VBCollection = ({\n  options,\n  title,\n  activeBackground = \"\",\n}: {\n  options: {\n    title?: string;\n    icon?: React.JSX.Element;\n    onClick?: () => Promise<void>;\n    mediaURL?: string;\n    value: string | HMSVirtualBackgroundTypes;\n    supported?: boolean;\n  }[];\n  title: string;\n  activeBackground: string;\n}) => {\n  if (options.length === 0) {\n    return null;\n  }\n  return (\n    <Box css={{ mt: \"$10\" }}>\n      <Text\n        variant=\"sm\"\n        css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n      >\n        {title}\n      </Text>\n      <Box\n        css={{\n          py: \"$4\",\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          gap: \"$8\",\n        }}\n      >\n        {options.map((option, index) =>\n          option.supported ? (\n            <VBOption.Root\n              key={option.value}\n              testid={\n                option.value === HMSVirtualBackgroundTypes.IMAGE\n                  ? `virtual_bg_option-${index}`\n                  : option.value\n              }\n              {...option}\n              isActive={activeBackground === option.value}\n            >\n              <VBOption.Icon>{option?.icon}</VBOption.Icon>\n              <VBOption.Title>{option?.title}</VBOption.Title>\n            </VBOption.Root>\n          ) : (\n            \"\"\n          )\n        )}\n      </Box>\n    </Box>\n  );\n};\n", "import React from \"react\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\n\nconst Root = ({\n  onClick,\n  mediaURL,\n  isActive,\n  children,\n  testid = \"\",\n}: {\n  onClick?: () => Promise<void>;\n  mediaURL?: string;\n  isActive: boolean;\n  children?: React.JSX.Element[];\n  testid: string;\n}) => (\n  <Flex\n    data-testid={testid}\n    direction=\"column\"\n    align=\"center\"\n    css={{\n      p: \"$5\",\n      borderRadius: \"$1\",\n      bg: \"$surface_bright\",\n      border: `4px solid ${isActive ? \"$primary_default\" : \"$surface_dim\"}`,\n      cursor: \"pointer\",\n      \"&:hover\": { border: \"4px solid $primary_dim\" },\n      ...(mediaURL\n        ? {\n            height: \"$20\",\n            backgroundImage: `url(\"${mediaURL}\")`,\n            backgroundSize: \"cover\",\n          }\n        : {}),\n    }}\n    onClick={async () => {\n      await onClick?.();\n    }}\n  >\n    {children}\n  </Flex>\n);\n\nconst Title = ({ children }: { children?: string }) => {\n  return children ? (\n    <Text variant=\"xs\" css={{ color: \"$on_surface_medium\" }}>\n      {children}\n    </Text>\n  ) : null;\n};\n\nconst Icon = ({ children }: { children?: React.JSX.Element }) => {\n  return children ? (\n    <Box css={{ color: \"$on_surface_high\" }}>{children}</Box>\n  ) : null;\n};\n\nexport const VBOption = {\n  Root,\n  Title,\n  Icon,\n};\n", "import React from \"react\";\nimport { Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { CSS } from \"../../Theme\";\n\nconst Chip = ({\n  icon = <></>,\n  content = \"\",\n  backgroundColor = \"$surface_default\",\n  textColor = \"$on_surface_high\",\n  hideIfNoContent = false,\n  onClick,\n  css = {},\n}: {\n  icon?: React.JSX.Element;\n  content: string;\n  backgroundColor?: string;\n  textColor?: string;\n  hideIfNoContent?: boolean;\n  onClick?: () => void | Promise<void>;\n  css?: CSS;\n}) => {\n  if (hideIfNoContent && !content) {\n    return null;\n  }\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        backgroundColor,\n        p: \"$4 $6\",\n        gap: \"$2\",\n        borderRadius: \"$4\",\n        ...css,\n      }}\n      onClick={() => onClick?.()}\n    >\n      {icon}\n      <Text variant=\"sm\" css={{ fontWeight: \"$semiBold\", color: textColor }}>\n        {content}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default Chip;\n", "import React from \"react\";\nimport { Flex } from \"../../Layout\";\nimport { Loading } from \"../../Loading\";\nimport { Text } from \"../../Text\";\nimport { CSS } from \"../../Theme\";\n\nconst FullPageProgress = ({\n  loaderColor = \"$primary_default\",\n  text = \"\",\n  css = {},\n}: {\n  loaderColor?: string;\n  text?: string;\n  css?: CSS;\n}) => (\n  <Flex\n    direction=\"column\"\n    justify=\"center\"\n    align=\"center\"\n    css={{ size: \"100%\", color: loaderColor, ...css }}\n  >\n    <Loading color=\"currentColor\" size={100} />\n    {text ? (\n      <Text css={{ mt: \"$10\", color: \"$on_surface_high\" }}>{text}</Text>\n    ) : null}\n  </Flex>\n);\n\nexport default FullPageProgress;\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { JoinForm_JoinBtnType } from \"@100mslive/types-prebuilt/elements/join_form\";\nimport { useRecordingStreaming } from \"@100mslive/react-sdk\";\nimport { GoLiveIcon } from \"@100mslive/react-icons\";\nimport { Button, config as cssConfig, Flex, Input, styled } from \"../../..\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\n// @ts-ignore: No implicit Any\nimport { PreviewSettings } from \"./PreviewJoin\";\n\nconst PreviewForm = ({\n  name,\n  disabled,\n  onChange,\n  onJoin,\n  enableJoin,\n  cannotPublishVideo = false,\n  cannotPublishAudio = false,\n}: {\n  name: string;\n  disabled?: boolean;\n  onChange: (name: string) => void;\n  onJoin: () => void;\n  enableJoin: boolean;\n  cannotPublishVideo: boolean;\n  cannotPublishAudio: boolean;\n}) => {\n  const formSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n  };\n  const isMobile = useMedia(cssConfig.media.md);\n  const {\n    isHLSRunning,\n    isRTMPRunning,\n    isHLSRecordingOn,\n    isBrowserRecordingOn,\n  } = useRecordingStreaming();\n\n  const layout = useRoomLayout();\n  const { join_form: joinForm = {} } =\n    layout?.screens?.preview?.default?.elements || {};\n\n  const showGoLive =\n    joinForm?.join_btn_type ===\n      JoinForm_JoinBtnType.JOIN_BTN_TYPE_JOIN_AND_GO_LIVE &&\n    !isHLSRunning &&\n    !isRTMPRunning &&\n    !isHLSRecordingOn &&\n    !isBrowserRecordingOn;\n\n  return (\n    <Form\n      css={{\n        flexDirection: cannotPublishVideo ? \"column\" : \"row\",\n        \"@md\": { flexDirection: \"row\" },\n      }}\n      onSubmit={formSubmit}\n    >\n      <Flex align=\"center\" css={{ gap: \"$8\", w: \"100%\" }}>\n        <Input\n          required\n          id=\"name\"\n          disabled={disabled}\n          css={{ w: \"100%\", boxSizing: \"border-box\" }}\n          value={name}\n          onChange={(e) => onChange(e.target.value.trimStart())}\n          placeholder=\"Enter name\"\n          autoFocus\n          autoComplete=\"name\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && name.trim().length > 0) {\n              e.preventDefault();\n              if (isMobile) {\n                return;\n              }\n              onJoin();\n            }\n          }}\n        />\n        {cannotPublishAudio && cannotPublishVideo && !isMobile ? (\n          <PreviewSettings />\n        ) : null}\n      </Flex>\n\n      <Button\n        type=\"submit\"\n        icon\n        disabled={!name || !enableJoin}\n        onClick={onJoin}\n      >\n        {/* Conditions to show go live: The first broadcaster joins a streaming kit that is not live */}\n        {showGoLive ? <GoLiveIcon height={18} width={18} /> : null}\n        {showGoLive ? joinForm.go_live_btn_label : joinForm.join_btn_label}\n      </Button>\n    </Form>\n  );\n};\n\nconst Form = styled(\"form\", {\n  width: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"$8\",\n  mt: \"$10\",\n  mb: \"$10\",\n  \"@md\": {\n    gap: \"$4\",\n  },\n});\n\nexport default PreviewForm;\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Box, Button, config as cssConfig, Dialog, Flex, Text } from \"../../..\";\nimport { Sheet } from \"../../../Sheet\";\n\nexport const RequestPrompt = ({\n  open = true,\n  onOpenChange,\n  title,\n  body,\n  actionText = \"Accept\",\n  onAction,\n  disableActions = false,\n}: {\n  open?: boolean;\n  onOpenChange: (value: boolean) => void;\n  title: string;\n  body: React.ReactNode;\n  actionText?: string;\n  onAction: () => void;\n  disableActions?: boolean;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (isMobile) {\n    return (\n      <Sheet.Root open={open} onOpenChange={onOpenChange}>\n        <Sheet.Content css={{ py: \"$8\" }}>\n          <Text\n            css={{\n              fontWeight: \"$semiBold\",\n              c: \"$on_surface_high\",\n              \"@md\": { px: \"$8\" },\n            }}\n          >\n            {title}\n          </Text>\n          {body}\n          <RequestActions\n            actionText={actionText}\n            onAction={onAction}\n            disabled={disableActions}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n\n  return (\n    <Dialog.Root open={open} modal={false} onOpenChange={onOpenChange}>\n      <Dialog.Portal>\n        <Dialog.Content\n          css={{ p: \"$10\" }}\n          onInteractOutside={(e) => e.preventDefault()}\n        >\n          <Dialog.Title\n            css={{\n              p: 0,\n              display: \"flex\",\n              flexDirection: \"row\",\n              gap: \"$md\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text variant=\"h6\">{title}</Text>\n          </Dialog.Title>\n          <Box css={{ mt: \"$4\", mb: \"$10\" }}>{body}</Box>\n          <RequestActions\n            actionText={actionText}\n            onAction={onAction}\n            disabled={disableActions}\n          />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nconst RequestActions = ({\n  onAction,\n  actionText,\n  disabled = false,\n}: {\n  actionText?: string;\n  onAction: () => void;\n  disabled?: boolean;\n}) => (\n  <Flex\n    justify=\"center\"\n    align=\"center\"\n    css={{ width: \"100%\", gap: \"$md\", \"@md\": { mt: \"$8\", px: \"$8\" } }}\n  >\n    <Box css={{ width: \"50%\" }}>\n      <Dialog.Close css={{ width: \"100%\", height: \"100%\" }} asChild>\n        <Button\n          variant=\"standard\"\n          outlined\n          css={{ width: \"100%\", p: \"$4 $8\" }}\n          disabled={disabled}\n        >\n          Decline\n        </Button>\n      </Dialog.Close>\n    </Box>\n    <Box css={{ width: \"50%\" }}>\n      <Button\n        variant=\"primary\"\n        css={{ width: \"100%\" }}\n        onClick={onAction}\n        disabled={disabled}\n      >\n        {actionText}\n      </Button>\n    </Box>\n  </Flex>\n);\n", "import React, { Suspense, useEffect, useState } from \"react\";\nimport { ControlPosition } from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  ConferencingScreen,\n  DefaultConferencingScreen_Elements,\n  HLSLiveStreamingScreen_Elements,\n} from \"@100mslive/types-prebuilt\";\nimport { match } from \"ts-pattern\";\nimport {\n  selectIsConnectedToRoom,\n  selectIsLocalScreenShared,\n  selectLocalPeerRoleName,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { PeopleAddIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport FullPageProgress from \"../components/FullPageProgress\";\nimport { GridLayout } from \"../components/VideoLayouts/GridLayout\";\nimport { Box, Flex } from \"../../Layout\";\nimport { config } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport { EmbedView } from \"./EmbedView\";\n// @ts-ignore: No implicit Any\nimport { PDFView } from \"./PDFView\";\nimport SidePane from \"./SidePane\";\n// @ts-ignore: No implicit Any\nimport { WaitingView } from \"./WaitingView\";\nimport { CaptionsViewer } from \"../plugins/CaptionsViewer\";\n// @ts-ignore: No implicit Any\nimport {\n  usePDFConfig,\n  useUrlToEmbed,\n} from \"../components/AppData/useUISettings\";\nimport { useCloseScreenshareWhiteboard } from \"../components/hooks/useCloseScreenshareWhiteboard\";\nimport {\n  useLandscapeHLSStream,\n  useMobileHLSStream,\n  useWaitingRoomInfo,\n} from \"../common/hooks\";\nimport { SESSION_STORE_KEY } from \"../common/constants\";\n// @ts-ignore: No implicit Any\nconst HLSView = React.lazy(() => import(\"./HLSView\"));\n\nexport const VideoStreamingSection = ({\n  screenType,\n  elements,\n  hideControls = false,\n}: {\n  screenType: keyof ConferencingScreen;\n  elements:\n    | DefaultConferencingScreen_Elements\n    | HLSLiveStreamingScreen_Elements;\n  hideControls: boolean;\n}) => {\n  const localPeerRoleName = useHMSStore(selectLocalPeerRoleName);\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const isSharingScreen = useHMSStore(selectIsLocalScreenShared);\n\n  const hmsActions = useHMSActions();\n  const urlToIframe = useUrlToEmbed();\n  const pdfAnnotatorActive = usePDFConfig();\n  const isMobileHLSStream = useMobileHLSStream();\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n  const isMobile = useMedia(config.media.md);\n  const [captionPosition, setCaptionPosition] = useState<ControlPosition>({\n    x: isMobile ? 0 : -200,\n    y: 0,\n  });\n  useCloseScreenshareWhiteboard();\n\n  const {\n    isNotAllowedToPublish,\n    isScreenOnlyPublishParams,\n    hasSubscribedRolePublishing,\n  } = useWaitingRoomInfo();\n\n  useEffect(() => {\n    if (!isConnected) {\n      return;\n    }\n    hmsActions.sessionStore.observe([\n      SESSION_STORE_KEY.PINNED_MESSAGES,\n      SESSION_STORE_KEY.SPOTLIGHT,\n      SESSION_STORE_KEY.CHAT_STATE,\n      SESSION_STORE_KEY.CHAT_MESSAGE_BLACKLIST,\n      SESSION_STORE_KEY.CHAT_PEER_BLACKLIST,\n    ]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isConnected, hmsActions]);\n\n  if (!localPeerRoleName) {\n    // we don't know the role yet to decide how to render UI\n    return null;\n  }\n\n  return (\n    <Suspense fallback={<FullPageProgress />}>\n      <Flex\n        css={{\n          size: \"100%\",\n          position: \"relative\",\n          gap: isMobileHLSStream || isLandscapeHLSStream ? \"0\" : \"$4\",\n        }}\n        direction={match<Record<string, boolean>, \"row\" | \"column\">({\n          isLandscapeHLSStream,\n          isMobileHLSStream,\n        })\n          .with({ isLandscapeHLSStream: true }, () => \"row\")\n          .with({ isMobileHLSStream: true }, () => \"column\")\n          .otherwise(() => \"row\")}\n      >\n        {match({\n          screenType,\n          isNotAllowedToPublish,\n          isScreenOnlyPublishParams,\n          hasSubscribedRolePublishing,\n          isSharingScreen,\n          pdfAnnotatorActive,\n          urlToIframe,\n        })\n          .with(\n            {\n              screenType: \"hls_live_streaming\",\n            },\n            () => <HLSView />\n          )\n          .when(\n            ({ isNotAllowedToPublish, hasSubscribedRolePublishing }) =>\n              isNotAllowedToPublish && !hasSubscribedRolePublishing,\n            () => (\n              <WaitingView\n                title=\"Waiting for Host to join\"\n                subtitle=\"Sit back and relax\"\n                icon={\n                  <PeopleAddIcon\n                    width=\"56px\"\n                    height=\"56px\"\n                    style={{ color: \"white\" }}\n                  />\n                }\n              />\n            )\n          )\n          .when(\n            ({\n              isScreenOnlyPublishParams,\n              isSharingScreen,\n              hasSubscribedRolePublishing,\n            }) =>\n              isScreenOnlyPublishParams &&\n              !isSharingScreen &&\n              !hasSubscribedRolePublishing,\n            () => (\n              <WaitingView\n                title=\"Ready to present\"\n                subtitle=\"Select the Screenshare button to start presenting\"\n                icon={\n                  <ShareScreenIcon\n                    width=\"56px\"\n                    height=\"56px\"\n                    style={{ color: \"white\" }}\n                  />\n                }\n              />\n            )\n          )\n          .when(\n            ({ pdfAnnotatorActive }) => !!pdfAnnotatorActive,\n            () => <PDFView />\n          )\n          .when(\n            ({ urlToIframe }) => !!urlToIframe,\n            () => <EmbedView />\n          )\n\n          .otherwise(() => {\n            // @ts-ignore\n            return (\n              <GridLayout\n                {...(elements as DefaultConferencingScreen_Elements)\n                  ?.video_tile_layout?.grid}\n              />\n            );\n          })}\n        <CaptionsViewer\n          setDefaultPosition={setCaptionPosition}\n          defaultPosition={captionPosition}\n        />\n        <Box\n          css={{\n            flex: match({ isLandscapeHLSStream, isMobileHLSStream })\n              .with({ isLandscapeHLSStream: true }, () => \"1  1 0\")\n              .with({ isMobileHLSStream: true }, () => \"2 1 0\")\n              .otherwise(() => undefined),\n            position: \"relative\",\n            height: !isMobileHLSStream ? \"100%\" : undefined,\n            maxHeight: \"100%\",\n            \"&:empty\": { display: \"none\" },\n            overflowY: \"clip\",\n          }}\n        >\n          <SidePane\n            screenType={screenType}\n            // @ts-ignore\n            tileProps={\n              (elements as DefaultConferencingScreen_Elements)\n                ?.video_tile_layout?.grid\n            }\n            hideControls={hideControls}\n          />\n        </Box>\n      </Flex>\n    </Suspense>\n  );\n};\n", "import React, { useEffect, useMemo, useState } from \"react\";\nimport { GridVideoTileLayout } from \"@100mslive/types-prebuilt/elements/video_tile_layout\";\nimport {\n  selectLocalPeerID,\n  selectLocalPeerRoleName,\n  selectPeers,\n  selectPeerScreenSharing,\n  selectWhiteboard,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { EqualProminence } from \"./EqualProminence\";\nimport { RoleProminence } from \"./RoleProminence\";\nimport { ScreenshareLayout } from \"./ScreenshareLayout\";\nimport { WhiteboardLayout } from \"./WhiteboardLayout\";\n// @ts-ignore: No implicit Any\nimport { usePinnedTrack, useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { VideoTileContext } from \"../hooks/useVideoTileLayout\";\nimport PeersSorter from \"../../common/PeersSorter\";\nimport { APP_DATA } from \"../../common/constants\";\n\nexport type TileCustomisationProps = {\n  hide_participant_name_on_tile: boolean;\n  rounded_video_tile: boolean;\n  hide_audio_mute_on_tile: boolean;\n  video_object_fit: \"contain\" | \"cover\";\n  edge_to_edge: boolean;\n  hide_metadata_on_tile: boolean;\n};\n\nexport type GridLayoutProps = GridVideoTileLayout & TileCustomisationProps;\n\nexport const GridLayout = ({\n  enable_local_tile_inset: isInsetEnabled = false,\n  prominent_roles: prominentRoles = [],\n  enable_spotlighting_peer = false,\n  hide_participant_name_on_tile = false,\n  rounded_video_tile = true,\n  hide_audio_mute_on_tile = false,\n  video_object_fit = \"contain\",\n  edge_to_edge = false,\n  hide_metadata_on_tile = false,\n}: GridLayoutProps) => {\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const whiteboard = useHMSStore(selectWhiteboard);\n  const pinnedTrack = usePinnedTrack();\n  const peers = useHMSStore(selectPeers);\n  const localPeerRole = useHMSStore(selectLocalPeerRoleName);\n  const localPeerID = useHMSStore(selectLocalPeerID);\n\n  const [activeScreensharePeerId] = useSetAppDataByKey(\n    APP_DATA.activeScreensharePeerId\n  );\n  const isRoleProminence =\n    (prominentRoles.length &&\n      peers.some(\n        (peer) =>\n          peer.roleName &&\n          prominentRoles.includes(peer.roleName) &&\n          (peer.videoTrack || peer.audioTrack)\n      )) ||\n    pinnedTrack;\n  const updatedPeers = useMemo(() => {\n    // remove screenshare/whiteboard peer from active speaker sorting\n    if (activeScreensharePeerId || whiteboard?.open) {\n      return peers.filter(\n        (peer) =>\n          peer.id !== activeScreensharePeerId ||\n          peer.customerUserId !== whiteboard?.owner\n      );\n    }\n    if (isInsetEnabled) {\n      const isLocalPeerPinned = localPeerID === pinnedTrack?.peerId;\n      // if localPeer role is prominent role, it shows up in the center or local peer is pinned, so allow it in active speaker sorting\n      if (\n        (localPeerRole && prominentRoles.includes(localPeerRole)) ||\n        isLocalPeerPinned\n      ) {\n        return peers;\n      } else {\n        return peers.filter((peer) => !peer.isLocal);\n      }\n    }\n    return peers;\n  }, [\n    isInsetEnabled,\n    whiteboard,\n    activeScreensharePeerId,\n    localPeerRole,\n    localPeerID,\n    prominentRoles,\n    peers,\n    pinnedTrack,\n  ]);\n  const vanillaStore = useHMSVanillaStore();\n  const [sortedPeers, setSortedPeers] = useState(updatedPeers);\n  const peersSorter = useMemo(\n    () => new PeersSorter(vanillaStore),\n    [vanillaStore]\n  );\n  const [pageSize, setPageSize] = useState(0);\n  const [mainPage, setMainPage] = useState(0);\n  const tileLayout = {\n    enableSpotlightingPeer: enable_spotlighting_peer,\n    hideParticipantNameOnTile: hide_participant_name_on_tile,\n    roundedVideoTile: rounded_video_tile,\n    hideAudioMuteOnTile: hide_audio_mute_on_tile,\n    hideMetadataOnTile: hide_metadata_on_tile,\n    objectFit: video_object_fit,\n  };\n\n  useEffect(() => {\n    if (mainPage !== 0) {\n      return;\n    }\n    peersSorter.setPeersAndTilesPerPage({\n      peers: updatedPeers,\n      tilesPerPage: pageSize,\n    });\n    peersSorter.onUpdate(setSortedPeers);\n  }, [mainPage, peersSorter, updatedPeers, pageSize]);\n\n  if (peerSharing) {\n    return (\n      <VideoTileContext.Provider value={tileLayout}>\n        <ScreenshareLayout\n          peers={sortedPeers}\n          onPageSize={setPageSize}\n          onPageChange={setMainPage}\n          edgeToEdge={edge_to_edge}\n        />\n      </VideoTileContext.Provider>\n    );\n  } else if (whiteboard?.open) {\n    return (\n      <VideoTileContext.Provider value={tileLayout}>\n        <WhiteboardLayout\n          peers={sortedPeers}\n          onPageSize={setPageSize}\n          onPageChange={setMainPage}\n          edgeToEdge={edge_to_edge}\n        />\n      </VideoTileContext.Provider>\n    );\n  } else if (isRoleProminence) {\n    return (\n      <VideoTileContext.Provider value={tileLayout}>\n        <RoleProminence\n          peers={sortedPeers}\n          onPageSize={setPageSize}\n          onPageChange={setMainPage}\n          prominentRoles={prominentRoles}\n          isInsetEnabled={isInsetEnabled}\n          edgeToEdge={edge_to_edge}\n        />\n      </VideoTileContext.Provider>\n    );\n  }\n  return (\n    <VideoTileContext.Provider value={tileLayout}>\n      <EqualProminence\n        peers={sortedPeers}\n        onPageSize={setPageSize}\n        onPageChange={setMainPage}\n        isInsetEnabled={isInsetEnabled}\n        edgeToEdge={edge_to_edge}\n      />\n    </VideoTileContext.Provider>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { PeopleAddIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { WaitingView } from \"../../layouts/WaitingView\";\nimport { InsetTile } from \"../InsetTile\";\nimport { Pagination } from \"../Pagination\";\nimport { Grid } from \"./Grid\";\nimport { LayoutProps } from \"./interface\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { usePagesWithTiles, useTileLayout } from \"../hooks/useTileLayout\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport function EqualProminence({\n  isInsetEnabled = false,\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) {\n  const isMobile = useMedia(cssConfig.media.md);\n  let maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  maxTileCount = isMobile ? Math.min(maxTileCount, 6) : maxTileCount;\n  const pageList = usePagesWithTiles({\n    peers,\n    maxTileCount,\n  });\n\n  const { ref, pagesWithTiles } = useTileLayout({\n    pageList,\n    maxTileCount,\n    edgeToEdge,\n  });\n  const [page, setPage] = useState(0);\n  const pageSize = pagesWithTiles[0]?.length || 0;\n\n  useEffect(() => {\n    if (pageSize > 0) {\n      onPageSize?.(pageSize);\n    }\n  }, [pageSize, onPageSize]);\n\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ flex: \"1 1 0\", h: \"100%\", position: \"relative\", minWidth: 0 }}\n    >\n      <Grid tiles={pagesWithTiles[page]} ref={ref} edgeToEdge={edgeToEdge} />\n      {!edgeToEdge && (\n        <Pagination\n          page={page}\n          onPageChange={(page) => {\n            setPage(page);\n            onPageChange?.(page);\n          }}\n          numPages={pagesWithTiles.length}\n        />\n      )}\n      {pageList.length === 0 ? (\n        <WaitingView\n          title=\"You're the first to join\"\n          subtitle=\"Sit back and relax till others join\"\n          icon={\n            <PeopleAddIcon\n              width=\"56px\"\n              height=\"56px\"\n              style={{ color: \"white\" }}\n            />\n          }\n        />\n      ) : null}\n      {isInsetEnabled && <InsetTile />}\n    </Flex>\n  );\n}\n", "import React from \"react\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\n\nexport const WaitingView = React.memo(\n  ({\n    icon,\n    title,\n    subtitle,\n  }: {\n    icon: React.ReactNode;\n    title: string;\n    subtitle: string;\n  }) => {\n    return (\n      <Flex\n        align=\"center\"\n        direction=\"column\"\n        css={{\n          textAlign: \"center\",\n          margin: \"auto\",\n          h: \"100%\",\n          justifyContent: \"center\",\n          gap: \"$8\",\n        }}\n      >\n        <Box\n          css={{\n            backgroundColor: \"$surface_default\",\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"$4\",\n            size: \"$20\",\n            r: \"$round\",\n            justifyContent: \"center\",\n          }}\n        >\n          {icon}\n        </Box>\n        <Flex\n          direction=\"column\"\n          css={{\n            p: \"$1\",\n            gap: \"$4\",\n          }}\n        >\n          <Text\n            variant=\"h4\"\n            css={{ \"@md\": { fontSize: \"$md\", color: \"$on_surface_high\" } }}\n          >\n            {title}\n          </Text>\n          <Text\n            variant=\"body1\"\n            css={{\n              fontWeight: \"$regular\",\n              color: \"$on_surface_medium\",\n              \"@md\": { fontSize: \"$sm\" },\n            }}\n          >\n            {subtitle}\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n);\n", "import React, { useEffect, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectIsAllowedToPublish,\n  selectLocalPeer,\n  selectPeerByID,\n  selectVideoTrackByID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport IconButton from \"../IconButton\";\n// @ts-ignore: No implicit Any\nimport { AudioVideoToggle } from \"./AudioVideoToggle\";\n// @ts-ignore: No implicit Any\nimport VideoTile from \"./VideoTile\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"./AppData/useUISettings\";\nimport { useVideoTileContext } from \"./hooks/useVideoTileLayout\";\n// @ts-ignore: No implicit Any\nimport { APP_DATA } from \"../common/constants\";\n\nconst MinimisedTile = ({\n  setMinimised,\n}: {\n  setMinimised: (value: boolean) => void;\n}) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        gap: \"$6\",\n        r: \"$1\",\n        bg: \"$surface_default\",\n        p: \"$4\",\n        color: \"$on_surface_high\",\n      }}\n    >\n      <AudioVideoToggle hideOptions={true} />\n      <Text>You</Text>\n      <IconButton\n        className=\"__cancel-drag-event\"\n        onClick={() => setMinimised(false)}\n        css={{ bg: \"transparent\", border: \"transparent\" }}\n      >\n        <ExpandIcon />\n      </IconButton>\n    </Flex>\n  );\n};\n\nconst insetHeightPx = 180;\nconst insetMaxWidthPx = 240;\nconst defaultMobileAspectRatio = 9 / 16;\nconst desktopAspectRatio = 1 / defaultMobileAspectRatio;\n\nexport const InsetTile = ({ peerId }: { peerId?: string }) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const selector = peerId ? selectPeerByID(peerId) : selectLocalPeer;\n  const peer = useHMSStore(selector);\n  const [minimised, setMinimised] = useSetAppDataByKey(APP_DATA.minimiseInset);\n  const videoTrack = useHMSStore(selectVideoTrackByID(peer?.videoTrack));\n  const isAllowedToPublish = useHMSStore(selectIsAllowedToPublish);\n  const videoTileProps = useVideoTileContext();\n  let aspectRatio = isMobile ? defaultMobileAspectRatio : desktopAspectRatio;\n  if (videoTrack?.width && videoTrack?.height && !isMobile) {\n    aspectRatio = videoTrack.width / videoTrack.height;\n  }\n  let height = insetHeightPx;\n  let width = height * aspectRatio;\n  // Convert to 16/9 in landscape mode with a max width of 240\n  if (isLandscape && width > insetMaxWidthPx) {\n    width = 240;\n    height = width / aspectRatio;\n  }\n\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const node = nodeRef.current;\n    if (!node || !window.ResizeObserver) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.target === node.parentElement) {\n          // reset to original position on resize\n          node.style.transform = `translate(0,0)`;\n        }\n      });\n    });\n    node.parentElement && resizeObserver.observe(node.parentElement);\n    return () => {\n      node?.parentElement && resizeObserver?.unobserve(node.parentElement);\n      resizeObserver?.disconnect();\n    };\n  }, []);\n\n  if (!isAllowedToPublish.video && !isAllowedToPublish.audio) {\n    return null;\n  }\n\n  return (\n    <Draggable bounds=\"parent\" nodeRef={nodeRef} cancel=\".__cancel-drag-event\">\n      <Box\n        ref={nodeRef}\n        css={{\n          position: \"absolute\",\n          bottom: 0,\n          right: 0,\n          zIndex: 10,\n          boxShadow: \"0 0 8px 0 rgba(0,0,0,0.3)\",\n          r: \"$2\",\n          ...(!minimised\n            ? {\n                aspectRatio: aspectRatio,\n                h: height,\n              }\n            : {}),\n        }}\n      >\n        {minimised ? (\n          <MinimisedTile setMinimised={setMinimised} />\n        ) : (\n          <VideoTile\n            peerId={peer?.id}\n            trackId={peer?.videoTrack}\n            rootCSS={{\n              size: \"100%\",\n              padding: 0,\n            }}\n            width={width}\n            height={height}\n            containerCSS={{ background: \"$surface_default\" }}\n            canMinimise\n            isDragabble\n            {...videoTileProps}\n            hideParticipantNameOnTile\n          />\n        )}\n      </Box>\n    </Draggable>\n  );\n};\n", "import React, { useContext } from \"react\";\n\ntype TileContextType = {\n  enableSpotlightingPeer: boolean;\n  hideParticipantNameOnTile?: boolean;\n  roundedVideoTile?: boolean;\n  hideAudioMuteOnTile?: boolean;\n  hideAudioLevelOnTile?: boolean;\n  objectFit?: \"cover\" | \"contain\";\n  hideMetadataOnTile?: boolean;\n};\n\nexport const VideoTileContext = React.createContext<TileContextType>({\n  enableSpotlightingPeer: true,\n  hideParticipantNameOnTile: false,\n  roundedVideoTile: true,\n  hideAudioMuteOnTile: false,\n  hideAudioLevelOnTile: false,\n  objectFit: \"contain\",\n  hideMetadataOnTile: false,\n});\n\nexport const useVideoTileContext = () => {\n  const context = useContext(VideoTileContext);\n  return context;\n};\n", "import React, { useEffect } from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@100mslive/react-icons\";\nimport { StyledPagination } from \"../../Pagination\";\n\nexport const Pagination = ({\n  page,\n  onPageChange,\n  numPages,\n}: {\n  page: number;\n  onPageChange: (page: number) => void;\n  numPages: number;\n}) => {\n  const disableLeft = page === 0;\n  const disableRight = page === numPages - 1;\n  const nextPage = (e: React.SyntheticEvent) => {\n    e.stopPropagation();\n    onPageChange(Math.min(page + 1, numPages - 1));\n  };\n  const prevPage = (e: React.SyntheticEvent) => {\n    e.stopPropagation();\n    onPageChange(Math.max(page - 1, 0));\n  };\n\n  useEffect(() => {\n    // currentPageIndex should not exceed pages length\n    if (page >= numPages) {\n      onPageChange(Math.max(0, numPages - 1));\n    }\n  }, [numPages, onPageChange, page]);\n\n  if (numPages <= 1) {\n    return null;\n  }\n\n  return (\n    <StyledPagination.Root css={{ flexShrink: 0 }}>\n      <StyledPagination.Chevron disabled={disableLeft} onClick={prevPage}>\n        <ChevronLeftIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableLeft ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n      {numPages <= 5 ? (\n        <StyledPagination.Dots>\n          {[...Array(numPages)].map((_, i) => (\n            <StyledPagination.Dot\n              key={i}\n              active={page === i}\n              onClick={(e) => {\n                e.stopPropagation();\n                onPageChange(i);\n              }}\n            />\n          ))}\n        </StyledPagination.Dots>\n      ) : null}\n      <StyledPagination.Chevron disabled={disableRight} onClick={nextPage}>\n        <ChevronRightIcon\n          width={16}\n          height={16}\n          style={{ cursor: disableRight ? \"not-allowed\" : \"pointer\" }}\n        />\n      </StyledPagination.Chevron>\n    </StyledPagination.Root>\n  );\n};\n", "import React from \"react\";\nimport { TrackWithPeerAndDimensions } from \"@100mslive/react-sdk\";\nimport { Box } from \"../../../Layout\";\n// @ts-ignore: No implicit Any\nimport VideoTile from \"../VideoTile\";\nimport { useVideoTileContext } from \"../hooks/useVideoTileLayout\";\n\nexport const Grid = React.forwardRef<\n  HTMLDivElement,\n  { tiles: TrackWithPeerAndDimensions[]; edgeToEdge?: boolean }\n>(({ tiles, edgeToEdge }, ref) => {\n  const videoTileProps = useVideoTileContext();\n  return (\n    <Box\n      ref={ref}\n      css={{\n        flex: \"1 1 0\",\n        gap: \"$4\",\n        display: \"flex\",\n        placeContent: \"center\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexFlow: \"row wrap\",\n        minHeight: 0,\n        \"@md\": { gap: edgeToEdge ? 0 : \"$4\" },\n      }}\n    >\n      {tiles?.map((tile) => {\n        return (\n          <VideoTile\n            key={tile.track?.id || tile.peer?.id}\n            width={tile.width}\n            height={tile.height}\n            peerId={tile.peer?.id}\n            trackId={tile.track?.id}\n            rootCSS={{ padding: 0 }}\n            objectFit=\"contain\"\n            {...videoTileProps}\n          />\n        );\n      })}\n    </Box>\n  );\n});\n", "import { useEffect, useMemo, useState } from \"react\";\nimport { useMeasure, useMedia } from \"react-use\";\nimport {\n  getPeersWithTiles,\n  HMSPeer,\n  selectTracksMap,\n  TrackWithPeerAndDimensions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\n\nconst aspectRatioConfig = {\n  default: [1 / 1, 4 / 3, 16 / 9],\n  mobile: [1 / 1, 3 / 4, 9 / 16],\n};\n\nexport const usePagesWithTiles = ({\n  peers,\n  maxTileCount,\n}: {\n  peers: HMSPeer[];\n  maxTileCount: number;\n}) => {\n  const vanillaStore = useHMSVanillaStore();\n  const tracksMap = vanillaStore.getState(selectTracksMap);\n  const peersWithTiles = useMemo(\n    () =>\n      getPeersWithTiles(\n        peers,\n        tracksMap,\n        () => false\n      ) as TrackWithPeerAndDimensions[],\n    [peers, tracksMap]\n  );\n  const noOfPages = Math.ceil(peersWithTiles.length / maxTileCount);\n  const pagesList = useMemo(() => {\n    let sliceStart = 0;\n    let remaining = peersWithTiles.length;\n    const list = [];\n    // split into pages\n    for (let i = 0; i < noOfPages; i++) {\n      const count = Math.min(remaining, maxTileCount);\n      list.push(peersWithTiles.slice(sliceStart, sliceStart + count));\n      remaining = remaining - count;\n      sliceStart += count;\n    }\n    return list;\n  }, [peersWithTiles, noOfPages, maxTileCount]);\n  return pagesList;\n};\n\nexport const useTileLayout = ({\n  pageList,\n  maxTileCount,\n  edgeToEdge = false,\n}: {\n  pageList: TrackWithPeerAndDimensions[][];\n  maxTileCount: number;\n  edgeToEdge?: boolean;\n}) => {\n  const vanillaStore = useHMSVanillaStore();\n  const [ref, { width, height }] = useMeasure<HTMLDivElement>();\n  const isMobile = useMedia(cssConfig.media.lg);\n  const [pagesWithTiles, setPagesWithTiles] = useState<\n    TrackWithPeerAndDimensions[][]\n  >([]);\n\n  useEffect(() => {\n    if (width === 0 || height === 0) {\n      return;\n    }\n    // calculate dimesions for each page\n    for (const page of pageList) {\n      const noOfTilesInPage = page.length;\n      let maxCols =\n        noOfTilesInPage > 2 && noOfTilesInPage < 9\n          ? Math.ceil(noOfTilesInPage / 2)\n          : Math.ceil(Math.sqrt(noOfTilesInPage));\n      if (isMobile) {\n        maxCols = noOfTilesInPage < 4 ? 1 : Math.min(maxCols, 2);\n      }\n      const maxRows = Math.ceil(noOfTilesInPage / maxCols);\n      let index = 0;\n      // convert the current page to a matrix(grid)\n      const matrix = new Array(maxRows).fill(null).map((_, i) => {\n        const numCols = Math.min(maxCols, noOfTilesInPage - i * maxCols);\n        const rowElements = [];\n        for (let j = 0; j < numCols; j++) {\n          if (index < page.length) {\n            rowElements.push(page[index++]);\n          }\n        }\n        return rowElements;\n      });\n\n      const gap = edgeToEdge && isMobile ? 0 : 8; // gap between flex items\n      const maxHeight = height - (maxRows - 1) * gap;\n      const maxRowHeight = maxHeight / matrix.length;\n      const aspectRatios =\n        isMobile && (noOfTilesInPage === 1 || noOfTilesInPage > 3)\n          ? aspectRatioConfig.mobile\n          : aspectRatioConfig.default;\n      // calculate height and width of each tile in a row\n      for (const row of matrix) {\n        let tileWidth = (width - (row.length - 1) * gap) / row.length;\n        let tileHeight = 0;\n        if (edgeToEdge) {\n          tileHeight = maxRowHeight;\n        } else {\n          const calcHeights = aspectRatios.map((aR) => tileWidth / aR);\n          for (const h of calcHeights) {\n            if (h < maxRowHeight) {\n              if (tileHeight < h) {\n                tileHeight = h;\n              }\n            }\n          }\n\n          // tileHeight is not calculated as it could be exceeding the max possible height\n          // find the max possible width instead\n          if (tileHeight === 0) {\n            tileHeight = maxRowHeight;\n            const calcWidths = aspectRatios.map((aR) => tileHeight * aR);\n            tileWidth = 0;\n            for (const w of calcWidths) {\n              if (w < width) {\n                if (tileWidth < w) {\n                  tileWidth = w;\n                }\n              }\n            }\n          }\n        }\n        for (let i = 0; i < row.length; i++) {\n          row[i].width = tileWidth;\n          row[i].height = tileHeight;\n        }\n      }\n    }\n    setPagesWithTiles([...pageList]);\n  }, [\n    width,\n    height,\n    maxTileCount,\n    pageList,\n    vanillaStore,\n    isMobile,\n    edgeToEdge,\n  ]);\n  return { pagesWithTiles, ref };\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { selectLocalPeer, useHMSStore } from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { InsetTile } from \"../InsetTile\";\nimport { Pagination } from \"../Pagination\";\nimport { SecondaryTiles } from \"../SecondaryTiles\";\nimport { Grid } from \"./Grid\";\nimport { LayoutProps } from \"./interface\";\nimport { ProminenceLayout } from \"./ProminenceLayout\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"../AppData/useUISettings\";\nimport { useRoleProminencePeers } from \"../hooks/useRoleProminencePeers\";\nimport { usePagesWithTiles, useTileLayout } from \"../hooks/useTileLayout\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n\nexport function RoleProminence({\n  isInsetEnabled = false,\n  prominentRoles = [],\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) {\n  const { prominentPeers, secondaryPeers } = useRoleProminencePeers(\n    prominentRoles,\n    peers,\n    isInsetEnabled\n  );\n  const localPeer = useHMSStore(selectLocalPeer);\n  const isMobile = useMedia(cssConfig.media.md);\n  let maxTileCount = useUISettings(UI_SETTINGS.maxTileCount);\n  maxTileCount = isMobile ? 4 : maxTileCount;\n  const pageList = usePagesWithTiles({\n    peers: prominentPeers,\n    maxTileCount,\n  });\n  const { ref, pagesWithTiles } = useTileLayout({\n    pageList,\n    maxTileCount,\n  });\n  const [page, setPage] = useState(0);\n  const pageSize = pagesWithTiles[0]?.length || 0;\n\n  useEffect(() => {\n    if (pageSize > 0) {\n      onPageSize?.(pageSize);\n    }\n  }, [pageSize, onPageSize]);\n\n  return (\n    <ProminenceLayout.Root>\n      <ProminenceLayout.ProminentSection>\n        <Grid ref={ref} tiles={pagesWithTiles[page]} />\n      </ProminenceLayout.ProminentSection>\n      {!edgeToEdge && (\n        <Pagination\n          page={page}\n          onPageChange={(page) => {\n            setPage(page);\n            onPageChange?.(page);\n          }}\n          numPages={pagesWithTiles.length}\n        />\n      )}\n      <SecondaryTiles\n        peers={secondaryPeers}\n        isInsetEnabled={isInsetEnabled}\n        edgeToEdge={edgeToEdge}\n      />\n      {isInsetEnabled &&\n        localPeer &&\n        prominentPeers.length > 0 &&\n        !prominentPeers.includes(localPeer) && <InsetTile />}\n    </ProminenceLayout.Root>\n  );\n}\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectAppData,\n  selectSessionStore,\n  selectTrackByID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { LayoutProps } from \"./VideoLayouts/interface\";\nimport { ProminenceLayout } from \"./VideoLayouts/ProminenceLayout\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { Pagination } from \"./Pagination\";\nimport { usePagesWithTiles } from \"./hooks/useTileLayout\";\nimport { APP_DATA, SESSION_STORE_KEY } from \"../common/constants\";\n\nexport const SecondaryTiles = ({\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n  hasSidebar,\n}: LayoutProps) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const maxTileCount = isMobile ? 2 : 4;\n  const [page, setPage] = useState(0);\n  const pinnedTrackId = useHMSStore(selectAppData(APP_DATA.pinnedTrackId));\n  const spotlightPeerId = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.SPOTLIGHT)\n  );\n  const activeScreensharePeerId = useHMSStore(\n    selectAppData(APP_DATA.activeScreensharePeerId)\n  );\n  const pinnedPeer = useHMSStore(selectTrackByID(pinnedTrackId))?.peerId;\n  const pageChangedAfterPinning = useRef(false);\n  const pagesWithTiles = usePagesWithTiles({\n    peers:\n      spotlightPeerId || pinnedPeer\n        ? [...peers].sort((p1, p2) => {\n            if (activeScreensharePeerId === p1.id) {\n              return -1;\n            }\n            if (activeScreensharePeerId === p2.id) {\n              return 1;\n            }\n            const peerIdList = [pinnedPeer, spotlightPeerId];\n            // put active screenshare peer, pinned peer, spotlight peer at first\n            if (peerIdList.includes(p1.id)) {\n              return -1;\n            }\n            if (peerIdList.includes(p2.id)) {\n              return 1;\n            }\n            return 0;\n          })\n        : peers,\n    maxTileCount,\n  });\n  const pageSize = pagesWithTiles[0]?.length || 0;\n\n  // Handles final peer leaving from the last page\n  useEffect(() => {\n    if (peers.length > 0 && !pagesWithTiles[page]?.length) {\n      setPage(Math.max(0, page - 1));\n    }\n  }, [peers, page, pagesWithTiles]);\n\n  useEffect(() => {\n    if (pageSize > 0) {\n      onPageSize?.(pageSize);\n    }\n  }, [pageSize, onPageSize]);\n\n  useEffect(() => {\n    if (\n      (pinnedPeer || spotlightPeerId) &&\n      page !== 0 &&\n      !pageChangedAfterPinning.current\n    ) {\n      setPage(0);\n      pageChangedAfterPinning.current = true;\n    } else if (!pinnedPeer && !spotlightPeerId) {\n      pageChangedAfterPinning.current = false;\n    }\n  }, [pinnedPeer, spotlightPeerId, page]);\n\n  return (\n    <ProminenceLayout.SecondarySection\n      tiles={pagesWithTiles[page]}\n      edgeToEdge={edgeToEdge}\n      hasSidebar={hasSidebar}\n    >\n      {!edgeToEdge && (\n        <Pagination\n          page={page}\n          onPageChange={(page) => {\n            setPage(page);\n            onPageChange?.(page);\n          }}\n          numPages={pagesWithTiles.length}\n        />\n      )}\n    </ProminenceLayout.SecondarySection>\n  );\n};\n", "import React from \"react\";\nimport { TrackWithPeerAndDimensions } from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { CSS } from \"../../../Theme\";\n// @ts-ignore: No implicit Any\nimport VideoTile from \"../VideoTile\";\nimport { useVideoTileContext } from \"../hooks/useVideoTileLayout\";\n\nconst Root = ({\n  children,\n  edgeToEdge,\n  hasSidebar,\n}: React.PropsWithChildren<{ edgeToEdge?: boolean; hasSidebar?: boolean }>) => {\n  return (\n    <Flex\n      direction={hasSidebar ? \"row\" : \"column\"}\n      css={{\n        h: \"100%\",\n        flex: \"1 1 0\",\n        minWidth: 0,\n        gap: \"$6\",\n        \"@md\": { gap: edgeToEdge ? 0 : \"$6\" },\n      }}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nconst ProminentSection = ({\n  children,\n  css = {},\n}: React.PropsWithChildren<{ css?: CSS }>) => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{ flex: \"1 1 0\", gap: \"$2\", minHeight: 0, ...css }}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nconst SecondarySection = ({\n  tiles,\n  children,\n  edgeToEdge,\n  hasSidebar,\n}: React.PropsWithChildren<{\n  tiles: TrackWithPeerAndDimensions[];\n  edgeToEdge?: boolean;\n  hasSidebar?: boolean;\n}>) => {\n  const tileLayoutProps = useVideoTileContext();\n  if (!tiles?.length) {\n    return null;\n  }\n  const gridStyles = hasSidebar\n    ? {\n        gridTemplateColumns: \"1fr\",\n        gridTemplateRows: `repeat(${tiles.length}, minmax(0, 1fr))`,\n        maxHeight: \"100%\",\n        width: 240,\n      }\n    : {\n        gridTemplateRows:\n          React.Children.count(children) > 0 ? \"136px auto\" : \"154px\",\n        gridTemplateColumns: `repeat(${tiles.length}, minmax(0, 1fr))`,\n      };\n  return (\n    <Box\n      css={{\n        display: \"grid\",\n        margin: \"auto\",\n        gap: hasSidebar ? \"$8\" : \"$2 $4\",\n        placeItems: \"center\",\n        ...gridStyles,\n        \"@md\": { gap: edgeToEdge ? 0 : \"$4\" },\n      }}\n    >\n      {tiles.map((tile) => {\n        return (\n          <VideoTile\n            key={tile.track?.id || tile.peer?.id}\n            peerId={tile.peer?.id}\n            trackId={tile.track?.id}\n            rootCSS={{\n              padding: 0,\n              maxWidth: 240,\n              aspectRatio: 16 / 9,\n              ...(hasSidebar ? { w: \"100%\" } : { h: \"100%\" }),\n              \"@md\": { aspectRatio: 1 },\n            }}\n            objectFit=\"contain\"\n            {...tileLayoutProps}\n          />\n        );\n      })}\n      {children && (\n        <Box css={{ gridColumn: hasSidebar ? 1 : `1/span ${tiles.length}` }}>\n          {children}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport const ProminenceLayout = {\n  Root,\n  ProminentSection,\n  SecondarySection,\n};\n", "import { useMemo } from \"react\";\nimport { HMSPeer } from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { usePinnedTrack } from \"../AppData/useUISettings\";\n\nexport const useRoleProminencePeers = (\n  prominentRoles: string[],\n  peers: HMSPeer[],\n  isInsetEnabled: boolean\n) => {\n  const pinnedTrack = usePinnedTrack();\n\n  const [prominentPeers, secondaryPeers] = useMemo(() => {\n    return peers.reduce<[HMSPeer[], HMSPeer[]]>(\n      (acc, peer) => {\n        if (pinnedTrack) {\n          if (pinnedTrack.peerId === peer.id) {\n            acc[0].push(peer);\n          } else if (!(isInsetEnabled && peer.isLocal)) {\n            acc[1].push(peer);\n          }\n          return acc;\n        }\n        if (\n          peer.isLocal &&\n          isInsetEnabled &&\n          !prominentRoles?.includes(peer.roleName || \"\")\n        ) {\n          return acc;\n        }\n        if (prominentRoles?.includes(peer.roleName || \"\")) {\n          acc[0].push(peer);\n        } else {\n          acc[1].push(peer);\n        }\n\n        return acc;\n      },\n      [[], []]\n    );\n  }, [peers, isInsetEnabled, prominentRoles, pinnedTrack]);\n\n  return {\n    prominentPeers,\n    secondaryPeers,\n  };\n};\n", "import React, { useEffect, useMemo, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { selectPeersScreenSharing, useHMSStore } from \"@100mslive/react-sdk\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { InsetTile } from \"../InsetTile\";\nimport { Pagination } from \"../Pagination\";\n// @ts-ignore: No implicit Any\nimport ScreenshareTile from \"../ScreenshareTile\";\nimport { SecondaryTiles } from \"../SecondaryTiles\";\nimport { LayoutMode } from \"../Settings/LayoutSettings\";\nimport { LayoutProps } from \"./interface\";\nimport { ProminenceLayout } from \"./ProminenceLayout\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey, useSetUiSettings } from \"../AppData/useUISettings\";\nimport { APP_DATA, UI_SETTINGS } from \"../../common/constants\";\n\nexport const ScreenshareLayout = ({\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) => {\n  const peersSharing = useHMSStore(selectPeersScreenSharing);\n  const [, setActiveScreenSharePeer] = useSetAppDataByKey(\n    APP_DATA.activeScreensharePeerId\n  );\n  const [page, setPage] = useState(0);\n  const [layoutMode, setLayoutMode] = useSetUiSettings(UI_SETTINGS.layoutMode);\n  const activeSharePeer = peersSharing[page];\n  const isMobile = useMedia(cssConfig.media.md);\n  const hasSidebar = !isMobile && layoutMode === LayoutMode.SIDEBAR;\n  const secondaryPeers = useMemo(() => {\n    if (layoutMode === LayoutMode.SPOTLIGHT) {\n      return [];\n    }\n    if (isMobile || layoutMode === LayoutMode.SIDEBAR) {\n      return activeSharePeer\n        ? [\n            activeSharePeer,\n            ...peers.filter((p) => p.id !== activeSharePeer?.id),\n          ] //keep active sharing peer as first tile\n        : peers;\n    }\n    return peers.filter((p) => p.id !== activeSharePeer?.id);\n  }, [activeSharePeer, peers, isMobile, layoutMode]);\n\n  useEffect(() => {\n    if (isMobile) {\n      setLayoutMode(LayoutMode.GALLERY);\n      return;\n    }\n    if (layoutMode === LayoutMode.SIDEBAR) {\n      return;\n    }\n    setLayoutMode(LayoutMode.SIDEBAR);\n    return () => {\n      // reset to gallery once screenshare is stopped\n      setLayoutMode(LayoutMode.GALLERY);\n    };\n  }, [isMobile]); // eslint-disable-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    setActiveScreenSharePeer(activeSharePeer?.id);\n    return () => {\n      setActiveScreenSharePeer(\"\");\n    };\n  }, [activeSharePeer?.id, setActiveScreenSharePeer]);\n\n  return (\n    <ProminenceLayout.Root edgeToEdge={edgeToEdge} hasSidebar={hasSidebar}>\n      <ProminenceLayout.ProminentSection>\n        <ScreenshareTile peerId={peersSharing[page]?.id} />\n        {!edgeToEdge && (\n          <Pagination\n            page={page}\n            onPageChange={setPage}\n            numPages={peersSharing.length}\n          />\n        )}\n      </ProminenceLayout.ProminentSection>\n      <SecondaryTiles\n        peers={secondaryPeers}\n        onPageChange={onPageChange}\n        onPageSize={onPageSize}\n        edgeToEdge={edgeToEdge}\n        hasSidebar={hasSidebar}\n      />\n      {layoutMode === LayoutMode.SPOTLIGHT && activeSharePeer && (\n        <InsetTile peerId={activeSharePeer?.id} />\n      )}\n    </ProminenceLayout.Root>\n  );\n};\n", "import React, { useRef, useState } from \"react\";\nimport { useFullscreen, useMedia } from \"react-use\";\nimport screenfull from \"screenfull\";\nimport {\n  selectLocalPeerID,\n  selectPeerByID,\n  selectScreenShareAudioByPeerID,\n  selectScreenShareByPeerID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ExpandIcon, ShrinkIcon } from \"@100mslive/react-icons\";\nimport TileMenu from \"./TileMenu/TileMenu\";\nimport { Box } from \"../../Layout\";\nimport { VideoTileStats } from \"../../Stats\";\nimport { config as cssConfig, useTheme } from \"../../Theme\";\nimport { Video } from \"../../Video\";\nimport { StyledVideoTile } from \"../../VideoTile\";\nimport { LayoutModeSelector } from \"./LayoutModeSelector\";\n// @ts-ignore: No implicit Any\nimport { getVideoTileLabel } from \"./peerTileUtils\";\nimport { ScreenshareDisplay } from \"./ScreenshareDisplay\";\n// @ts-ignore: No implicit Any\nimport { useUISettings } from \"./AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nconst labelStyles = {\n  position: \"unset\",\n  width: \"100%\",\n  textAlign: \"center\",\n  c: \"$on_surface_high\",\n  transform: \"none\",\n  flexShrink: 0,\n};\n\nconst Tile = ({\n  peerId,\n  width = \"100%\",\n  height = \"100%\",\n}: {\n  peerId: string;\n  width?: string;\n  height?: string;\n}) => {\n  const isLocal = useHMSStore(selectLocalPeerID) === peerId;\n  const track = useHMSStore(selectScreenShareByPeerID(peerId));\n  const { theme } = useTheme();\n  const peer = useHMSStore(selectPeerByID(peerId));\n  const isAudioOnly = useUISettings(UI_SETTINGS.isAudioOnly);\n  const [isMouseHovered, setIsMouseHovered] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  const showStatsOnTiles = useUISettings(UI_SETTINGS.showStatsOnTiles);\n  const fullscreenRef = useRef<HTMLDivElement | null>(null);\n  // fullscreen is for desired state\n  const [fullscreen, setFullscreen] = useState(false);\n  // isFullscreen is for true state\n  const isFullscreen = useFullscreen(fullscreenRef, fullscreen, {\n    onClose: () => setFullscreen(false),\n  });\n  const isFullScreenSupported = screenfull.isEnabled;\n  const audioTrack = useHMSStore(selectScreenShareAudioByPeerID(peer?.id));\n\n  if (\n    isLocal &&\n    track?.displaySurface &&\n    ![\"browser\", \"window\", \"application\"].includes(track.displaySurface)\n  ) {\n    return <ScreenshareDisplay />;\n  }\n\n  if (!peer) {\n    return null;\n  }\n\n  const label = getVideoTileLabel({\n    peerName: peer?.name,\n    isLocal: false,\n    track,\n  });\n\n  return (\n    <StyledVideoTile.Root\n      css={{\n        width,\n        height,\n        p: 0,\n        minHeight: 0,\n      }}\n      data-testid=\"screenshare_tile\"\n    >\n      <StyledVideoTile.Container\n        transparentBg\n        ref={fullscreenRef}\n        css={{ flexDirection: \"column\", gap: \"$2\" }}\n        onMouseEnter={() => setIsMouseHovered(true)}\n        onMouseLeave={() => {\n          setIsMouseHovered(false);\n        }}\n      >\n        {showStatsOnTiles ? (\n          <VideoTileStats\n            audioTrackID={audioTrack?.id}\n            videoTrackID={track?.id}\n            peerID={peerId}\n            isLocal={isLocal}\n          />\n        ) : null}\n        {isFullScreenSupported && isMouseHovered ? (\n          <StyledVideoTile.FullScreenButton\n            css={{ bg: `${theme.colors.background_dim.value}A3` }}\n            onClick={() => setFullscreen(!fullscreen)}\n          >\n            {isFullscreen ? <ShrinkIcon /> : <ExpandIcon />}\n          </StyledVideoTile.FullScreenButton>\n        ) : null}\n        {!isMobile && isMouseHovered && !isFullscreen && (\n          <Box\n            css={{\n              position: \"absolute\",\n              top: \"$2\",\n              r: \"$1\",\n              h: \"$14\",\n              right: isFullScreenSupported ? \"$17\" : \"$2\",\n              zIndex: 5,\n              bg: `${theme.colors.background_dim.value}A3`,\n            }}\n          >\n            <LayoutModeSelector />\n          </Box>\n        )}\n\n        {track ? (\n          <Video\n            screenShare={true}\n            mirror={false}\n            attach={!isAudioOnly}\n            trackId={track.id}\n            css={{ minHeight: 0 }}\n          />\n        ) : null}\n        <StyledVideoTile.Info css={labelStyles}>{label}</StyledVideoTile.Info>\n        {isMouseHovered && !peer.isLocal ? (\n          <TileMenu\n            isScreenshare\n            peerID={peer.id}\n            audioTrackID={audioTrack?.id}\n            videoTrackID={track?.id}\n            enableSpotlightingPeer={false}\n          />\n        ) : null}\n      </StyledVideoTile.Container>\n    </StyledVideoTile.Root>\n  );\n};\n\nconst ScreenshareTile = React.memo(Tile);\n\nexport default ScreenshareTile;\n", "import React, { useCallback, useState } from \"react\";\nimport {\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"@100mslive/react-icons\";\nimport {\n  LayoutMode,\n  LayoutModeIconMapping,\n  LayoutModeKeys,\n} from \"./Settings/LayoutSettings\";\nimport { Flex } from \"../../Layout\";\nimport { Popover } from \"../../Popover\";\nimport { Text } from \"../../Text\";\n// @ts-ignore: No implicit Any\nimport { useSetUiSettings } from \"../components/AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../common/constants\";\n\nexport const LayoutModeSelector = () => {\n  const [open, setOpen] = useState(false);\n  const [layoutMode, setLayoutMode] = useSetUiSettings(UI_SETTINGS.layoutMode);\n  const updateLayoutMode = useCallback(\n    (value: string) => {\n      setLayoutMode(value);\n      setOpen(false);\n    },\n    [setLayoutMode, setOpen]\n  );\n  return (\n    <Popover.Root open={open} onOpenChange={setOpen}>\n      <Popover.Trigger asChild>\n        <Flex\n          align=\"center\"\n          css={{\n            gap: \"$4\",\n            color: open ? \"$on_surface_low\" : \"$on_surface_medium\",\n            r: \"$1\",\n            p: \"$2 $4\",\n            height: \"100%\",\n          }}\n        >\n          <Flex\n            align=\"center\"\n            justify=\"center\"\n            css={{\n              color: \"inherit\",\n              \"& > svg\": {\n                w: \"$9\",\n                h: \"$9\",\n              },\n            }}\n          >\n            {LayoutModeIconMapping[layoutMode as LayoutModeKeys]}\n          </Flex>\n          <Text variant=\"caption\" css={{ color: \"inherit\", lineHeight: \"$sm\" }}>\n            {layoutMode}\n          </Text>\n          {open ? (\n            <ChevronUpIcon width={16} height={16} />\n          ) : (\n            <ChevronDownIcon width={16} height={16} />\n          )}\n        </Flex>\n      </Popover.Trigger>\n      <Popover.Content\n        css={{\n          w: \"10.75rem\",\n          r: \"$1\",\n          py: \"$4\",\n          px: 0,\n          backgroundColor: \"$surface_default\",\n          overflowY: \"auto\",\n          boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n          fontFamily: \"$sans\",\n          color: \"$on_surface_high\",\n        }}\n        side=\"bottom\"\n        sideOffset={8}\n        align=\"end\"\n      >\n        {Object.keys(LayoutMode).map((key) => {\n          const value = LayoutMode[key as LayoutModeKeys];\n          return (\n            <Flex\n              key={key}\n              onClick={() => updateLayoutMode(value)}\n              align=\"center\"\n              css={{\n                gap: \"$4\",\n                borderBottom: \"1px solid $border_bright\",\n                p: \"$8\",\n                \"&:hover\": {\n                  cursor: \"pointer\",\n                  bg: \"$surface_bright\",\n                },\n                \"&:focus-visible\": {\n                  bg: \"$surface_bright\",\n                },\n              }}\n            >\n              <Flex\n                align=\"center\"\n                justify=\"center\"\n                css={{\n                  color: \"$on_surface_medium\",\n                  \"& > svg\": {\n                    w: \"$9\",\n                    h: \"$9\",\n                  },\n                }}\n              >\n                {LayoutModeIconMapping[value]}\n              </Flex>\n              <Text variant=\"caption\" css={{ lineHeight: \"$sm\" }}>\n                {value}\n              </Text>\n              {value === layoutMode ? (\n                <CheckIcon\n                  width={20}\n                  height={20}\n                  style={{ marginLeft: \"auto\" }}\n                />\n              ) : null}\n            </Flex>\n          );\n        })}\n      </Popover.Content>\n    </Popover.Root>\n  );\n};\n", "import React from \"react\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CrossIcon, ShareScreenIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\n\nexport const ScreenshareDisplay = () => {\n  const hmsActions = useHMSActions();\n\n  return (\n    <Flex\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        size: \"100%\",\n        bg: \"$background_default\",\n        color: \"$on_surface_high\",\n      }}\n    >\n      <ShareScreenIcon width={48} height={48} />\n      <Text variant=\"h5\" css={{ m: \"$8 0\" }}>\n        You are sharing your screen\n      </Text>\n      <Button\n        variant=\"danger\"\n        css={{ fontWeight: \"$semiBold\" }}\n        onClick={async () => {\n          await hmsActions.setScreenShareEnabled(false);\n        }}\n        data-testid=\"stop_screen_share_btn\"\n      >\n        <CrossIcon width={18} height={18} />\n        &nbsp; Stop screen share\n      </Button>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useMemo } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Whiteboard } from \"@100mslive/hms-whiteboard\";\nimport {\n  selectPeerByCondition,\n  selectWhiteboard,\n  useHMSStore,\n  useWhiteboard,\n} from \"@100mslive/react-sdk\";\nimport { Box } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { InsetTile } from \"../InsetTile\";\nimport { SecondaryTiles } from \"../SecondaryTiles\";\nimport { LayoutMode } from \"../Settings/LayoutSettings\";\nimport { LayoutProps } from \"./interface\";\nimport { ProminenceLayout } from \"./ProminenceLayout\";\n// @ts-ignore: No implicit Any\nimport { useSetUiSettings } from \"../AppData/useUISettings\";\nimport { UI_SETTINGS } from \"../../common/constants\";\n// eslint-disable-next-line import/no-unresolved\nimport \"@100mslive/hms-whiteboard/index.css\";\n\nconst WhiteboardEmbed = () => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const { token, endpoint, zoomToContent } = useWhiteboard(isMobile);\n\n  if (!token) {\n    return null;\n  }\n\n  return (\n    <Box\n      css={{\n        mx: \"$8\",\n        flex: \"3 1 0\",\n        \"@lg\": {\n          flex: \"2 1 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <Box css={{ size: \"100%\" }}>\n        <Whiteboard\n          token={token}\n          endpoint={`https://${endpoint}`}\n          zoomToContent={zoomToContent}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport const WhiteboardLayout = ({\n  peers,\n  onPageChange,\n  onPageSize,\n  edgeToEdge,\n}: LayoutProps) => {\n  const whiteboard = useHMSStore(selectWhiteboard);\n  const whiteboardOwner = useHMSStore(\n    selectPeerByCondition((peer) => peer.customerUserId === whiteboard?.owner)\n  );\n  const [layoutMode, setLayoutMode] = useSetUiSettings(UI_SETTINGS.layoutMode);\n  const isMobile = useMedia(cssConfig.media.md);\n  const hasSidebar = !isMobile && layoutMode === LayoutMode.SIDEBAR;\n  const secondaryPeers = useMemo(() => {\n    if (layoutMode === LayoutMode.SPOTLIGHT) {\n      return [];\n    }\n    if (isMobile || layoutMode === LayoutMode.SIDEBAR) {\n      return whiteboardOwner\n        ? [\n            whiteboardOwner,\n            ...peers.filter((p) => p.id !== whiteboardOwner?.id),\n          ] //keep active sharing peer as first tile\n        : peers;\n    }\n    return peers.filter((p) => p.id !== whiteboardOwner?.id);\n  }, [whiteboardOwner, peers, isMobile, layoutMode]);\n\n  useEffect(() => {\n    if (isMobile) {\n      setLayoutMode(LayoutMode.GALLERY);\n      return;\n    }\n    if (layoutMode === LayoutMode.SIDEBAR) {\n      return;\n    }\n    setLayoutMode(LayoutMode.SIDEBAR);\n    return () => {\n      // reset to gallery once whiteboard is stopped\n      setLayoutMode(LayoutMode.GALLERY);\n    };\n  }, [isMobile]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <ProminenceLayout.Root edgeToEdge={edgeToEdge} hasSidebar={hasSidebar}>\n      <ProminenceLayout.ProminentSection>\n        <WhiteboardEmbed />\n      </ProminenceLayout.ProminentSection>\n      <SecondaryTiles\n        peers={secondaryPeers}\n        onPageChange={onPageChange}\n        onPageSize={onPageSize}\n        edgeToEdge={edgeToEdge}\n        hasSidebar={hasSidebar}\n      />\n      {layoutMode === LayoutMode.SPOTLIGHT && whiteboardOwner && (\n        <InsetTile peerId={whiteboardOwner?.id} />\n      )}\n    </ProminenceLayout.Root>\n  );\n};\n", "import {\n  HMSPeer,\n  HMSPeerID,\n  IStoreReadOnly,\n  selectDominantSpeaker,\n} from \"@100mslive/react-sdk\";\n\nclass PeersSorter {\n  storeUnsubscribe: undefined | (() => void) = undefined;\n  store: IStoreReadOnly<any>;\n  peers: Map<string, HMSPeer>;\n  lruPeers: Set<HMSPeerID>;\n  tilesPerPage!: number;\n  speaker?: HMSPeer;\n  listeners: Set<(peers: HMSPeer[]) => void>;\n\n  constructor(store: IStoreReadOnly<any>) {\n    this.store = store;\n    this.peers = new Map();\n    this.lruPeers = new Set();\n    this.speaker = undefined;\n    this.listeners = new Set();\n  }\n\n  setPeersAndTilesPerPage = ({\n    peers,\n    tilesPerPage,\n  }: {\n    peers: HMSPeer[];\n    tilesPerPage: number;\n  }) => {\n    this.speaker = undefined;\n    this.tilesPerPage = tilesPerPage;\n    const peerIds = new Set(peers.map((peer) => peer.id));\n    // remove existing peers which are no longer provided\n    this.peers.forEach((_, key) => {\n      if (!peerIds.has(key)) {\n        this.peers.delete(key);\n      }\n    });\n    this.lruPeers = new Set(\n      [...this.lruPeers].filter((peerId) => peerIds.has(peerId))\n    );\n    peers.forEach((peer) => {\n      this.peers.set(peer.id, peer);\n      if (this.lruPeers.size < tilesPerPage) {\n        this.lruPeers.add(peer.id);\n      }\n    });\n    if (!this.storeUnsubscribe) {\n      this.storeUnsubscribe = this.store.subscribe(\n        this.onDominantSpeakerChange,\n        selectDominantSpeaker\n      );\n    }\n    this.moveSpeakerToFront(this.speaker);\n  };\n\n  onUpdate = (cb: (peers: HMSPeer[]) => void) => {\n    this.listeners.add(cb);\n  };\n\n  stop = () => {\n    this.updateListeners();\n    this.listeners.clear();\n    this.storeUnsubscribe?.();\n    this.storeUnsubscribe = undefined;\n    this.speaker = undefined;\n  };\n\n  moveSpeakerToFront = (speaker?: HMSPeer) => {\n    if (!speaker) {\n      this.maintainLruSize(this.tilesPerPage);\n      this.updateListeners();\n      return;\n    }\n    if (\n      this.lruPeers.has(speaker.id) &&\n      this.lruPeers.size <= this.tilesPerPage\n    ) {\n      this.updateListeners();\n      return;\n    }\n    // delete to insert at beginning\n    this.lruPeers.delete(speaker.id);\n    // - 1 as we are going to insert the new speaker\n    this.maintainLruSize(this.tilesPerPage - 1);\n    this.lruPeers = new Set([speaker.id, ...this.lruPeers]);\n    this.updateListeners();\n  };\n\n  onDominantSpeakerChange = (speaker: HMSPeer | null) => {\n    // no speaker or is current speaker do nothing\n    if (!speaker || speaker.id === this.speaker?.id) {\n      return;\n    }\n    // if the active speaker is not from the peers passed ignore\n    if (!this.peers.has(speaker.id)) {\n      return;\n    }\n    this.speaker = speaker;\n    this.moveSpeakerToFront(speaker);\n  };\n\n  updateListeners = () => {\n    const orderedPeers: HMSPeer[] = [];\n    this.lruPeers.forEach((key) => {\n      const peer = this.peers.get(key);\n      if (peer) {\n        orderedPeers.push(peer);\n      }\n    });\n    this.peers.forEach((peer) => {\n      if (!this.lruPeers.has(peer.id) && peer) {\n        orderedPeers.push(peer);\n      }\n    });\n    this.listeners.forEach((listener) => listener?.(orderedPeers));\n  };\n\n  private maintainLruSize = (size: number) => {\n    const lruPeerArray = Array.from(this.lruPeers);\n    while (lruPeerArray.length > size && lruPeerArray.length) {\n      lruPeerArray.pop();\n    }\n    this.lruPeers = new Set(lruPeerArray);\n  };\n}\n\nexport default PeersSorter;\n", "import React, { useEffect, useMemo } from \"react\";\nimport {\n  selectAppData,\n  selectPeers,\n  selectPeerScreenSharing,\n  useEmbedShare,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { SecondaryTiles } from \"../components/SecondaryTiles\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { ProminenceLayout } from \"../components/VideoLayouts/ProminenceLayout\";\nimport { Box } from \"../../Layout\";\nimport {\n  useResetEmbedConfig,\n  useSetAppDataByKey,\n} from \"../components/AppData/useUISettings\";\nimport { APP_DATA } from \"../common/constants\";\n\nexport const EmbedView = () => {\n  return (\n    <EmbedScreenShareView>\n      <EmbedComponent />\n    </EmbedScreenShareView>\n  );\n};\n\nexport const EmbedScreenShareView = ({ children }) => {\n  const peers = useHMSStore(selectPeers);\n\n  const peerPresenting = useHMSStore(selectPeerScreenSharing);\n  const [, setActiveScreenSharePeer] = useSetAppDataByKey(\n    APP_DATA.activeScreensharePeerId\n  );\n\n  const smallTilePeers = useMemo(() => {\n    const smallTilePeers = peers.filter(\n      (peer) => peer.id !== peerPresenting?.id\n    );\n    return smallTilePeers;\n  }, [peers, peerPresenting]);\n\n  useEffect(() => {\n    setActiveScreenSharePeer(peerPresenting?.id);\n    return () => {\n      setActiveScreenSharePeer(\"\");\n    };\n  }, [peerPresenting?.id, setActiveScreenSharePeer]);\n  return (\n    <ProminenceLayout.Root>\n      <ProminenceLayout.ProminentSection>\n        {children}\n      </ProminenceLayout.ProminentSection>\n      <SecondaryTiles peers={smallTilePeers} />\n    </ProminenceLayout.Root>\n  );\n};\n/**\n * EmbedView is responsible for rendering the iframe and managing the screen sharing functionality.\n */\nconst EmbedComponent = () => {\n  const embedConfig = useHMSStore(selectAppData(APP_DATA.embedConfig));\n  const resetConfig = useResetEmbedConfig();\n\n  // need to send resetConfig to clear configuration, if stop screenshare occurs.\n  const { iframeRef, startEmbedShare, isEmbedShareInProgress } =\n    useEmbedShare(resetConfig);\n\n  useEffect(() => {\n    (async () => {\n      if (embedConfig && !isEmbedShareInProgress) {\n        try {\n          await startEmbedShare(embedConfig);\n        } catch (err) {\n          resetConfig();\n          ToastManager.addToast({\n            title: `Error while sharing embed url ${err.message || \"\"}`,\n            variant: \"error\",\n          });\n        }\n      }\n    })();\n  }, [isEmbedShareInProgress, embedConfig, startEmbedShare, resetConfig]);\n\n  return (\n    <Box\n      css={{\n        mx: \"$8\",\n        flex: \"3 1 0\",\n        \"@lg\": {\n          flex: \"2 1 0\",\n          display: \"flex\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <iframe\n        title=\"Embed View\"\n        ref={iframeRef}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          border: 0,\n          borderRadius: \"0.75rem\",\n        }}\n        allow=\"autoplay; clipboard-write;\"\n        referrerPolicy=\"no-referrer\"\n      />\n    </Box>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { usePDFShare } from \"@100mslive/react-sdk\";\nimport { ToastManager } from \"../components/Toast/ToastManager\";\nimport { Box } from \"../../Layout\";\nimport { EmbedScreenShareView } from \"./EmbedView\";\nimport {\n  usePDFConfig,\n  useResetPDFConfig,\n} from \"../components/AppData/useUISettings\";\n\n/**\n * PDFView is responsible for rendering the PDF iframe and managing the screen sharing functionality.\n */\nexport const PDFView = () => {\n  const pdfConfig = usePDFConfig();\n  const resetConfig = useResetPDFConfig();\n  // need to send resetConfig to clear configuration, if stop screenshare occurs.\n  const { iframeRef, startPDFShare, isPDFShareInProgress } =\n    usePDFShare(resetConfig);\n\n  useEffect(() => {\n    // no working in other useEffect, as return is called multiple time on state change\n    return () => {\n      resetConfig();\n    };\n  }, []);\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!isPDFShareInProgress && pdfConfig) {\n          await startPDFShare(pdfConfig);\n        }\n      } catch (err) {\n        resetConfig();\n        ToastManager.addToast({\n          title: `Error while sharing annotator ${err.message || \"\"}`,\n          variant: \"error\",\n        });\n      }\n    })();\n  }, [isPDFShareInProgress, pdfConfig, resetConfig, startPDFShare]);\n  return (\n    <EmbedScreenShareView>\n      <Box\n        css={{\n          mx: \"$8\",\n          flex: \"3 1 0\",\n          \"@lg\": {\n            flex: \"2 1 0\",\n            display: \"flex\",\n            alignItems: \"center\",\n          },\n        }}\n      >\n        <iframe\n          title=\"Embed View\"\n          ref={iframeRef}\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            border: 0,\n            borderRadius: \"0.75rem\",\n          }}\n          allow=\"autoplay; clipboard-write;\"\n          referrerPolicy=\"no-referrer\"\n        />\n      </Box>\n    </EmbedScreenShareView>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport Draggable, { ControlPosition } from \"react-draggable\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSTranscript,\n  selectIsTranscriptionEnabled,\n  selectPeerNameByID,\n  useHMSStore,\n  useTranscript,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { config } from \"../../Theme\";\n// @ts-ignore: No implicit Any\nimport { useIsSidepaneTypeOpen } from \"../components/AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport { useIsCaptionEnabled } from \"../components/AppData/useUISettings\";\nimport { useRoomLayoutConferencingScreen } from \"../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { SIDE_PANE_OPTIONS } from \"../common/constants\";\ninterface CaptionQueueData extends HMSTranscript {\n  transcriptQueue: SimpleQueue;\n}\n\ninterface TranscriptData extends HMSTranscript {\n  timeout?: NodeJS.Timeout | undefined;\n}\nclass SimpleQueue {\n  private storage: TranscriptData[] = [];\n  constructor(\n    private capacity: number = 3,\n    private MAX_STORAGE_TIME: number = 5000\n  ) {}\n  enqueue(data: TranscriptData): void {\n    if (!data.transcript.trim()) {\n      return;\n    }\n    if (this.size() === this.capacity && this.storage[this.size() - 1].final) {\n      this.dequeue(this.storage[this.size() - 1]);\n    }\n    if (this.size() === 0) {\n      this.storage.push(data);\n      this.addTimeout(this.storage[this.size() - 1], data.final);\n      return;\n    }\n    if (this.size() > 0 && this.storage[this.size() - 1]?.final === true) {\n      this.storage.push(data);\n      this.addTimeout(this.storage[this.size() - 1], data.final);\n      return;\n    }\n    this.storage[this.size() - 1].transcript = data.transcript;\n    this.storage[this.size() - 1].final = data.final;\n    this.storage[this.size() - 1].end = data.end;\n    this.addTimeout(this.storage[this.size() - 1], data.final);\n  }\n  addTimeout(item: TranscriptData, isFinal: boolean) {\n    if (!isFinal) {\n      return;\n    }\n    item.timeout = setTimeout(() => {\n      this.dequeue(item);\n    }, this.MAX_STORAGE_TIME);\n  }\n  dequeue(item: TranscriptData): TranscriptData | undefined {\n    const index = this.storage.indexOf(item);\n    if (index === -1) {\n      return undefined;\n    }\n    const removedItem = this.storage.splice(index, 1);\n    if (removedItem.length <= 0) {\n      return undefined;\n    }\n    this.clearTimeout(removedItem[0]);\n    return item;\n  }\n  clearTimeout(item: TranscriptData) {\n    if (!item.timeout) {\n      return;\n    }\n    clearTimeout(item.timeout);\n  }\n  peek(): TranscriptData | undefined {\n    if (this.size() <= 0) {\n      return undefined;\n    }\n    return this.storage[0];\n  }\n  getTranscription(): string {\n    let script = \"\";\n    this.storage.forEach(\n      (value: TranscriptData) => (script += value.transcript + \" \")\n    );\n    return script;\n  }\n  reset() {\n    this.storage.length = 0;\n  }\n  size(): number {\n    return this.storage.length;\n  }\n}\nclass Queue {\n  private storage: Record<string, CaptionQueueData> = {};\n  constructor(private capacity: number = 3) {}\n\n  enqueue(data: HMSTranscript): void {\n    if (this.size() === this.capacity) {\n      this.dequeue();\n    }\n    if (!this.storage[data.peer_id]) {\n      this.storage[data.peer_id] = {\n        peer_id: data.peer_id,\n        transcript: data.transcript,\n        final: data.final,\n        transcriptQueue: new SimpleQueue(),\n        start: data.start,\n        end: data.end,\n      };\n      this.storage[data.peer_id].transcriptQueue.enqueue(\n        data as TranscriptData\n      );\n      return;\n    }\n    this.storage[data.peer_id].transcriptQueue.enqueue(data as TranscriptData);\n  }\n  dequeue(): CaptionQueueData {\n    const key: string = Object.keys(this.storage).shift() || \"\";\n    const captionData = this.storage[key];\n    captionData.transcriptQueue.reset();\n    delete this.storage[key];\n    return captionData;\n  }\n\n  peek(): CaptionQueueData | undefined {\n    if (this.size() <= 0) return undefined;\n    const key: string = Object.keys(this.storage).shift() || \"\";\n    return this.storage[key];\n  }\n\n  findPeerData(): { [key: string]: string }[] {\n    const keys = Object.keys(this.storage);\n    const data = keys.map((key: string) => {\n      const data = this.storage[key];\n      const word = data.transcriptQueue.getTranscription();\n      return { [key]: word };\n    });\n    return data;\n  }\n  size(): number {\n    return Object.keys(this.storage).length;\n  }\n}\n\nclass CaptionMaintainerQueue {\n  captionData: Queue;\n  constructor() {\n    this.captionData = new Queue();\n  }\n  push(data: HMSTranscript[] = []) {\n    data.forEach((value: HMSTranscript) => {\n      this.captionData.enqueue(value);\n    });\n  }\n}\nconst TranscriptView = ({\n  peer_id,\n  data,\n}: {\n  peer_id: string;\n  data: string;\n}) => {\n  const peerName = useHMSStore(selectPeerNameByID(peer_id)) || \"Participant\";\n  data = data.trim();\n  if (!data) return null;\n  return (\n    <Text\n      variant=\"body2\"\n      css={{\n        fontWeight: \"$normal\",\n      }}\n    >\n      <b>{peerName}: </b>\n      {data}\n    </Text>\n  );\n};\n\nexport const CaptionsViewer = ({\n  defaultPosition,\n  setDefaultPosition,\n}: {\n  defaultPosition: ControlPosition;\n  setDefaultPosition: (position: ControlPosition) => void;\n}) => {\n  const { elements, screenType } = useRoomLayoutConferencingScreen();\n  const isMobile = useMedia(config.media.md);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n\n  const showCaptionAtTop = elements?.chat?.is_overlay && isChatOpen && isMobile;\n\n  const [captionQueue] = useState<CaptionMaintainerQueue>(\n    new CaptionMaintainerQueue()\n  );\n  const [currentData, setCurrentData] = useState<{ [key: string]: string }[]>(\n    []\n  );\n\n  const isCaptionEnabled = useIsCaptionEnabled();\n\n  const isTranscriptionEnabled = useHMSStore(selectIsTranscriptionEnabled);\n\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      if (!captionQueue) {\n        return;\n      }\n      const data = captionQueue.captionData?.findPeerData();\n      setCurrentData(data);\n    }, 1000);\n    return () => clearInterval(timeInterval);\n  }, [captionQueue]);\n\n  useTranscript({\n    onTranscript: (data: HMSTranscript[]) => {\n      captionQueue && captionQueue.push(data as HMSTranscript[]);\n    },\n  });\n  const dataToShow = currentData.filter((data: { [key: string]: string }) => {\n    const key = Object.keys(data)[0];\n    if (data[key]) {\n      return true;\n    }\n    return false;\n  });\n  if (\n    dataToShow.length <= 0 ||\n    screenType === \"hls_live_streaming\" ||\n    !isCaptionEnabled ||\n    !isTranscriptionEnabled\n  ) {\n    return null;\n  }\n  return (\n    <Draggable\n      bounds=\"parent\"\n      nodeRef={nodeRef}\n      defaultPosition={defaultPosition}\n      onStop={(_, data) => {\n        setDefaultPosition({ x: data.lastX, y: data.lastY });\n      }}\n    >\n      <Box\n        ref={nodeRef}\n        css={{\n          position: \"absolute\",\n          w: isMobile ? \"100%\" : \"40%\",\n          bottom: showCaptionAtTop ? \"\" : \"0\",\n          top: showCaptionAtTop ? \"0\" : \"\",\n          left: isMobile ? 0 : \"50%\",\n          transform: isMobile ? \"\" : \"translateX(-50%)\",\n          background: \"#000000A3\",\n          overflow: \"clip\",\n          zIndex: 10,\n          height: \"fit-content\",\n          r: \"$1\",\n          p: \"$6\",\n          transition: \"bottom 0.3s ease-in-out\",\n          \"&:empty\": { display: \"none\" },\n        }}\n      >\n        <Flex direction=\"column\">\n          {dataToShow.map((data: { [key: string]: string }, index: number) => {\n            const key = Object.keys(data)[0];\n            return (\n              <TranscriptView key={index} peer_id={key} data={data[key]} />\n            );\n          })}\n        </Flex>\n      </Box>\n    </Draggable>\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  selectPeerScreenSharing,\n  useHMSStore,\n  useWhiteboard,\n} from \"@100mslive/react-sdk\";\n\n/**\n * close existing whiteboard when a screen is shared\n */\nexport const useCloseScreenshareWhiteboard = () => {\n  const peerSharing = useHMSStore(selectPeerScreenSharing);\n  const { isOwner: isWhiteboardOwner, toggle: toggleWhiteboard } =\n    useWhiteboard();\n\n  // if both screenshare and whiteboard are open, close the whiteboard\n  useEffect(() => {\n    if (isWhiteboardOwner && peerSharing) {\n      toggleWhiteboard?.();\n    }\n  }, [isWhiteboardOwner, toggleWhiteboard, peerSharing]);\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSRoomState,\n  selectRoomState,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { config as cssConfig, Flex } from \"../../..\";\n// @ts-ignore: No implicit any\nimport { Logo, SpeakerTag } from \"./HeaderComponents\";\n// @ts-ignore: No implicit any\nimport { RoomDetailsHeader } from \"./RoomDetailsHeader\";\nimport {\n  LiveStatus,\n  RecordingPauseStatus,\n  RecordingStatus,\n  StreamActions,\n} from \"./StreamActions\";\n// @ts-ignore: No implicit any\nimport { AudioActions, CamaraFlipActions } from \"./common\";\n\nexport const Header = () => {\n  const roomState = useHMSStore(selectRoomState);\n  const isMobile = useMedia(cssConfig.media.md);\n  // Header should be present only inside the call - not in preview, leave room states\n  if (roomState !== HMSRoomState.Connected) {\n    return <></>;\n  }\n  return (\n    <Flex\n      justify=\"between\"\n      align=\"center\"\n      css={{ position: \"relative\", height: \"100%\" }}\n    >\n      <Flex align=\"center\" gap=\"2\" css={{ position: \"absolute\", left: \"$10\" }}>\n        <Logo />\n        <RoomDetailsHeader />\n        <SpeakerTag />\n        {isMobile && (\n          <Flex align=\"center\" css={{ gap: \"$4\" }}>\n            <LiveStatus />\n            <RecordingStatus />\n            <RecordingPauseStatus />\n          </Flex>\n        )}\n      </Flex>\n      <Flex\n        align=\"center\"\n        css={{\n          position: \"absolute\",\n          right: \"$10\",\n          gap: \"$4\",\n        }}\n      >\n        <StreamActions />\n        {isMobile ? (\n          <>\n            <CamaraFlipActions />\n            <AudioActions />\n          </>\n        ) : null}\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { ChevronRightIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useSheetToggle } from \"../AppData/useSheet\";\n// @ts-ignore\nimport { useSidepaneToggle } from \"../AppData/useSidepane\";\nimport { SHEET_OPTIONS, SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nexport const RoomDetailsHeader = () => {\n  const { title, description } = useRoomLayoutHeader();\n  const isMobile = useMedia(cssConfig.media.md);\n  const clipLength = 30;\n  const toggleDetailsPane = useSidepaneToggle(SIDE_PANE_OPTIONS.ROOM_DETAILS);\n  const toggleDetailsSheet = useSheetToggle(SHEET_OPTIONS.ROOM_DETAILS);\n\n  if ((!title && !description) || (isMobile && !title)) {\n    return null;\n  }\n\n  return (\n    <Flex\n      direction={isMobile ? \"row\" : \"column\"}\n      css={{ ml: \"$8\", alignItems: isMobile ? \"center\" : \"start\" }}\n    >\n      <Text\n        variant=\"sm\"\n        css={{ c: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n      >\n        {title}\n      </Text>\n      {!isMobile && (\n        <Flex align=\"end\" css={{ color: \"$on_surface_high\" }}>\n          <Text variant=\"xs\" css={{ c: \"$on_surface_medium\" }}>\n            {description.slice(0, clipLength)}\n          </Text>\n          {description.length > clipLength ? (\n            <span\n              style={{\n                fontWeight: \"600\",\n                fontSize: \"12px\",\n                cursor: \"pointer\",\n                lineHeight: \"1rem\",\n              }}\n              onClick={toggleDetailsPane}\n            >\n              &nbsp;...more\n            </span>\n          ) : null}\n        </Flex>\n      )}\n      {isMobile && description ? (\n        <Flex css={{ color: \"$on_surface_medium\" }}>\n          <ChevronRightIcon\n            height={16}\n            width={16}\n            onClick={toggleDetailsSheet}\n          />\n        </Flex>\n      ) : null}\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport {\n  DeviceType,\n  selectIsLocalVideoEnabled,\n  selectLocalVideoTrackID,\n  selectVideoTrackByID,\n  useDevices,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  BluetoothIcon,\n  CameraFlipIcon,\n  CheckIcon,\n  CrossIcon,\n  HeadphonesIcon,\n  SpeakerIcon,\n  TelePhoneIcon,\n} from \"@100mslive/react-icons\";\nimport { HorizontalDivider } from \"../../../Divider\";\nimport { Label } from \"../../../Label\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport IconButton from \"../../IconButton\";\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nexport const CamaraFlipActions = () => {\n  const actions = useHMSActions();\n  const { allDevices } = useDevices();\n  const { videoInput } = allDevices;\n  const isVideoOn = useHMSStore(selectIsLocalVideoEnabled);\n\n  const videoTrackId = useHMSStore(selectLocalVideoTrackID);\n  const localVideoTrack = useHMSStore(selectVideoTrackByID(videoTrackId));\n  if (!videoInput || !videoInput?.length || !localVideoTrack?.facingMode) {\n    return null;\n  }\n  return (\n    <Box>\n      <IconButton\n        disabled={!isVideoOn}\n        onClick={async () => {\n          try {\n            await actions.switchCamera();\n          } catch (e) {\n            ToastManager.addToast({\n              title: `Error while flipping camera ${e.message || \"\"}`,\n              variant: \"error\",\n            });\n          }\n        }}\n      >\n        <CameraFlipIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\n// It will handle and show audio input devices in Mweb while audio output devices in desktop\nexport const AudioActions = () => {\n  const { allDevices, selectedDeviceIDs, updateDevice } = useDevices();\n\n  // don't show speaker selector where the API is not supported, and use\n  // a generic word(\"Audio\") for Mic. In some cases(Chrome Android for example) this changes both mic and speaker keeping them in sync.\n  const shouldShowAudioOutput = \"setSinkId\" in HTMLMediaElement.prototype;\n  const { audioInput, audioOutput } = allDevices;\n  let availableAudioDevices = audioInput;\n  let selectedAudio = selectedDeviceIDs.audioInput;\n  if (shouldShowAudioOutput) {\n    availableAudioDevices = audioOutput;\n    selectedAudio = selectedDeviceIDs.audioOutput;\n  }\n  const hmsActions = useHMSActions();\n  const audioFiltered = availableAudioDevices?.find((item) => !!item.label);\n  const currentSelection = availableAudioDevices?.find(\n    (item) => item.deviceId === selectedAudio\n  );\n\n  if (!audioFiltered) {\n    return null;\n  }\n  let AudioIcon = <SpeakerIcon />;\n  if (\n    currentSelection &&\n    currentSelection.label.toLowerCase().includes(\"bluetooth\")\n  ) {\n    AudioIcon = <BluetoothIcon />;\n  } else if (\n    currentSelection &&\n    currentSelection.label.toLowerCase().includes(\"wired\")\n  ) {\n    AudioIcon = <HeadphonesIcon />;\n  } else if (\n    currentSelection &&\n    currentSelection.label.toLowerCase().includes(\"earpiece\")\n  ) {\n    AudioIcon = <TelePhoneIcon />;\n  }\n  return (\n    <AudioSelectionSheet\n      audioDevices={availableAudioDevices}\n      audioSelected={selectedAudio}\n      onChange={async (deviceId) => {\n        try {\n          await updateDevice({\n            deviceId,\n            deviceType: shouldShowAudioOutput\n              ? DeviceType.audioOutput\n              : DeviceType.audioInput,\n          });\n        } catch (e) {\n          ToastManager.addToast({\n            title: `Error while changing audio device ${e.message || \"\"}`,\n            variant: \"error\",\n          });\n        }\n      }}\n    >\n      <Box\n        onClick={async () => {\n          // refresh device as `devicechange` listener won't work in mobile device\n          await hmsActions.refreshDevices();\n        }}\n      >\n        <IconButton>{AudioIcon} </IconButton>\n      </Box>\n    </AudioSelectionSheet>\n  );\n};\n\nconst AudioSelectionSheet = ({\n  audioDevices,\n  audioSelected,\n  onChange,\n  children,\n}) => {\n  return (\n    <Sheet.Root>\n      <Sheet.Trigger asChild>{children}</Sheet.Trigger>\n      <Sheet.Content>\n        <Sheet.Title css={{ py: \"$10\", px: \"$8\", alignItems: \"center\" }}>\n          <Flex direction=\"row\" justify=\"between\" css={{ w: \"100%\" }}>\n            <Text variant=\"h6\" css={{ display: \"flex\" }}>\n              Audio\n            </Text>\n            <Sheet.Close>\n              <IconButton as=\"div\" data-testid=\"dialog_cross_icon\">\n                <CrossIcon />\n              </IconButton>\n            </Sheet.Close>\n          </Flex>\n        </Sheet.Title>\n        <HorizontalDivider />\n        <Flex\n          direction=\"column\"\n          css={{\n            px: \"$8\",\n            maxHeight: \"80vh\",\n            overflowY: \"auto\",\n          }}\n        >\n          {audioDevices.map((audioDevice) => {\n            return (\n              <SelectWithLabel\n                key={audioDevice.deviceId}\n                label={audioDevice.label}\n                id={audioDevice.deviceId}\n                checked={audioDevice.deviceId === audioSelected}\n                onChange={() => onChange(audioDevice.deviceId)}\n              />\n            );\n          })}\n        </Flex>\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\n\nconst SelectWithLabel = ({ label, icon = <></>, checked, id, onChange }) => {\n  return (\n    <Flex\n      align=\"center\"\n      css={{\n        my: \"$2\",\n        py: \"$8\",\n        w: \"100%\",\n        borderBottom: \"1px solid $border_default\",\n      }}\n      onClick={onChange}\n    >\n      <Label\n        htmlFor={id}\n        css={{\n          fontSize: \"$md\",\n          fontWeight: \"$semiBold\",\n          color: \"$on_surface_high\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"$8\",\n          flex: \"1 1 0\",\n        }}\n      >\n        {icon}\n        {label}\n      </Label>\n      {checked && <CheckIcon width={24} height={24} />}\n    </Flex>\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  selectLocalPeerRoleName,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { useMyMetadata } from \"./hooks/useMetadata\";\n\nexport const PreviousRoleInMetadata = () => {\n  const vanillaStore = useHMSVanillaStore();\n  const { updateMetaData } = useMyMetadata();\n\n  useEffect(() => {\n    let previousRole = vanillaStore.getState(selectLocalPeerRoleName);\n    const unsubscribe = vanillaStore.subscribe((currentRole) => {\n      if (previousRole !== currentRole && currentRole) {\n        updateMetaData({ prevRole: previousRole });\n        previousRole = currentRole;\n      }\n    }, selectLocalPeerRoleName);\n    return unsubscribe;\n  }, [vanillaStore]); //eslint-disable-line\n  return null;\n};\n", "import React, { Component } from \"react\";\nimport { CopyIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { Tooltip } from \"../../Tooltip\";\n\nexport class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null, isErrorCopied: false };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(`react error boundary - ${error.message}`, error, errorInfo);\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error?.message,\n      errorInfo: errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          css={{\n            size: \"100%\",\n            height: \"100vh\",\n            width: \"100%\",\n            color: \"$on_primary_high\",\n            backgroundColor: \"$background_default\",\n          }}\n        >\n          <Box\n            css={{\n              position: \"relative\",\n              overflow: \"hidden\",\n              r: \"$3\",\n              height: \"100%\",\n              width: \"100%\",\n            }}\n          >\n            <Flex\n              direction=\"column\"\n              css={{\n                position: \"absolute\",\n                size: \"100%\",\n                top: \"33.33%\",\n                left: 0,\n              }}\n            >\n              <div style={{ margin: \"1.5rem\", width: \"100%\" }}>\n                <Text>Something went wrong</Text>\n                <Text>Message: ${this.state.error}</Text>\n                <br />\n                Please reload to see if it works. If you think this is a mistake\n                on our side, please reach out to us on\n                <a\n                  href=\"https://discord.com/invite/kGdmszyzq2\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Discord\n                </a>\n              </div>\n              <Flex>\n                <Tooltip title=\"Reload page\">\n                  <Button\n                    onClick={() => {\n                      window.location.reload();\n                    }}\n                    css={{ mx: \"$8\" }}\n                    data-testid=\"join_again_btn\"\n                  >\n                    Reload\n                  </Button>\n                </Tooltip>\n                <Tooltip title=\"Copy error details to clipboard\">\n                  <Button\n                    onClick={() => {\n                      const { error, errorInfo } = this.state;\n                      navigator.clipboard.writeText(\n                        JSON.stringify({\n                          error,\n                          errorInfo,\n                        })\n                      );\n                      this.setState({ isErrorCopied: true });\n                    }}\n                    css={{ mx: \"$8\" }}\n                    data-testid=\"join_again_btn\"\n                  >\n                    <CopyIcon />{\" \"}\n                    {this.state.isErrorCopied ? \"Copied\" : \"Copy Details\"}\n                  </Button>\n                </Tooltip>\n              </Flex>\n\n              <details style={{ whiteSpace: \"pre-wrap\", margin: \"1.5rem\" }}>\n                <Text>{this.state.error && this.state.error.toString()}</Text>\n                <br />\n                <Text>{JSON.stringify(this.state.errorInfo)}</Text>\n              </details>\n            </Flex>\n          </Box>\n        </Flex>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n", "import React, { useEffect } from \"react\";\nimport { useTheme } from \"../../../\";\nimport { FeatureFlagsInit } from \"../../services/FeatureFlags\";\n\nconst Init = () => {\n  const { toggleTheme } = useTheme();\n\n  useEffect(() => {\n    window.toggleUiTheme = toggleTheme;\n  }, [toggleTheme]);\n\n  useEffect(() => {\n    function resetHeight() {\n      // reset the body height to that of the inner browser\n      // The window.innerHeight property returns integer values. When the actual height is in decimal, window.innerHeight returns a larger value than the actual value. This can cause a scrollbar to appear on some screens.\n      // Hence using window.visualViewport.height which returns a decimal value.\n      document.body.style.height = `${\n        window.visualViewport?.height || window.innerHeight\n      }px`;\n    }\n    // reset the height whenever the window's resized\n    window.addEventListener(\"resize\", resetHeight);\n    // called to initially set the height.\n    resetHeight();\n    return () => {\n      window.removeEventListener(\"resize\", resetHeight);\n    };\n  }, []);\n\n  return <FeatureFlagsInit />;\n};\n\nexport { Init };\n", "import { useEffect } from \"react\";\nimport { selectRoomID, useHMSStore } from \"@100mslive/react-sdk\";\n\nexport class FeatureFlags {\n  static enableTranscription =\n    process.env.REACT_APP_ENABLE_TRANSCRIPTION === \"true\";\n  static enableStatsForNerds =\n    process.env.REACT_APP_ENABLE_STATS_FOR_NERDS === \"true\";\n  static enableWhiteboard =\n    process.env.REACT_APP_ENABLE_WHITEBOARD &&\n    process.env.REACT_APP_PUSHER_APP_KEY &&\n    process.env.REACT_APP_PUSHER_AUTHENDPOINT;\n\n  static init(roomId) {\n    if (!window.HMS) {\n      window.HMS = {};\n    }\n    // some extra config to hls js to bring down latency\n    window.HMS.OPTIMISE_HLS_LATENCY = false;\n    // ask permissions in preview even if role doesn't have it\n    window.HMS.ALWAYS_REQUEST_PERMISSIONS = false;\n    window.HMS.SHOW_NS = process.env.REACT_APP_ENV !== \"prod\";\n\n    this.enableTranscription =\n      process.env.REACT_APP_TRANSCRIPTION_ROOM_ID === roomId;\n  }\n\n  static showNS() {\n    return window.HMS.SHOW_NS;\n  }\n\n  static optimiseHLSLatency() {\n    return window.HMS.OPTIMISE_HLS_LATENCY;\n  }\n\n  static alwaysRequestPermissions() {\n    return window.HMS.ALWAYS_REQUEST_PERMISSIONS;\n  }\n}\n\nexport function FeatureFlagsInit() {\n  const roomId = useHMSStore(selectRoomID);\n  useEffect(() => {\n    if (roomId) {\n      FeatureFlags.init(roomId);\n    }\n  }, [roomId]);\n  return null;\n}\n", "import { useEffect } from \"react\";\nimport {\n  selectAppData,\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n  useHMSActions,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { APP_DATA, isMacOS } from \"../../common/constants\";\n\nlet isEvenListenersAttached = false;\nexport class KeyboardInputManager {\n  #actions;\n  #store;\n  constructor(store, actions) {\n    this.#actions = actions;\n    this.#store = store;\n  }\n  #toggleAudio = async () => {\n    const enabled = this.#store.getState(selectIsLocalAudioEnabled);\n    await this.#actions.setLocalAudioEnabled(!enabled);\n  };\n\n  #toggleVideo = async () => {\n    const enabled = this.#store.getState(selectIsLocalVideoEnabled);\n    await this.#actions.setLocalVideoEnabled(!enabled);\n  };\n\n  #hideSidepane = () => {\n    if (this.#store.getState(selectAppData(APP_DATA.sidePane))) {\n      this.#actions.setAppData(APP_DATA.sidePane, \"\");\n    }\n  };\n\n  #toggleStatsForNerds = () => {\n    const uiSettings = this.#store.getState(selectAppData(APP_DATA.uiSettings));\n    const statsEnabled = uiSettings.showStatsOnTiles;\n    this.#actions.setAppData(APP_DATA.uiSettings, {\n      ...uiSettings,\n      showStatsOnTiles: !statsEnabled,\n    });\n  };\n\n  #toggleHlsStats = () => {\n    this.#actions.setAppData(\n      APP_DATA.hlsStats,\n      !this.#store.getState(selectAppData(APP_DATA.hlsStats))\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  #keyDownHandler = async (e) => {\n    const CONTROL_KEY = isMacOS ? e.metaKey : e.ctrlKey;\n    const D_KEY = e.key === \"d\" || e.key === \"D\";\n    const E_KEY = e.key === \"e\" || e.key === \"E\";\n    const SNF_KEY = e.key === \"]\" || e.key === \"}\";\n\n    const SHORTCUT_TOGGLE_AUDIO = CONTROL_KEY && D_KEY;\n    const SHORTCUT_TOGGLE_VIDEO = CONTROL_KEY && E_KEY;\n    const SHORTCUT_SIDEPANE_CLOSE = e.key === \"Escape\";\n    const SHORTCUT_STATS_FOR_NERDS = CONTROL_KEY && SNF_KEY;\n\n    if (SHORTCUT_TOGGLE_AUDIO) {\n      e.preventDefault();\n      await this.#toggleAudio();\n    } else if (SHORTCUT_TOGGLE_VIDEO) {\n      e.preventDefault();\n      await this.#toggleVideo();\n    } else if (SHORTCUT_SIDEPANE_CLOSE) {\n      this.#hideSidepane();\n    } else if (SHORTCUT_STATS_FOR_NERDS) {\n      this.#toggleHlsStats();\n      this.#toggleStatsForNerds();\n    }\n  };\n\n  #bind = () => {\n    document.addEventListener(\"keydown\", this.#keyDownHandler, false);\n  };\n\n  #unbind = () => {\n    document.removeEventListener(\"keydown\", this.#keyDownHandler, false);\n  };\n\n  bindAllShortcuts = () => {\n    if (!isEvenListenersAttached) {\n      this.#bind();\n      isEvenListenersAttached = true;\n    }\n  };\n\n  unbindAllShortcuts = () => {\n    if (isEvenListenersAttached) {\n      this.#unbind();\n      isEvenListenersAttached = false;\n    }\n  };\n}\n\nexport const KeyboardHandler = () => {\n  const store = useHMSVanillaStore();\n  const actions = useHMSActions();\n\n  useEffect(() => {\n    const keyboardManager = new KeyboardInputManager(store, actions);\n    keyboardManager.bindAllShortcuts();\n    return keyboardManager.unbindAllShortcuts;\n  }, [actions, store]);\n  return null;\n};\n", "import React from \"react\";\nimport { ExitIcon } from \"@100mslive/react-icons\";\nimport { Feedback } from \"./EndCallFeedback/Feedback\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"./Toast/ToastManager\";\nimport { Button } from \"../../Button\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { useHMSAppStateContext } from \"../AppStateContext\";\nimport { Header } from \"./Header\";\n// @ts-ignore: No implicit Any\nimport {\n  defaultPreviewPreference,\n  UserPreferencesKeys,\n  useUserPreferences,\n} from \"./hooks/useUserPreferences\";\nimport { textEllipsis } from \"../../utils\";\n\nexport const LeaveScreen = () => {\n  const { rejoin } = useHMSAppStateContext();\n  const [previewPreference] = useUserPreferences(\n    UserPreferencesKeys.PREVIEW,\n    defaultPreviewPreference\n  );\n  return (\n    <Flex direction=\"column\" css={{ size: \"100%\" }}>\n      <Box css={{ h: \"$18\", \"@md\": { h: \"$17\" } }} data-testid=\"header\">\n        <Header />\n      </Box>\n      <Flex\n        justify=\"center\"\n        direction=\"column\"\n        align=\"center\"\n        css={{ bg: \"$background_dim\", flex: \"1 1 0\", position: \"relative\" }}\n      >\n        <Text variant=\"h2\" css={{ fontWeight: \"$semiBold\" }}>\n          \uD83D\uDC4B\n        </Text>\n        <Text\n          variant=\"h4\"\n          css={{\n            color: \"$on_surface_high\",\n            fontWeight: \"$semiBold\",\n            mt: \"$12\",\n          }}\n        >\n          You left the room\n        </Text>\n        <Text\n          variant=\"body1\"\n          css={{\n            color: \"$on_surface_medium\",\n            mt: \"$8\",\n            fontWeight: \"$regular\",\n            textAlign: \"center\",\n          }}\n        >\n          Have a nice day\n          {previewPreference.name && (\n            <Box as=\"span\" css={{ ...textEllipsis(100) }}>\n              , {previewPreference.name}\n            </Box>\n          )}\n          !\n        </Text>\n        <Flex css={{ mt: \"$14\", gap: \"$10\", alignItems: \"center\" }}>\n          <Text\n            variant=\"body1\"\n            css={{ color: \"$on_surface_medium\", fontWeight: \"$regular\" }}\n          >\n            Left by mistake?\n          </Text>\n          <Button\n            onClick={() => {\n              rejoin();\n              ToastManager.clearAllToast();\n            }}\n            data-testid=\"join_again_btn\"\n          >\n            <ExitIcon />\n            <Text css={{ ml: \"$3\", fontWeight: \"$semiBold\", color: \"inherit\" }}>\n              Rejoin\n            </Text>\n          </Button>\n        </Flex>\n        <Feedback />\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Flex } from \"../../../Layout\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { FEEBACK_INDEX, FeedbackHeader, FeedbackModal } from \"./FeedbackForm\";\nimport { ThankyouView } from \"./ThankyouView\";\nimport { useRoomLayoutLeaveScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const Feedback = () => {\n  const { feedback } = useRoomLayoutLeaveScreen();\n  const [index, setIndex] = useState(FEEBACK_INDEX.INIT);\n  const isMobile = useMedia(cssConfig.media.md);\n\n  if (!feedback) {\n    return null;\n  }\n  const { ratings } = feedback;\n  if (!ratings) {\n    return null;\n  }\n  ratings.sort((a, b) => {\n    if (!a.value || !b.value) {\n      return 0;\n    }\n    return a.value - b.value;\n  });\n  // TO show thank ypu page\n  if (index === FEEBACK_INDEX.THANK_YOU) {\n    return (\n      <Flex\n        justify=\"center\"\n        css={{\n          pt: \"$16\",\n        }}\n      >\n        <ThankyouView />\n      </Flex>\n    );\n  }\n  return (\n    <Flex\n      justify=\"center\"\n      css={{\n        pt: \"$16\",\n        w: isMobile ? \"100%\" : \"528px\",\n      }}\n    >\n      {index === FEEBACK_INDEX.INIT ? (\n        <Flex\n          css={{\n            p: isMobile ? \"$10\" : \"$12\",\n            border: \"1px solid $border_default\",\n            bg: \"$surface_dim\",\n            borderRadius: !isMobile ? \"$3\" : \"$3 $3 0 0\",\n            gap: \"$10\",\n            \"@md\": {\n              position: \"absolute\",\n              bottom: \"0\",\n              w: \"100%\",\n            },\n          }}\n          direction=\"column\"\n        >\n          <FeedbackHeader ratings={ratings} onEmojiClicked={setIndex} />\n        </Flex>\n      ) : (\n        <FeedbackModal ratings={ratings} index={index} setIndex={setIndex} />\n      )}\n    </Flex>\n  );\n};\n", "import React, { useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { Rating } from \"@100mslive/types-prebuilt/elements/feedback\";\nimport { useHMSActions } from \"@100mslive/react-sdk\";\nimport { CheckIcon, CrossIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { Checkbox } from \"../../../Checkbox\";\nimport { Label } from \"../../../Label\";\nimport { Flex } from \"../../../Layout\";\nimport { Dialog } from \"../../../Modal\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\nimport { TextArea } from \"../../../TextArea\";\nimport { config as cssConfig } from \"../../../Theme\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\nimport { useRoomLayoutLeaveScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n\nexport const FEEBACK_INDEX = {\n  THANK_YOU: -10,\n  INIT: -1,\n};\nexport const FeedbackModal = ({\n  ratings,\n  index,\n  setIndex,\n}: {\n  ratings: Rating[];\n  index: number;\n  setIndex: (index: number) => void;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const onOpenChange = () => {\n    setIndex(FEEBACK_INDEX.INIT);\n  };\n  const avoidDefaultDomBehavior = (e: Event) => {\n    e.preventDefault();\n  };\n  if (isMobile) {\n    return (\n      <Sheet.Root\n        open={index !== FEEBACK_INDEX.INIT}\n        onOpenChange={onOpenChange}\n      >\n        <Sheet.Content\n          css={{ bg: \"$surface_dim\", p: \"$10\", overflowY: \"auto\" }}\n          onPointerDownOutside={avoidDefaultDomBehavior}\n          onInteractOutside={avoidDefaultDomBehavior}\n        >\n          <FeedbackContent\n            ratings={ratings}\n            indexSelected={index}\n            setIndex={setIndex}\n          />\n        </Sheet.Content>\n      </Sheet.Root>\n    );\n  }\n  return (\n    <Dialog.Root\n      open={index !== FEEBACK_INDEX.INIT}\n      onOpenChange={onOpenChange}\n    >\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ bg: \"$surface_dim\", width: \"528px\", p: \"$12\" }}\n          onPointerDownOutside={avoidDefaultDomBehavior}\n          onInteractOutside={avoidDefaultDomBehavior}\n        >\n          <FeedbackContent\n            ratings={ratings}\n            indexSelected={index}\n            setIndex={setIndex}\n          />\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n\nexport const FeedbackContent = ({\n  ratings,\n  indexSelected,\n  setIndex,\n}: {\n  ratings: Rating[];\n  indexSelected: number;\n  setIndex: (index: number) => void;\n}) => {\n  const { feedback } = useRoomLayoutLeaveScreen();\n  const { endpoints } = useHMSPrebuiltContext();\n  const isMobile = useMedia(cssConfig.media.md);\n  const hmsActions = useHMSActions();\n  const [comment, setComment] = useState(\"\");\n  const [selectedReasons, setSelectedReasons] = useState(new Set<number>());\n  const handleCheckedChange = (checked: boolean | string, index: number) => {\n    const newSelected = new Set(selectedReasons);\n    if (checked) {\n      newSelected.add(index);\n    } else {\n      newSelected.delete(index);\n    }\n    setSelectedReasons(newSelected);\n  };\n  const submitFeedback = async () => {\n    if (indexSelected < 0 || ratings.length <= indexSelected) {\n      return;\n    }\n    try {\n      const reasons = [...selectedReasons].map(\n        (value: number) => ratings[indexSelected]?.reasons?.[value] || \"\"\n      );\n      await hmsActions.submitSessionFeedback(\n        {\n          question: `${feedback?.title} | ${\n            ratings[indexSelected].question || \"\"\n          }`,\n          rating: ratings[indexSelected].value || 1,\n          min_rating: 1,\n          max_rating: ratings.length,\n          reasons: selectedReasons.size === 0 ? [] : reasons,\n          comment: comment,\n        },\n        endpoints?.event\n      );\n    } catch (e) {\n      console.error(e);\n    }\n    // always submit and take it to thankyou page\n    setIndex(FEEBACK_INDEX.THANK_YOU);\n  };\n  return (\n    <Flex\n      css={{\n        p: indexSelected === FEEBACK_INDEX.INIT ? \"$12 !important\" : \"0\",\n        bg: \"$surface_dim\",\n        r: \"$3\",\n        gap: \"$10\",\n      }}\n      direction=\"column\"\n    >\n      <FeedbackHeader\n        ratings={ratings}\n        indexSelected={indexSelected}\n        onEmojiClicked={(value: number) => {\n          setSelectedReasons(new Set<number>());\n          setIndex(value);\n        }}\n      />\n      <FeedbackForm\n        rating={ratings[indexSelected]}\n        comment={comment}\n        setComment={setComment}\n        selectedReasons={selectedReasons}\n        handleCheckedChange={handleCheckedChange}\n      />\n      <Button\n        type=\"submit\"\n        icon\n        css={{\n          alignSelf: isMobile ? \"\" : \"end\",\n        }}\n        onClick={submitFeedback}\n      >\n        {feedback?.submit_btn_label || \"Submit Feedback\"}\n      </Button>\n    </Flex>\n  );\n};\nexport const FeedbackHeader = ({\n  onEmojiClicked,\n  ratings,\n  indexSelected = FEEBACK_INDEX.INIT,\n}: {\n  onEmojiClicked: (index: number) => void;\n  ratings: Rating[];\n  indexSelected?: number;\n}) => {\n  const isMobile = useMedia(cssConfig.media.md);\n  const { feedback } = useRoomLayoutLeaveScreen();\n  return (\n    <>\n      <Flex align=\"center\">\n        <Flex\n          direction=\"column\"\n          css={{\n            flex: \"1 1 0\",\n          }}\n        >\n          <Text\n            variant={isMobile ? \"h6\" : \"h5\"}\n            css={{\n              c: \"$on_surface_high\",\n              fontStyle: \"normal\",\n            }}\n          >\n            {feedback?.title || \"How was your experience?\"}\n          </Text>\n          <Text\n            variant={isMobile ? \"body2\" : \"body1\"}\n            css={{\n              c: \"$on_surface_medium\",\n              opacity: 0.9,\n              fontWeight: \"$regular\",\n            }}\n          >\n            {feedback?.sub_title || \"Your answers help us improve the quality.\"}\n          </Text>\n        </Flex>\n        {indexSelected !== FEEBACK_INDEX.INIT ? (\n          <CrossIcon\n            width=\"24px\"\n            height=\"24px\"\n            color=\"white\"\n            onClick={() => onEmojiClicked(FEEBACK_INDEX.INIT)}\n          />\n        ) : null}\n      </Flex>\n      <Flex\n        justify=\"between\"\n        css={{\n          gap: \"$17\",\n          c: \"$on_surface_high\",\n          \"@md\": {\n            gap: \"0\",\n          },\n        }}\n      >\n        {ratings.map((element, index) => {\n          return (\n            <Flex\n              align=\"center\"\n              direction=\"column\"\n              css={{\n                c:\n                  indexSelected === index ||\n                  indexSelected === FEEBACK_INDEX.INIT\n                    ? \"$on_surface_high\"\n                    : \"$on_surface_default\",\n                gap: \"$4\",\n              }}\n              onClick={() => onEmojiClicked(index)}\n              key={`${index}`}\n            >\n              <Text\n                css={{\n                  fontWeight: \"$semiBold\",\n                  fontSize: \"$h4\",\n                  pb: \"$1\",\n                  cursor: \"pointer\",\n                  opacity:\n                    indexSelected === index ||\n                    indexSelected === FEEBACK_INDEX.INIT\n                      ? 1\n                      : 0.2,\n                  \"@md\": {\n                    fontSize: \"$h5\",\n                  },\n                }}\n              >\n                {element.emoji}\n              </Text>\n              <Text\n                variant={isMobile ? \"body2\" : \"body1\"}\n                css={{\n                  c:\n                    indexSelected === index ||\n                    indexSelected === FEEBACK_INDEX.INIT\n                      ? \"$on_surface_medium\"\n                      : \"$on_surface_low\",\n                  fontWeight: \"$regular\",\n                }}\n              >\n                {element.label}\n              </Text>\n            </Flex>\n          );\n        })}\n      </Flex>\n    </>\n  );\n};\nexport const FeedbackForm = ({\n  rating,\n  comment,\n  setComment,\n  selectedReasons,\n  handleCheckedChange,\n}: {\n  rating: Rating;\n  comment: string;\n  setComment: (value: string) => void;\n  selectedReasons: Set<number>;\n  handleCheckedChange: (checked: string | boolean, index: number) => void;\n}) => {\n  const { feedback } = useRoomLayoutLeaveScreen();\n  return (\n    <>\n      {rating.reasons && rating.reasons.length > 0 && (\n        <Flex\n          direction=\"column\"\n          css={{\n            gap: \"$4\",\n          }}\n        >\n          <Text\n            variant=\"sub2\"\n            css={{\n              c: \"$on_surface_high\",\n              fontWeight: \"$semiBold\",\n              fontSize: \"$sm\",\n              px: \"$2\",\n            }}\n          >\n            {rating.question || \"What do you like/dislike here?\"}\n          </Text>\n          <Flex\n            css={{\n              alignItems: \"flex-start\",\n              alignSelf: \"stretch\",\n              flexWrap: \"wrap\",\n              gap: \"$6\",\n              flex: \"1 1 calc(25% - 12px)\",\n              \"@md\": {\n                flex: \"1 1 calc(50% - 12px)\",\n              },\n              \"@sm\": {\n                flex: \"1 1 100%\",\n              },\n            }}\n          >\n            {rating.reasons.map((option: string, index: number) => {\n              return (\n                <Flex\n                  align=\"center\"\n                  gap=\"2\"\n                  key={index}\n                  css={{\n                    border: \"1px solid $border_bright\",\n                    r: \"$1\",\n                    p: \"$6\",\n                  }}\n                >\n                  <Checkbox.Root\n                    id={`${option}-${index}`}\n                    checked={selectedReasons.has(index)}\n                    onCheckedChange={(checked) =>\n                      handleCheckedChange(checked, index)\n                    }\n                    css={{\n                      cursor: \"pointer\",\n                      flexShrink: 0,\n                      bg: \"$on_secondary_low\",\n                      border: \"1px solid $border_bright\",\n                    }}\n                  >\n                    <Checkbox.Indicator>\n                      <CheckIcon width={12} height={12} />\n                    </Checkbox.Indicator>\n                  </Checkbox.Root>\n                  <Label\n                    htmlFor={`${option}-${index}`}\n                    css={{\n                      color: \"$on_surface_high\",\n                      fontSize: \"$sm\",\n                      fontWeight: \"$regular\",\n                      lineHeight: \"20px\" /* 142.857% */,\n                    }}\n                  >\n                    {option}\n                  </Label>\n                </Flex>\n              );\n            })}\n          </Flex>\n        </Flex>\n      )}\n      {feedback?.comment && (\n        <Flex\n          direction=\"column\"\n          css={{\n            gap: \"$4\",\n          }}\n        >\n          <Text\n            variant=\"body2\"\n            css={{\n              c: \"$on_surface_high\",\n              fontWeight: \"$regular\",\n              fontSize: \"$sm\",\n            }}\n          >\n            {feedback?.comment.label || \"Additional comments (optional)\"}\n          </Text>\n          <TextArea\n            maxLength={1024}\n            placeholder={feedback?.comment.placeholder || \"Tell us more...\"}\n            css={{\n              backgroundColor: \"$surface_bright\",\n              border: \"1px solid $border_bright\",\n              resize: \"none\",\n              height: \"$36\",\n              display: \"flex\",\n            }}\n            value={comment}\n            onChange={(event) => setComment(event.target.value.trimStart())}\n          />\n        </Flex>\n      )}\n    </>\n  );\n};\n", "import React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { UserMusicIcon } from \"@100mslive/react-icons\";\nimport { Flex } from \"../../../Layout\";\nimport { Text } from \"../../../Text\";\nimport { config as cssConfig } from \"../../../Theme\";\n\nexport const ThankyouView = () => {\n  const isMobile = useMedia(cssConfig.media.md);\n  return (\n    <Flex\n      direction={isMobile ? \"column\" : \"row\"}\n      align=\"center\"\n      css={{\n        gap: \"$10\",\n        border: \"1px solid $border_default\",\n        borderRadius: !isMobile ? \"$3\" : \"$3 $3 0 0\",\n        bg: \"$surface_dim\",\n        w: !isMobile ? \"528px\" : \"410px\",\n        p: \"$12\",\n        pb: isMobile ? \"$16\" : \"$12\",\n        \"@md\": {\n          position: \"absolute\",\n          bottom: \"0\",\n        },\n      }}\n    >\n      <UserMusicIcon width=\"64px\" height=\"64px\" />\n      <Flex direction=\"column\" align={isMobile ? \"center\" : \"start\"}>\n        <Text variant=\"h5\">Thank you for your feedback</Text>\n        <Text\n          variant=\"body1\"\n          css={{\n            fontWeight: \"$regular\",\n            fontSize: \"$md\",\n            opacity: \"0.9\",\n          }}\n        >\n          Your answers help us improve.\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport { match, P } from \"ts-pattern\";\nimport { RefreshIcon } from \"@100mslive/react-icons\";\nimport { Button } from \"../../Button\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Dialog } from \"../../Modal\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig } from \"../../Theme\";\nimport { useLandscapeHLSStream } from \"../common/hooks\";\n// @ts-ignore\nimport { isMobileUserAgent } from \"../common/utils\";\n\nexport const MwebLandscapePrompt = () => {\n  const [showMwebLandscapePrompt, setShowMwebLandscapePrompt] = useState(false);\n  const isLandscape = useMedia(cssConfig.media.ls);\n  const isLandscapeHLSStream = useLandscapeHLSStream();\n\n  useEffect(() => {\n    if (!isMobileUserAgent) {\n      setShowMwebLandscapePrompt(false);\n      return;\n    }\n\n    if (!window.screen?.orientation) {\n      setShowMwebLandscapePrompt(isLandscape && !isLandscapeHLSStream);\n      return;\n    }\n    const handleRotation = () => {\n      const angle = window.screen.orientation.angle;\n      const type = window.screen.orientation.type || \"\";\n      // Angle check needed to diff bw mobile and desktop\n      setShowMwebLandscapePrompt(\n        match({ angle, isLandscapeHLSStream, isLandscape, type })\n          .with({ isLandscapeHLSStream: true }, () => false)\n          .with(\n            { angle: P.when((angle) => angle && angle >= 90) },\n            ({ type }) => type.includes(\"landscape\")\n          )\n          .otherwise(() => isLandscape)\n      );\n    };\n    handleRotation();\n    window.screen.orientation.addEventListener(\"change\", handleRotation);\n    return () => {\n      window.screen.orientation.removeEventListener(\"change\", handleRotation);\n    };\n  }, [isLandscape, isLandscapeHLSStream]);\n\n  if (isLandscapeHLSStream) {\n    return null;\n  }\n  return (\n    <Dialog.Root\n      open={showMwebLandscapePrompt}\n      onOpenChange={setShowMwebLandscapePrompt}\n    >\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{ w: \"min(420px, 90%)\", p: \"$8\", bg: \"$surface_dim\" }}\n        >\n          <Box>\n            <Flex\n              css={{\n                color: \"$primary_default\",\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <RefreshIcon style={{ marginRight: \"0.5rem\" }} />\n              <Text\n                variant=\"lg\"\n                css={{ color: \"$on_surface_high\", fontWeight: \"$semiBold\" }}\n              >\n                Please rotate your device\n              </Text>\n            </Flex>\n            <Text\n              variant=\"sm\"\n              css={{ color: \"$on_surface_medium\", mb: \"$8\", mt: \"$4\" }}\n            >\n              We do not support landscape mode as of now, please use the app in\n              portrait mode for the best experience.\n            </Text>\n            <Flex\n              align=\"center\"\n              justify=\"between\"\n              css={{ w: \"100%\", gap: \"$8\" }}\n            >\n              <Button\n                outlined\n                variant=\"standard\"\n                css={{ w: \"100%\" }}\n                onClick={() => setShowMwebLandscapePrompt(false)}\n              >\n                Continue anyway\n              </Button>\n            </Flex>\n          </Box>\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  );\n};\n", "/* eslint-disable no-case-declarations */\nimport React, { useCallback, useEffect } from \"react\";\nimport {\n  HMSNotificationTypes,\n  HMSRoleChangeRequest,\n  HMSRoomState,\n  selectIsLocalScreenShared,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  selectRoomState,\n  useAwayNotifications,\n  useCustomEvent,\n  useHMSNotifications,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { GroupIcon } from \"@100mslive/react-icons\";\nimport { Box, Button } from \"../../..\";\nimport {\n  useRoomLayout,\n  useUpdateRoomLayout,\n} from \"../../provider/roomLayoutProvider\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { AutoplayBlockedModal } from \"./AutoplayBlockedModal\";\nimport { ChatNotifications } from \"./ChatNotifications\";\nimport { HandRaisedNotifications } from \"./HandRaisedNotifications\";\nimport { InitErrorModal } from \"./InitErrorModal\";\nimport { PeerNotifications } from \"./PeerNotifications\";\nimport { PermissionErrorNotificationModal } from \"./PermissionErrorModal\";\nimport { ReconnectNotifications } from \"./ReconnectNotifications\";\nimport { TrackBulkUnmuteModal } from \"./TrackBulkUnmuteModal\";\nimport { TrackNotifications } from \"./TrackNotifications\";\nimport { TrackUnmuteModal } from \"./TrackUnmuteModal\";\nimport { TranscriptionNotifications } from \"./TranscriptionNotifications\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { usePollViewToggle } from \"../AppData/useSidepane\";\n// @ts-ignore: No implicit Any\nimport {\n  useIsNotificationDisabled,\n  useSubscribedNotifications,\n} from \"../AppData/useUISettings\";\nimport { usePIPWindow } from \"../PIP/usePIPWindow\";\nimport { ROLE_CHANGE_DECLINED } from \"../../common/constants\";\n\nconst pollToastKey: Record<string, string> = {};\n\nexport function Notifications() {\n  const localPeerID = useHMSStore(selectLocalPeerID);\n  const notification = useHMSNotifications();\n  const subscribedNotifications = useSubscribedNotifications() || {};\n  const roomState = useHMSStore(selectRoomState);\n  const updateRoomLayoutForRole = useUpdateRoomLayout();\n  const isNotificationDisabled = useIsNotificationDisabled();\n  const screenProps = useRoomLayoutConferencingScreen();\n  const vanillaStore = useHMSVanillaStore();\n  const togglePollView = usePollViewToggle();\n  const { showNotification } = useAwayNotifications();\n  const amIScreenSharing = useHMSStore(selectIsLocalScreenShared);\n  const logoURL = useRoomLayout()?.logo?.url;\n  const { pipWindow } = usePIPWindow();\n\n  const handleRoleChangeDenied = useCallback(\n    (request: HMSRoleChangeRequest & { peerName: string }) => {\n      ToastManager.addToast({\n        title: `${request.peerName} denied your request to join the ${request.role.name} role`,\n        variant: \"error\",\n      });\n    },\n    []\n  );\n\n  useCustomEvent({\n    type: ROLE_CHANGE_DECLINED,\n    onEvent: handleRoleChangeDenied,\n  });\n\n  useEffect(() => {\n    if (!notification || isNotificationDisabled) {\n      return;\n    }\n    switch (notification.type) {\n      case HMSNotificationTypes.NAME_UPDATED:\n        console.log(\n          notification.data.id +\n            \" changed their name to \" +\n            notification.data.name\n        );\n        break;\n      case HMSNotificationTypes.ERROR:\n        if (\n          notification.data?.isTerminal &&\n          notification.data?.action !== \"INIT\"\n        ) {\n          if ([500, 6008].includes(notification.data?.code)) {\n            ToastManager.addToast({\n              title: `Error: ${notification.data?.message}`,\n            });\n          } else if (notification.data?.message === \"role limit reached\") {\n            ToastManager.addToast({\n              title: \"The room is currently full, try joining later\",\n              close: true,\n              icon: (\n                <Box css={{ color: \"$alert_error_default\" }}>\n                  <GroupIcon />\n                </Box>\n              ),\n            });\n          } else {\n            ToastManager.addToast({\n              title:\n                notification.data?.message ||\n                \"We couldn\u2019t reconnect you. When you\u2019re back online, try joining the room.\",\n              close: false,\n            });\n          }\n          return;\n        }\n        // Autoplay error or user denied screen share (cancelled browser pop-up)\n        if (\n          notification.data?.code === 3008 ||\n          notification.data?.code === 3001 ||\n          notification.data?.code === 3011\n        ) {\n          return;\n        }\n        if (notification.data?.action === \"INIT\") {\n          return;\n        }\n        if (!subscribedNotifications.ERROR) return;\n        ToastManager.addToast({\n          title: `Error: ${notification.data?.message} - ${notification.data?.description}`,\n        });\n        break;\n      case HMSNotificationTypes.ROLE_UPDATED: {\n        if (notification.data?.isLocal && notification.data?.roleName) {\n          ToastManager.addToast({\n            title: `You are now a ${notification.data.roleName}`,\n          });\n          updateRoomLayoutForRole?.(notification.data.roleName);\n        }\n        break;\n      }\n      case HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST:\n        const track = notification.data?.track;\n        if (!notification.data.enabled) {\n          ToastManager.addToast({\n            title: `Your ${track.source} ${track.type} was muted by\n                ${notification.data.requestedBy?.name}.`,\n          });\n        }\n        break;\n      case HMSNotificationTypes.REMOVED_FROM_ROOM:\n      case HMSNotificationTypes.ROOM_ENDED:\n        ToastManager.addToast({\n          title: `${notification.message}. \n              ${\n                notification.data.reason &&\n                `Reason: ${notification.data.reason}`\n              }`,\n        });\n        break;\n      case HMSNotificationTypes.DEVICE_CHANGE_UPDATE:\n        ToastManager.addToast({\n          title: notification.message,\n        });\n        break;\n\n      case HMSNotificationTypes.POLL_STARTED:\n        if (\n          notification.data.startedBy !== localPeerID &&\n          screenProps.screenType !== \"hls_live_streaming\"\n        ) {\n          const pollStartedBy =\n            vanillaStore.getState(\n              selectPeerNameByID(notification.data.startedBy)\n            ) || \"Participant\";\n\n          const pollToastID = ToastManager.addToast({\n            title: `${pollStartedBy} started a ${notification.data.type}: ${notification.data.title}`,\n            action: (\n              <Button\n                onClick={() => togglePollView(notification.data.id)}\n                variant=\"standard\"\n                css={{\n                  backgroundColor: \"$surface_bright\",\n                  fontWeight: \"$semiBold\",\n                  color: \"$on_surface_high\",\n                  p: \"$xs $md\",\n                }}\n              >\n                {notification.data.type === \"quiz\" ? \"Answer\" : \"Vote\"}\n              </Button>\n            ),\n            duration: Infinity,\n          });\n          pollToastKey[notification.data.id] = pollToastID;\n        }\n        break;\n      case HMSNotificationTypes.POLL_STOPPED:\n        const pollID = notification?.data.id;\n        if (pollID && pollToastKey?.[pollID]) {\n          ToastManager.removeToast(pollToastKey?.[notification.data.id]);\n          delete pollToastKey[notification?.data.id];\n        }\n        break;\n      case HMSNotificationTypes.NEW_MESSAGE:\n        if (amIScreenSharing && !notification.data?.ignored && !pipWindow) {\n          showNotification(`New message from ${notification.data.senderName}`, {\n            body: notification.data.message,\n            icon: logoURL,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    notification,\n    subscribedNotifications.ERROR,\n    subscribedNotifications.METADATA_UPDATED,\n  ]);\n\n  if (isNotificationDisabled) {\n    return null;\n  }\n\n  return (\n    <>\n      <TrackUnmuteModal />\n      <TrackBulkUnmuteModal />\n      <TrackNotifications />\n      {roomState === HMSRoomState.Connected ? <PeerNotifications /> : null}\n      <ReconnectNotifications />\n      <AutoplayBlockedModal />\n      <PermissionErrorNotificationModal />\n      <InitErrorModal />\n      <ChatNotifications />\n      <HandRaisedNotifications />\n      <TranscriptionNotifications />\n    </>\n  );\n}\n", "import React from \"react\";\nimport { useAutoplayError } from \"@100mslive/react-sdk\";\nimport { Button, Dialog, Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { DialogContent, DialogRow } from \"../../primitives/DialogContent\";\n\nexport function AutoplayBlockedModal() {\n  const { error, resetError, unblockAudio } = useAutoplayError();\n  return (\n    <Dialog.Root\n      open={!!error}\n      onOpenChange={(value) => {\n        if (!value) {\n          unblockAudio();\n        }\n        resetError();\n      }}\n    >\n      <DialogContent title=\"Permission Error\" closeable={false}>\n        <DialogRow>\n          <Text variant=\"md\">\n            The browser wants us to get a confirmation for playing the Audio.\n            Please allow audio to proceed.\n          </Text>\n        </DialogRow>\n        <DialogRow justify=\"end\">\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              unblockAudio();\n              resetError();\n            }}\n          >\n            Allow Audio\n          </Button>\n        </DialogRow>\n      </DialogContent>\n    </Dialog.Root>\n  );\n}\n", "import React, { useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  selectLocalPeerID,\n  selectSessionStore,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { ChatIcon, ChatUnreadIcon } from \"@100mslive/react-icons\";\n// @ts-ignore\nimport { ToastManager } from \"../Toast/ToastManager\";\nimport { SESSION_STORE_KEY } from \"../../common/constants\";\n\nconst NOTIFICATION_TIME_DIFFERENCE = 5000;\n\nexport const ChatNotifications = () => {\n  const chatState = useHMSStore(\n    selectSessionStore(SESSION_STORE_KEY.CHAT_STATE)\n  );\n  const localPeerId = useHMSStore(selectLocalPeerID);\n\n  useEffect(() => {\n    if (!chatState || chatState.updatedBy?.peerId === localPeerId) {\n      return;\n    }\n\n    const showToast =\n      Date.now() - chatState.updatedAt < NOTIFICATION_TIME_DIFFERENCE;\n\n    if (!showToast) {\n      return;\n    }\n\n    const notification = {\n      id: uuid(),\n      icon: chatState.enabled ? <ChatUnreadIcon /> : <ChatIcon />,\n      title: `Chat ${chatState.enabled ? \"resumed\" : \"paused\"} by ${\n        chatState.updatedBy?.userName\n      }`,\n    };\n    ToastManager.addToast(notification);\n  }, [chatState, localPeerId]);\n  return <></>;\n};\n", "import { useEffect } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport {\n  HMSNotificationTypes,\n  HMSRoomState,\n  selectHandRaisedPeers,\n  selectHasPeerHandRaised,\n  selectIsLocalScreenShared,\n  selectPeerByID,\n  selectRoomState,\n  useAwayNotifications,\n  useHMSNotifications,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\n// @ts-ignore: No implicit Any\nimport { ToastBatcher } from \"../Toast/ToastBatcher\";\nimport { useRoomLayoutConferencingScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useSubscribedNotifications } from \"../AppData/useUISettings\";\nimport { SUBSCRIBED_NOTIFICATIONS } from \"../../common/constants\";\n\nexport const HandRaisedNotifications = () => {\n  const notification = useHMSNotifications(\n    HMSNotificationTypes.HAND_RAISE_CHANGED\n  );\n  const roomState = useHMSStore(selectRoomState);\n  const vanillaStore = useHMSVanillaStore();\n  const { on_stage_exp } = useRoomLayoutConferencingScreen().elements || {};\n  const isSubscribing = !!useSubscribedNotifications(\n    SUBSCRIBED_NOTIFICATIONS.METADATA_UPDATED\n  );\n  const amIScreenSharing = useHMSStore(selectIsLocalScreenShared);\n  const { showNotification } = useAwayNotifications();\n  const logoURL = useRoomLayout()?.logo?.url;\n\n  useEffect(() => {\n    if (!notification?.data) {\n      return;\n    }\n\n    // Don't show toast message in case of local peer.\n    if (\n      roomState !== HMSRoomState.Connected ||\n      notification.data.isLocal ||\n      !isSubscribing\n    ) {\n      return;\n    }\n\n    const hasPeerHandRaised = vanillaStore.getState(\n      selectHasPeerHandRaised(notification.data.id)\n    );\n    const peer = vanillaStore.getState(selectPeerByID(notification.data.id));\n    if (hasPeerHandRaised) {\n      const showCTA =\n        peer?.roleName &&\n        (on_stage_exp?.off_stage_roles || [])?.includes(peer.roleName);\n      ToastBatcher.showToast({\n        notification,\n        type: showCTA ? \"RAISE_HAND_HLS\" : \"RAISE_HAND\",\n      });\n      console.debug(\"Metadata updated\", notification.data);\n    }\n  }, [isSubscribing, notification, on_stage_exp, roomState, vanillaStore]);\n\n  useDebounce(\n    () => {\n      if (!notification?.data) {\n        return;\n      }\n\n      // Don't show toast message in case of local peer.\n      if (\n        roomState !== HMSRoomState.Connected ||\n        notification.data.isLocal ||\n        !isSubscribing\n      ) {\n        return;\n      }\n\n      const hasPeerHandRaised = vanillaStore.getState(\n        selectHasPeerHandRaised(notification.data.id)\n      );\n      const peer = vanillaStore.getState(selectPeerByID(notification.data.id));\n      const handRaisedPeers = vanillaStore.getState(selectHandRaisedPeers);\n      if (amIScreenSharing && hasPeerHandRaised) {\n        const title = `${peer?.name} ${\n          handRaisedPeers.length > 1\n            ? `and ${handRaisedPeers.length - 1} others`\n            : \"\"\n        } raised hand`;\n        showNotification(title, { icon: logoURL });\n      }\n    },\n    1000,\n    [isSubscribing, notification, roomState, vanillaStore, amIScreenSharing]\n  );\n  return null;\n};\n", "import React, { useCallback } from \"react\";\nimport {\n  selectPeerByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport {\n  ChatUnreadIcon,\n  ConnectivityIcon,\n  HandIcon,\n  PeopleAddIcon,\n  PeopleRemoveIcon,\n  PoorConnectivityIcon,\n} from \"@100mslive/react-icons\";\nimport { Button } from \"../../../Button\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\nimport {\n  useIsSidepaneTypeOpen,\n  useSidepaneToggle,\n} from \"../AppData/useSidepane\";\nimport { SIDE_PANE_OPTIONS } from \"../../common/constants\";\n\nconst ChatAction = React.forwardRef((_, ref) => {\n  const toggleChat = useSidepaneToggle(SIDE_PANE_OPTIONS.CHAT);\n  const isChatOpen = useIsSidepaneTypeOpen(SIDE_PANE_OPTIONS.CHAT);\n\n  if (isChatOpen) {\n    return null;\n  }\n\n  return (\n    <Button\n      outlined\n      as=\"div\"\n      variant=\"standard\"\n      css={{ w: \"max-content\" }}\n      onClick={toggleChat}\n      ref={ref}\n    >\n      Open Chat\n    </Button>\n  );\n});\n\nconst HandRaiseAction = React.forwardRef(\n  ({ id = \"\", isSingleHandRaise = true }, ref) => {\n    const hmsActions = useHMSActions();\n    const toggleSidepane = useSidepaneToggle(SIDE_PANE_OPTIONS.PARTICIPANTS);\n    const isParticipantsOpen = useIsSidepaneTypeOpen(\n      SIDE_PANE_OPTIONS.PARTICIPANTS\n    );\n    const peer = useHMSStore(selectPeerByID(id));\n    const layout = useRoomLayout();\n    const {\n      bring_to_stage_label,\n      on_stage_role,\n      off_stage_roles = [],\n      skip_preview_for_role_change = false,\n    } = layout?.screens?.conferencing?.default?.elements.on_stage_exp || {};\n\n    const onClickHandler = useCallback(async () => {\n      if (isSingleHandRaise) {\n        hmsActions.changeRoleOfPeer(\n          id,\n          on_stage_role,\n          skip_preview_for_role_change\n        );\n        if (skip_preview_for_role_change) {\n          await hmsActions.lowerRemotePeerHand(id);\n        }\n      } else {\n        !isParticipantsOpen && toggleSidepane();\n      }\n    }, [\n      hmsActions,\n      id,\n      isParticipantsOpen,\n      isSingleHandRaise,\n      on_stage_role,\n      toggleSidepane,\n      skip_preview_for_role_change,\n    ]);\n\n    // show nothing if handRaise is single and peer role is not hls\n    if (\n      isSingleHandRaise &&\n      (!peer || !off_stage_roles.includes(peer.roleName))\n    ) {\n      return null;\n    }\n    return (\n      <Button\n        outlined\n        as=\"div\"\n        variant=\"standard\"\n        css={{ w: \"max-content\" }}\n        onClick={onClickHandler}\n        ref={ref}\n      >\n        {isSingleHandRaise ? bring_to_stage_label : \"View\"}\n      </Button>\n    );\n  }\n);\n\nexport const ToastConfig = {\n  PEER_JOINED: {\n    single: function (notification) {\n      return {\n        title: `${notification.data?.name} joined`,\n        icon: <PeopleAddIcon />,\n      };\n    },\n    multiple: function (notifications) {\n      return {\n        title: `${notifications[notifications.length - 1].data.name} and ${\n          notifications.length - 1\n        } others joined`,\n        icon: <PeopleAddIcon />,\n      };\n    },\n  },\n  PEER_LEFT: {\n    single: function (notification) {\n      return {\n        title: `${notification.data?.name} left`,\n        icon: <PeopleRemoveIcon />,\n      };\n    },\n    multiple: function (notifications) {\n      return {\n        title: `${notifications[notifications.length - 1].data.name} and ${\n          notifications.length - 1\n        } others left`,\n        icon: <PeopleRemoveIcon />,\n      };\n    },\n  },\n  RAISE_HAND: {\n    single: (notification) => {\n      return {\n        title: `${notification.data?.name} raised hand`,\n        icon: <HandIcon />,\n      };\n    },\n    multiple: (notifications) => {\n      const count = new Set(\n        notifications.map((notification) => notification.data?.id)\n      ).size;\n      return {\n        title: `${notifications[notifications.length - 1].data?.name} ${\n          count > 1 ? `and ${count} others` : \"\"\n        } raised hand`,\n        icon: <HandIcon />,\n      };\n    },\n  },\n  RAISE_HAND_HLS: {\n    single: (notification) => {\n      return {\n        title: `${notification.data?.name} raised hand`,\n        icon: <HandIcon />,\n        action: <HandRaiseAction id={notification.data?.id} />,\n      };\n    },\n    multiple: (notifications) => {\n      const count = new Set(\n        notifications.map((notification) => notification.data?.id)\n      ).size;\n      return {\n        title: `${notifications[notifications.length - 1].data?.name} ${\n          count > 1 ? `and ${count} others` : \"\"\n        } raised hand`,\n        icon: <HandIcon />,\n        action: <HandRaiseAction isSingleHandRaise={false} />,\n      };\n    },\n  },\n  NEW_MESSAGE: {\n    single: (notification) => {\n      return {\n        title: `New message from ${notification.data?.senderName}`,\n        icon: <ChatUnreadIcon />,\n        action: <ChatAction />,\n      };\n    },\n    multiple: (notifications) => {\n      return {\n        title: `${notifications.length} new messages`,\n        icon: <ChatUnreadIcon />,\n        action: <ChatAction />,\n      };\n    },\n  },\n  RECONNECTED: {\n    single: (online) => {\n      return {\n        title: `You are now ${online ? \"online\" : \"connected\"}`,\n        icon: <ConnectivityIcon />,\n        variant: \"success\",\n        duration: 3000,\n      };\n    },\n  },\n  RECONNECTING: {\n    single: (message) => {\n      return {\n        title: `You are offline for now. while we try to reconnect, please check\n        your internet connection. ${message}.\n      `,\n        icon: <PoorConnectivityIcon />,\n        variant: \"warning\",\n        duration: 30000,\n      };\n    },\n  },\n};\n", "import { ToastConfig } from \"./ToastConfig\";\nimport { ToastManager } from \"./ToastManager\";\n\nexport const ToastBatcher = {\n  toastsType: new Map(),\n  toastCache: {},\n  showToastInternal({ notification, duration, type }) {\n    let notificationType = type;\n    if (!type) {\n      notificationType = notification.type;\n    }\n    const toastType = this.toastsType.has(notificationType);\n    if (toastType) {\n      let { notifications } = this.toastsType.get(notificationType);\n      const { id } = this.toastsType.get(notificationType);\n      notifications.push(notification);\n      const toastObject = ToastConfig[notificationType].multiple(notifications);\n      const toastId = ToastManager.replaceToast(id, {\n        ...toastObject,\n        duration: duration,\n      });\n      this.toastsType.set(notificationType, {\n        id: toastId,\n        notifications: notifications,\n        duration: duration,\n      });\n    } else {\n      const toastObject = ToastConfig[notificationType].single(notification);\n      const toastId = ToastManager.addToast({\n        ...toastObject,\n        duration: duration,\n      });\n      let notifications = [];\n      notifications.push(notification);\n      this.toastsType.set(notificationType, {\n        id: toastId,\n        notifications: [...notifications],\n        duration: duration,\n      });\n    }\n  },\n  showToast({ notification, duration = 3000, type }) {\n    try {\n      if (!this.toastCache[notification.id]) {\n        this.showToastInternal({ notification, duration, type });\n      }\n      this.toastCache[notification.id] = true;\n      if (Object.keys(this.toastCache).length > 100) {\n        this.toastCache = {};\n      }\n    } catch (err) {\n      console.debug(\"Notifications\", err);\n    }\n  },\n  syncUItoast(toastsDisplaying) {\n    for (const [toastType, toastInfo] of this.toastsType.entries()) {\n      if (!toastsDisplaying.find((toast) => toast.id === toastInfo.id)) {\n        this.toastsType.delete(toastType);\n      }\n    }\n  },\n};\n\nToastManager.addListener(ToastBatcher.syncUItoast.bind(ToastBatcher));\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport { ErrorDialog } from \"../../primitives/DialogContent\";\n\nexport const InitErrorModal = () => {\n  const notification = useHMSNotifications(HMSNotificationTypes.ERROR);\n  const [showModal, setShowModal] = useState(false);\n  const [info, setInfo] = useState({ title: \"Init Error\", description: \"\" });\n\n  useEffect(() => {\n    const data = notification?.data;\n    if (!data || data.action !== \"INIT\") {\n      return;\n    }\n    let description;\n    let title;\n    if (data.description.includes(\"role is invalid\")) {\n      description =\n        \"This role does not exist for the given room. Try again with a valid role.\";\n      title = \"Invalid Role\";\n    } else if (data.description.includes(\"room is not active\")) {\n      title = \"Room is disabled\";\n      description =\n        \"This room is disabled and cannot be joined. To enable the room, use the 100ms dashboard or the API.\";\n    } else {\n      description = data.description;\n      title = \"Init Error\";\n    }\n    setInfo({ title, description });\n    setShowModal(true);\n  }, [notification]);\n\n  return (\n    <ErrorDialog\n      open={showModal}\n      onOpenChange={setShowModal}\n      title={info.title}\n    >\n      <Text variant=\"sm\" css={{ wordBreak: \"break-word\" }}>\n        {info.description} <br />\n        Current URL - {window.location.href}\n      </Text>\n    </ErrorDialog>\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { ToastBatcher } from \"../Toast/ToastBatcher\";\n// @ts-ignore: No implicit Any\nimport {\n  useSetSubscribedChatSelector,\n  useSubscribedNotifications,\n} from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport {\n  CHAT_SELECTOR,\n  SUBSCRIBED_NOTIFICATIONS,\n} from \"../../common/constants\";\n\nconst notificationTypes = [\n  HMSNotificationTypes.PEER_JOINED,\n  HMSNotificationTypes.PEER_LEFT,\n];\n\nexport const PeerNotifications = () => {\n  const notification = useHMSNotifications(notificationTypes);\n  const isPeerJoinSubscribed = useSubscribedNotifications(\n    SUBSCRIBED_NOTIFICATIONS.PEER_JOINED\n  );\n  const isPeerLeftSubscribed = useSubscribedNotifications(\n    SUBSCRIBED_NOTIFICATIONS.PEER_LEFT\n  );\n  const [selectedPeer, setPeerSelector] = useSetSubscribedChatSelector(\n    CHAT_SELECTOR.PEER\n  );\n\n  useEffect(() => {\n    if (!notification?.data) {\n      return;\n    }\n\n    console.debug(`[${notification.type}]`, notification);\n    switch (notification.type) {\n      case HMSNotificationTypes.PEER_JOINED:\n        if (!isPeerJoinSubscribed) {\n          return;\n        }\n        break;\n      case HMSNotificationTypes.PEER_LEFT:\n        if (selectedPeer.id === notification.data.id) {\n          setPeerSelector({});\n        }\n        if (!isPeerLeftSubscribed) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    ToastBatcher.showToast({ notification });\n  }, [\n    notification,\n    isPeerJoinSubscribed,\n    isPeerLeftSubscribed,\n    selectedPeer.id,\n    setPeerSelector,\n  ]);\n\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  HMSException,\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { Button, config as cssConfig, Dialog, Flex, Text } from \"../../..\";\n// @ts-ignore: No implicit Any\nimport androidPermissionAlert from \"../../images/android-perm-1.png\";\n// @ts-ignore: No implicit Any\nimport iosPermissions from \"../../images/ios-perm-0.png\";\n// @ts-ignore: No implicit Any\nimport { isAndroid, isIOS } from \"../../common/constants\";\n\nexport function PermissionErrorNotificationModal() {\n  const notification = useHMSNotifications(HMSNotificationTypes.ERROR);\n  return <PermissionErrorModal error={notification?.data} />;\n}\n\nexport const PermissionErrorModal = ({ error }: { error?: HMSException }) => {\n  const [deviceType, setDeviceType] = useState(\"\");\n  const [isSystemError, setIsSystemError] = useState(false);\n  const isMobile = useMedia(cssConfig.media.md);\n  useEffect(() => {\n    if (\n      !error ||\n      (error?.code !== 3001 && error?.code !== 3011) ||\n      (error?.code === 3001 && error?.message.includes(\"screen\"))\n    ) {\n      return;\n    }\n    const errorMessage = error?.message;\n    const hasAudio = errorMessage.includes(\"audio\");\n    const hasVideo = errorMessage.includes(\"video\");\n    const hasScreen = errorMessage.includes(\"screen\");\n    if (hasAudio && hasVideo) {\n      setDeviceType(\"camera and microphone\");\n    } else if (hasAudio) {\n      setDeviceType(\"microphone\");\n    } else if (hasVideo) {\n      setDeviceType(\"camera\");\n    } else if (hasScreen) {\n      setDeviceType(\"screen\");\n    }\n    setIsSystemError(error.code === 3011);\n  }, [error]);\n\n  return deviceType ? (\n    <Dialog.Root open={!!deviceType}>\n      <Dialog.Portal>\n        <Dialog.Overlay />\n        <Dialog.Content\n          css={{\n            w: \"min(380px, 90%)\",\n            p: \"$8\",\n            // overlay over Sheet.tsx\n            zIndex: 23,\n          }}\n        >\n          <Dialog.Title\n            css={{\n              borderBottom: \"1px solid $border_default\",\n            }}\n          >\n            {isMobile && isIOS ? (\n              <img\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n                src={iosPermissions}\n                alt=\"iOS Permission flow\"\n              />\n            ) : null}\n\n            {/* Images for android */}\n            {isMobile && isAndroid ? (\n              <img\n                src={androidPermissionAlert}\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n                alt=\"Android Permission flow \"\n              />\n            ) : null}\n\n            <Text variant=\"h6\">We can't access your {deviceType}</Text>\n          </Dialog.Title>\n\n          <Text\n            variant=\"sm\"\n            css={{ pt: \"$4\", pb: \"$10\", color: \"$on_surface_medium\" }}\n          >\n            {/* IOS prompt text */}\n            {isMobile && isIOS\n              ? 'Enable permissions by reloading this page and clicking \"Allow\" on the pop-up, or change settings from the address bar.'\n              : null}\n\n            {/* Prompt for android devices */}\n            {isMobile && isAndroid\n              ? `To allow other users to see and hear you, click the blocked camera icon in your browser's address bar.`\n              : null}\n\n            {/* Prompt for desktops */}\n            {!isMobile ? `Access to ${deviceType} is required. ` : null}\n\n            {isSystemError && !isMobile\n              ? `Enable permissions for ${deviceType}${\n                  deviceType === \"screen\" ? \"share\" : \"\"\n                } from sytem settings`\n              : null}\n            {!isSystemError && !isMobile\n              ? `Enable permissions for ${deviceType}${\n                  deviceType === \"screen\" ? \"share\" : \"\"\n                } from address bar or browser settings.`\n              : null}\n          </Text>\n\n          {/* CTA section */}\n          {isMobile && isIOS ? (\n            <>\n              <Button\n                onClick={() => window.location.reload()}\n                css={{ w: \"100%\", mb: \"$6\" }}\n              >\n                Reload\n              </Button>\n              <Button\n                outlined\n                variant=\"standard\"\n                onClick={() => setDeviceType(\"\")}\n                css={{ w: \"100%\" }}\n              >\n                Continue anyway\n              </Button>\n            </>\n          ) : null}\n\n          {isMobile && isAndroid ? (\n            <>\n              <Button\n                onClick={() => setDeviceType(\"\")}\n                css={{ w: \"100%\", mb: \"$6\" }}\n              >\n                I've allowed access\n              </Button>\n              <Button\n                outlined\n                variant=\"standard\"\n                onClick={() => setDeviceType(\"\")}\n                css={{ w: \"100%\" }}\n              >\n                Continue anyway\n              </Button>\n            </>\n          ) : null}\n\n          {!isMobile ? (\n            <Flex justify=\"end\" css={{ w: \"100%\" }}>\n              <Button\n                outlined\n                variant=\"standard\"\n                onClick={() => setDeviceType(\"\")}\n              >\n                Dismiss\n              </Button>\n            </Flex>\n          ) : null}\n        </Dialog.Content>\n      </Dialog.Portal>\n    </Dialog.Root>\n  ) : null;\n};\n", "import { useEffect, useRef } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { ToastConfig } from \"../Toast/ToastConfig\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n\nconst notificationTypes = [\n  HMSNotificationTypes.RECONNECTED,\n  HMSNotificationTypes.RECONNECTING,\n  HMSNotificationTypes.ERROR,\n];\nlet notificationId: string | null = null;\n\nexport const ReconnectNotifications = () => {\n  const notification = useHMSNotifications(notificationTypes);\n  const prevErrorCode = useRef(0);\n  useEffect(() => {\n    if (!notification) {\n      return;\n    }\n    if (notification.type === HMSNotificationTypes.RECONNECTED) {\n      notificationId = ToastManager.replaceToast(\n        notificationId,\n        ToastConfig.RECONNECTED.single(\n          [4005, 4006].includes(prevErrorCode.current)\n        )\n      );\n    } else if (notification.type === HMSNotificationTypes.RECONNECTING) {\n      prevErrorCode.current = notification.data?.code || 0;\n      notificationId = ToastManager.replaceToast(\n        notificationId,\n        ToastConfig.RECONNECTING.single(notification.data?.message)\n      );\n    }\n  }, [notification]);\n\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSChangeMultiTrackStateRequest,\n  HMSNotificationTypes,\n  useHMSActions,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon } from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { RequestDialog } from \"../../primitives/DialogContent\";\n\nexport const TrackBulkUnmuteModal = () => {\n  const hmsActions = useHMSActions();\n  const [muteNotification, setMuteNotification] =\n    useState<HMSChangeMultiTrackStateRequest | null>(null);\n  const notification = useHMSNotifications([\n    HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST,\n    HMSNotificationTypes.ROOM_ENDED,\n    HMSNotificationTypes.REMOVED_FROM_ROOM,\n  ]);\n\n  useEffect(() => {\n    switch (notification?.type) {\n      case HMSNotificationTypes.REMOVED_FROM_ROOM:\n      case HMSNotificationTypes.ROOM_ENDED:\n        setMuteNotification(null);\n        break;\n      case HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST:\n        if (notification?.data.enabled) {\n          setMuteNotification(notification.data);\n        }\n        break;\n      default:\n        return;\n    }\n  }, [notification]);\n\n  if (!muteNotification) {\n    return null;\n  }\n\n  const { requestedBy: peer, tracks, enabled } = muteNotification;\n\n  const types = new Set(tracks.map((track) => track.type));\n\n  return (\n    <RequestDialog\n      title=\"Unmute request\"\n      body={`${peer?.name} is requesting you to unmute your ${Array.from(\n        types\n      ).join(\",\")}`}\n      onOpenChange={(value: boolean) => !value && setMuteNotification(null)}\n      onAction={() => {\n        tracks.forEach((track) => {\n          hmsActions.setEnabledTrack(track.id, enabled);\n        });\n        setMuteNotification(null);\n      }}\n      Icon={MicOnIcon}\n    />\n  );\n};\n", "import { useEffect } from \"react\";\nimport {\n  HMSNotificationTypes,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\n\nconst notificationTypes = [\n  HMSNotificationTypes.TRACK_ADDED,\n  HMSNotificationTypes.TRACK_REMOVED,\n  HMSNotificationTypes.TRACK_MUTED,\n  HMSNotificationTypes.TRACK_UNMUTED,\n];\nexport const TrackNotifications = () => {\n  const notification = useHMSNotifications(notificationTypes);\n  useEffect(() => {\n    if (notification) {\n      console.debug(`[${notification.type}]`, notification);\n    }\n  }, [notification]);\n\n  return null;\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSChangeTrackStateRequest,\n  HMSNotificationTypes,\n  useHMSActions,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon } from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { RequestDialog } from \"../../primitives/DialogContent\";\n\nexport const TrackUnmuteModal = () => {\n  const hmsActions = useHMSActions();\n  const notification = useHMSNotifications([\n    HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST,\n    HMSNotificationTypes.ROOM_ENDED,\n    HMSNotificationTypes.REMOVED_FROM_ROOM,\n  ]);\n  const [muteNotification, setMuteNotification] =\n    useState<HMSChangeTrackStateRequest | null>(null);\n\n  useEffect(() => {\n    switch (notification?.type) {\n      case HMSNotificationTypes.REMOVED_FROM_ROOM:\n      case HMSNotificationTypes.ROOM_ENDED:\n        setMuteNotification(null);\n        break;\n      case HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST:\n        if (notification?.data.enabled) {\n          setMuteNotification(notification.data);\n        }\n        break;\n      default:\n        return;\n    }\n  }, [notification]);\n\n  if (!muteNotification) {\n    return null;\n  }\n\n  const { requestedBy: peer, track, enabled } = muteNotification;\n\n  return (\n    <RequestDialog\n      title={`Unmute your ${track.type}?`}\n      onOpenChange={(value: boolean) => !value && setMuteNotification(null)}\n      body={`${peer?.name}is requesting you to unmute your ${track?.type}.`}\n      onAction={() => {\n        hmsActions.setEnabledTrack(track.id, enabled);\n        setMuteNotification(null);\n      }}\n      Icon={MicOnIcon}\n    />\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { match } from \"ts-pattern\";\nimport {\n  HMSNotificationTypes,\n  HMSTranscriptionState,\n  useHMSNotifications,\n} from \"@100mslive/react-sdk\";\nimport {\n  AlertTriangleIcon,\n  ClosedCaptionIcon,\n  OpenCaptionIcon,\n} from \"@100mslive/react-icons\";\n// @ts-ignore: No implicit Any\nimport { ToastManager } from \"../Toast/ToastManager\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\nimport { CAPTION_TOAST } from \"../../common/constants\";\n\nexport const TranscriptionNotifications = () => {\n  const notification = useHMSNotifications(\n    HMSNotificationTypes.TRANSCRIPTION_STATE_UPDATED\n  );\n  const [toastId, setToastId] = useSetAppDataByKey(CAPTION_TOAST.captionToast);\n\n  useEffect(() => {\n    if (!notification?.data) {\n      return;\n    }\n\n    console.debug(`[${notification.type}]`, notification);\n    const transcriptionStates = notification.data;\n    if (transcriptionStates.length > 0) {\n      let id = \"\";\n      match({\n        state: transcriptionStates[0].state,\n        error: transcriptionStates[0].error,\n      })\n        .when(\n          ({ error }) => !!error,\n          () => {\n            id = ToastManager.replaceToast(toastId, {\n              title: `Failed to enable Closed Caption`,\n              variant: \"error\",\n              icon: <AlertTriangleIcon style={{ marginRight: \"0.5rem\" }} />,\n            });\n          }\n        )\n        .with({ state: HMSTranscriptionState.STARTED }, () => {\n          id = ToastManager.replaceToast(toastId, {\n            title: `Closed Captioning enabled for everyone`,\n            variant: \"standard\",\n            duration: 2000,\n            icon: <ClosedCaptionIcon style={{ marginRight: \"0.5rem\" }} />,\n          });\n        })\n        .with({ state: HMSTranscriptionState.STOPPED }, () => {\n          id = ToastManager.replaceToast(toastId, {\n            title: `Closed Captioning disabled for everyone`,\n            variant: \"standard\",\n            duration: 2000,\n            icon: <OpenCaptionIcon style={{ marginRight: \"0.5rem\" }} />,\n          });\n        })\n        .otherwise(() => null);\n      setToastId(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [notification, setToastId]);\n\n  return null;\n};\n", "import React, { useCallback, useMemo, useState } from \"react\";\nimport { PIPContext } from \"./context\";\n\ntype PIPProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const PIPProvider = ({ children }: PIPProviderProps) => {\n  // Detect if the feature is available.\n  const isSupported = \"documentPictureInPicture\" in window;\n\n  // Expose pipWindow that is currently active\n  const [pipWindow, setPipWindow] = useState<Window | null>(null);\n\n  // Close pipWidnow programmatically\n  const closePipWindow = useCallback(() => {\n    if (pipWindow != null) {\n      pipWindow.close();\n      setPipWindow(null);\n    }\n  }, [pipWindow]);\n\n  // Open new pipWindow\n  const requestPipWindow = useCallback(\n    async (width: number, height: number) => {\n      // We don't want to allow multiple requests.\n      if (pipWindow != null) {\n        return;\n      }\n      // @ts-ignore for documentPIP\n      const pip = await window.documentPictureInPicture.requestWindow({\n        width,\n        height,\n      });\n\n      // Detect when window is closed by user\n      pip.addEventListener(\"pagehide\", () => {\n        setPipWindow(null);\n      });\n\n      setPipWindow(pip);\n    },\n    [pipWindow]\n  );\n\n  const value = useMemo(() => {\n    return {\n      isSupported,\n      pipWindow,\n      requestPipWindow,\n      closePipWindow,\n    };\n  }, [closePipWindow, isSupported, pipWindow, requestPipWindow]);\n\n  return <PIPContext.Provider value={value}>{children}</PIPContext.Provider>;\n};\n", "import React from \"react\";\nimport { useSearchParam } from \"react-use\";\nimport { Flex } from \"../../..\";\nimport { useHMSPrebuiltContext } from \"../../AppContext\";\nimport { useRoomLayout } from \"../../provider/roomLayoutProvider\";\nimport FullPageProgress from \"../FullPageProgress\";\nimport PreviewJoin from \"./PreviewJoin\";\nimport { useRoomLayoutPreviewScreen } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\n// @ts-ignore: No implicit Any\nimport { useAuthToken } from \"../AppData/useUISettings\";\nimport { QUERY_PARAM_PREVIEW_AS_ROLE } from \"../../common/constants\";\n\nexport const PreviewScreen = () => {\n  const { isPreviewScreenEnabled } = useRoomLayoutPreviewScreen();\n  const skipPreview = !isPreviewScreenEnabled;\n  const previewAsRole = useSearchParam(QUERY_PARAM_PREVIEW_AS_ROLE);\n  const { userName } = useHMSPrebuiltContext();\n  const initialName = userName || (skipPreview ? \"Beam\" : \"\");\n  const authToken = useAuthToken();\n  const roomLayout = useRoomLayout();\n  const { preview_header: previewHeader = {} } =\n    roomLayout?.screens?.preview?.default?.elements || {};\n\n  return (\n    <Flex direction=\"column\" css={{ size: \"100%\" }}>\n      <Flex\n        css={{\n          flex: \"1 1 0\",\n          position: \"relative\",\n          overflowY: \"auto\",\n          color: \"$primary_default\",\n        }}\n        justify=\"center\"\n        align=\"center\"\n      >\n        {authToken && Object.keys(previewHeader).length > 0 ? (\n          <PreviewJoin\n            initialName={initialName}\n            skipPreview={skipPreview}\n            asRole={previewAsRole ?? undefined}\n          />\n        ) : (\n          <FullPageProgress />\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { selectIsConnectedToRoom, useHMSStore } from \"@100mslive/react-sdk\";\nimport { Toast as ToastPrimitive } from \"../../../Toast\";\nimport { Toast } from \"./Toast\";\nimport { ToastManager } from \"./ToastManager\";\nimport { MAX_TOASTS } from \"../../common/constants\";\n\nexport const ToastContainer = () => {\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const [toasts, setToast] = useState([]);\n  useEffect(() => {\n    ToastManager.addListener(setToast);\n    return () => {\n      ToastManager.removeListener(setToast);\n    };\n  }, []);\n  return (\n    <ToastPrimitive.Provider swipeDirection=\"left\" duration={3000}>\n      {toasts.slice(0, MAX_TOASTS).map((toast) => {\n        return (\n          <Toast\n            key={toast.id}\n            {...toast}\n            onOpenChange={(value) =>\n              !value && ToastManager.removeToast(toast.id)\n            }\n          />\n        );\n      })}\n      <ToastPrimitive.Viewport\n        css={{\n          position: \"absolute\",\n          ...(!isConnected ? {} : { bottom: \"$24\" }),\n        }}\n      />\n    </ToastPrimitive.Provider>\n  );\n};\n", "import React from \"react\";\nimport { Toast as ToastPrimitive } from \"../../../Toast\";\n\nexport const Toast = ({\n  title,\n  description,\n  close = true,\n  open,\n  duration,\n  onOpenChange,\n  icon,\n  ...props\n}) => {\n  return (\n    <ToastPrimitive.HMSToast\n      title={title}\n      description={description}\n      open={open}\n      isClosable={close}\n      onOpenChange={onOpenChange}\n      duration={!close ? 600000 : duration}\n      icon={icon}\n      {...props}\n    />\n  );\n};\n", "import React from \"react\";\nimport { selectAppData, useHMSStore } from \"@100mslive/react-sdk\";\nimport { RoomDetailsSheet } from \"../components/RoomDetails/RoomDetailsSheet\";\nimport { Box } from \"../../Layout\";\nimport { APP_DATA, SHEET_OPTIONS } from \"../common/constants\";\n\nexport const Sheet = () => {\n  const sheet = useHMSStore(selectAppData(APP_DATA.sheet));\n  let ViewComponent;\n  if (sheet === SHEET_OPTIONS.ROOM_DETAILS) {\n    ViewComponent = <RoomDetailsSheet />;\n  }\n  return <Box>{ViewComponent}</Box>;\n};\n", "import React from \"react\";\nimport { CrossIcon } from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../../../Layout\";\nimport { Sheet } from \"../../../Sheet\";\nimport { Text } from \"../../../Text\";\n// @ts-ignore\nimport { Logo } from \"../Header/HeaderComponents\";\nimport { RoomDetailsRow } from \"./RoomDetailsRow\";\nimport { useRoomLayoutHeader } from \"../../provider/roomLayoutProvider/hooks/useRoomLayoutScreen\";\nimport { useIsSheetTypeOpen, useSheetToggle } from \"../AppData/useSheet\";\nimport { SHEET_OPTIONS } from \"../../common/constants\";\n\nexport const RoomDetailsSheet = () => {\n  const { title, description, details } = useRoomLayoutHeader();\n  const toggleSheet = useSheetToggle(SHEET_OPTIONS.ROOM_DETAILS);\n  const showRoomDetailsSheet = useIsSheetTypeOpen(SHEET_OPTIONS.ROOM_DETAILS);\n  return (\n    <Sheet.Root open={showRoomDetailsSheet} onOpenChange={toggleSheet}>\n      <Sheet.Content css={{ py: \"$8\", pb: \"$12\" }}>\n        <Flex\n          justify=\"between\"\n          align=\"center\"\n          css={{\n            w: \"100%\",\n            borderBottom: \"1px solid $border_bright\",\n            pb: \"$4\",\n            mb: \"$4\",\n            px: \"$8\",\n          }}\n        >\n          <Text css={{ fontWeight: \"$semiBold\", color: \"$on_surface_high\" }}>\n            Description\n          </Text>\n          <Sheet.Close css={{ color: \"$on_surface_high\" }}>\n            <CrossIcon />\n          </Sheet.Close>\n        </Flex>\n        <Flex align=\"center\" css={{ w: \"100%\", gap: \"$4\", pb: \"$8\", px: \"$8\" }}>\n          <Logo />\n          <Box>\n            <Text\n              variant=\"sm\"\n              css={{ c: \"$on_secondary_high\", fontWeight: \"$semiBold\" }}\n            >\n              {title}\n            </Text>\n            <RoomDetailsRow details={details} />\n          </Box>\n        </Flex>\n        <Text variant=\"sm\" css={{ color: \"$on_surface_medium\", px: \"$8\" }}>\n          {description}\n        </Text>\n      </Sheet.Content>\n    </Sheet.Root>\n  );\n};\n", "import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useMedia } from \"react-use\";\nimport {\n  selectIsLargeRoom,\n  selectLocalPeerID,\n  selectPeerNameByID,\n  useCustomEvent,\n  useHMSActions,\n  useHMSStore,\n  useHMSVanillaStore,\n} from \"@100mslive/react-sdk\";\nimport { Box, Flex } from \"../../Layout\";\nimport { Text } from \"../../Text\";\nimport { config as cssConfig, keyframes } from \"../../Theme\";\nimport { EMOJI_REACTION_TYPE } from \"../common/constants\";\n\nlet emojiCount = 1;\n\nconst flyAndFade = keyframes({\n  \"20%\": { opacity: 1 },\n  \"100%\": { bottom: \"60%\", opacity: 0 },\n});\n\nconst wiggleLeftRight = keyframes({\n  \"0%\": { marginLeft: \"-50px\" },\n  \"100%\": { marginLeft: \"50px\" },\n});\n\nconst wiggleRightLeft = keyframes({\n  \"0%\": { marginLeft: \"50px\" },\n  \"100%\": { marginLeft: \"-50px\" },\n});\n\nconst getStartingPoints = (isMobile) => {\n  let arr = [];\n  const min = 5;\n  const max = isMobile ? 30 : 20;\n  const inc = isMobile ? 8 : 5;\n  for (let i = min; i <= max; i += inc) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nexport function FlyingEmoji() {\n  const localPeerId = useHMSStore(selectLocalPeerID);\n  const vanillaStore = useHMSVanillaStore();\n  const hmsActions = useHMSActions();\n  const [emojis, setEmojis] = useState([]);\n  const isMobile = useMedia(cssConfig.media.md);\n  const isLargeRoom = useHMSStore(selectIsLargeRoom);\n\n  const startingPoints = useMemo(() => getStartingPoints(isMobile), [isMobile]);\n\n  const showFlyingEmoji = useCallback(\n    async ({ emojiId, senderId }) => {\n      if (!emojiId || !senderId || document.hidden) {\n        return;\n      }\n      let senderPeerName = vanillaStore.getState(selectPeerNameByID(senderId));\n      if (!senderPeerName && isLargeRoom) {\n        const sender = await hmsActions.getPeer(senderId);\n        senderPeerName = sender?.name;\n      }\n      const nameToShow = localPeerId === senderId ? \"You\" : senderPeerName;\n      const startingPoint = startingPoints[emojiCount % startingPoints.length];\n      const id = emojiCount++;\n\n      setEmojis((emojis) => {\n        return [\n          ...emojis,\n          {\n            id: id,\n            emojiId: emojiId,\n            senderName: nameToShow,\n            startingPoint: `${startingPoint}%`,\n            wiggleType: Math.random() < 0.5 ? 0 : 1,\n          },\n        ];\n      });\n    },\n    [vanillaStore, isLargeRoom, localPeerId, startingPoints, hmsActions]\n  );\n\n  useCustomEvent({\n    type: EMOJI_REACTION_TYPE,\n    onEvent: showFlyingEmoji,\n  });\n\n  useEffect(() => {\n    window.showFlyingEmoji = showFlyingEmoji;\n  }, [showFlyingEmoji]);\n\n  return (\n    <Box\n      css={{\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        overflow: \"hidden\",\n        pointerEvents: \"none\",\n        userSelect: \"none\",\n        zIndex: 999,\n      }}\n    >\n      {emojis.map((emoji) => {\n        return (\n          <Flex\n            key={emoji.id}\n            css={{\n              left: emoji.startingPoint,\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              position: \"absolute\",\n              bottom: 0,\n              animation: `${flyAndFade()} 5s forwards, ${\n                emoji.wiggleType === 0 ? wiggleLeftRight() : wiggleRightLeft()\n              } 1s ease-in-out infinite alternate`,\n            }}\n            onAnimationEnd={() =>\n              setEmojis(emojis.filter((item) => item.id !== emoji.id))\n            }\n          >\n            <Box>\n              <em-emoji id={emoji.emojiId} size=\"48px\" set=\"apple\" />\n            </Box>\n            {emoji.senderName ? (\n              <Box\n                css={{\n                  width: \"fit-content\",\n                  padding: \"$2 $4\",\n                  background: \"$surface_bright\",\n                  borderRadius: \"$1\",\n                }}\n              >\n                <Text\n                  css={{\n                    fontSize: \"$space$6\",\n                    lineHeight: \"$xs\",\n                    color: \"$on_surface_high\",\n                  }}\n                >\n                  {emoji.senderName}\n                </Text>\n              </Box>\n            ) : (\n              \"\"\n            )}\n          </Flex>\n        );\n      })}\n    </Box>\n  );\n}\n", "import React, { useCallback } from \"react\";\nimport { useCustomEvent, useHMSActions } from \"@100mslive/react-sdk\";\nimport { REMOTE_STOP_SCREENSHARE_TYPE } from \"../common/constants\";\n\nexport function RemoteStopScreenshare() {\n  const actions = useHMSActions();\n\n  const onRemoteStopScreenshare = useCallback(async () => {\n    await actions.setScreenShareEnabled(false);\n  }, [actions]);\n\n  useCustomEvent({\n    type: REMOTE_STOP_SCREENSHARE_TYPE,\n    onEvent: onRemoteStopScreenshare,\n  });\n\n  return <></>;\n}\n", "import { useCallback, useEffect, useRef } from \"react\";\nimport {\n  selectIsConnectedToRoom,\n  selectPermissions,\n  useHMSActions,\n  useHMSStore,\n  useRecordingStreaming,\n} from \"@100mslive/react-sdk\";\n// @ts-ignore: No implicit Any\nimport { useSetAppDataByKey } from \"../AppData/useUISettings\";\n// @ts-ignore: No implicit Any\nimport { useShowStreamingUI } from \"../../common/hooks\";\n// @ts-ignore: No implicit Any\nimport { APP_DATA } from \"../../common/constants\";\n\nexport const useAutoStartStreaming = () => {\n  const [isHLSStarted, setHLSStarted] = useSetAppDataByKey(APP_DATA.hlsStarted);\n  const permissions = useHMSStore(selectPermissions);\n  const showStreamingUI = useShowStreamingUI();\n  const hmsActions = useHMSActions();\n  const isConnected = useHMSStore(selectIsConnectedToRoom);\n  const {\n    isHLSRunning,\n    isRTMPRunning,\n    isHLSRecordingOn,\n    isBrowserRecordingOn,\n  } = useRecordingStreaming();\n  const streamStartedRef = useRef(false);\n\n  const startHLS = useCallback(async () => {\n    try {\n      if (\n        isHLSStarted ||\n        !showStreamingUI ||\n        isHLSRunning ||\n        isRTMPRunning ||\n        isHLSRecordingOn ||\n        isBrowserRecordingOn\n      ) {\n        return;\n      }\n      setHLSStarted(true);\n      streamStartedRef.current = true;\n      await hmsActions.startHLSStreaming();\n    } catch (error) {\n      console.error(error);\n      streamStartedRef.current = false;\n      setHLSStarted(false);\n    }\n  }, [\n    hmsActions,\n    isHLSRunning,\n    isHLSStarted,\n    setHLSStarted,\n    showStreamingUI,\n    isRTMPRunning,\n    isHLSRecordingOn,\n    isBrowserRecordingOn,\n  ]);\n\n  useEffect(() => {\n    if (!isHLSStarted && !isHLSRunning) {\n      streamStartedRef.current = false;\n    }\n  }, [isHLSStarted, isHLSRunning]);\n\n  useEffect(() => {\n    if (\n      !isConnected ||\n      streamStartedRef.current ||\n      !permissions?.hlsStreaming\n    ) {\n      return;\n    }\n    // Is a streaming kit and peer with streaming permissions joins\n    startHLS();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isConnected]);\n};\n", "import { Indicator, Root } from \"@radix-ui/react-progress\";\nimport { styled } from \"../Theme\";\n\nconst StyledIndicator = styled(Indicator, {\n  h: \"$4\",\n  backgroundColor: \"$primary_default\",\n});\n\nconst StyledRoot = styled(Root, {\n  w: \"100%\",\n  h: \"$4\",\n  borderRadius: \"$round\",\n  backgroundColor: \"$secondary_dim\",\n  overflow: \"hidden\",\n});\n\nexport const Progress = {\n  Root: StyledRoot,\n  Content: StyledIndicator,\n};\n", "import React, { useCallback, useRef, useState } from \"react\";\nimport { HMSRoomProvider, useHMSActions } from \"@100mslive/react-sdk\";\nimport {\n  CheckCircleIcon,\n  ConnectivityIcon,\n  CrossCircleIcon,\n  GlobeIcon,\n  MicOnIcon,\n  VideoOnIcon,\n} from \"@100mslive/react-icons\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { HMSThemeProvider } from \"../Theme\";\nimport { AudioTest } from \"./AudioTest\";\nimport { BrowserTest } from \"./BrowserTest\";\nimport { ConnectivityTest } from \"./ConnectivityTest\";\nimport {\n  DiagnosticsContext,\n  DiagnosticsStep,\n  DiagnosticsStepInfo,\n  initialSteps,\n  useDiagnostics,\n} from \"./DiagnosticsContext\";\nimport { VideoTest } from \"./VideoTest\";\n\nconst DiagnosticsStepIcon: Record<DiagnosticsStep, React.ReactNode> = {\n  [DiagnosticsStep.VIDEO]: <VideoOnIcon width=\"2rem\" height=\"2rem\" />,\n  [DiagnosticsStep.AUDIO]: <MicOnIcon width=\"2rem\" height=\"2rem\" />,\n  [DiagnosticsStep.BROWSER]: <GlobeIcon width=\"2rem\" height=\"2rem\" />,\n  [DiagnosticsStep.CONNECTIVITY]: (\n    <ConnectivityIcon width=\"2rem\" height=\"2rem\" />\n  ),\n};\n\nconst Container = ({ children }: { children: React.ReactNode }) => (\n  <Box\n    css={{\n      px: \"120px\",\n      pt: \"120px\",\n      pb: \"24px\",\n      bg: \"$background_dim\",\n      lineHeight: \"1.5\",\n      \"-webkit-text-size-adjust\": \"100%\",\n      position: \"relative\",\n      h: \"100%\",\n      \"@lg\": {\n        p: \"$12\",\n      },\n      overflowY: \"auto\",\n      boxSizing: \"border-box\",\n      \"& *\": {\n        boxSizing: \"border-box\",\n      },\n      \"::-webkit-scrollbar-track\": {\n        WebkitBoxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n        boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"transparent\",\n      },\n      \"::-webkit-scrollbar\": {\n        width: \"6px\",\n        height: \"6px\",\n        backgroundColor: \"transparent\",\n      },\n      \"::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#657080\",\n        borderRadius: \"5px\",\n      },\n    }}\n  >\n    {children}\n  </Box>\n);\n\nconst DiagnosticsStepTest = () => {\n  const { activeStepIndex } = useDiagnostics();\n\n  let TestComponent = () => <></>;\n\n  if (activeStepIndex === DiagnosticsStep.AUDIO) {\n    TestComponent = AudioTest;\n  } else if (activeStepIndex === DiagnosticsStep.VIDEO) {\n    TestComponent = VideoTest;\n  } else if (activeStepIndex === DiagnosticsStep.BROWSER) {\n    TestComponent = BrowserTest;\n  } else if (activeStepIndex === DiagnosticsStep.CONNECTIVITY) {\n    TestComponent = ConnectivityTest;\n  }\n\n  return <TestComponent key={activeStepIndex} />;\n};\n\nconst DiagnosticsStepHeader = () => {\n  const { activeStepIndex, activeStep } = useDiagnostics();\n  return (\n    <Flex\n      css={{\n        py: \"$8\",\n        px: \"$10\",\n        alignItems: \"center\",\n        borderBottom: \"1px solid $border_default\",\n      }}\n    >\n      <Text css={{ c: \"$primary_bright\", mt: \"$xs\" }}>\n        {DiagnosticsStepIcon[activeStepIndex]}\n      </Text>\n      <Text css={{ fontSize: \"$h6\", ml: \"$9\" }}>{activeStep.name}</Text>\n    </Flex>\n  );\n};\n\nconst DiagnosticsStepContainer = () => {\n  return (\n    <Box\n      css={{\n        border: \"1px solid $border_default\",\n        r: \"$1\",\n        w: \"75%\",\n        maxWidth: \"65rem\",\n        \"@lg\": { w: \"100%\" },\n      }}\n    >\n      <DiagnosticsStepHeader />\n      <DiagnosticsStepTest />\n    </Box>\n  );\n};\n\nconst DiagnosticsStepsList = () => {\n  const { activeStepIndex, activeStep, steps } = useDiagnostics();\n\n  return (\n    <Box css={{ w: \"25%\", \"@lg\": { display: \"none\" } }}>\n      {Object.keys(DiagnosticsStep)\n        .filter((key) => !isNaN(Number(key)))\n        .map((key) => {\n          const keyIndex = Number(key);\n          const step = steps[keyIndex as DiagnosticsStep];\n          const isStepCompleted =\n            activeStepIndex > keyIndex || activeStep.isCompleted;\n\n          let color = \"$on_primary_low\";\n          let icon = (\n            <Text css={{ c: color, fontSize: \"1.75rem\" }}>&bull;</Text>\n          );\n\n          if (activeStepIndex === keyIndex) {\n            color = \"$on_primary_high\";\n            icon = <Text css={{ c: color, fontSize: \"1.75rem\" }}>&bull;</Text>;\n          }\n          if (isStepCompleted) {\n            color = \"$primary_bright\";\n            icon = <CheckCircleIcon width=\"1rem\" height=\"1rem\" />;\n          }\n          if (step.hasFailed) {\n            color = \"$alert_error_default\";\n            icon = <CrossCircleIcon width=\"1rem\" height=\"1rem\" />;\n          }\n\n          return (\n            <Flex\n              key={key}\n              css={{ mb: \"$10\", c: color, gap: \"$4\", alignItems: \"center\" }}\n            >\n              {icon}\n              <Text css={{ c: color }}>{step.name}</Text>\n            </Flex>\n          );\n        })}\n    </Box>\n  );\n};\n\nconst DiagnosticsProvider = () => {\n  const actions = useHMSActions();\n  const [activeStep, setActiveStep] = useState(0);\n  const [steps, setSteps] = useState(initialSteps);\n  const diagnosticsRef = useRef(actions.initDiagnostics());\n\n  const updateStep = useCallback(\n    (step: DiagnosticsStep, value: Omit<DiagnosticsStepInfo, \"name\">) => {\n      setSteps((prevSteps) => ({\n        ...prevSteps,\n        [step]: { ...prevSteps[step], ...value },\n      }));\n    },\n    []\n  );\n\n  return (\n    <DiagnosticsContext.Provider\n      value={{\n        hmsDiagnostics: diagnosticsRef.current,\n        activeStepIndex: activeStep,\n        setActiveStep,\n        steps,\n        updateStep,\n      }}\n    >\n      <Container>\n        <Text variant=\"h4\">Pre-call Test</Text>\n        <Text variant=\"md\" css={{ c: \"$on_primary_medium\" }}>\n          Make sure your devices and network are good to go, let's get started.\n        </Text>\n        <Flex css={{ direction: \"column\", mt: \"$12\", justifyItems: \"center\" }}>\n          <DiagnosticsStepsList />\n          <DiagnosticsStepContainer />\n        </Flex>\n      </Container>\n    </DiagnosticsContext.Provider>\n  );\n};\n\nexport const Diagnostics = () => {\n  return (\n    <HMSRoomProvider>\n      <HMSThemeProvider themeType=\"default\">\n        <DiagnosticsProvider />\n      </HMSThemeProvider>\n    </HMSRoomProvider>\n  );\n};\n", "/* eslint-disable react/prop-types */\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  HMSException,\n  selectDevices,\n  selectLocalAudioTrackID,\n  selectLocalMediaSettings,\n  selectTrackAudioByID,\n  useHMSActions,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { MicOnIcon, SpeakerIcon, StopIcon } from \"@100mslive/react-icons\";\nimport { PermissionErrorModal } from \"../Prebuilt/components/Notifications/PermissionErrorModal\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Button } from \"../Button\";\nimport { Box, Flex } from \"../Layout\";\nimport { Progress } from \"../Progress\";\nimport { Text } from \"../Text\";\n// @ts-ignore: No implicit any\nimport { DeviceSelector } from \"./DeviceSelector\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\nimport { useAudioOutputTest } from \"../Prebuilt/components/hooks/useAudioOutputTest\";\nimport { TEST_AUDIO_URL } from \"../Prebuilt/common/constants\";\n\nconst SelectContainer = ({ children }: { children: React.ReactNode }) => (\n  <Box css={{ w: \"calc(50% - 0.75rem)\", \"@lg\": { w: \"100%\" } }}>{children}</Box>\n);\n\nconst MicTest = ({ setError }: { setError: (err?: Error) => void }) => {\n  const { hmsDiagnostics } = useDiagnostics();\n  const devices = useHMSStore(selectDevices);\n  const [isRecording, setIsRecording] = useState(false);\n  const [selectedMic, setSelectedMic] = useState(\n    devices.audioInput[0]?.deviceId || \"default\"\n  );\n  const trackID = useHMSStore(selectLocalAudioTrackID);\n  const audioLevel = useHMSStore(selectTrackAudioByID(trackID));\n  const { audioOutputDeviceId } = useHMSStore(selectLocalMediaSettings);\n  const { playing, setPlaying, audioRef } = useAudioOutputTest({\n    deviceId: audioOutputDeviceId || devices.audioOutput[0]?.deviceId,\n  });\n\n  return (\n    <SelectContainer>\n      <DeviceSelector\n        title=\"Microphone (Input)\"\n        devices={devices.audioInput}\n        selection={selectedMic}\n        icon={<MicOnIcon />}\n        onChange={(deviceId: string) => {\n          setError(undefined);\n          setSelectedMic(deviceId);\n          hmsDiagnostics?.stopMicCheck();\n        }}\n      />\n      <Flex css={{ gap: \"$6\", alignItems: \"center\" }}>\n        <Button\n          variant=\"standard\"\n          icon\n          onClick={() => {\n            isRecording\n              ? hmsDiagnostics?.stopMicCheck()\n              : hmsDiagnostics\n                  ?.startMicCheck({\n                    inputDevice: selectedMic,\n                    onError: (err: Error) => {\n                      setError(err);\n                    },\n                    onStop: () => {\n                      setIsRecording(false);\n                    },\n                  })\n                  .then(() => {\n                    setIsRecording(true);\n                  });\n          }}\n          disabled={devices.audioInput.length === 0 || playing}\n        >\n          {isRecording ? <StopIcon /> : <MicOnIcon />}\n          {isRecording ? \"Stop Recording\" : \"Record\"}\n        </Button>\n\n        <Button\n          icon\n          variant=\"standard\"\n          outlined={hmsDiagnostics?.getRecordedAudio() === TEST_AUDIO_URL}\n          onClick={() => {\n            if (audioRef.current) {\n              audioRef.current.src = hmsDiagnostics?.getRecordedAudio() || \"\";\n              audioRef.current.play();\n            }\n          }}\n          disabled={\n            playing || hmsDiagnostics?.getRecordedAudio() === TEST_AUDIO_URL\n          }\n        >\n          <SpeakerIcon />\n          {playing ? \"Playing...\" : \"Playback\"}\n        </Button>\n        <audio\n          ref={audioRef}\n          onEnded={() => setPlaying(false)}\n          onPlay={() => setPlaying(true)}\n          style={{ display: \"none\" }}\n        />\n      </Flex>\n\n      <Flex\n        align=\"center\"\n        css={{\n          mt: \"$4\",\n          maxWidth: \"10rem\",\n          opacity: isRecording ? \"1\" : \"0\",\n          gap: \"$4\",\n        }}\n      >\n        <Text>\n          <MicOnIcon />\n        </Text>\n        <Progress.Root value={audioLevel} css={{ h: \"$2\" }}>\n          <Progress.Content\n            style={{\n              transform: `translateX(-${100 - audioLevel}%)`,\n              transition: \"transform 0.3s\",\n            }}\n          />\n        </Progress.Root>\n      </Flex>\n    </SelectContainer>\n  );\n};\n\nconst SpeakerTest = () => {\n  const actions = useHMSActions();\n  const devices = useHMSStore(selectDevices);\n  const { audioOutputDeviceId } = useHMSStore(selectLocalMediaSettings);\n\n  if (devices.audioOutput.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <SelectContainer>\n      <DeviceSelector\n        title=\"Speaker (Output)\"\n        devices={devices.audioOutput}\n        selection={audioOutputDeviceId || devices.audioOutput[0]?.deviceId}\n        icon={<SpeakerIcon />}\n        onChange={(deviceId: string) => {\n          actions.setAudioOutputDevice(deviceId);\n        }}\n      />\n    </SelectContainer>\n  );\n};\n\nexport const AudioTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const [error, setErrorAlone] = useState<Error | undefined>();\n\n  const setError = useCallback(\n    (err?: Error) => {\n      updateStep(DiagnosticsStep.AUDIO, { hasFailed: !!err });\n      setErrorAlone(err);\n    },\n    [updateStep, setErrorAlone]\n  );\n\n  useEffect(() => {\n    hmsDiagnostics\n      ?.requestPermission({ audio: true })\n      .catch((error) => setError(error));\n  }, [hmsDiagnostics, setError]);\n\n  return (\n    <>\n      <TestContainer>\n        <Text variant=\"body2\" css={{ c: \"$on_primary_medium\" }}>\n          Record a 10 second audio clip and play it back to check that your\n          microphone and speaker are working. If they aren't, make sure your\n          volume is turned up, try a different speaker or microphone, or check\n          your bluetooth settings.\n        </Text>\n\n        <Flex\n          css={{\n            mt: \"$10\",\n            gap: \"$10\",\n            \"@lg\": {\n              flexDirection: \"column\",\n              gap: \"$8\",\n            },\n          }}\n        >\n          <MicTest setError={setError} />\n          <SpeakerTest />\n        </Flex>\n      </TestContainer>\n      <TestFooter error={error} ctaText=\"Does your audio sound good?\" />\n      <PermissionErrorModal error={error as HMSException} />\n    </>\n  );\n};\n", "import React from \"react\";\nimport { Button } from \"../Button\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { CSS } from \"../Theme\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nexport const TestContainer = ({\n  css,\n  children,\n}: {\n  css?: CSS;\n  children: React.ReactNode;\n}) => {\n  return <Box css={{ p: \"$10\", ...css }}>{children}</Box>;\n};\n\nexport const TestFooter = ({\n  error,\n  ctaText,\n  children,\n}: {\n  ctaText?: string;\n  error?: Error;\n  children?: React.ReactNode;\n}) => {\n  const {\n    hmsDiagnostics,\n    activeStepIndex: activeStep,\n    setActiveStep,\n  } = useDiagnostics();\n\n  const onNextStep = () => {\n    if (activeStep === DiagnosticsStep.AUDIO) {\n      hmsDiagnostics?.stopMicCheck();\n    } else if (activeStep === DiagnosticsStep.VIDEO) {\n      hmsDiagnostics?.stopCameraCheck();\n    } else if (activeStep === DiagnosticsStep.CONNECTIVITY) {\n      hmsDiagnostics?.stopConnectivityCheck();\n    }\n\n    setActiveStep((step) => step + 1);\n  };\n\n  return (\n    <Flex\n      css={{\n        py: \"$8\",\n        px: \"$10\",\n        background: \"$background_dim\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        borderTop: \"1px solid $border_default\",\n        fontSize: \"$sm\",\n        borderBottomLeftRadius: \"$1\",\n        borderBottomRightRadius: \"$1\",\n        lineHeight: \"$sm\",\n        zIndex: 1001,\n        \"@lg\": { flexDirection: \"column\", gap: \"$8\" },\n      }}\n    >\n      <Box>\n        {error && (\n          <Text css={{ c: \"$alert_error_default\" }}>\n            Error: {error.message}\n          </Text>\n        )}\n      </Box>\n      {children ? (\n        children\n      ) : (\n        <Flex\n          align=\"center\"\n          css={{ gap: \"$8\", \"@lg\": { flexDirection: \"column\" } }}\n        >\n          <Text css={{ c: \"$on_primary_medium\" }}>{ctaText}</Text>\n          <Flex align=\"center\" gap=\"4\">\n            <Button onClick={onNextStep} variant=\"standard\" outlined={true}>\n              Skip\n            </Button>\n            <Button disabled={!!error} onClick={onNextStep}>\n              Yes\n            </Button>\n          </Flex>\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n", "import React, { useContext } from \"react\";\nimport { HMSDiagnosticsInterface } from \"@100mslive/react-sdk\";\n\nexport enum DiagnosticsStep {\n  BROWSER,\n  VIDEO,\n  AUDIO,\n  CONNECTIVITY,\n}\n\nexport const initialSteps = {\n  [DiagnosticsStep.BROWSER]: { name: \"Browser Support\" },\n  [DiagnosticsStep.VIDEO]: { name: \"Test Video\" },\n  [DiagnosticsStep.AUDIO]: { name: \"Test Audio\" },\n  [DiagnosticsStep.CONNECTIVITY]: { name: \"Connection Quality\" },\n};\n\nexport interface DiagnosticsStepInfo {\n  name: string;\n  hasFailed?: boolean;\n  isCompleted?: boolean;\n}\n\nexport const DiagnosticsContext = React.createContext<{\n  hmsDiagnostics?: HMSDiagnosticsInterface;\n  activeStepIndex: DiagnosticsStep;\n  setActiveStep: React.Dispatch<React.SetStateAction<DiagnosticsStep>>;\n  steps: Record<DiagnosticsStep, DiagnosticsStepInfo>;\n  updateStep: (\n    step: DiagnosticsStep,\n    value: Omit<DiagnosticsStepInfo, \"name\">\n  ) => void;\n}>({\n  activeStepIndex: 0,\n  setActiveStep: () => {\n    return;\n  },\n  steps: initialSteps,\n  updateStep: () => {\n    return;\n  },\n});\n\nexport const useDiagnostics = () => {\n  const context = useContext(DiagnosticsContext);\n  const activeStep = context.steps[context.activeStepIndex];\n\n  return { ...context, activeStep };\n};\n", "import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"../Dropdown\";\nimport { Box, Flex } from \"../Layout\";\nimport { DialogDropdownTrigger } from \"../Prebuilt/primitives/DropdownTrigger\";\nimport { Text } from \"../Text\";\n\nexport const DeviceSelector = ({\n  title,\n  devices,\n  selection,\n  onChange,\n  icon,\n  children = null,\n}) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef(null);\n  return (\n    <Box css={{ mb: \"$6\" }}>\n      <Text css={{ mb: \"$4\" }}>{title}</Text>\n      <Flex\n        align=\"center\"\n        css={{\n          gap: \"$4\",\n          \"@md\": {\n            flexDirection: children ? \"column\" : \"row\",\n            alignItems: children ? \"start\" : \"center\",\n          },\n        }}\n      >\n        <Dropdown.Root open={open} onOpenChange={setOpen}>\n          <DialogDropdownTrigger\n            ref={ref}\n            icon={icon}\n            title={\n              devices.find(({ deviceId }) => deviceId === selection)?.label ||\n              \"Select device from list\"\n            }\n            open={open}\n          />\n          <Dropdown.Portal>\n            <Dropdown.Content\n              align=\"start\"\n              sideOffset={8}\n              css={{\n                w:\n                  // @ts-ignore\n                  ref.current?.clientWidth,\n                zIndex: 1001,\n              }}\n            >\n              {devices.map((device) => {\n                return (\n                  <Dropdown.Item\n                    key={device.label}\n                    onSelect={() => onChange(device.deviceId)}\n                    css={{\n                      px: \"$9\",\n                    }}\n                  >\n                    {device.label}\n                  </Dropdown.Item>\n                );\n              })}\n            </Dropdown.Content>\n          </Dropdown.Portal>\n        </Dropdown.Root>\n        {children}\n      </Flex>\n    </Box>\n  );\n};\n\nDeviceSelector.propTypes = {\n  title: PropTypes.string.isRequired,\n  devices: PropTypes.array.isRequired,\n  selection: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  icon: PropTypes.node,\n  children: PropTypes.node,\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { parsedUserAgent } from \"@100mslive/react-sdk\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Box, Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nconst CMS_MEDIA_SERVER = \"https://storage.googleapis.com/100ms-cms-prod/\";\n\nexport const operatingSystemIconInfo = {\n  tizen: {\n    key: \"tizen\",\n    val: \"Tizen\",\n    icon: `${CMS_MEDIA_SERVER}cms/Tizen_b99350214e/Tizen_b99350214e.svg`,\n  },\n  \"mac os\": {\n    key: \"macos\",\n    val: \"Mac OS\",\n    icon: `${CMS_MEDIA_SERVER}cms/mac_OS_804456afd8/mac_OS_804456afd8.png`,\n  },\n  windows: {\n    key: \"windows\",\n    val: \"Windows\",\n    icon: `${CMS_MEDIA_SERVER}cms/Windows_fdfe6749b6/Windows_fdfe6749b6.svg`,\n  },\n  linux: {\n    key: \"linux\",\n    val: \"Linux\",\n    icon: `${CMS_MEDIA_SERVER}cms/Linux_31f8353a2e/Linux_31f8353a2e.svg`,\n  },\n  chromium: {\n    key: \"chromium\",\n    val: \"Chromium\",\n    icon: `${CMS_MEDIA_SERVER}cms/Chromium_3df17710bd/Chromium_3df17710bd.svg`,\n  },\n  ubuntu: {\n    key: \"ubuntu\",\n    val: \"Ubuntu\",\n    icon: `${CMS_MEDIA_SERVER}cms/Ubuntu_966dd923c5/Ubuntu_966dd923c5.svg`,\n  },\n  ios: {\n    key: \"ios\",\n    val: \"iOS\",\n    icon: `${CMS_MEDIA_SERVER}cms/i_OS_3cdc9d9b71/i_OS_3cdc9d9b71.svg`,\n  },\n  android: {\n    key: \"android\",\n    val: \"Android\",\n    icon: `${CMS_MEDIA_SERVER}cms/Android_49dcfdc934/Android_49dcfdc934.svg`,\n  },\n};\n\nexport const browserTypeIconInfo = {\n  brave: {\n    key: \"brave\",\n    val: \"Brave\",\n    icon: `${CMS_MEDIA_SERVER}cms/Brave_7e66131f09/Brave_7e66131f09.svg`,\n  },\n  chrome: {\n    key: \"chrome\",\n    val: \"Chrome\",\n    icon: `${CMS_MEDIA_SERVER}cms/Chrome_7bf77fbdd7/Chrome_7bf77fbdd7.svg`,\n  },\n  firefox: {\n    key: \"firefox\",\n    val: \"Firefox\",\n    icon: `${CMS_MEDIA_SERVER}cms/Firefox_30f3976fb8/Firefox_30f3976fb8.svg`,\n  },\n  safari: {\n    key: \"safari\",\n    val: \"Safari\",\n    icon: `${CMS_MEDIA_SERVER}cms/Safari_254e74ed94/Safari_254e74ed94.svg`,\n  },\n  \"mobile safari\": {\n    key: \"safari\",\n    val: \"Safari\",\n    icon: `${CMS_MEDIA_SERVER}cms/Safari_254e74ed94/Safari_254e74ed94.svg`,\n  },\n  edge: {\n    key: \"edge\",\n    val: \"Edge\",\n    icon: `${CMS_MEDIA_SERVER}cms/Edge_23add4a83f/Edge_23add4a83f.svg`,\n  },\n  opera: {\n    key: \"opera\",\n    val: \"Opera\",\n    icon: `${CMS_MEDIA_SERVER}cms/Opera_0f3bf4eb19/Opera_0f3bf4eb19.svg`,\n  },\n};\n\nconst CheckDetails = ({\n  title,\n  value,\n  iconURL,\n}: {\n  title: string;\n  value: string;\n  iconURL?: string;\n}) => (\n  <Box\n    css={{\n      w: \"100%\",\n      my: \"$10\",\n      p: \"$10\",\n      r: \"$1\",\n      bg: \"$surface_default\",\n      \"@lg\": { w: \"auto\" },\n    }}\n  >\n    <Text css={{ c: \"$on_primary_medium\", mb: \"$6\" }}>{title}</Text>\n    <Flex align=\"center\">\n      {iconURL && (\n        <Box\n          css={{ size: \"2rem\", r: \"$round\", bg: \"$surface_brighter\", mr: \"$4\" }}\n        >\n          <img\n            style={{ objectFit: \"contain\", width: \"2rem\" }}\n            src={iconURL}\n            alt={value}\n          />\n        </Box>\n      )}\n      <Text>{value}</Text>\n    </Flex>\n  </Box>\n);\n\nexport const BrowserTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const [error, setError] = useState<Error | undefined>();\n  useEffect(() => {\n    try {\n      hmsDiagnostics?.checkBrowserSupport();\n    } catch (err) {\n      updateStep(DiagnosticsStep.BROWSER, { hasFailed: true });\n      setError(err as Error);\n    }\n  }, [hmsDiagnostics, updateStep]);\n  return (\n    <>\n      <TestContainer\n        css={{ display: \"flex\", gap: \"$8\", \"@lg\": { display: \"block\" } }}\n      >\n        <CheckDetails\n          title=\"Browser\"\n          iconURL={\n            parsedUserAgent.getBrowser().name &&\n            browserTypeIconInfo[\n              parsedUserAgent\n                .getBrowser()\n                .name?.toLowerCase() as keyof typeof browserTypeIconInfo\n            ]?.icon\n          }\n          value={`${parsedUserAgent.getBrowser().name} ${\n            parsedUserAgent.getBrowser().version\n          }`}\n        />\n        <CheckDetails\n          title=\"Operating system\"\n          iconURL={\n            parsedUserAgent.getOS().name &&\n            operatingSystemIconInfo[\n              parsedUserAgent\n                .getOS()\n                .name?.toLowerCase() as keyof typeof operatingSystemIconInfo\n            ]?.icon\n          }\n          value={`${parsedUserAgent.getOS().name} ${\n            parsedUserAgent.getOS().version\n          }`}\n        />\n      </TestContainer>\n      <TestFooter error={error} ctaText=\"Is your device information correct?\" />\n    </>\n  );\n};\n", "import React, { useState } from \"react\";\nimport {\n  ConnectivityCheckResult,\n  ConnectivityState,\n  DiagnosticsRTCStats,\n} from \"@100mslive/react-sdk\";\nimport {\n  CheckCircleIcon,\n  CrossCircleIcon,\n  EyeCloseIcon,\n  EyeOpenIcon,\n  LinkIcon,\n} from \"@100mslive/react-icons\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Button } from \"../Button\";\nimport { Box, Flex } from \"../Layout\";\nimport { Loading } from \"../Loading\";\nimport { formatBytes } from \"../Stats\";\nimport { Text } from \"../Text\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nconst Regions = {\n  in: \"India\",\n  eu: \"Europe\",\n  us: \"United States\",\n};\n\nconst ConnectivityStateMessage = {\n  [ConnectivityState.STARTING]: \"Fetching Init\",\n  [ConnectivityState.INIT_FETCHED]: \"Connecting to signal server\",\n  [ConnectivityState.SIGNAL_CONNECTED]: \"Establishing ICE connection\",\n  [ConnectivityState.ICE_ESTABLISHED]: \"Capturing Media\",\n  [ConnectivityState.MEDIA_CAPTURED]: \"Publishing Media\",\n  [ConnectivityState.MEDIA_PUBLISHED]: \"Finishing Up\",\n  [ConnectivityState.COMPLETED]: \"Completed\",\n};\n\nexport const ConnectivityTestStepResult = ({\n  title,\n  status = \"Connected\",\n  success,\n  children,\n}: {\n  title: string;\n  status?: string;\n  success?: boolean;\n  children: React.ReactNode;\n}) => {\n  const [hideDetails, setHideDetails] = useState(true);\n\n  return (\n    <Box css={{ my: \"$10\", p: \"$10\", r: \"$1\", bg: \"$surface_bright\" }}>\n      <Text css={{ c: \"$on_primary_medium\", mb: \"$6\" }}>{title}</Text>\n      {success ? (\n        <Flex>\n          <Text css={{ c: \"$alert_success\" }}>\n            <CheckCircleIcon width=\"1.5rem\" height=\"1.5rem\" />\n          </Text>\n          <Text variant=\"lg\" css={{ ml: \"$4\" }}>\n            {status}\n          </Text>\n        </Flex>\n      ) : (\n        <Flex>\n          <Text css={{ c: \"$alert_error_bright\" }}>\n            <CrossCircleIcon width=\"1.5rem\" height=\"1.5rem\" />\n          </Text>\n          <Text variant=\"lg\" css={{ ml: \"$4\" }}>\n            Failed\n          </Text>\n        </Flex>\n      )}\n      <Flex\n        onClick={() => setHideDetails(!hideDetails)}\n        align=\"center\"\n        gap=\"2\"\n        css={{\n          color: \"$primary_bright\",\n        }}\n      >\n        {hideDetails ? <EyeOpenIcon /> : <EyeCloseIcon />}\n        <Text\n          variant=\"caption\"\n          css={{\n            color: \"$primary_bright\",\n          }}\n        >\n          {hideDetails ? \"View\" : \"Hide\"} detailed information\n        </Text>\n      </Flex>\n      {!hideDetails ? <Box>{children}</Box> : null}\n    </Box>\n  );\n};\n\nconst DetailedInfo = ({\n  title,\n  value,\n  Icon,\n}: {\n  title: string;\n  value: string;\n  Icon?: (props: React.SVGProps<SVGSVGElement>) => React.JSX.Element;\n}) => {\n  return (\n    <Box css={{ flex: \"50%\", mt: \"$6\" }}>\n      <Text\n        variant=\"caption\"\n        css={{ fontWeight: \"$semiBold\", c: \"$on_primary_medium\" }}\n      >\n        {title}\n      </Text>\n      <Flex css={{ mt: \"$xs\", alignItems: \"flex-start\" }}>\n        {Icon && (\n          <Text css={{ mr: \"$4\" }}>\n            <Icon width=\"1rem\" height=\"1rem\" />\n          </Text>\n        )}\n        <Text variant=\"caption\">{value}</Text>\n      </Flex>\n    </Box>\n  );\n};\n\nconst MediaServerResult = ({\n  result,\n}: {\n  result?: ConnectivityCheckResult[\"mediaServerReport\"];\n}) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Media server connection test\"\n      success={result?.isPublishICEConnected && result.isSubscribeICEConnected}\n    >\n      <Flex css={{ flexWrap: \"wrap\" }}>\n        <DetailedInfo\n          title=\"Media Captured\"\n          value={result?.stats?.audio.bytesSent ? \"Yes\" : \"No\"}\n          Icon={\n            result?.stats?.audio.bytesSent ? CheckCircleIcon : CrossCircleIcon\n          }\n        />\n        <DetailedInfo\n          title=\"Media Published\"\n          value={result?.stats?.audio.bitrateSent ? \"Yes\" : \"No\"}\n          Icon={\n            result?.stats?.audio.bytesSent ? CheckCircleIcon : CrossCircleIcon\n          }\n        />\n        {result?.connectionQualityScore ? (\n          <DetailedInfo\n            title=\"Connection Quality Score (CQS)\"\n            value={`${result.connectionQualityScore.toFixed(2)} (out of 5)`}\n          />\n        ) : null}\n      </Flex>\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst SignallingResult = ({\n  result,\n}: {\n  result?: ConnectivityCheckResult[\"signallingReport\"];\n}) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Signalling server connection test\"\n      success={result?.isConnected}\n    >\n      <Flex css={{ flexWrap: \"wrap\" }}>\n        <DetailedInfo\n          title=\"Signalling Gateway\"\n          value={result?.isConnected ? \"Reachable\" : \"Unreachable\"}\n          Icon={result?.isConnected ? CheckCircleIcon : CrossCircleIcon}\n        />\n        <DetailedInfo\n          title=\"Websocket URL\"\n          value={result?.websocketUrl || \"N/A\"}\n          Icon={LinkIcon}\n        />\n      </Flex>\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst AudioStats = ({ stats }: { stats: DiagnosticsRTCStats | undefined }) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Audio\"\n      status=\"Received\"\n      success={!!stats?.bytesSent}\n    >\n      {stats && (\n        <Flex css={{ flexWrap: \"wrap\" }}>\n          <DetailedInfo\n            title=\"Bytes Sent\"\n            value={formatBytes(stats.bytesSent)}\n          />\n          <DetailedInfo\n            title=\"Bytes Received\"\n            value={formatBytes(stats.bytesReceived)}\n          />\n          <DetailedInfo\n            title=\"Packets Received\"\n            value={stats.packetsReceived.toString()}\n          />\n          <DetailedInfo\n            title=\"Packets Lost\"\n            value={stats.packetsLost.toString()}\n          />\n          <DetailedInfo\n            title=\"Bitrate Sent\"\n            value={formatBytes(stats.bitrateSent, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Bitrate Received\"\n            value={formatBytes(stats.bitrateReceived, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Round Trip Time\"\n            value={`${stats.roundTripTime} ms`}\n          />\n        </Flex>\n      )}\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst VideoStats = ({ stats }: { stats: DiagnosticsRTCStats | undefined }) => {\n  return (\n    <ConnectivityTestStepResult\n      title=\"Video\"\n      status=\"Received\"\n      success={!!stats?.bytesSent}\n    >\n      {stats && (\n        <Flex css={{ flexWrap: \"wrap\" }}>\n          <DetailedInfo\n            title=\"Bytes Sent\"\n            value={formatBytes(stats.bytesSent)}\n          />\n          <DetailedInfo\n            title=\"Bytes Received\"\n            value={formatBytes(stats.bytesReceived)}\n          />\n          <DetailedInfo\n            title=\"Packets Received\"\n            value={stats.packetsReceived.toString()}\n          />\n          <DetailedInfo\n            title=\"Packets Lost\"\n            value={stats.packetsLost.toString()}\n          />\n          <DetailedInfo\n            title=\"Bitrate Sent\"\n            value={formatBytes(stats.bitrateSent, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Bitrate Received\"\n            value={formatBytes(stats.bitrateReceived, \"b/s\")}\n          />\n          <DetailedInfo\n            title=\"Round Trip Time\"\n            value={`${stats.roundTripTime} ms`}\n          />\n        </Flex>\n      )}\n    </ConnectivityTestStepResult>\n  );\n};\n\nconst Footer = ({\n  error,\n  result,\n  restart,\n}: {\n  result?: ConnectivityCheckResult;\n  restart: () => void;\n  error?: Error;\n}) => {\n  return (\n    <TestFooter error={error}>\n      <Flex css={{ gap: \"$8\", \"@lg\": { flexDirection: \"column\" } }}>\n        <Button variant=\"standard\" onClick={restart}>\n          Restart Test\n        </Button>\n        <Button\n          disabled={!result}\n          onClick={() =>\n            result && downloadJson(result, \"hms_diagnostics_results\")\n          }\n        >\n          Download Test Report\n        </Button>\n      </Flex>\n    </TestFooter>\n  );\n};\n\nconst ConnectivityTestReport = ({\n  error,\n  result,\n  progress,\n  startTest,\n}: {\n  error?: Error;\n  result?: ConnectivityCheckResult;\n  progress?: ConnectivityState;\n  startTest: () => void;\n}) => {\n  if (error) {\n    return (\n      <>\n        <TestContainer css={{ textAlign: \"center\" }}>\n          <Text css={{ c: \"$alert_error_default\", mb: \"$4\" }}>\n            <CrossCircleIcon />\n          </Text>\n          <Text variant=\"h6\">Connectivity Test Failed</Text>\n          <Text variant=\"body2\" css={{ c: \"$on_primary_medium\" }}>\n            {error.message}\n          </Text>\n        </TestContainer>\n        <Footer restart={startTest} error={error} />\n      </>\n    );\n  }\n\n  if (result) {\n    // for debugging and quick view of results\n    console.log(result);\n    return (\n      <>\n        <TestContainer>\n          <Text css={{ c: \"$on_primary_medium\" }}>\n            Connectivity test has been completed.\n          </Text>\n          <SignallingResult result={result?.signallingReport} />\n          <MediaServerResult result={result?.mediaServerReport} />\n          <AudioStats stats={result?.mediaServerReport?.stats?.audio} />\n          <VideoStats stats={result?.mediaServerReport?.stats?.video} />\n        </TestContainer>\n        <Footer result={result} restart={startTest} error={error} />\n      </>\n    );\n  }\n\n  if (progress !== undefined) {\n    return (\n      <TestContainer css={{ textAlign: \"center\" }}>\n        <Text\n          css={{\n            c: \"$primary_bright\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Loading size=\"3.5rem\" color=\"currentColor\" />\n        </Text>\n        <Text variant=\"h6\" css={{ mt: \"$8\" }}>\n          Checking your connection...\n        </Text>\n        <Text\n          variant=\"body2\"\n          css={{ c: \"$on_primary_medium\", mt: \"$4\" }}\n        >{`${ConnectivityStateMessage[progress]}...`}</Text>\n      </TestContainer>\n    );\n  }\n\n  return null;\n};\n\nconst RegionSelector = ({\n  region,\n  setRegion,\n  startTest,\n}: {\n  region?: string;\n  startTest?: () => void;\n  setRegion: (region: string) => void;\n}) => {\n  return (\n    <TestContainer css={{ borderBottom: \"1px solid $border_default\" }}>\n      <Text variant=\"body1\">Select a region</Text>\n      <Text variant=\"body2\" css={{ c: \"$on_secondary_low\" }}>\n        Select the closest region for best results\n      </Text>\n      <Flex\n        justify=\"between\"\n        css={{\n          mt: \"$md\",\n          \"@lg\": {\n            flexDirection: \"column\",\n            gap: \"$8\",\n          },\n        }}\n      >\n        <Flex\n          css={{\n            gap: \"$4\",\n            \"@lg\": {\n              flexDirection: \"column\",\n            },\n          }}\n        >\n          {Object.entries(Regions).map(([key, value]) => (\n            <Button\n              key={key}\n              outlined={region !== key}\n              variant={region === key ? \"primary\" : \"standard\"}\n              css={region === key ? { bg: \"$primary_dim\" } : {}}\n              onClick={() => setRegion(key)}\n            >\n              {value}\n            </Button>\n          ))}\n        </Flex>\n        <Flex css={{ \"@lg\": { flexDirection: \"column\" } }}>\n          <Button variant=\"primary\" onClick={startTest} disabled={!startTest}>\n            {startTest ? \"Start Test\" : \"Testing...\"}\n          </Button>\n        </Flex>\n      </Flex>\n    </TestContainer>\n  );\n};\n\nexport const ConnectivityTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const [region, setRegion] = useState<string | undefined>(\n    Object.keys(Regions)[0]\n  );\n  const [error, setError] = useState<Error | undefined>();\n  const [progress, setProgress] = useState<ConnectivityState>();\n  const [result, setResult] = useState<ConnectivityCheckResult | undefined>();\n\n  const startTest = () => {\n    updateStep(DiagnosticsStep.CONNECTIVITY, {\n      hasFailed: false,\n      isCompleted: false,\n    });\n    setError(undefined);\n    setResult(undefined);\n    hmsDiagnostics\n      ?.startConnectivityCheck(\n        (state) => {\n          setProgress(state);\n        },\n        (result) => {\n          updateStep(DiagnosticsStep.CONNECTIVITY, { isCompleted: true });\n          setResult(result);\n        },\n        region\n      )\n      .catch((error) => {\n        updateStep(DiagnosticsStep.CONNECTIVITY, { hasFailed: true });\n        setError(error);\n      });\n  };\n\n  return (\n    <>\n      <RegionSelector\n        region={region}\n        setRegion={setRegion}\n        startTest={\n          progress === undefined || progress === ConnectivityState.COMPLETED\n            ? startTest\n            : undefined\n        }\n      />\n      <ConnectivityTestReport\n        error={error}\n        result={result}\n        progress={progress}\n        startTest={startTest}\n      />\n    </>\n  );\n};\n\nconst downloadJson = (obj: object, fileName: string) => {\n  const a = document.createElement(\"a\");\n  const file = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json\",\n  });\n  a.href = URL.createObjectURL(file);\n  a.download = `${fileName}.json`;\n  a.click();\n};\n", "import React, { useEffect, useState } from \"react\";\nimport {\n  HMSException,\n  selectDevices,\n  selectLocalMediaSettings,\n  selectLocalVideoTrackID,\n  useHMSStore,\n} from \"@100mslive/react-sdk\";\nimport { VideoOnIcon } from \"@100mslive/react-icons\";\nimport { PermissionErrorModal } from \"../Prebuilt/components/Notifications/PermissionErrorModal\";\nimport { TestContainer, TestFooter } from \"./components\";\nimport { Flex } from \"../Layout\";\nimport { Text } from \"../Text\";\nimport { Video } from \"../Video\";\nimport { StyledVideoTile } from \"../VideoTile\";\n// @ts-ignore: No implicit any\nimport { DeviceSelector } from \"./DeviceSelector\";\nimport { DiagnosticsStep, useDiagnostics } from \"./DiagnosticsContext\";\n\nexport const VideoTest = () => {\n  const { hmsDiagnostics, updateStep } = useDiagnostics();\n  const allDevices = useHMSStore(selectDevices);\n  const { videoInput } = allDevices;\n  const trackID = useHMSStore(selectLocalVideoTrackID);\n  const sdkSelectedDevices = useHMSStore(selectLocalMediaSettings);\n  const [error, setError] = useState<HMSException | undefined>();\n\n  useEffect(() => {\n    hmsDiagnostics?.startCameraCheck().catch((err) => {\n      updateStep(DiagnosticsStep.VIDEO, { hasFailed: true });\n      setError(err);\n    });\n  }, [hmsDiagnostics, updateStep]);\n\n  return (\n    <>\n      <TestContainer\n        css={{\n          display: \"flex\",\n          \"@lg\": { flexDirection: \"column\", alignItems: \"center\" },\n        }}\n      >\n        {trackID && (\n          <StyledVideoTile.Container\n            css={{\n              width: \"90%\",\n              aspectRatio: \"16/9\",\n              mr: \"$10\",\n              \"@lg\": { mr: 0, mb: \"$10\", aspectRatio: \"1/1\" },\n            }}\n          >\n            <Video mirror={true} trackId={trackID} />\n          </StyledVideoTile.Container>\n        )}\n        <Flex direction=\"column\" css={{ w: \"100%\" }}>\n          <Text variant=\"body2\" css={{ c: \"$on_primary_medium\", mb: \"$10\" }}>\n            Move in front of your camera to make sure it's working. If you don't\n            see your video, try changing the selected camera. If the camera\n            isn't part of your computer, check your settings to make sure your\n            system recognizes it.\n          </Text>\n          <DeviceSelector\n            title=\"Video\"\n            devices={videoInput || []}\n            icon={<VideoOnIcon />}\n            selection={sdkSelectedDevices.videoInputDeviceId}\n            onChange={async (deviceId: string) => {\n              hmsDiagnostics?.stopCameraCheck();\n              hmsDiagnostics?.startCameraCheck(deviceId);\n            }}\n          />\n        </Flex>\n      </TestContainer>\n      <TestFooter error={error} ctaText=\"Does your video look good?\" />\n      <PermissionErrorModal error={error} />\n    </>\n  );\n};\n"],
  "mappings": "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",
  "names": ["React", "_a", "_b", "QUESTION_TYPE_TITLE", "theme", "useEffect", "useState", "ThemeTypes", "useState", "isBrowser", "updatedTheme", "useEffect", "React", "_a", "_b", "React", "React", "_a", "_b", "React", "_a", "_b", "_a", "_b", "css", "React", "React", "React", "React", "useState", "useState", "React", "React", "Root", "_a", "React", "React", "Root", "Track", "Range", "Thumb", "_a", "_b", "React", "React", "useEffect", "useRef", "Root", "styled", "React", "React", "React", "styled", "Root", "useEffect", "React", "useRef", "React", "_a", "_b", "css", "React", "Root", "Overlay", "Root", "Container", "Root", "Content", "Portal", "Root", "Trigger", "Root", "Trigger", "Content", "Portal", "React", "_a", "_b", "React", "Root", "Flex", "useCallback", "useRef", "theme", "useCallback", "useRef", "React", "useEffect", "useRef", "React", "useRef", "useEffect", "Arrow", "Close", "Content", "Root", "Portal", "Trigger", "StyledContent", "Content", "Arrow", "StyledTrigger", "Trigger", "Popover", "Root", "Portal", "Close", "React", "selectHMSStats", "useHMSStatsStore", "Root", "Label", "useRef", "useRef", "_a", "_b", "selectHMSStats", "useHMSStatsStore", "React", "Label", "React", "CrossIcon", "css", "React", "CrossIcon", "_a", "_b", "React", "StyledTrigger", "StyledContent", "React", "_a", "_b", "css", "Root", "Select", "StyledTrigger", "StyledContent", "StyledItem", "Select", "StyledTrigger", "StyledContent", "React", "React", "React", "_a", "_b", "Icon", "React", "Content", "Root", "Trigger", "Root", "Trigger", "Content", "React", "useEffect", "useRef", "match", "selectIsConnectedToRoom", "useHMSActions", "useHMSStore", "React", "useEffect", "useMemo", "useRef", "selectHLSState", "useHMSActions", "useHMSStore", "useRecordingStreaming", "React", "useCallback", "useHMSActions", "useHMSStore", "React", "React", "Label", "useCallback", "useMemo", "useHMSStore", "useHMSVanillaStore", "useState", "useHMSStore", "useHMSStore", "_a", "useCallback", "_b", "value", "useHMSVanillaStore", "useMemo", "React", "useHMSActions", "useHMSStore", "useCallback", "useMemo", "useHMSStore", "React", "useCallback", "useEffect", "useRef", "useState", "useState", "useRef", "useCallback", "_a", "layout", "useEffect", "_b", "React", "_a", "_a", "_b", "_a", "_b", "useHMSStore", "useMemo", "details", "useCallback", "selectAppData", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "useHMSStore", "selectAppData", "useHMSActions", "useHMSVanillaStore", "useCallback", "view", "React", "_a", "_b", "useHMSActions", "useHMSStore", "useRef", "useEffect", "useMemo", "useRecordingStreaming", "selectHLSState", "React", "useEffect", "useRef", "useState", "match", "useHMSActions", "React", "useContext", "React", "useContext", "React", "useContext", "useEffect", "match", "P", "HMSRoomState", "selectRoomState", "useHMSActions", "useHMSStore", "parsedUserAgent", "_a", "_b", "parsedUserAgent", "useCallback", "_a", "_b", "useCallback", "React", "useContext", "useHMSStore", "selectRoomState", "useHMSActions", "useEffect", "match", "HMSRoomState", "P", "isLeaveScreenEnabled", "prevState", "React", "useHMSActions", "useState", "useRef", "useEffect", "error", "match", "_a", "React", "useEffect", "useRef", "useState", "uuid", "HMSRoomState", "selectAppData", "selectIsConnectedToRoom", "selectRoomState", "useAwayNotifications", "useHMSActions", "useHMSStore", "React", "useEffect", "useMedia", "selectLocalPeerRole", "useHMSStore", "React", "Fragment", "useCallback", "useEffect", "useState", "DeviceType", "HMSRoomState", "selectLocalVideoTrackID", "selectRoomState", "selectVideoTrackByID", "useAVToggle", "useDevices", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "MicOnIcon", "SettingsIcon", "SpeakerIcon", "VideoOnIcon", "React", "IconButton", "Icon", "React", "React", "_a", "_b", "React", "React", "useCallback", "useEffect", "useState", "useMedia", "CrossIcon", "React", "DialogPrimitive", "StyledContent", "React", "_a", "_b", "React", "Fragment", "useEffect", "useRef", "useState", "useMedia", "selectIsLocalVideoEnabled", "useHMSActions", "useHMSStore", "React", "ChevronDownIcon", "ChevronUpIcon", "React", "css", "ChevronUpIcon", "ChevronDownIcon", "useEffect", "useRef", "useState", "_a", "useHMSStore", "selectIsLocalVideoEnabled", "useHMSActions", "useMedia", "useEffect", "React", "Fragment", "_b", "useState", "useRef", "React", "React", "React", "useMedia", "useState", "useCallback", "useEffect", "_a", "CrossIcon", "Icon", "Content", "React", "_a", "useHMSActions", "useState", "useHMSStore", "useCallback", "SpeakerIcon", "SettingsIcon", "useDevices", "useAVToggle", "useHMSVanillaStore", "selectLocalVideoTrackID", "selectVideoTrackByID", "selectRoomState", "useEffect", "Fragment", "MicOnIcon", "DeviceType", "VideoOnIcon", "HMSRoomState", "React", "useHMSStore", "useHMSStore", "React", "React", "useState", "useMedia", "selectAvailableRoleNames", "selectIsConnectedToRoom", "useHMSStore", "React", "React", "useEffect", "useEffect", "useCallback", "useEffect", "useMemo", "useRef", "useState", "useMedia", "JoinForm_JoinBtnType", "parsedUserAgent", "selectPeerCount", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "_a", "_b", "JoinForm_JoinBtnType", "useHMSStore", "selectPeerCount", "useHMSVanillaStore", "parsedUserAgent", "useMedia", "useCallback", "useHMSActions", "useState", "useEffect", "useMemo", "useState", "useHMSStore", "selectIsConnectedToRoom", "selectAvailableRoleNames", "useMedia", "_a", "data", "React", "React", "selectLocalPeerID", "useHMSActions", "useHMSStore", "useHMSActions", "useHMSStore", "selectLocalPeerID", "React", "React", "selectLocalPeerID", "useHMSActions", "useHMSStore", "useHMSActions", "useHMSStore", "selectLocalPeerID", "React", "React", "useMedia", "selectHLSState", "selectIsConnectedToRoom", "selectPermissions", "selectRolesMap", "useHMSActions", "useHMSStore", "React", "Fragment", "useState", "selectIsConnectedToRoom", "selectPermissions", "useHMSStore", "useRecordingStreaming", "VerticalMenuIcon", "React", "CrossIcon", "React", "CrossIcon", "React", "css", "React", "React", "AlertTriangleIcon", "CrossIcon", "React", "AlertTriangleIcon", "CrossIcon", "useState", "useHMSStore", "selectIsConnectedToRoom", "selectPermissions", "useRecordingStreaming", "React", "Fragment", "VerticalMenuIcon", "React", "Fragment", "useState", "selectIsConnectedToRoom", "selectPermissions", "useHMSStore", "useRecordingStreaming", "CrossIcon", "ExitIcon", "StopIcon", "useState", "useHMSStore", "selectIsConnectedToRoom", "selectPermissions", "useRecordingStreaming", "React", "Fragment", "open", "ExitIcon", "StopIcon", "CrossIcon", "useHMSStore", "selectIsConnectedToRoom", "selectPermissions", "useMedia", "selectRolesMap", "selectHLSState", "useHMSActions", "React", "React", "useMedia", "React", "Fragment", "useState", "match", "HMSTranscriptionMode", "selectAppData", "selectIsTranscriptionEnabled", "selectLocalPeerID", "useHMSActions", "useHMSStore", "CheckIcon", "InfoIcon", "OpenCaptionIcon", "PipIcon", "SettingsIcon", "React", "React", "useCallback", "useEffect", "useState", "selectPeers", "useHMSActions", "useHMSVanillaStore", "selectIsLocalVideoEnabled", "_a", "_b", "selectIsLocalVideoEnabled", "isMicActive", "isCamActive", "useState", "useHMSActions", "useHMSVanillaStore", "useCallback", "React", "useEffect", "selectPeers", "React", "React", "useCallback", "useEffect", "useMemo", "useState", "selectHMSMessages", "selectLocalPeerID", "selectPeerNameByID", "selectSessionStore", "selectUnreadHMSMessagesCount", "useHMSStore", "React", "Fragment", "useCallback", "useEffect", "useMemo", "useRef", "useState", "useMedia", "selectLocalPeerID", "selectLocalPeerName", "selectPeerNameByID", "selectSessionStore", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "React", "useCallback", "useState", "selectPermissions", "useHMSActions", "useHMSStore", "CopyIcon", "CrossIcon", "EyeCloseIcon", "PeopleRemoveIcon", "VerticalMenuIcon", "React", "React", "useCallback", "selectLocalPeer", "selectSessionStore", "useHMSActions", "useHMSStore", "useHMSActions", "useHMSStore", "selectSessionStore", "useCallback", "selectLocalPeer", "useCallback", "selectSessionStore", "useHMSActions", "useHMSVanillaStore", "useHMSActions", "useHMSVanillaStore", "useCallback", "selectSessionStore", "_a", "_b", "useState", "useHMSActions", "useHMSStore", "selectPermissions", "useCallback", "React", "CopyIcon", "EyeCloseIcon", "PeopleRemoveIcon", "CrossIcon", "VerticalMenuIcon", "React", "useMedia", "_a", "useMedia", "React", "useEffect", "useState", "selectSessionStore", "useHMSStore", "useHMSStore", "selectSessionStore", "useState", "useEffect", "match", "formatTime", "_a", "_b", "React", "useHMSStore", "selectPeerNameByID", "Link", "Fragment", "useRef", "useMedia", "selectLocalPeerID", "useState", "formatTime", "data", "useHMSActions", "itemKey", "useCallback", "useEffect", "selectSessionStore", "useMemo", "useHMSVanillaStore", "selectLocalPeerName", "_a", "_b", "useHMSStore", "selectHMSMessages", "selectLocalPeerID", "selectUnreadHMSMessagesCount", "useState", "useCallback", "useEffect", "selectSessionStore", "useMemo", "React", "formatTime", "selectPeerNameByID", "React", "React", "React", "useRef", "useState", "useMedia", "selectAvailableRoleNames", "useHMSActions", "useHMSStore", "ChevronDownIcon", "ChevronUpIcon", "CrossIcon", "React", "_a", "useHMSStore", "selectAvailableRoleNames", "useState", "useHMSActions", "useRef", "CrossIcon", "ChevronUpIcon", "ChevronDownIcon", "useMedia", "React", "useState", "selectPermissions", "useHMSActions", "useHMSStore", "useRecordingStreaming", "AlertTriangleIcon", "React", "useCallback", "useState", "React", "useRef", "CheckIcon", "CrossIcon", "_a", "_b", "Icon", "css", "React", "CrossIcon", "Label", "_a", "_b", "useRef", "React", "css", "useState", "useCallback", "React", "Label", "useHMSStore", "selectPermissions", "useState", "useRecordingStreaming", "useHMSActions", "React", "AlertTriangleIcon", "React", "useEffect", "useMemo", "useRef", "useState", "match", "P", "selectHMSStats", "selectLocalPeerID", "selectTracksMap", "useHMSStatsStore", "useHMSStore", "_a", "useMemo", "useState", "useRef", "useEffect", "React", "Label", "useHMSStore", "selectTracksMap", "selectLocalPeerID", "_b", "useHMSStatsStore", "selectHMSStats", "StatsRow", "match", "P", "layer", "local", "React", "useCallback", "useRef", "useState", "useHMSActions", "AlertTriangleIcon", "CheckIcon", "_a", "_b", "useHMSActions", "useRef", "useState", "useCallback", "React", "selectedRole", "CheckIcon", "AlertTriangleIcon", "React", "useMedia", "React", "selectIsTranscriptionEnabled", "useHMSActions", "useHMSStore", "AlertTriangleIcon", "CrossIcon", "useHMSActions", "useHMSStore", "selectIsTranscriptionEnabled", "React", "CrossIcon", "id", "AlertTriangleIcon", "useMedia", "React", "React", "useCallback", "useEffect", "useState", "useState", "useCallback", "useEffect", "React", "React", "useCallback", "useState", "selectAvailableRoleNames", "useHMSActions", "useHMSStore", "MicOffIcon", "React", "selectPermissions", "useHMSStore", "useHMSStore", "selectPermissions", "React", "Label", "useHMSStore", "selectAvailableRoleNames", "useHMSActions", "useState", "useCallback", "React", "MicOffIcon", "useCallback", "selectLocalPeerID", "selectPeerMetadata", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "useHMSActions", "useHMSStore", "selectLocalPeerID", "useHMSVanillaStore", "selectPeerMetadata", "useCallback", "useEffect", "useHMSActions", "useContext", "createContext", "useContext", "useHMSActions", "useEffect", "useHMSStore", "selectLocalPeerID", "useHMSActions", "selectAppData", "useState", "HMSTranscriptionMode", "selectIsTranscriptionEnabled", "React", "Fragment", "CheckIcon", "OpenCaptionIcon", "PipIcon", "SettingsIcon", "match", "InfoIcon", "React", "useRef", "useState", "match", "HMSTranscriptionMode", "selectIsConnectedToRoom", "selectIsLocalVideoEnabled", "selectIsTranscriptionAllowedByMode", "selectIsTranscriptionEnabled", "selectPeerCount", "selectPermissions", "useHMSActions", "useHMSStore", "useRecordingStreaming", "BrbIcon", "ClosedCaptionIcon", "CrossIcon", "EmojiIcon", "HamburgerMenuIcon", "HandIcon", "InfoIcon", "OpenCaptionIcon", "RecordIcon", "SettingsIcon", "React", "useCallback", "useEffect", "useRef", "useState", "useMedia", "HMSRoomState", "selectHLSState", "selectIsConnectedToRoom", "selectPermissions", "selectRecordingState", "selectRoomState", "useHMSActions", "useHMSStore", "useRecordingStreaming", "AlertTriangleIcon", "CrossIcon", "_a", "useRecordingStreaming", "useHMSStore", "selectHLSState", "useMedia", "useRef", "useState", "useCallback", "useEffect", "React", "selectPermissions", "selectRecordingState", "StartRecording", "useHMSActions", "Popover", "selectIsConnectedToRoom", "selectRoomState", "HMSRoomState", "AlertTriangleIcon", "CrossIcon", "React", "useState", "useMedia", "selectLocalPeerName", "useHMSActions", "useHMSStore", "React", "ChevronLeftIcon", "CrossIcon", "React", "ChevronLeftIcon", "CrossIcon", "useHMSActions", "useHMSStore", "selectLocalPeerName", "useState", "useMedia", "React", "useCallback", "selectAppData", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "useHMSStore", "selectAppData", "useHMSActions", "useHMSVanillaStore", "useCallback", "selectAppData", "useEffect", "useState", "selectLocalPeerID", "useHMSStore", "MODALS", "useHMSActions", "useHMSStore", "selectPermissions", "selectIsConnectedToRoom", "useRecordingStreaming", "useState", "selectPeerCount", "useRef", "selectIsLocalVideoEnabled", "selectIsTranscriptionAllowedByMode", "HMSTranscriptionMode", "selectIsTranscriptionEnabled", "React", "HamburgerMenuIcon", "CrossIcon", "HandIcon", "ClosedCaptionIcon", "OpenCaptionIcon", "EmojiIcon", "BrbIcon", "SettingsIcon", "RecordIcon", "match", "InfoIcon", "useMedia", "React", "React", "HandIcon", "HandRaiseSlashedIcon", "css", "React", "HandRaiseSlashedIcon", "HandIcon", "React", "Fragment", "selectIsAllowedToPublish", "useHMSStore", "useScreenShare", "React", "Fragment", "useState", "VerticalMenuIcon", "React", "useState", "React", "React", "React", "React", "React", "React", "InfoIcon", "React", "InfoIcon", "React", "useState", "React", "MODALS", "useState", "React", "Fragment", "VerticalMenuIcon", "css", "useHMSStore", "selectIsAllowedToPublish", "useScreenShare", "React", "Fragment", "React", "useEffect", "HMSVirtualBackgroundTypes", "selectAppData", "selectIsLocalVideoEnabled", "useAVToggle", "useHMSActions", "useHMSStore", "VirtualBackgroundIcon", "useHMSStore", "selectIsLocalVideoEnabled", "selectAppData", "useHMSActions", "useAVToggle", "useEffect", "_a", "HMSVirtualBackgroundTypes", "React", "VirtualBackgroundIcon", "React", "selectUnreadHMSMessagesCount", "useHMSStore", "useHMSStore", "selectUnreadHMSMessagesCount", "React", "React", "Fragment", "useCallback", "useState", "useMedia", "HMSPeerType", "selectAvailableRoleNames", "selectHasPeerHandRaised", "selectIsLargeRoom", "selectLocalPeerID", "selectPeerCount", "selectPermissions", "useHMSStore", "AddIcon", "ChangeRoleIcon", "CrossIcon", "HandIcon", "MicOffIcon", "PeopleIcon", "VerticalMenuIcon", "React", "selectConnectionQualityByPeerID", "useHMSStore", "theme", "_a", "useHMSStore", "selectConnectionQualityByPeerID", "theme", "React", "React", "selectLocalPeerID", "selectPermissions", "useHMSActions", "useHMSStore", "PeopleRemoveIcon", "_a", "useHMSStore", "selectPermissions", "selectLocalPeerID", "useHMSActions", "React", "PeopleRemoveIcon", "React", "useEffect", "useHMSStore", "CrossIcon", "React", "useState", "match", "selectPermissions", "selectTracksMap", "useHMSActions", "useHMSStore", "MicOffIcon", "MicOnIcon", "PersonRectangleIcon", "VerticalMenuIcon", "VideoOffIcon", "VideoOnIcon", "useState", "React", "VerticalMenuIcon", "useHMSStore", "selectPermissions", "useHMSActions", "selectTracksMap", "_a", "_b", "PersonRectangleIcon", "match", "MicOffIcon", "MicOnIcon", "VideoOffIcon", "VideoOnIcon", "match", "P", "selectPermissions", "useHMSActions", "useHMSStore", "_a", "useHMSActions", "useHMSStore", "selectPermissions", "match", "P", "data", "_a", "React", "useHMSStore", "useEffect", "CrossIcon", "useEffect", "selectAppData", "useHMSStore", "useHMSStore", "selectAppData", "useEffect", "useState", "selectPeerMetadata", "selectPermissions", "useHMSActions", "useHMSStore", "_a", "_b", "useHMSActions", "useHMSStore", "selectPermissions", "selectPeerMetadata", "useState", "useState", "useHMSStore", "selectIsLargeRoom", "useCallback", "React", "Fragment", "selectPeerCount", "PeopleIcon", "selectLocalPeerID", "_a", "_b", "selectHasPeerHandRaised", "selectPermissions", "HMSPeerType", "HandIcon", "MicOffIcon", "CrossIcon", "AddIcon", "selectAvailableRoleNames", "VerticalMenuIcon", "ChangeRoleIcon", "useMedia", "React", "useEffect", "QuizActiveIcon", "QuizIcon", "useEffect", "React", "QuizActiveIcon", "QuizIcon", "React", "useHMSStore", "useHMSStore", "React", "Footer", "_a", "_b", "useMedia", "useHMSStore", "selectLocalPeerRole", "useEffect", "React", "React", "useCallback", "useState", "selectHLSState", "useHMSActions", "useHMSStore", "useRecordingStreaming", "useHMSStore", "selectHLSState", "useState", "useHMSActions", "useRecordingStreaming", "useCallback", "React", "React", "useEffect", "selectLocalPeerName", "selectLocalPeerRoleName", "useCustomEvent", "useHMSActions", "useHMSStore", "React", "Fragment", "useCallback", "useEffect", "useMemo", "useState", "useMeasure", "useMedia", "HMSRoomState", "selectAppData", "selectIsLocalVideoEnabled", "selectIsVBEnabled", "selectLocalPeer", "selectRoomState", "selectVideoTrackByID", "useAVToggle", "useAwayNotifications", "useHMSStore", "useParticipants", "useRecordingStreaming", "MicOffIcon", "SettingsIcon", "React", "useEffect", "useMedia", "match", "selectAppData", "selectVideoTrackByPeerID", "useHMSStore", "React", "React", "useEffect", "useMemo", "useRef", "useState", "selectLocalPeerRoleName", "selectPermissions", "selectPolls", "useHMSActions", "useHMSStore", "React", "selectPermissions", "useHMSStore", "ChevronLeftIcon", "ChevronRightIcon", "CrossIcon", "RecordIcon", "React", "ChevronLeftIcon", "CrossIcon", "Container", "React", "React", "React", "useHMSStore", "selectPermissions", "React", "Container", "useHMSActions", "useState", "selectLocalPeerRoleName", "useRef", "useEffect", "useMemo", "selectPolls", "_a", "_b", "React", "useMemo", "useState", "uuid", "useHMSActions", "useHMSStore", "useRecordingStreaming", "AddCircleIcon", "React", "useCallback", "useRef", "useState", "TrashIcon", "React", "AlertTriangleIcon", "CrossIcon", "React", "AlertTriangleIcon", "CrossIcon", "React", "React", "React", "CheckIcon", "React", "TrashIcon", "React", "TrashIcon", "React", "React", "React", "React", "React", "_a", "CheckIcon", "Label", "React", "CheckCircleIcon", "React", "CheckCircleIcon", "Label", "_a", "useRef", "useState", "useCallback", "index", "text", "options", "React", "TrashIcon", "React", "useMemo", "CheckCircleIcon", "_a", "useMemo", "React", "index", "CheckCircleIcon", "uuid", "_a", "_b", "useHMSActions", "useRecordingStreaming", "useHMSStore", "useState", "useMemo", "React", "Container", "question", "AddCircleIcon", "React", "useState", "selectPollByID", "useHMSStore", "ChevronLeftIcon", "ChevronRightIcon", "CrossIcon", "React", "CheckCircleIcon", "React", "CheckCircleIcon", "React", "selectLocalPeerID", "useHMSStore", "React", "React", "useEffect", "useState", "selectPollByID", "useHMSActions", "useHMSStore", "useHMSActions", "useHMSStore", "selectPollByID", "useState", "useEffect", "_a", "useHMSStore", "selectLocalPeerID", "React", "_a", "_a", "_b", "useHMSStore", "selectPollByID", "useState", "React", "Container", "ChevronLeftIcon", "CrossIcon", "ChevronRightIcon", "React", "useEffect", "useRef", "useState", "selectLocalPeer", "selectPeerNameByID", "selectPermissions", "selectPollByID", "useHMSActions", "useHMSStore", "ChevronLeftIcon", "CrossIcon", "React", "React", "useCallback", "useEffect", "useMemo", "useRef", "useState", "match", "selectLocalPeer", "selectLocalPeerRoleName", "useHMSActions", "useHMSStore", "CheckCircleIcon", "ChevronDownIcon", "CrossCircleIcon", "QuestionCard", "useHMSActions", "useHMSStore", "selectLocalPeer", "selectLocalPeerRoleName", "useState", "useEffect", "useRef", "useMemo", "useCallback", "React", "match", "respondedToQuiz", "isLive", "isCorrectAnswer", "pollEnded", "CheckCircleIcon", "CrossCircleIcon", "ChevronDownIcon", "_a", "React", "QuestionCard", "React", "useEffect", "useState", "_a", "_b", "useState", "useEffect", "React", "QuestionCard", "useHMSActions", "useHMSStore", "selectPollByID", "selectPeerNameByID", "selectPermissions", "useRef", "useState", "selectLocalPeer", "useEffect", "_a", "_b", "React", "Container", "ChevronLeftIcon", "CrossIcon", "React", "React", "CrossIcon", "React", "useEffect", "useState", "useHMSStore", "useHMSStore", "React", "_a", "useState", "useEffect", "React", "React", "useEffect", "useState", "useState", "useEffect", "React", "React", "React", "CrossIcon", "React", "useEffect", "useState", "useMedia", "match", "selectPeerCount", "useHMSStore", "CrossIcon", "React", "useCallback", "useRef", "useMedia", "selectSessionStore", "selectUnreadHMSMessagesCount", "match", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "ChevronDownIcon", "React", "useCallback", "useEffect", "useRef", "useState", "useMedia", "data", "selectLocalPeer", "useHMSActions", "useHMSStore", "EmojiIcon", "PauseCircleIcon", "SendIcon", "VerticalMenuIcon", "React", "useState", "useMedia", "ChevronDownIcon", "ChevronUpIcon", "CrossIcon", "PersonIcon", "React", "useMemo", "useState", "useMedia", "HMSPeerType", "selectRemotePeers", "selectUnreadHMSMessagesCount", "useHMSStore", "CheckIcon", "PeopleIcon", "React", "useMedia", "Root", "_a", "_b", "CheckIcon", "useHMSStore", "selectUnreadHMSMessagesCount", "PeopleIcon", "useMemo", "HMSPeerType", "selectRemotePeers", "useState", "_a", "_b", "useState", "useMedia", "React", "PersonIcon", "ChevronUpIcon", "ChevronDownIcon", "CrossIcon", "useCallback", "selectAppData", "useHMSActions", "useHMSStore", "useHMSActions", "useHMSStore", "selectAppData", "useCallback", "useEffect", "useRef", "_a", "_b", "TextArea", "useState", "React", "Popover", "EmojiIcon", "data", "_a", "_b", "useHMSActions", "useRef", "useMedia", "useHMSStore", "selectLocalPeer", "useEffect", "useCallback", "VerticalMenuIcon", "PauseCircleIcon", "SendIcon", "React", "useCallback", "selectLocalPeer", "selectSessionStore", "useHMSActions", "useHMSStore", "_a", "_b", "useHMSActions", "useHMSStore", "selectSessionStore", "selectLocalPeer", "useCallback", "React", "React", "useEffect", "useState", "useMedia", "selectSessionStore", "useHMSStore", "PinIcon", "React", "ChevronDownIcon", "ChevronUpIcon", "React", "ChevronUpIcon", "ChevronDownIcon", "React", "React", "_a", "_b", "useHMSStore", "selectSessionStore", "useState", "useMedia", "useEffect", "React", "PinIcon", "_a", "_b", "useRef", "useHMSActions", "useHMSVanillaStore", "useHMSStore", "selectSessionStore", "useMedia", "useCallback", "React", "match", "selectUnreadHMSMessagesCount", "ChevronDownIcon", "React", "useEffect", "useState", "useMeasure", "VariableSizeList", "selectIsConnectedToRoom", "useHMSStore", "usePaginatedParticipants", "ChevronLeftIcon", "CrossIcon", "useState", "useEffect", "React", "VirtualizedParticipantItem", "data", "usePaginatedParticipants", "_a", "useHMSStore", "selectIsConnectedToRoom", "useMeasure", "ChevronLeftIcon", "CrossIcon", "search", "VariableSizeList", "React", "selectLocalPeer", "selectSessionStore", "useHMSActions", "useHMSStore", "PauseCircleIcon", "SettingsIcon", "_a", "_b", "useHMSActions", "useHMSStore", "selectLocalPeer", "selectSessionStore", "React", "Popover", "SettingsIcon", "PauseCircleIcon", "ParticipantCount", "React", "_a", "_b", "useState", "useHMSStore", "selectPeerCount", "useMedia", "useEffect", "match", "CrossIcon", "React", "useCallback", "useMemo", "useState", "useMeasure", "selectAudioTrackByPeerID", "selectHasPeerHandRaised", "selectIsPeerAudioEnabled", "selectLocalPeerID", "selectPeerMetadata", "selectPeerNameByID", "selectVideoTrackByID", "selectVideoTrackByPeerID", "useHMSStore", "HandIcon", "MicOffIcon", "React", "HMSPeerType", "selectPeerTypeByID", "selectSessionStore", "useHMSStore", "CallIcon", "PinIcon", "ShareScreenIcon", "useHMSStore", "selectSessionStore", "selectPeerTypeByID", "React", "Wrapper", "HMSPeerType", "CallIcon", "ShareScreenIcon", "PinIcon", "React", "useState", "useMedia", "selectLocalPeerID", "selectPeerByID", "selectPermissions", "selectTrackByID", "selectVideoTrackByPeerID", "useHMSStore", "useRemoteAVToggle", "CrossIcon", "VerticalMenuIcon", "React", "Fragment", "useMedia", "selectAvailableRoleNames", "selectPermissions", "selectSessionStore", "selectTrackByID", "useCustomEvent", "useHMSActions", "useHMSStore", "MicOffIcon", "MicOnIcon", "PersonSettingsIcon", "PinIcon", "RemoveUserIcon", "ShareScreenIcon", "SpeakerIcon", "StarIcon", "VideoOffIcon", "VideoOnIcon", "useHMSActions", "useHMSStore", "selectSessionStore", "React", "StarIcon", "PinIcon", "_a", "selectTrackByID", "Fragment", "selectPermissions", "selectAvailableRoleNames", "useCustomEvent", "useMedia", "VideoOnIcon", "VideoOffIcon", "MicOnIcon", "MicOffIcon", "PersonSettingsIcon", "SpeakerIcon", "RemoveUserIcon", "ShareScreenIcon", "_a", "_b", "useState", "theme", "useHMSStore", "selectLocalPeerID", "selectPermissions", "useRemoteAVToggle", "selectVideoTrackByPeerID", "selectTrackByID", "useMedia", "selectPeerByID", "React", "VerticalMenuIcon", "CrossIcon", "useHMSStore", "selectPeerMetadata", "selectHasPeerHandRaised", "React", "HandIcon", "selectVideoTrackByID", "selectVideoTrackByPeerID", "selectPeerNameByID", "selectAudioTrackByPeerID", "selectLocalPeerID", "selectIsPeerAudioEnabled", "useState", "useCallback", "useMeasure", "useMemo", "MicOffIcon", "React", "useEffect", "useRef", "useState", "useMedia", "selectAppData", "selectIsEffectsEnabled", "selectLocalPeerRole", "HMSVirtualBackgroundTypes", "HMSRoomState", "selectIsLargeRoom", "selectIsLocalVideoEnabled", "selectLocalPeer", "selectRoomState", "selectVideoTrackByID", "useHMSActions", "useHMSStore", "CrossCircleIcon", "CrossIcon", "React", "HMSVirtualBackgroundTypes", "React", "Root", "React", "Title", "Icon", "React", "HMSVirtualBackgroundTypes", "_a", "useHMSActions", "useHMSStore", "selectLocalPeer", "selectLocalPeerRole", "selectIsLocalVideoEnabled", "selectVideoTrackByID", "useState", "selectRoomState", "selectIsLargeRoom", "selectIsEffectsEnabled", "useMedia", "selectAppData", "useRef", "HMSRoomState", "useEffect", "HMSVirtualBackgroundTypes", "React", "CrossIcon", "CrossCircleIcon", "Wrapper", "_a", "_b", "useMedia", "useHMSStore", "selectAppData", "selectVideoTrackByPeerID", "match", "React", "useEffect", "React", "React", "css", "React", "css", "React", "React", "useMedia", "JoinForm_JoinBtnType", "useRecordingStreaming", "_a", "_b", "useMedia", "useRecordingStreaming", "JoinForm_JoinBtnType", "React", "useHMSStore", "selectLocalPeer", "selectVideoTrackByID", "useMedia", "useRecordingStreaming", "useState", "useAVToggle", "useParticipants", "selectAppData", "useAwayNotifications", "selectRoomState", "useCallback", "useEffect", "HMSRoomState", "React", "Container", "selectIsLocalVideoEnabled", "useMeasure", "useMemo", "MicOffIcon", "selectIsVBEnabled", "Fragment", "SettingsIcon", "React", "useMedia", "useMedia", "React", "useHMSActions", "useHMSStore", "selectLocalPeerRoleName", "selectLocalPeerName", "useCustomEvent", "useEffect", "React", "_a", "React", "useEffect", "useState", "useMedia", "match", "selectIsConnectedToRoom", "selectIsLocalScreenShared", "selectLocalPeerRoleName", "useHMSActions", "useHMSStore", "PeopleAddIcon", "ShareScreenIcon", "React", "useEffect", "useMemo", "useState", "selectLocalPeerID", "selectLocalPeerRoleName", "selectPeers", "selectPeerScreenSharing", "selectWhiteboard", "useHMSStore", "useHMSVanillaStore", "React", "useEffect", "useState", "useMedia", "PeopleAddIcon", "React", "React", "React", "useEffect", "useRef", "useMedia", "selectIsAllowedToPublish", "selectLocalPeer", "selectPeerByID", "selectVideoTrackByID", "useHMSStore", "ExpandIcon", "React", "useContext", "React", "ExpandIcon", "useMedia", "selectPeerByID", "selectLocalPeer", "useHMSStore", "selectVideoTrackByID", "selectIsAllowedToPublish", "useRef", "useEffect", "React", "useEffect", "ChevronLeftIcon", "ChevronRightIcon", "useEffect", "React", "ChevronLeftIcon", "ChevronRightIcon", "React", "React", "_a", "_b", "useEffect", "useMemo", "useState", "useMeasure", "useMedia", "selectTracksMap", "useHMSVanillaStore", "useHMSVanillaStore", "selectTracksMap", "useMemo", "useMeasure", "useMedia", "useState", "useEffect", "_a", "useMedia", "useState", "useEffect", "React", "page", "PeopleAddIcon", "React", "useEffect", "useState", "useMedia", "selectLocalPeer", "useHMSStore", "React", "useEffect", "useRef", "useState", "useMedia", "selectAppData", "selectSessionStore", "selectTrackByID", "useHMSStore", "React", "Root", "React", "css", "_a", "_b", "_a", "_b", "useMedia", "useState", "useHMSStore", "selectAppData", "selectSessionStore", "selectTrackByID", "useRef", "useEffect", "React", "page", "useMemo", "useMemo", "_a", "useHMSStore", "selectLocalPeer", "useMedia", "useState", "useEffect", "React", "page", "React", "useEffect", "useMemo", "useState", "useMedia", "useHMSStore", "React", "useRef", "useState", "useFullscreen", "useMedia", "screenfull", "selectLocalPeerID", "selectPeerByID", "selectScreenShareByPeerID", "useHMSStore", "ExpandIcon", "ShrinkIcon", "React", "useCallback", "useState", "CheckIcon", "ChevronDownIcon", "ChevronUpIcon", "useState", "useCallback", "React", "Popover", "ChevronUpIcon", "ChevronDownIcon", "CheckIcon", "React", "useHMSActions", "CrossIcon", "ShareScreenIcon", "useHMSActions", "React", "ShareScreenIcon", "CrossIcon", "Tile", "useHMSStore", "selectLocalPeerID", "selectScreenShareByPeerID", "theme", "selectPeerByID", "useState", "useMedia", "useRef", "useFullscreen", "screenfull", "React", "ShrinkIcon", "ExpandIcon", "_a", "useHMSStore", "useState", "useMedia", "useMemo", "useEffect", "React", "React", "useEffect", "useMemo", "useMedia", "useHMSStore", "useWhiteboard", "useMedia", "useWhiteboard", "React", "useHMSStore", "useMemo", "useEffect", "selectDominantSpeaker", "_a", "useHMSStore", "selectPeerScreenSharing", "selectWhiteboard", "selectPeers", "selectLocalPeerRoleName", "selectLocalPeerID", "useMemo", "useHMSVanillaStore", "useState", "useEffect", "React", "React", "useEffect", "useMemo", "selectAppData", "selectPeers", "selectPeerScreenSharing", "useHMSStore", "React", "useHMSStore", "selectPeers", "selectPeerScreenSharing", "useMemo", "smallTilePeers", "useEffect", "selectAppData", "React", "useEffect", "useEffect", "React", "React", "useEffect", "useRef", "useState", "Draggable", "useMedia", "selectIsTranscriptionEnabled", "selectPeerNameByID", "useHMSStore", "data", "_a", "useHMSStore", "selectPeerNameByID", "React", "useMedia", "useState", "selectIsTranscriptionEnabled", "useRef", "useEffect", "Draggable", "useEffect", "selectPeerScreenSharing", "useHMSStore", "useWhiteboard", "React", "_a", "useHMSStore", "selectLocalPeerRoleName", "selectIsConnectedToRoom", "selectIsLocalScreenShared", "useHMSActions", "useMedia", "useState", "useEffect", "match", "isNotAllowedToPublish", "hasSubscribedRolePublishing", "PeopleAddIcon", "isScreenOnlyPublishParams", "isSharingScreen", "ShareScreenIcon", "pdfAnnotatorActive", "urlToIframe", "React", "useMedia", "HMSRoomState", "selectRoomState", "useHMSStore", "React", "useMedia", "ChevronRightIcon", "useMedia", "React", "ChevronRightIcon", "React", "DeviceType", "selectIsLocalVideoEnabled", "selectLocalVideoTrackID", "selectVideoTrackByID", "useDevices", "useHMSActions", "useHMSStore", "CameraFlipIcon", "CheckIcon", "CrossIcon", "SpeakerIcon", "useHMSActions", "useDevices", "useHMSStore", "selectIsLocalVideoEnabled", "selectLocalVideoTrackID", "selectVideoTrackByID", "React", "CameraFlipIcon", "SpeakerIcon", "DeviceType", "CrossIcon", "Label", "CheckIcon", "Header", "useHMSStore", "selectRoomState", "useMedia", "HMSRoomState", "React", "useEffect", "selectLocalPeerRoleName", "useHMSVanillaStore", "useHMSVanillaStore", "useEffect", "selectLocalPeerRoleName", "_a", "_b", "useHMSStore", "selectRoomState", "selectIsConnectedToRoom", "useHMSActions", "useState", "selectAppData", "useRef", "useAwayNotifications", "useEffect", "HMSRoomState", "uuid", "React", "Header", "Footer", "React", "CopyIcon", "React", "CopyIcon", "React", "useEffect", "useEffect", "useHMSStore", "useHMSStore", "useEffect", "useEffect", "_a", "React", "useEffect", "selectAppData", "selectIsLocalAudioEnabled", "selectIsLocalVideoEnabled", "useHMSActions", "useHMSVanillaStore", "selectIsLocalAudioEnabled", "selectIsLocalVideoEnabled", "selectAppData", "useHMSVanillaStore", "useHMSActions", "useEffect", "React", "ExitIcon", "React", "useState", "useMedia", "React", "useState", "useMedia", "useHMSActions", "CheckIcon", "CrossIcon", "useMedia", "React", "useHMSActions", "useState", "_a", "_b", "CrossIcon", "CheckIcon", "Label", "React", "useMedia", "useMedia", "React", "useState", "useMedia", "React", "React", "Header", "ExitIcon", "React", "useEffect", "useState", "useMedia", "match", "P", "useState", "useMedia", "useEffect", "_a", "match", "P", "angle", "type", "React", "React", "useCallback", "useEffect", "HMSNotificationTypes", "HMSRoomState", "selectIsLocalScreenShared", "selectLocalPeerID", "selectPeerNameByID", "selectRoomState", "useAwayNotifications", "useCustomEvent", "useHMSNotifications", "useHMSStore", "useHMSVanillaStore", "GroupIcon", "React", "React", "React", "useEffect", "uuid", "selectLocalPeerID", "selectSessionStore", "useHMSStore", "ChatIcon", "useHMSStore", "selectSessionStore", "selectLocalPeerID", "useEffect", "_a", "_b", "uuid", "React", "ChatIcon", "useEffect", "useDebounce", "HMSNotificationTypes", "HMSRoomState", "selectHandRaisedPeers", "selectHasPeerHandRaised", "selectIsLocalScreenShared", "selectPeerByID", "selectRoomState", "useAwayNotifications", "useHMSNotifications", "useHMSStore", "useHMSVanillaStore", "React", "useCallback", "selectPeerByID", "useHMSActions", "useHMSStore", "ChatUnreadIcon", "HandIcon", "PeopleAddIcon", "PeopleRemoveIcon", "PoorConnectivityIcon", "React", "_a", "_b", "useHMSActions", "useHMSStore", "selectPeerByID", "useCallback", "PeopleAddIcon", "PeopleRemoveIcon", "HandIcon", "ChatUnreadIcon", "PoorConnectivityIcon", "_a", "_b", "useHMSNotifications", "HMSNotificationTypes", "useHMSStore", "selectRoomState", "useHMSVanillaStore", "selectIsLocalScreenShared", "useAwayNotifications", "useEffect", "HMSRoomState", "selectHasPeerHandRaised", "selectPeerByID", "useDebounce", "selectHandRaisedPeers", "React", "useEffect", "useState", "HMSNotificationTypes", "useHMSNotifications", "useHMSNotifications", "HMSNotificationTypes", "useState", "useEffect", "data", "React", "useEffect", "HMSNotificationTypes", "useHMSNotifications", "HMSNotificationTypes", "useHMSNotifications", "useEffect", "React", "useEffect", "useState", "useMedia", "HMSNotificationTypes", "useHMSNotifications", "useHMSNotifications", "HMSNotificationTypes", "React", "useState", "useMedia", "useEffect", "useEffect", "useRef", "HMSNotificationTypes", "useHMSNotifications", "notificationTypes", "HMSNotificationTypes", "useHMSNotifications", "useRef", "useEffect", "_a", "_b", "React", "useEffect", "useState", "HMSNotificationTypes", "useHMSActions", "useHMSNotifications", "MicOnIcon", "useHMSActions", "useState", "useHMSNotifications", "HMSNotificationTypes", "useEffect", "React", "MicOnIcon", "useEffect", "HMSNotificationTypes", "useHMSNotifications", "notificationTypes", "React", "useEffect", "useState", "HMSNotificationTypes", "useHMSActions", "useHMSNotifications", "MicOnIcon", "useHMSActions", "useHMSNotifications", "HMSNotificationTypes", "useState", "useEffect", "React", "MicOnIcon", "React", "useEffect", "match", "HMSNotificationTypes", "useHMSNotifications", "AlertTriangleIcon", "ClosedCaptionIcon", "OpenCaptionIcon", "useHMSNotifications", "HMSNotificationTypes", "useEffect", "match", "React", "AlertTriangleIcon", "ClosedCaptionIcon", "OpenCaptionIcon", "_a", "_b", "useHMSStore", "selectLocalPeerID", "useHMSNotifications", "selectRoomState", "useHMSVanillaStore", "useAwayNotifications", "selectIsLocalScreenShared", "useCallback", "useCustomEvent", "useEffect", "HMSNotificationTypes", "React", "GroupIcon", "selectPeerNameByID", "HMSRoomState", "React", "useCallback", "useMemo", "useState", "useState", "useCallback", "useMemo", "React", "React", "_a", "_b", "React", "React", "useEffect", "useState", "selectIsConnectedToRoom", "useHMSStore", "React", "Toast", "_a", "_b", "React", "useHMSStore", "selectIsConnectedToRoom", "useState", "useEffect", "React", "Toast", "React", "selectAppData", "useHMSStore", "React", "CrossIcon", "React", "CrossIcon", "Sheet", "useHMSStore", "selectAppData", "React", "React", "useCallback", "useEffect", "useMemo", "useState", "useMedia", "selectIsLargeRoom", "selectLocalPeerID", "selectPeerNameByID", "useCustomEvent", "useHMSActions", "useHMSStore", "useHMSVanillaStore", "useHMSStore", "selectLocalPeerID", "useHMSVanillaStore", "useHMSActions", "useState", "useMedia", "selectIsLargeRoom", "useMemo", "useCallback", "selectPeerNameByID", "emojis", "useCustomEvent", "useEffect", "React", "React", "useCallback", "useCustomEvent", "useHMSActions", "useHMSActions", "useCallback", "useCustomEvent", "React", "useCallback", "useEffect", "useRef", "selectIsConnectedToRoom", "selectPermissions", "useHMSActions", "useHMSStore", "useRecordingStreaming", "useHMSStore", "selectPermissions", "useHMSActions", "selectIsConnectedToRoom", "useRecordingStreaming", "useRef", "useCallback", "useEffect", "React", "_a", "_b", "useRef", "useEffect", "data", "theme", "typography", "match", "useHMSStore", "selectIsConnectedToRoom", "useHMSActions", "Sheet", "Indicator", "Root", "Indicator", "StyledRoot", "Root", "React", "useCallback", "useRef", "useState", "HMSRoomProvider", "useHMSActions", "CheckCircleIcon", "ConnectivityIcon", "CrossCircleIcon", "MicOnIcon", "VideoOnIcon", "React", "useCallback", "useEffect", "useState", "selectLocalAudioTrackID", "selectTrackAudioByID", "useHMSActions", "useHMSStore", "MicOnIcon", "SpeakerIcon", "StopIcon", "React", "React", "useContext", "DiagnosticsStep", "React", "useContext", "css", "React", "React", "useRef", "useState", "DeviceSelector", "_a", "_b", "useState", "useRef", "React", "React", "_a", "_b", "useHMSStore", "useState", "selectLocalAudioTrackID", "selectTrackAudioByID", "DeviceSelector", "MicOnIcon", "StopIcon", "SpeakerIcon", "useHMSActions", "useCallback", "useEffect", "error", "React", "useEffect", "useState", "parsedUserAgent", "React", "_a", "_b", "useState", "useEffect", "parsedUserAgent", "React", "useState", "CheckCircleIcon", "CrossCircleIcon", "EyeCloseIcon", "EyeOpenIcon", "useState", "React", "CheckCircleIcon", "CrossCircleIcon", "EyeOpenIcon", "EyeCloseIcon", "Icon", "_a", "_b", "Footer", "result", "error", "React", "useEffect", "useState", "selectDevices", "selectLocalMediaSettings", "selectLocalVideoTrackID", "useHMSStore", "VideoOnIcon", "useHMSStore", "selectDevices", "selectLocalVideoTrackID", "selectLocalMediaSettings", "useState", "useEffect", "React", "DeviceSelector", "VideoOnIcon", "React", "VideoOnIcon", "MicOnIcon", "ConnectivityIcon", "Container", "CheckCircleIcon", "CrossCircleIcon", "useHMSActions", "useState", "useRef", "useCallback", "HMSRoomProvider"]
}
